{"name":"Lake.DSL.Meta","instances":[],"imports":["Lean.Elab.Eval","Lean.Elab.ElabRules","Lake.Util.FilePath","Lake.DSL.Syntax"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/lake/Lake/DSL/Meta.lean#L44-L63","name":"Lake.DSL.elabRunIO","line":44,"kind":"def","docLink":"./Lake/DSL/Meta.html#Lake.DSL.elabRunIO","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/DSL/Meta.html#Lake.DSL.elabRunIO\"><span class=\"name\">Lake</span>.<span class=\"name\">DSL</span>.<span class=\"name\">elabRunIO</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Term.html#Lean.Elab.Term.TermElab\">Lean.Elab.Term.TermElab</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/lake/Lake/DSL/Meta.lean#L41-L42","name":"Lake.DSL.toExprIO","line":41,"kind":"def","docLink":"./Lake/DSL/Meta.html#Lake.DSL.toExprIO","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/DSL/Meta.html#Lake.DSL.toExprIO\"><span class=\"name\">Lake</span>.<span class=\"name\">DSL</span>.<span class=\"name\">toExprIO</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">Lean.ToExpr</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/lake/Lake/DSL/Meta.lean#L38-L39","name":"Lake.DSL.evalExpr","line":38,"kind":"opaque","docLink":"./Lake/DSL/Meta.html#Lake.DSL.evalExpr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/DSL/Meta.html#Lake.DSL.evalExpr\"><span class=\"name\">Lake</span>.<span class=\"name\">DSL</span>.<span class=\"name\">evalExpr</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">expectedType </span><span class=\"fn\">value</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">safety</span> : <a href=\"./Lean/Declaration.html#Lean.DefinitionSafety\">Lean.DefinitionSafety</a> := <a href=\"./Lean/Declaration.html#Lean.DefinitionSafety.safe\">Lean.DefinitionSafety.safe</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/lake/Lake/DSL/Meta.lean#L27-L36","name":"Lake.DSL.elabMetaIf","line":27,"kind":"def","docLink":"./Lake/DSL/Meta.html#Lake.DSL.elabMetaIf","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/DSL/Meta.html#Lake.DSL.elabMetaIf\"><span class=\"name\">Lake</span>.<span class=\"name\">DSL</span>.<span class=\"name\">elabMetaIf</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.CommandElab\">Lean.Elab.Command.CommandElab</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/lake/Lake/DSL/Meta.lean#L22-L25","name":"Lake.DSL.expandCmdDo","line":22,"kind":"def","docLink":"./Lake/DSL/Meta.html#Lake.DSL.expandCmdDo","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/DSL/Meta.html#Lake.DSL.expandCmdDo\"><span class=\"name\">Lake</span>.<span class=\"name\">DSL</span>.<span class=\"name\">expandCmdDo</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.TSyntax\">Lean.TSyntax</a> <span class=\"fn\">`Lake.DSL.cmdDo</span> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Meta.html#Lean.Syntax.Command\">Lean.Command</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/lake/Lake/DSL/Meta.lean#L19-L20","name":"Lake.DSL.evalTerm","line":19,"kind":"opaque","docLink":"./Lake/DSL/Meta.html#Lake.DSL.evalTerm","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/DSL/Meta.html#Lake.DSL.evalTerm\"><span class=\"name\">Lake</span>.<span class=\"name\">DSL</span>.<span class=\"name\">evalTerm</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">type</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">value</span> : <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">safety</span> : <a href=\"./Lean/Declaration.html#Lean.DefinitionSafety\">Lean.DefinitionSafety</a> := <a href=\"./Lean/Declaration.html#Lean.DefinitionSafety.safe\">Lean.DefinitionSafety.safe</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Term.html#Lean.Elab.Term.TermElabM\">Lean.Elab.TermElabM</a> <span class=\"fn\">α</span></span></div></div>"}]}