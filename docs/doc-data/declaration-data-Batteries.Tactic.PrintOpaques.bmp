{"name":"Batteries.Tactic.PrintOpaques","instances":[],"imports":["Init","Lean.Elab.Command","Lean.Util.FoldConsts"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/78e1181c4752c7e10874d2ed5a6a15063f4a35b6/Batteries/Tactic/PrintOpaques.lean#L48-L76","name":"Batteries.Tactic.«command#printOpaques_»","line":48,"kind":"def","docLink":"./Batteries/Tactic/PrintOpaques.html#Batteries.Tactic.«command#printOpaques_»","doc":"The command `#print opaques X` prints all opaque definitions that `X` depends on.\n\nOpaque definitions include partial definitions and axioms. Only dependencies that occur in a\ncomputationally relevant context are listed, occurrences within proof terms are omitted. This is\nuseful to determine whether and how a definition is possibly platform dependent, possibly partial,\nor possibly noncomputable.\n\nThe command `#print opaques Std.HashMap.insert` shows that `Std.HashMap.insert` depends on the\nopaque definitions: `System.Platform.getNumBits` and `UInt64.toUSize`. Thus `Std.HashMap.insert`\nmay have different behavior when compiled on a 32 bit or 64 bit platform.\n\nThe command `#print opaques Stream.forIn` shows that `Stream.forIn` is possibly partial since it\ndepends on the partial definition `Stream.forIn.visit`. Indeed, `Stream.forIn` may not terminate\nwhen the input stream is unbounded.\n\nThe command `#print opaques Classical.choice` shows that `Classical.choice` is itself an opaque\ndefinition: it is an axiom. However, `#print opaques Classical.axiomOfChoice` returns nothing\nsince it is a proposition, hence not computationally relevant. (The command `#print axioms` does\nreveal that `Classical.axiomOfChoice` depends on the `Classical.choice` axiom.)\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Tactic/PrintOpaques.html#Batteries.Tactic.«command#printOpaques_»\"><span class=\"name\">Batteries</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">«command#printOpaques_»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/78e1181c4752c7e10874d2ed5a6a15063f4a35b6/Batteries/Tactic/PrintOpaques.lean#L23-L44","name":"Batteries.Tactic.CollectOpaques.collect","line":23,"kind":"opaque","docLink":"./Batteries/Tactic/PrintOpaques.html#Batteries.Tactic.CollectOpaques.collect","doc":"Collect the results for a given constant. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Tactic/PrintOpaques.html#Batteries.Tactic.CollectOpaques.collect\"><span class=\"name\">Batteries</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">CollectOpaques</span>.<span class=\"name\">collect</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Batteries/Tactic/PrintOpaques.html#Batteries.Tactic.CollectOpaques.M\">M</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/78e1181c4752c7e10874d2ed5a6a15063f4a35b6/Batteries/Tactic/PrintOpaques.lean#L20-L21","name":"Batteries.Tactic.CollectOpaques.M","line":20,"kind":"def","docLink":"./Batteries/Tactic/PrintOpaques.html#Batteries.Tactic.CollectOpaques.M","doc":"The monad used by `CollectOpaques`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Tactic/PrintOpaques.html#Batteries.Tactic.CollectOpaques.M\"><span class=\"name\">Batteries</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">CollectOpaques</span>.<span class=\"name\">M</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/78e1181c4752c7e10874d2ed5a6a15063f4a35b6/Batteries/Tactic/PrintOpaques.lean#L18-L18","name":"Batteries.Tactic.CollectOpaques.State.opaques","line":18,"kind":"def","docLink":"./Batteries/Tactic/PrintOpaques.html#Batteries.Tactic.CollectOpaques.State.opaques","doc":"The collected opaque defs. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Tactic/PrintOpaques.html#Batteries.Tactic.CollectOpaques.State.opaques\"><span class=\"name\">Batteries</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">CollectOpaques</span>.<span class=\"name\">State</span>.<span class=\"name\">opaques</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Batteries/Tactic/PrintOpaques.html#Batteries.Tactic.CollectOpaques.State\">State</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/78e1181c4752c7e10874d2ed5a6a15063f4a35b6/Batteries/Tactic/PrintOpaques.lean#L16-L16","name":"Batteries.Tactic.CollectOpaques.State.visited","line":16,"kind":"def","docLink":"./Batteries/Tactic/PrintOpaques.html#Batteries.Tactic.CollectOpaques.State.visited","doc":"The set visited constants. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Tactic/PrintOpaques.html#Batteries.Tactic.CollectOpaques.State.visited\"><span class=\"name\">Batteries</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">CollectOpaques</span>.<span class=\"name\">State</span>.<span class=\"name\">visited</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Batteries/Tactic/PrintOpaques.html#Batteries.Tactic.CollectOpaques.State\">State</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Data/NameMap.html#Lean.NameSet\">Lean.NameSet</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/78e1181c4752c7e10874d2ed5a6a15063f4a35b6/Batteries/Tactic/PrintOpaques.lean#L14-L14","name":"Batteries.Tactic.CollectOpaques.State.mk","line":14,"kind":"ctor","docLink":"./Batteries/Tactic/PrintOpaques.html#Batteries.Tactic.CollectOpaques.State.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Tactic/PrintOpaques.html#Batteries.Tactic.CollectOpaques.State.mk\"><span class=\"name\">Batteries</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">CollectOpaques</span>.<span class=\"name\">State</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">visited</span> : <a href=\"./Lean/Data/NameMap.html#Lean.NameSet\">Lean.NameSet</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">opaques</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Batteries/Tactic/PrintOpaques.html#Batteries.Tactic.CollectOpaques.State\">State</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/78e1181c4752c7e10874d2ed5a6a15063f4a35b6/Batteries/Tactic/PrintOpaques.lean#L13-L18","name":"Batteries.Tactic.CollectOpaques.State","line":13,"kind":"structure","docLink":"./Batteries/Tactic/PrintOpaques.html#Batteries.Tactic.CollectOpaques.State","doc":"Collects the result of a `CollectOpaques` query. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Tactic/PrintOpaques.html#Batteries.Tactic.CollectOpaques.State\"><span class=\"name\">Batteries</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">CollectOpaques</span>.<span class=\"name\">State</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"}]}