{"name":"Batteries.Data.DList.Basic","instances":[{"typeNames":["Batteries.DList"],"name":"Batteries.DList.instEmptyCollection","className":"EmptyCollection"},{"typeNames":["Batteries.DList"],"name":"Batteries.DList.instInhabited","className":"Inhabited"},{"typeNames":["Batteries.DList"],"name":"Batteries.DList.instAppend","className":"Append"}],"imports":["Init","Batteries.Tactic.Alias"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/78e1181c4752c7e10874d2ed5a6a15063f4a35b6/Batteries/Data/DList/Basic.lean#L84-L88","name":"Batteries.DList.join","line":84,"kind":"def","docLink":"./Batteries/Data/DList/Basic.html#Batteries.DList.join","doc":"Concatenates a list of difference lists to form a single difference list. Similar to\n`List.join`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/DList/Basic.html#Batteries.DList.join\"><span class=\"name\">Batteries</span>.<span class=\"name\">DList</span>.<span class=\"name\">join</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<a href=\"./Batteries/Data/DList/Basic.html#Batteries.DList\">DList</a> <span class=\"fn\">α</span>)</span></span> → <span class=\"fn\"><a href=\"./Batteries/Data/DList/Basic.html#Batteries.DList\">DList</a> <span class=\"fn\">α</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/78e1181c4752c7e10874d2ed5a6a15063f4a35b6/Batteries/Data/DList/Basic.lean#L82-L82","name":"Batteries.DList.lazy_ofList","line":82,"kind":"def","docLink":"./Batteries/Data/DList/Basic.html#Batteries.DList.lazy_ofList","doc":"**Alias** of `Batteries.DList.ofThunk`.\n\n---\n\nConvert a lazily-evaluated `List` to a `DList` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/DList/Basic.html#Batteries.DList.lazy_ofList\"><span class=\"name\">Batteries</span>.<span class=\"name\">DList</span>.<span class=\"name\">lazy_ofList</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">l</span> : <span class=\"fn\"><a href=\"./Init/Core.html#Thunk\">Thunk</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Batteries/Data/DList/Basic.html#Batteries.DList\">DList</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/78e1181c4752c7e10874d2ed5a6a15063f4a35b6/Batteries/Data/DList/Basic.lean#L78-L80","name":"Batteries.DList.ofThunk","line":78,"kind":"def","docLink":"./Batteries/Data/DList/Basic.html#Batteries.DList.ofThunk","doc":"Convert a lazily-evaluated `List` to a `DList` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/DList/Basic.html#Batteries.DList.ofThunk\"><span class=\"name\">Batteries</span>.<span class=\"name\">DList</span>.<span class=\"name\">ofThunk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">l</span> : <span class=\"fn\"><a href=\"./Init/Core.html#Thunk\">Thunk</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Batteries/Data/DList/Basic.html#Batteries.DList\">DList</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/78e1181c4752c7e10874d2ed5a6a15063f4a35b6/Batteries/Data/DList/Basic.lean#L76-L76","name":"Batteries.DList.instAppend","line":76,"kind":"instance","docLink":"./Batteries/Data/DList/Basic.html#Batteries.DList.instAppend","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/DList/Basic.html#Batteries.DList.instAppend\"><span class=\"name\">Batteries</span>.<span class=\"name\">DList</span>.<span class=\"name\">instAppend</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Append\">Append</a> <span class=\"fn\">(<a href=\"./Batteries/Data/DList/Basic.html#Batteries.DList\">DList</a> <span class=\"fn\">α</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/78e1181c4752c7e10874d2ed5a6a15063f4a35b6/Batteries/Data/DList/Basic.lean#L65-L74","name":"Batteries.DList.push","line":65,"kind":"def","docLink":"./Batteries/Data/DList/Basic.html#Batteries.DList.push","doc":"`O(1)` (`apply` is `O(1)`). Append an element at the end of a `DList α`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/DList/Basic.html#Batteries.DList.push\"><span class=\"name\">Batteries</span>.<span class=\"name\">DList</span>.<span class=\"name\">push</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Batteries/Data/DList/Basic.html#Batteries.DList\">DList</a> <span class=\"fn\">α</span></span> → <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><a href=\"./Batteries/Data/DList/Basic.html#Batteries.DList\">DList</a> <span class=\"fn\">α</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/78e1181c4752c7e10874d2ed5a6a15063f4a35b6/Batteries/Data/DList/Basic.lean#L55-L63","name":"Batteries.DList.append","line":55,"kind":"def","docLink":"./Batteries/Data/DList/Basic.html#Batteries.DList.append","doc":"`O(1)` (`apply` is `O(1)`). Append two `DList α`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/DList/Basic.html#Batteries.DList.append\"><span class=\"name\">Batteries</span>.<span class=\"name\">DList</span>.<span class=\"name\">append</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Batteries/Data/DList/Basic.html#Batteries.DList\">DList</a> <span class=\"fn\">α</span></span> → <span class=\"fn\"><a href=\"./Batteries/Data/DList/Basic.html#Batteries.DList\">DList</a> <span class=\"fn\">α</span></span> → <span class=\"fn\"><a href=\"./Batteries/Data/DList/Basic.html#Batteries.DList\">DList</a> <span class=\"fn\">α</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/78e1181c4752c7e10874d2ed5a6a15063f4a35b6/Batteries/Data/DList/Basic.lean#L48-L53","name":"Batteries.DList.cons","line":48,"kind":"def","docLink":"./Batteries/Data/DList/Basic.html#Batteries.DList.cons","doc":"`O(1)` (`apply` is `O(1)`). Prepend `a` on a `DList α`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/DList/Basic.html#Batteries.DList.cons\"><span class=\"name\">Batteries</span>.<span class=\"name\">DList</span>.<span class=\"name\">cons</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Batteries/Data/DList/Basic.html#Batteries.DList\">DList</a> <span class=\"fn\">α</span></span> → <span class=\"fn\"><a href=\"./Batteries/Data/DList/Basic.html#Batteries.DList\">DList</a> <span class=\"fn\">α</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/78e1181c4752c7e10874d2ed5a6a15063f4a35b6/Batteries/Data/DList/Basic.lean#L43-L46","name":"Batteries.DList.singleton","line":43,"kind":"def","docLink":"./Batteries/Data/DList/Basic.html#Batteries.DList.singleton","doc":"`O(1)` (`apply` is `O(1)`). A `DList α` corresponding to the list `[a]`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/DList/Basic.html#Batteries.DList.singleton\"><span class=\"name\">Batteries</span>.<span class=\"name\">DList</span>.<span class=\"name\">singleton</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Batteries/Data/DList/Basic.html#Batteries.DList\">DList</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/78e1181c4752c7e10874d2ed5a6a15063f4a35b6/Batteries/Data/DList/Basic.lean#L39-L41","name":"Batteries.DList.toList","line":39,"kind":"def","docLink":"./Batteries/Data/DList/Basic.html#Batteries.DList.toList","doc":"`O(apply())`. Convert a `DList α` into a `List α` by running the `apply` function. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/DList/Basic.html#Batteries.DList.toList\"><span class=\"name\">Batteries</span>.<span class=\"name\">DList</span>.<span class=\"name\">toList</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Batteries/Data/DList/Basic.html#Batteries.DList\">DList</a> <span class=\"fn\">α</span></span> → <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/78e1181c4752c7e10874d2ed5a6a15063f4a35b6/Batteries/Data/DList/Basic.lean#L37-L37","name":"Batteries.DList.instInhabited","line":37,"kind":"instance","docLink":"./Batteries/Data/DList/Basic.html#Batteries.DList.instInhabited","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/DList/Basic.html#Batteries.DList.instInhabited\"><span class=\"name\">Batteries</span>.<span class=\"name\">DList</span>.<span class=\"name\">instInhabited</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<a href=\"./Batteries/Data/DList/Basic.html#Batteries.DList\">DList</a> <span class=\"fn\">α</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/78e1181c4752c7e10874d2ed5a6a15063f4a35b6/Batteries/Data/DList/Basic.lean#L35-L35","name":"Batteries.DList.instEmptyCollection","line":35,"kind":"instance","docLink":"./Batteries/Data/DList/Basic.html#Batteries.DList.instEmptyCollection","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/DList/Basic.html#Batteries.DList.instEmptyCollection\"><span class=\"name\">Batteries</span>.<span class=\"name\">DList</span>.<span class=\"name\">instEmptyCollection</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Core.html#EmptyCollection\">EmptyCollection</a> <span class=\"fn\">(<a href=\"./Batteries/Data/DList/Basic.html#Batteries.DList\">DList</a> <span class=\"fn\">α</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/78e1181c4752c7e10874d2ed5a6a15063f4a35b6/Batteries/Data/DList/Basic.lean#L31-L33","name":"Batteries.DList.empty","line":31,"kind":"def","docLink":"./Batteries/Data/DList/Basic.html#Batteries.DList.empty","doc":"`O(1)` (`apply` is `O(1)`). Return an empty `DList α`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/DList/Basic.html#Batteries.DList.empty\"><span class=\"name\">Batteries</span>.<span class=\"name\">DList</span>.<span class=\"name\">empty</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Batteries/Data/DList/Basic.html#Batteries.DList\">DList</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/78e1181c4752c7e10874d2ed5a6a15063f4a35b6/Batteries/Data/DList/Basic.lean#L27-L29","name":"Batteries.DList.ofList","line":27,"kind":"def","docLink":"./Batteries/Data/DList/Basic.html#Batteries.DList.ofList","doc":"`O(1)` (`apply` is `O(|l|)`). Convert a `List α` into a `DList α`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/DList/Basic.html#Batteries.DList.ofList\"><span class=\"name\">Batteries</span>.<span class=\"name\">DList</span>.<span class=\"name\">ofList</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">l</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Batteries/Data/DList/Basic.html#Batteries.DList\">DList</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/78e1181c4752c7e10874d2ed5a6a15063f4a35b6/Batteries/Data/DList/Basic.lean#L19-L19","name":"Batteries.DList.invariant","line":19,"kind":"theorem","docLink":"./Batteries/Data/DList/Basic.html#Batteries.DList.invariant","doc":"The `apply` function of a `DList` is completely determined by the list `apply []`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/DList/Basic.html#Batteries.DList.invariant\"><span class=\"name\">Batteries</span>.<span class=\"name\">DList</span>.<span class=\"name\">invariant</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Batteries/Data/DList/Basic.html#Batteries.DList\">DList</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">l</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/DList/Basic.html#Batteries.DList.apply\">apply</a></span> <span class=\"fn\">l</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/DList/Basic.html#Batteries.DList.apply\">apply</a></span> <a href=\"./Init/Prelude.html#List.nil\">[</a><a href=\"./Init/Prelude.html#List.nil\">]</a></span> <a href=\"./Init/Prelude.html#HAppend.hAppend\">++</a> <span class=\"fn\">l</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/78e1181c4752c7e10874d2ed5a6a15063f4a35b6/Batteries/Data/DList/Basic.lean#L17-L17","name":"Batteries.DList.apply","line":17,"kind":"def","docLink":"./Batteries/Data/DList/Basic.html#Batteries.DList.apply","doc":"\"Run\" a `DList` by appending it on the right by a `List α` to get another `List α`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/DList/Basic.html#Batteries.DList.apply\"><span class=\"name\">Batteries</span>.<span class=\"name\">DList</span>.<span class=\"name\">apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Batteries/Data/DList/Basic.html#Batteries.DList\">DList</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span> → <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/78e1181c4752c7e10874d2ed5a6a15063f4a35b6/Batteries/Data/DList/Basic.lean#L15-L15","name":"Batteries.DList.mk","line":15,"kind":"ctor","docLink":"./Batteries/Data/DList/Basic.html#Batteries.DList.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/DList/Basic.html#Batteries.DList.mk\"><span class=\"name\">Batteries</span>.<span class=\"name\">DList</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">apply</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span> → <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">invariant</span> : <span class=\"fn\">∀ (<span class=\"fn\">l</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span>), <span class=\"fn\"><span class=\"fn\">apply</span> <span class=\"fn\">l</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">apply</span> <a href=\"./Init/Prelude.html#List.nil\">[</a><a href=\"./Init/Prelude.html#List.nil\">]</a></span> <a href=\"./Init/Prelude.html#HAppend.hAppend\">++</a> <span class=\"fn\">l</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Batteries/Data/DList/Basic.html#Batteries.DList\">DList</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/78e1181c4752c7e10874d2ed5a6a15063f4a35b6/Batteries/Data/DList/Basic.lean#L9-L19","name":"Batteries.DList","line":9,"kind":"structure","docLink":"./Batteries/Data/DList/Basic.html#Batteries.DList","doc":"A difference List is a Function that, given a List, returns the original\ncontents of the difference List prepended to the given List.\nThis structure supports `O(1)` `append` and `push` operations on lists, making it\nuseful for append-heavy uses such as logging and pretty printing.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/DList/Basic.html#Batteries.DList\"><span class=\"name\">Batteries</span>.<span class=\"name\">DList</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u</div></div>"}]}