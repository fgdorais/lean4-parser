{"name":"Lean.Elab.PreDefinition.TerminationHint","instances":[{"typeNames":["Lean.Elab.TerminationBy"],"name":"Lean.Elab.instInhabitedTerminationBy","className":"Inhabited"},{"typeNames":["Lean.Elab.DecreasingBy"],"name":"Lean.Elab.instInhabitedDecreasingBy","className":"Inhabited"},{"typeNames":["Lean.Elab.PartialFixpointType"],"name":"Lean.Elab.instInhabitedPartialFixpointType","className":"Inhabited"},{"typeNames":["Lean.Elab.PartialFixpoint"],"name":"Lean.Elab.instInhabitedPartialFixpoint","className":"Inhabited"},{"typeNames":["Lean.Elab.TerminationHints"],"name":"Lean.Elab.instInhabitedTerminationHints","className":"Inhabited"}],"imports":["Lean.Parser.Term"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/PreDefinition/TerminationHint.lean#L143-L179","name":"Lean.Elab.elabTerminationHints","line":143,"kind":"def","docLink":"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.elabTerminationHints","doc":"Takes apart a `Termination.suffix` syntax object "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.elabTerminationHints\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">elabTerminationHints</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Exception.html#Lean.MonadError\">MonadError</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">stx</span> : <a href=\"./Init/Prelude.html#Lean.TSyntax\">TSyntax</a> <span class=\"fn\">`Lean.Parser.Termination.suffix</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.TerminationHints\">TerminationHints</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/PreDefinition/TerminationHint.lean#L137-L139","name":"Lean.Elab.TerminationBy.checkVars.parameters","line":137,"kind":"def","docLink":"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.TerminationBy.checkVars.parameters","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.TerminationBy.checkVars.parameters\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">TerminationBy</span>.<span class=\"name\">checkVars</span>.<span class=\"name\">parameters</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">Nat</a> → <a href=\"./Lean/Message.html#Lean.MessageData\">MessageData</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/PreDefinition/TerminationHint.lean#L122-L139","name":"Lean.Elab.TerminationBy.checkVars","line":122,"kind":"def","docLink":"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.TerminationBy.checkVars","doc":"Checks that `termination_by` binds at most as many variables are present in the outermost\nlambda of `value`, and throws appropriate errors.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.TerminationBy.checkVars\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">TerminationBy</span>.<span class=\"name\">checkVars</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">funName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">extraParams</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">tb</span> : <a href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.TerminationBy\">TerminationBy</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">MetaM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/PreDefinition/TerminationHint.lean#L114-L120","name":"Lean.Elab.TerminationHints.rememberExtraParams","line":114,"kind":"def","docLink":"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.TerminationHints.rememberExtraParams","doc":"Remembers `extraParams` for later use. Needs to happen early enough where we still know\nhow many parameters came from the function header (`headerParams`).\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.TerminationHints.rememberExtraParams\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">TerminationHints</span>.<span class=\"name\">rememberExtraParams</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">headerParams</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hints</span> : <a href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.TerminationHints\">TerminationHints</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">value</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.TerminationHints\">TerminationHints</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/PreDefinition/TerminationHint.lean#L107-L112","name":"Lean.Elab.TerminationHints.isNotNone","line":107,"kind":"def","docLink":"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.TerminationHints.isNotNone","doc":"True if any form of termination hint is present. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.TerminationHints.isNotNone\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">TerminationHints</span>.<span class=\"name\">isNotNone</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hints</span> : <a href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.TerminationHints\">TerminationHints</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/PreDefinition/TerminationHint.lean#L89-L105","name":"Lean.Elab.TerminationHints.ensureNone","line":89,"kind":"def","docLink":"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.TerminationHints.ensureNone","doc":"Logs warnings when the `TerminationHints` are unexpectedly present.  "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.TerminationHints.ensureNone\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">TerminationHints</span>.<span class=\"name\">ensureNone</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hints</span> : <a href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.TerminationHints\">TerminationHints</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">reason</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">CoreM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/PreDefinition/TerminationHint.lean#L87-L87","name":"Lean.Elab.TerminationHints.none","line":87,"kind":"def","docLink":"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.TerminationHints.none","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.TerminationHints.none\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">TerminationHints</span>.<span class=\"name\">none</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.TerminationHints\">TerminationHints</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/PreDefinition/TerminationHint.lean#L84-L85","name":"Lean.Elab.isLatticeTheoretic","line":84,"kind":"def","docLink":"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.isLatticeTheoretic","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.isLatticeTheoretic\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">isLatticeTheoretic</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.PartialFixpointType\">PartialFixpointType</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/PreDefinition/TerminationHint.lean#L80-L82","name":"Lean.Elab.isPartial","line":80,"kind":"def","docLink":"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.isPartial","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.isPartial\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">isPartial</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.PartialFixpointType\">PartialFixpointType</a> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/PreDefinition/TerminationHint.lean#L76-L78","name":"Lean.Elab.isGreatest","line":76,"kind":"def","docLink":"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.isGreatest","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.isGreatest\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">isGreatest</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.PartialFixpointType\">PartialFixpointType</a> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/PreDefinition/TerminationHint.lean#L72-L74","name":"Lean.Elab.isLeast","line":72,"kind":"def","docLink":"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.isLeast","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.isLeast\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">isLeast</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.PartialFixpointType\">PartialFixpointType</a> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/PreDefinition/TerminationHint.lean#L70-L70","name":"Lean.Elab.instInhabitedTerminationHints","line":70,"kind":"instance","docLink":"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.instInhabitedTerminationHints","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.instInhabitedTerminationHints\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">instInhabitedTerminationHints</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.TerminationHints\">TerminationHints</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/PreDefinition/TerminationHint.lean#L69-L69","name":"Lean.Elab.TerminationHints.extraParams","line":69,"kind":"def","docLink":"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.TerminationHints.extraParams","doc":"Here we record the number of parameters past the `:`. It is set by\n`TerminationHints.rememberExtraParams` and used as follows:\n\n* When we guess the termination measure in `GuessLex` and want to print it in surface-syntax\n  compatible form.\n* If there are fewer variables in the `termination_by` annotation than there are extra\n  parameters, we know which parameters they should apply to (`TerminationBy.checkVars`).\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.TerminationHints.extraParams\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">TerminationHints</span>.<span class=\"name\">extraParams</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.TerminationHints\">TerminationHints</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/PreDefinition/TerminationHint.lean#L59-L59","name":"Lean.Elab.TerminationHints.decreasingBy?","line":59,"kind":"def","docLink":"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.TerminationHints.decreasingBy?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.TerminationHints.decreasingBy?\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">TerminationHints</span>.<span class=\"name\">decreasingBy?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.TerminationHints\">TerminationHints</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.DecreasingBy\">DecreasingBy</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/PreDefinition/TerminationHint.lean#L58-L58","name":"Lean.Elab.TerminationHints.partialFixpoint?","line":58,"kind":"def","docLink":"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.TerminationHints.partialFixpoint?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.TerminationHints.partialFixpoint?\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">TerminationHints</span>.<span class=\"name\">partialFixpoint?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.TerminationHints\">TerminationHints</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.PartialFixpoint\">PartialFixpoint</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/PreDefinition/TerminationHint.lean#L57-L57","name":"Lean.Elab.TerminationHints.terminationBy?","line":57,"kind":"def","docLink":"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.TerminationHints.terminationBy?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.TerminationHints.terminationBy?\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">TerminationHints</span>.<span class=\"name\">terminationBy?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.TerminationHints\">TerminationHints</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.TerminationBy\">TerminationBy</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/PreDefinition/TerminationHint.lean#L56-L56","name":"Lean.Elab.TerminationHints.terminationBy??","line":56,"kind":"def","docLink":"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.TerminationHints.terminationBy??","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.TerminationHints.terminationBy??\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">TerminationHints</span>.<span class=\"name\">terminationBy??</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.TerminationHints\">TerminationHints</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/PreDefinition/TerminationHint.lean#L55-L55","name":"Lean.Elab.TerminationHints.ref","line":55,"kind":"def","docLink":"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.TerminationHints.ref","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.TerminationHints.ref\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">TerminationHints</span>.<span class=\"name\">ref</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.TerminationHints\">TerminationHints</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/PreDefinition/TerminationHint.lean#L54-L54","name":"Lean.Elab.TerminationHints.mk","line":54,"kind":"ctor","docLink":"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.TerminationHints.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.TerminationHints.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">TerminationHints</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ref</span> : <a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">terminationBy??</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">terminationBy?</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.TerminationBy\">TerminationBy</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">partialFixpoint?</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.PartialFixpoint\">PartialFixpoint</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">decreasingBy?</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.DecreasingBy\">DecreasingBy</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">extraParams</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.TerminationHints\">TerminationHints</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/PreDefinition/TerminationHint.lean#L49-L70","name":"Lean.Elab.TerminationHints","line":49,"kind":"structure","docLink":"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.TerminationHints","doc":"The termination annotations for a single function.\nFor `decreasing_by`, we store the whole `decreasing_by tacticSeq` expression, as this\nis what `Term.runTactic` expects.\n "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.TerminationHints\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">TerminationHints</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/PreDefinition/TerminationHint.lean#L47-L47","name":"Lean.Elab.instInhabitedPartialFixpoint","line":47,"kind":"instance","docLink":"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.instInhabitedPartialFixpoint","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.instInhabitedPartialFixpoint\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">instInhabitedPartialFixpoint</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.PartialFixpoint\">PartialFixpoint</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/PreDefinition/TerminationHint.lean#L46-L46","name":"Lean.Elab.PartialFixpoint.fixpointType","line":46,"kind":"def","docLink":"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.PartialFixpoint.fixpointType","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.PartialFixpoint.fixpointType\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">PartialFixpoint</span>.<span class=\"name\">fixpointType</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.PartialFixpoint\">PartialFixpoint</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.PartialFixpointType\">PartialFixpointType</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/PreDefinition/TerminationHint.lean#L45-L45","name":"Lean.Elab.PartialFixpoint.term?","line":45,"kind":"def","docLink":"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.PartialFixpoint.term?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.PartialFixpoint.term?\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">PartialFixpoint</span>.<span class=\"name\">term?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.PartialFixpoint\">PartialFixpoint</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Meta.html#Lean.Syntax.Term\">Term</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/PreDefinition/TerminationHint.lean#L44-L44","name":"Lean.Elab.PartialFixpoint.ref","line":44,"kind":"def","docLink":"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.PartialFixpoint.ref","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.PartialFixpoint.ref\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">PartialFixpoint</span>.<span class=\"name\">ref</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.PartialFixpoint\">PartialFixpoint</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/PreDefinition/TerminationHint.lean#L43-L43","name":"Lean.Elab.PartialFixpoint.mk","line":43,"kind":"ctor","docLink":"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.PartialFixpoint.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.PartialFixpoint.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">PartialFixpoint</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ref</span> : <a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">term?</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Meta.html#Lean.Syntax.Term\">Term</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fixpointType</span> : <a href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.PartialFixpointType\">PartialFixpointType</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.PartialFixpoint\">PartialFixpoint</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/PreDefinition/TerminationHint.lean#L42-L47","name":"Lean.Elab.PartialFixpoint","line":42,"kind":"structure","docLink":"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.PartialFixpoint","doc":"A single `partial_fixpoint`, `greatest_fixpoint` or `least_fixpoint` clause "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.PartialFixpoint\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">PartialFixpoint</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/PreDefinition/TerminationHint.lean#L40-L40","name":"Lean.Elab.instInhabitedPartialFixpointType","line":40,"kind":"instance","docLink":"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.instInhabitedPartialFixpointType","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.instInhabitedPartialFixpointType\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">instInhabitedPartialFixpointType</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.PartialFixpointType\">PartialFixpointType</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/PreDefinition/TerminationHint.lean#L39-L39","name":"Lean.Elab.PartialFixpointType.leastFixpoint","line":39,"kind":"ctor","docLink":"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.PartialFixpointType.leastFixpoint","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.PartialFixpointType.leastFixpoint\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">PartialFixpointType</span>.<span class=\"name\">leastFixpoint</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.PartialFixpointType\">PartialFixpointType</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/PreDefinition/TerminationHint.lean#L38-L38","name":"Lean.Elab.PartialFixpointType.greatestFixpoint","line":38,"kind":"ctor","docLink":"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.PartialFixpointType.greatestFixpoint","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.PartialFixpointType.greatestFixpoint\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">PartialFixpointType</span>.<span class=\"name\">greatestFixpoint</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.PartialFixpointType\">PartialFixpointType</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/PreDefinition/TerminationHint.lean#L37-L37","name":"Lean.Elab.PartialFixpointType.partialFixpoint","line":37,"kind":"ctor","docLink":"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.PartialFixpointType.partialFixpoint","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.PartialFixpointType.partialFixpoint\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">PartialFixpointType</span>.<span class=\"name\">partialFixpoint</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.PartialFixpointType\">PartialFixpointType</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/PreDefinition/TerminationHint.lean#L36-L40","name":"Lean.Elab.PartialFixpointType","line":36,"kind":"inductive","docLink":"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.PartialFixpointType","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.PartialFixpointType\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">PartialFixpointType</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/PreDefinition/TerminationHint.lean#L34-L34","name":"Lean.Elab.instInhabitedDecreasingBy","line":34,"kind":"instance","docLink":"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.instInhabitedDecreasingBy","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.instInhabitedDecreasingBy\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">instInhabitedDecreasingBy</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.DecreasingBy\">DecreasingBy</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/PreDefinition/TerminationHint.lean#L33-L33","name":"Lean.Elab.DecreasingBy.tactic","line":33,"kind":"def","docLink":"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.DecreasingBy.tactic","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.DecreasingBy.tactic\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">DecreasingBy</span>.<span class=\"name\">tactic</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.DecreasingBy\">DecreasingBy</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.TSyntax\">TSyntax</a> <span class=\"fn\">`Lean.Parser.Tactic.tacticSeq</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/PreDefinition/TerminationHint.lean#L32-L32","name":"Lean.Elab.DecreasingBy.ref","line":32,"kind":"def","docLink":"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.DecreasingBy.ref","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.DecreasingBy.ref\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">DecreasingBy</span>.<span class=\"name\">ref</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.DecreasingBy\">DecreasingBy</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/PreDefinition/TerminationHint.lean#L31-L31","name":"Lean.Elab.DecreasingBy.mk","line":31,"kind":"ctor","docLink":"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.DecreasingBy.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.DecreasingBy.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">DecreasingBy</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ref</span> : <a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">tactic</span> : <a href=\"./Init/Prelude.html#Lean.TSyntax\">TSyntax</a> <span class=\"fn\">`Lean.Parser.Tactic.tacticSeq</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.DecreasingBy\">DecreasingBy</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/PreDefinition/TerminationHint.lean#L30-L34","name":"Lean.Elab.DecreasingBy","line":30,"kind":"structure","docLink":"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.DecreasingBy","doc":"A single `decreasing_by` clause "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.DecreasingBy\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">DecreasingBy</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/PreDefinition/TerminationHint.lean#L28-L28","name":"Lean.Elab.instInhabitedTerminationBy","line":28,"kind":"instance","docLink":"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.instInhabitedTerminationBy","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.instInhabitedTerminationBy\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">instInhabitedTerminationBy</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.TerminationBy\">TerminationBy</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/PreDefinition/TerminationHint.lean#L27-L27","name":"Lean.Elab.TerminationBy.synthetic","line":27,"kind":"def","docLink":"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.TerminationBy.synthetic","doc":"If `synthetic := true`, then this `termination_by` clause was\ngenerated by `GuessLex`, and `vars` refers to *all* parameters\nof the function, not just the “extra parameters”.\nCf. Lean.Elab.WF.unpackUnary\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.TerminationBy.synthetic\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">TerminationBy</span>.<span class=\"name\">synthetic</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.TerminationBy\">TerminationBy</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/PreDefinition/TerminationHint.lean#L20-L20","name":"Lean.Elab.TerminationBy.body","line":20,"kind":"def","docLink":"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.TerminationBy.body","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.TerminationBy.body\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">TerminationBy</span>.<span class=\"name\">body</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.TerminationBy\">TerminationBy</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Meta.html#Lean.Syntax.Term\">Term</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/PreDefinition/TerminationHint.lean#L19-L19","name":"Lean.Elab.TerminationBy.vars","line":19,"kind":"def","docLink":"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.TerminationBy.vars","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.TerminationBy.vars\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">TerminationBy</span>.<span class=\"name\">vars</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.TerminationBy\">TerminationBy</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.TSyntaxArray\">TSyntaxArray</a> <a href=\"./Init/Prelude.html#List.cons\">[</a><span class=\"fn\">`ident</span><a href=\"./Init/Prelude.html#List.cons\">,</a> <span class=\"fn\">`Lean.Parser.Term.hole</span><a href=\"./Init/Prelude.html#List.cons\">]</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/PreDefinition/TerminationHint.lean#L18-L18","name":"Lean.Elab.TerminationBy.structural","line":18,"kind":"def","docLink":"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.TerminationBy.structural","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.TerminationBy.structural\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">TerminationBy</span>.<span class=\"name\">structural</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.TerminationBy\">TerminationBy</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/PreDefinition/TerminationHint.lean#L17-L17","name":"Lean.Elab.TerminationBy.ref","line":17,"kind":"def","docLink":"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.TerminationBy.ref","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.TerminationBy.ref\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">TerminationBy</span>.<span class=\"name\">ref</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.TerminationBy\">TerminationBy</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/PreDefinition/TerminationHint.lean#L16-L16","name":"Lean.Elab.TerminationBy.mk","line":16,"kind":"ctor","docLink":"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.TerminationBy.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.TerminationBy.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">TerminationBy</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ref</span> : <a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">structural</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">vars</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.TSyntaxArray\">TSyntaxArray</a> <a href=\"./Init/Prelude.html#List.cons\">[</a><span class=\"fn\">`ident</span><a href=\"./Init/Prelude.html#List.cons\">,</a> <span class=\"fn\">`Lean.Parser.Term.hole</span><a href=\"./Init/Prelude.html#List.cons\">]</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">body</span> : <a href=\"./Init/Meta.html#Lean.Syntax.Term\">Term</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">synthetic</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.TerminationBy\">TerminationBy</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/PreDefinition/TerminationHint.lean#L15-L28","name":"Lean.Elab.TerminationBy","line":15,"kind":"structure","docLink":"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.TerminationBy","doc":"A single `termination_by` clause "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.TerminationBy\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">TerminationBy</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"}]}