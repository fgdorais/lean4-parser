{"name":"Lean.Meta.Tactic.Simp.BuiltinSimprocs.Nat","instances":[],"imports":["Init.Simproc","Init.Data.Nat.Simproc","Lean.Util.SafeExponentiation","Lean.Meta.LitValues","Lean.Meta.Offset","Lean.Meta.Tactic.Simp.Simproc","Lean.Meta.Tactic.Simp.BuiltinSimprocs.Util"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/Simp/BuiltinSimprocs/Nat.lean#L348-L356","name":"Nat.reduceDvd","line":348,"kind":"def","docLink":"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Nat.html#Nat.reduceDvd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Nat.html#Nat.reduceDvd\"><span class=\"name\">Nat</span>.<span class=\"name\">reduceDvd</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Simp/Types.html#Lean.Meta.Simp.Simproc\">Lean.Meta.Simp.Simproc</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/Simp/BuiltinSimprocs/Nat.lean#L313-L346","name":"Nat.reduceSubDiff","line":313,"kind":"def","docLink":"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Nat.html#Nat.reduceSubDiff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Nat.html#Nat.reduceSubDiff\"><span class=\"name\">Nat</span>.<span class=\"name\">reduceSubDiff</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Simp/Types.html#Lean.Meta.Simp.Simproc\">Lean.Meta.Simp.Simproc</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/Simp/BuiltinSimprocs/Nat.lean#L311-L311","name":"Nat.reduceLeDiff","line":311,"kind":"def","docLink":"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Nat.html#Nat.reduceLeDiff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Nat.html#Nat.reduceLeDiff\"><span class=\"name\">Nat</span>.<span class=\"name\">reduceLeDiff</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Simp/Types.html#Lean.Meta.Simp.Simproc\">Lean.Meta.Simp.Simproc</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/Simp/BuiltinSimprocs/Nat.lean#L275-L309","name":"Nat.reduceLTLE","line":275,"kind":"def","docLink":"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Nat.html#Nat.reduceLTLE","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Nat.html#Nat.reduceLTLE\"><span class=\"name\">Nat</span>.<span class=\"name\">reduceLTLE</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">nm</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">arity</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">isLT</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Simp/Types.html#Lean.Meta.Simp.SimpM\">Lean.Meta.SimpM</a> <a href=\"./Lean/Meta/Tactic/Simp/Types.html#Lean.Meta.Simp.Step\">Lean.Meta.Simp.Step</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/Simp/BuiltinSimprocs/Nat.lean#L258-L273","name":"Nat.reduceBneDiff","line":258,"kind":"def","docLink":"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Nat.html#Nat.reduceBneDiff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Nat.html#Nat.reduceBneDiff\"><span class=\"name\">Nat</span>.<span class=\"name\">reduceBneDiff</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Simp/Types.html#Lean.Meta.Simp.Simproc\">Lean.Meta.Simp.Simproc</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/Simp/BuiltinSimprocs/Nat.lean#L241-L256","name":"Nat.reduceBeqDiff","line":241,"kind":"def","docLink":"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Nat.html#Nat.reduceBeqDiff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Nat.html#Nat.reduceBeqDiff\"><span class=\"name\">Nat</span>.<span class=\"name\">reduceBeqDiff</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Simp/Types.html#Lean.Meta.Simp.Simproc\">Lean.Meta.Simp.Simproc</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/Simp/BuiltinSimprocs/Nat.lean#L220-L239","name":"Nat.reduceEqDiff","line":220,"kind":"def","docLink":"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Nat.html#Nat.reduceEqDiff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Nat.html#Nat.reduceEqDiff\"><span class=\"name\">Nat</span>.<span class=\"name\">reduceEqDiff</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Simp/Types.html#Lean.Meta.Simp.Simproc\">Lean.Meta.Simp.Simproc</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/Simp/BuiltinSimprocs/Nat.lean#L190-L218","name":"Nat.reduceNatEqExpr","line":190,"kind":"def","docLink":"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Nat.html#Nat.reduceNatEqExpr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Nat.html#Nat.reduceNatEqExpr\"><span class=\"name\">Nat</span>.<span class=\"name\">reduceNatEqExpr</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Simp/Types.html#Lean.Meta.Simp.SimpM\">Lean.Meta.SimpM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Nat.html#Nat.EqResult\">EqResult</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/Simp/BuiltinSimprocs/Nat.lean#L185-L188","name":"Nat.applyEqLemma","line":185,"kind":"def","docLink":"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Nat.html#Nat.applyEqLemma","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Nat.html#Nat.applyEqLemma\"><span class=\"name\">Nat</span>.<span class=\"name\">applyEqLemma</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <span class=\"fn\"><a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a> â†’ <a href=\"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Nat.html#Nat.EqResult\">EqResult</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">lemmaName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">args</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Simp/Types.html#Lean.Meta.Simp.SimpM\">Lean.Meta.SimpM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Nat.html#Nat.EqResult\">EqResult</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/Simp/BuiltinSimprocs/Nat.lean#L183-L183","name":"Nat.EqResult.eq","line":183,"kind":"ctor","docLink":"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Nat.html#Nat.EqResult.eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Nat.html#Nat.EqResult.eq\"><span class=\"name\">Nat</span>.<span class=\"name\">EqResult</span>.<span class=\"name\">eq</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">y </span><span class=\"fn\">p</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Nat.html#Nat.EqResult\">EqResult</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/Simp/BuiltinSimprocs/Nat.lean#L182-L182","name":"Nat.EqResult.false","line":182,"kind":"ctor","docLink":"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Nat.html#Nat.EqResult.false","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Nat.html#Nat.EqResult.false\"><span class=\"name\">Nat</span>.<span class=\"name\">EqResult</span>.<span class=\"name\">false</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Nat.html#Nat.EqResult\">EqResult</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/Simp/BuiltinSimprocs/Nat.lean#L181-L181","name":"Nat.EqResult.decide","line":181,"kind":"ctor","docLink":"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Nat.html#Nat.EqResult.decide","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Nat.html#Nat.EqResult.decide\"><span class=\"name\">Nat</span>.<span class=\"name\">EqResult</span>.<span class=\"name\">decide</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Nat.html#Nat.EqResult\">EqResult</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/Simp/BuiltinSimprocs/Nat.lean#L180-L183","name":"Nat.EqResult","line":180,"kind":"inductive","docLink":"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Nat.html#Nat.EqResult","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Nat.html#Nat.EqResult\"><span class=\"name\">Nat</span>.<span class=\"name\">EqResult</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/Simp/BuiltinSimprocs/Nat.lean#L175-L178","name":"Nat.applySimprocConst","line":175,"kind":"def","docLink":"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Nat.html#Nat.applySimprocConst","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Nat.html#Nat.applySimprocConst\"><span class=\"name\">Nat</span>.<span class=\"name\">applySimprocConst</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">expr</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">nm</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">args</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Simp/Types.html#Lean.Meta.Simp.SimpM\">Lean.Meta.SimpM</a> <a href=\"./Lean/Meta/Tactic/Simp/Types.html#Lean.Meta.Simp.Step\">Lean.Meta.Simp.Step</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/Simp/BuiltinSimprocs/Nat.lean#L81-L84","name":"Nat.isValue","line":81,"kind":"def","docLink":"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Nat.html#Nat.isValue","doc":"Return `.done` for Nat values. We don't want to unfold in the symbolic evaluator. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Nat.html#Nat.isValue\"><span class=\"name\">Nat</span>.<span class=\"name\">isValue</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Simp/Types.html#Lean.Meta.Simp.DSimproc\">Lean.Meta.Simp.DSimproc</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/Simp/BuiltinSimprocs/Nat.lean#L79-L79","name":"Nat.reduceBNe","line":79,"kind":"def","docLink":"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Nat.html#Nat.reduceBNe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Nat.html#Nat.reduceBNe\"><span class=\"name\">Nat</span>.<span class=\"name\">reduceBNe</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Simp/Types.html#Lean.Meta.Simp.DSimproc\">Lean.Meta.Simp.DSimproc</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/Simp/BuiltinSimprocs/Nat.lean#L78-L78","name":"Nat.reduceBEq","line":78,"kind":"def","docLink":"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Nat.html#Nat.reduceBEq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Nat.html#Nat.reduceBEq\"><span class=\"name\">Nat</span>.<span class=\"name\">reduceBEq</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Simp/Types.html#Lean.Meta.Simp.DSimproc\">Lean.Meta.Simp.DSimproc</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/Simp/BuiltinSimprocs/Nat.lean#L77-L77","name":"Nat.reduceGT","line":77,"kind":"def","docLink":"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Nat.html#Nat.reduceGT","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Nat.html#Nat.reduceGT\"><span class=\"name\">Nat</span>.<span class=\"name\">reduceGT</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Simp/Types.html#Lean.Meta.Simp.Simproc\">Lean.Meta.Simp.Simproc</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/Simp/BuiltinSimprocs/Nat.lean#L76-L76","name":"Nat.reduceLT","line":76,"kind":"def","docLink":"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Nat.html#Nat.reduceLT","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Nat.html#Nat.reduceLT\"><span class=\"name\">Nat</span>.<span class=\"name\">reduceLT</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Simp/Types.html#Lean.Meta.Simp.Simproc\">Lean.Meta.Simp.Simproc</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/Simp/BuiltinSimprocs/Nat.lean#L74-L74","name":"Nat.reduceGcd","line":74,"kind":"def","docLink":"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Nat.html#Nat.reduceGcd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Nat.html#Nat.reduceGcd\"><span class=\"name\">Nat</span>.<span class=\"name\">reduceGcd</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Simp/Types.html#Lean.Meta.Simp.DSimproc\">Lean.Meta.Simp.DSimproc</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/Simp/BuiltinSimprocs/Nat.lean#L71-L72","name":"Nat.reduceShiftRight","line":71,"kind":"def","docLink":"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Nat.html#Nat.reduceShiftRight","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Nat.html#Nat.reduceShiftRight\"><span class=\"name\">Nat</span>.<span class=\"name\">reduceShiftRight</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Simp/Types.html#Lean.Meta.Simp.DSimproc\">Lean.Meta.Simp.DSimproc</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/Simp/BuiltinSimprocs/Nat.lean#L68-L69","name":"Nat.reduceShiftLeft","line":68,"kind":"def","docLink":"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Nat.html#Nat.reduceShiftLeft","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Nat.html#Nat.reduceShiftLeft\"><span class=\"name\">Nat</span>.<span class=\"name\">reduceShiftLeft</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Simp/Types.html#Lean.Meta.Simp.DSimproc\">Lean.Meta.Simp.DSimproc</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/Simp/BuiltinSimprocs/Nat.lean#L66-L66","name":"Nat.reduceOr","line":66,"kind":"def","docLink":"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Nat.html#Nat.reduceOr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Nat.html#Nat.reduceOr\"><span class=\"name\">Nat</span>.<span class=\"name\">reduceOr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Simp/Types.html#Lean.Meta.Simp.DSimproc\">Lean.Meta.Simp.DSimproc</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/Simp/BuiltinSimprocs/Nat.lean#L65-L65","name":"Nat.reduceXor","line":65,"kind":"def","docLink":"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Nat.html#Nat.reduceXor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Nat.html#Nat.reduceXor\"><span class=\"name\">Nat</span>.<span class=\"name\">reduceXor</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Simp/Types.html#Lean.Meta.Simp.DSimproc\">Lean.Meta.Simp.DSimproc</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/Simp/BuiltinSimprocs/Nat.lean#L64-L64","name":"Nat.reduceAnd","line":64,"kind":"def","docLink":"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Nat.html#Nat.reduceAnd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Nat.html#Nat.reduceAnd\"><span class=\"name\">Nat</span>.<span class=\"name\">reduceAnd</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Simp/Types.html#Lean.Meta.Simp.DSimproc\">Lean.Meta.Simp.DSimproc</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/Simp/BuiltinSimprocs/Nat.lean#L57-L62","name":"Nat.reducePow","line":57,"kind":"def","docLink":"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Nat.html#Nat.reducePow","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Nat.html#Nat.reducePow\"><span class=\"name\">Nat</span>.<span class=\"name\">reducePow</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Simp/Types.html#Lean.Meta.Simp.DSimproc\">Lean.Meta.Simp.DSimproc</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/Simp/BuiltinSimprocs/Nat.lean#L55-L55","name":"Nat.reduceMod","line":55,"kind":"def","docLink":"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Nat.html#Nat.reduceMod","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Nat.html#Nat.reduceMod\"><span class=\"name\">Nat</span>.<span class=\"name\">reduceMod</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Simp/Types.html#Lean.Meta.Simp.DSimproc\">Lean.Meta.Simp.DSimproc</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/Simp/BuiltinSimprocs/Nat.lean#L54-L54","name":"Nat.reduceDiv","line":54,"kind":"def","docLink":"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Nat.html#Nat.reduceDiv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Nat.html#Nat.reduceDiv\"><span class=\"name\">Nat</span>.<span class=\"name\">reduceDiv</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Simp/Types.html#Lean.Meta.Simp.DSimproc\">Lean.Meta.Simp.DSimproc</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/Simp/BuiltinSimprocs/Nat.lean#L53-L53","name":"Nat.reduceSub","line":53,"kind":"def","docLink":"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Nat.html#Nat.reduceSub","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Nat.html#Nat.reduceSub\"><span class=\"name\">Nat</span>.<span class=\"name\">reduceSub</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Simp/Types.html#Lean.Meta.Simp.DSimproc\">Lean.Meta.Simp.DSimproc</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/Simp/BuiltinSimprocs/Nat.lean#L52-L52","name":"Nat.reduceMul","line":52,"kind":"def","docLink":"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Nat.html#Nat.reduceMul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Nat.html#Nat.reduceMul\"><span class=\"name\">Nat</span>.<span class=\"name\">reduceMul</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Simp/Types.html#Lean.Meta.Simp.DSimproc\">Lean.Meta.Simp.DSimproc</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/Simp/BuiltinSimprocs/Nat.lean#L51-L51","name":"Nat.reduceAdd","line":51,"kind":"def","docLink":"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Nat.html#Nat.reduceAdd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Nat.html#Nat.reduceAdd\"><span class=\"name\">Nat</span>.<span class=\"name\">reduceAdd</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Simp/Types.html#Lean.Meta.Simp.DSimproc\">Lean.Meta.Simp.DSimproc</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/Simp/BuiltinSimprocs/Nat.lean#L44-L44","name":"Nat.reduceSucc","line":44,"kind":"def","docLink":"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Nat.html#Nat.reduceSucc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Nat.html#Nat.reduceSucc\"><span class=\"name\">Nat</span>.<span class=\"name\">reduceSucc</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Simp/Types.html#Lean.Meta.Simp.DSimproc\">Lean.Meta.Simp.DSimproc</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/Simp/BuiltinSimprocs/Nat.lean#L38-L42","name":"Nat.reduceBoolPred","line":38,"kind":"def","docLink":"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Nat.html#Nat.reduceBoolPred","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Nat.html#Nat.reduceBoolPred\"><span class=\"name\">Nat</span>.<span class=\"name\">reduceBoolPred</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">declName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">arity</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">op</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">Nat</a> â†’ <a href=\"./Init/Prelude.html#Nat\">Nat</a> â†’ <a href=\"./Init/Prelude.html#Bool\">Bool</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Simp/Types.html#Lean.Meta.Simp.SimpM\">Lean.Meta.SimpM</a> <a href=\"./Lean/Meta/Tactic/Simp/Types.html#Lean.Meta.Simp.DStep\">Lean.Meta.Simp.DStep</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/Simp/BuiltinSimprocs/Nat.lean#L32-L36","name":"Nat.reduceBinPred","line":32,"kind":"def","docLink":"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Nat.html#Nat.reduceBinPred","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Nat.html#Nat.reduceBinPred\"><span class=\"name\">Nat</span>.<span class=\"name\">reduceBinPred</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">declName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">arity</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">op</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">Nat</a> â†’ <a href=\"./Init/Prelude.html#Nat\">Nat</a> â†’ <a href=\"./Init/Prelude.html#Bool\">Bool</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Simp/Types.html#Lean.Meta.Simp.SimpM\">Lean.Meta.SimpM</a> <a href=\"./Lean/Meta/Tactic/Simp/Types.html#Lean.Meta.Simp.Step\">Lean.Meta.Simp.Step</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/Simp/BuiltinSimprocs/Nat.lean#L26-L30","name":"Nat.reduceBin","line":26,"kind":"def","docLink":"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Nat.html#Nat.reduceBin","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Nat.html#Nat.reduceBin\"><span class=\"name\">Nat</span>.<span class=\"name\">reduceBin</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">declName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">arity</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">op</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">Nat</a> â†’ <a href=\"./Init/Prelude.html#Nat\">Nat</a> â†’ <a href=\"./Init/Prelude.html#Nat\">Nat</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Simp/Types.html#Lean.Meta.Simp.SimpM\">Lean.Meta.SimpM</a> <a href=\"./Lean/Meta/Tactic/Simp/Types.html#Lean.Meta.Simp.DStep\">Lean.Meta.Simp.DStep</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/Simp/BuiltinSimprocs/Nat.lean#L21-L24","name":"Nat.reduceUnary","line":21,"kind":"def","docLink":"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Nat.html#Nat.reduceUnary","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Nat.html#Nat.reduceUnary\"><span class=\"name\">Nat</span>.<span class=\"name\">reduceUnary</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">declName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">arity</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">op</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">Nat</a> â†’ <a href=\"./Init/Prelude.html#Nat\">Nat</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Simp/Types.html#Lean.Meta.Simp.SimpM\">Lean.Meta.SimpM</a> <a href=\"./Lean/Meta/Tactic/Simp/Types.html#Lean.Meta.Simp.DStep\">Lean.Meta.Simp.DStep</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/Simp/BuiltinSimprocs/Nat.lean#L18-L19","name":"Nat.fromExpr?","line":18,"kind":"def","docLink":"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Nat.html#Nat.fromExpr?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Simp/BuiltinSimprocs/Nat.html#Nat.fromExpr?\"><span class=\"name\">Nat</span>.<span class=\"name\">fromExpr?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Simp/Types.html#Lean.Meta.Simp.SimpM\">Lean.Meta.SimpM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span></div></div>"}]}