{"name":"Batteries.Data.ByteSubarray","instances":[{"typeNames":["Batteries.ByteSubarray","Nat","UInt8"],"name":"Batteries.ByteSubarray.instGetElemNatUInt8LtSize","className":"GetElem"},{"typeNames":["Batteries.ByteSubarray","UInt8"],"name":"Batteries.ByteSubarray.instForInUInt8","className":"ForIn"},{"typeNames":["Batteries.ByteSubarray","UInt8"],"name":"Batteries.ByteSubarray.instStreamUInt8","className":"Stream"},{"typeNames":["ByteArray","Batteries.ByteSubarray"],"name":"instCoeByteArrayByteSubarray","className":"Coe"}],"imports":["Init"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/78e1181c4752c7e10874d2ed5a6a15063f4a35b6/Batteries/Data/ByteSubarray.lean#L104-L105","name":"instCoeByteArrayByteSubarray","line":104,"kind":"instance","docLink":"./Batteries/Data/ByteSubarray.html#instCoeByteArrayByteSubarray","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/ByteSubarray.html#instCoeByteArrayByteSubarray\"><span class=\"name\">instCoeByteArrayByteSubarray</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Coe.html#Coe\">Coe</a> <a href=\"./Init/Data/ByteArray/Basic.html#ByteArray\">ByteArray</a> <a href=\"./Batteries/Data/ByteSubarray.html#Batteries.ByteSubarray\">Batteries.ByteSubarray</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/78e1181c4752c7e10874d2ed5a6a15063f4a35b6/Batteries/Data/ByteSubarray.lean#L96-L102","name":"ByteArray.toByteSubarray","line":96,"kind":"def","docLink":"./Batteries/Data/ByteSubarray.html#ByteArray.toByteSubarray","doc":"`O(1)`. Coerce a byte array into a byte slice. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/ByteSubarray.html#ByteArray.toByteSubarray\"><span class=\"name\">ByteArray</span>.<span class=\"name\">toByteSubarray</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">array</span> : <a href=\"./Init/Data/ByteArray/Basic.html#ByteArray\">ByteArray</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Batteries/Data/ByteSubarray.html#Batteries.ByteSubarray\">Batteries.ByteSubarray</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/78e1181c4752c7e10874d2ed5a6a15063f4a35b6/Batteries/Data/ByteSubarray.lean#L91-L92","name":"Batteries.ByteSubarray.instStreamUInt8","line":91,"kind":"instance","docLink":"./Batteries/Data/ByteSubarray.html#Batteries.ByteSubarray.instStreamUInt8","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/ByteSubarray.html#Batteries.ByteSubarray.instStreamUInt8\"><span class=\"name\">Batteries</span>.<span class=\"name\">ByteSubarray</span>.<span class=\"name\">instStreamUInt8</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Stream.html#Stream\">Stream</a> <a href=\"./Batteries/Data/ByteSubarray.html#Batteries.ByteSubarray\">ByteSubarray</a> <a href=\"./Init/Prelude.html#UInt8\">UInt8</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/78e1181c4752c7e10874d2ed5a6a15063f4a35b6/Batteries/Data/ByteSubarray.lean#L88-L89","name":"Batteries.ByteSubarray.instForInUInt8","line":88,"kind":"instance","docLink":"./Batteries/Data/ByteSubarray.html#Batteries.ByteSubarray.instForInUInt8","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/ByteSubarray.html#Batteries.ByteSubarray.instForInUInt8\"><span class=\"name\">Batteries</span>.<span class=\"name\">ByteSubarray</span>.<span class=\"name\">instForInUInt8</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> u_1 → <a href=\"./foundational_types.html\">Type</a> u_2</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Core.html#ForIn\">ForIn</a> <span class=\"fn\">m</span> <a href=\"./Batteries/Data/ByteSubarray.html#Batteries.ByteSubarray\">ByteSubarray</a> <a href=\"./Init/Prelude.html#UInt8\">UInt8</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/78e1181c4752c7e10874d2ed5a6a15063f4a35b6/Batteries/Data/ByteSubarray.lean#L80-L86","name":"Batteries.ByteSubarray.forIn.loop","line":80,"kind":"def","docLink":"./Batteries/Data/ByteSubarray.html#Batteries.ByteSubarray.forIn.loop","doc":"Inner loop of the `forIn` implementation for `ByteSubarray`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/ByteSubarray.html#Batteries.ByteSubarray.forIn.loop\"><span class=\"name\">Batteries</span>.<span class=\"name\">ByteSubarray</span>.<span class=\"name\">forIn</span>.<span class=\"name\">loop</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> u_1 → <a href=\"./foundational_types.html\">Type</a> u_2</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Batteries/Data/ByteSubarray.html#Batteries.ByteSubarray\">ByteSubarray</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#UInt8\">UInt8</a> → <span class=\"fn\"><span class=\"fn\">β</span> → <span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">(<a href=\"./Init/Core.html#ForInStep\">ForInStep</a> <span class=\"fn\">β</span>)</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/ByteSubarray.html#Batteries.ByteSubarray.size\">size</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">β</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/78e1181c4752c7e10874d2ed5a6a15063f4a35b6/Batteries/Data/ByteSubarray.lean#L74-L86","name":"Batteries.ByteSubarray.forIn","line":74,"kind":"def","docLink":"./Batteries/Data/ByteSubarray.html#Batteries.ByteSubarray.forIn","doc":"Implementation of `forIn` for a `ByteSubarray`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/ByteSubarray.html#Batteries.ByteSubarray.forIn\"><span class=\"name\">Batteries</span>.<span class=\"name\">ByteSubarray</span>.<span class=\"name\">forIn</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> u_1 → <a href=\"./foundational_types.html\">Type</a> u_2</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Batteries/Data/ByteSubarray.html#Batteries.ByteSubarray\">ByteSubarray</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">init</span> : <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#UInt8\">UInt8</a> → <span class=\"fn\"><span class=\"fn\">β</span> → <span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">(<a href=\"./Init/Core.html#ForInStep\">ForInStep</a> <span class=\"fn\">β</span>)</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">β</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/78e1181c4752c7e10874d2ed5a6a15063f4a35b6/Batteries/Data/ByteSubarray.lean#L70-L72","name":"Batteries.ByteSubarray.foldl","line":70,"kind":"def","docLink":"./Batteries/Data/ByteSubarray.html#Batteries.ByteSubarray.foldl","doc":"Folds a function over a `ByteSubarray` from left to right. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/ByteSubarray.html#Batteries.ByteSubarray.foldl\"><span class=\"name\">Batteries</span>.<span class=\"name\">ByteSubarray</span>.<span class=\"name\">foldl</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Batteries/Data/ByteSubarray.html#Batteries.ByteSubarray\">ByteSubarray</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">β</span> → <span class=\"fn\"><a href=\"./Init/Prelude.html#UInt8\">UInt8</a> → <span class=\"fn\">β</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">init</span> : <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">β</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/78e1181c4752c7e10874d2ed5a6a15063f4a35b6/Batteries/Data/ByteSubarray.lean#L66-L68","name":"Batteries.ByteSubarray.foldlM","line":66,"kind":"def","docLink":"./Batteries/Data/ByteSubarray.html#Batteries.ByteSubarray.foldlM","doc":"Folds a monadic function over a `ByteSubarray` from left to right. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/ByteSubarray.html#Batteries.ByteSubarray.foldlM\"><span class=\"name\">Batteries</span>.<span class=\"name\">ByteSubarray</span>.<span class=\"name\">foldlM</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> u_1 → <a href=\"./foundational_types.html\">Type</a> u_2</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Batteries/Data/ByteSubarray.html#Batteries.ByteSubarray\">ByteSubarray</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">β</span> → <span class=\"fn\"><a href=\"./Init/Prelude.html#UInt8\">UInt8</a> → <span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">β</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">init</span> : <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">β</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/78e1181c4752c7e10874d2ed5a6a15063f4a35b6/Batteries/Data/ByteSubarray.lean#L58-L64","name":"Batteries.ByteSubarray.popFront","line":58,"kind":"def","docLink":"./Batteries/Data/ByteSubarray.html#Batteries.ByteSubarray.popFront","doc":"`O(1)`. Pop the first element of a `ByteSubarray`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/ByteSubarray.html#Batteries.ByteSubarray.popFront\"><span class=\"name\">Batteries</span>.<span class=\"name\">ByteSubarray</span>.<span class=\"name\">popFront</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Batteries/Data/ByteSubarray.html#Batteries.ByteSubarray\">ByteSubarray</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Batteries/Data/ByteSubarray.html#Batteries.ByteSubarray\">ByteSubarray</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/78e1181c4752c7e10874d2ed5a6a15063f4a35b6/Batteries/Data/ByteSubarray.lean#L49-L56","name":"Batteries.ByteSubarray.pop","line":49,"kind":"def","docLink":"./Batteries/Data/ByteSubarray.html#Batteries.ByteSubarray.pop","doc":"`O(1)`. Pop the last element of a `ByteSubarray`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/ByteSubarray.html#Batteries.ByteSubarray.pop\"><span class=\"name\">Batteries</span>.<span class=\"name\">ByteSubarray</span>.<span class=\"name\">pop</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Batteries/Data/ByteSubarray.html#Batteries.ByteSubarray\">ByteSubarray</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Batteries/Data/ByteSubarray.html#Batteries.ByteSubarray\">ByteSubarray</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/78e1181c4752c7e10874d2ed5a6a15063f4a35b6/Batteries/Data/ByteSubarray.lean#L46-L47","name":"Batteries.ByteSubarray.instGetElemNatUInt8LtSize","line":46,"kind":"instance","docLink":"./Batteries/Data/ByteSubarray.html#Batteries.ByteSubarray.instGetElemNatUInt8LtSize","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/ByteSubarray.html#Batteries.ByteSubarray.instGetElemNatUInt8LtSize\"><span class=\"name\">Batteries</span>.<span class=\"name\">ByteSubarray</span>.<span class=\"name\">instGetElemNatUInt8LtSize</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/GetElem.html#GetElem\">GetElem</a> <a href=\"./Batteries/Data/ByteSubarray.html#Batteries.ByteSubarray\">ByteSubarray</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a> <a href=\"./Init/Prelude.html#UInt8\">UInt8</a> <span class=\"fn\">fun (<span class=\"fn\">self</span> : <a href=\"./Batteries/Data/ByteSubarray.html#Batteries.ByteSubarray\">ByteSubarray</a>) (<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>) =&gt; <span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/ByteSubarray.html#Batteries.ByteSubarray.size\">size</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/78e1181c4752c7e10874d2ed5a6a15063f4a35b6/Batteries/Data/ByteSubarray.lean#L38-L44","name":"Batteries.ByteSubarray.get","line":38,"kind":"def","docLink":"./Batteries/Data/ByteSubarray.html#Batteries.ByteSubarray.get","doc":"`O(1)`. Get the element at index `i` from the start of a `ByteSubarray`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/ByteSubarray.html#Batteries.ByteSubarray.get\"><span class=\"name\">Batteries</span>.<span class=\"name\">ByteSubarray</span>.<span class=\"name\">get</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Batteries/Data/ByteSubarray.html#Batteries.ByteSubarray\">ByteSubarray</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/ByteSubarray.html#Batteries.ByteSubarray.size\">size</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#UInt8\">UInt8</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/78e1181c4752c7e10874d2ed5a6a15063f4a35b6/Batteries/Data/ByteSubarray.lean#L34-L36","name":"Batteries.ByteSubarray.toByteArray","line":34,"kind":"def","docLink":"./Batteries/Data/ByteSubarray.html#Batteries.ByteSubarray.toByteArray","doc":"`O(n)`. Extract a `ByteSubarray` to a `ByteArray`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/ByteSubarray.html#Batteries.ByteSubarray.toByteArray\"><span class=\"name\">Batteries</span>.<span class=\"name\">ByteSubarray</span>.<span class=\"name\">toByteArray</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Batteries/Data/ByteSubarray.html#Batteries.ByteSubarray\">ByteSubarray</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/ByteArray/Basic.html#ByteArray\">ByteArray</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/78e1181c4752c7e10874d2ed5a6a15063f4a35b6/Batteries/Data/ByteSubarray.lean#L31-L32","name":"Batteries.ByteSubarray.stop_eq_start_add_size","line":31,"kind":"theorem","docLink":"./Batteries/Data/ByteSubarray.html#Batteries.ByteSubarray.stop_eq_start_add_size","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/ByteSubarray.html#Batteries.ByteSubarray.stop_eq_start_add_size\"><span class=\"name\">Batteries</span>.<span class=\"name\">ByteSubarray</span>.<span class=\"name\">stop_eq_start_add_size</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Batteries/Data/ByteSubarray.html#Batteries.ByteSubarray\">ByteSubarray</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/ByteSubarray.html#Batteries.ByteSubarray.stop\">stop</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/ByteSubarray.html#Batteries.ByteSubarray.start\">start</a></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/ByteSubarray.html#Batteries.ByteSubarray.size\">size</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/78e1181c4752c7e10874d2ed5a6a15063f4a35b6/Batteries/Data/ByteSubarray.lean#L28-L29","name":"Batteries.ByteSubarray.isEmpty","line":28,"kind":"def","docLink":"./Batteries/Data/ByteSubarray.html#Batteries.ByteSubarray.isEmpty","doc":"`O(1)`. Test if a `ByteSubarray` is empty. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/ByteSubarray.html#Batteries.ByteSubarray.isEmpty\"><span class=\"name\">Batteries</span>.<span class=\"name\">ByteSubarray</span>.<span class=\"name\">isEmpty</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Batteries/Data/ByteSubarray.html#Batteries.ByteSubarray\">ByteSubarray</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/78e1181c4752c7e10874d2ed5a6a15063f4a35b6/Batteries/Data/ByteSubarray.lean#L25-L26","name":"Batteries.ByteSubarray.size","line":25,"kind":"def","docLink":"./Batteries/Data/ByteSubarray.html#Batteries.ByteSubarray.size","doc":"`O(1)`. Get the size of a `ByteSubarray`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/ByteSubarray.html#Batteries.ByteSubarray.size\"><span class=\"name\">Batteries</span>.<span class=\"name\">ByteSubarray</span>.<span class=\"name\">size</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Batteries/Data/ByteSubarray.html#Batteries.ByteSubarray\">ByteSubarray</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/78e1181c4752c7e10874d2ed5a6a15063f4a35b6/Batteries/Data/ByteSubarray.lean#L21-L21","name":"Batteries.ByteSubarray.stop_le_array_size","line":21,"kind":"theorem","docLink":"./Batteries/Data/ByteSubarray.html#Batteries.ByteSubarray.stop_le_array_size","doc":"Stop index is before end of data array. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/ByteSubarray.html#Batteries.ByteSubarray.stop_le_array_size\"><span class=\"name\">Batteries</span>.<span class=\"name\">ByteSubarray</span>.<span class=\"name\">stop_le_array_size</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Batteries/Data/ByteSubarray.html#Batteries.ByteSubarray\">ByteSubarray</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/ByteSubarray.html#Batteries.ByteSubarray.stop\">stop</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/ByteSubarray.html#Batteries.ByteSubarray.array\">array</a></span>.<a href=\"./Init/Data/ByteArray/Basic.html#ByteArray.size\">size</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/78e1181c4752c7e10874d2ed5a6a15063f4a35b6/Batteries/Data/ByteSubarray.lean#L19-L19","name":"Batteries.ByteSubarray.start_le_stop","line":19,"kind":"theorem","docLink":"./Batteries/Data/ByteSubarray.html#Batteries.ByteSubarray.start_le_stop","doc":"Start index is before stop index. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/ByteSubarray.html#Batteries.ByteSubarray.start_le_stop\"><span class=\"name\">Batteries</span>.<span class=\"name\">ByteSubarray</span>.<span class=\"name\">start_le_stop</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Batteries/Data/ByteSubarray.html#Batteries.ByteSubarray\">ByteSubarray</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/ByteSubarray.html#Batteries.ByteSubarray.start\">start</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/ByteSubarray.html#Batteries.ByteSubarray.stop\">stop</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/78e1181c4752c7e10874d2ed5a6a15063f4a35b6/Batteries/Data/ByteSubarray.lean#L17-L17","name":"Batteries.ByteSubarray.stop","line":17,"kind":"def","docLink":"./Batteries/Data/ByteSubarray.html#Batteries.ByteSubarray.stop","doc":"`O(1)`. Get stop index of a `ByteSubarray`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/ByteSubarray.html#Batteries.ByteSubarray.stop\"><span class=\"name\">Batteries</span>.<span class=\"name\">ByteSubarray</span>.<span class=\"name\">stop</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Batteries/Data/ByteSubarray.html#Batteries.ByteSubarray\">ByteSubarray</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/78e1181c4752c7e10874d2ed5a6a15063f4a35b6/Batteries/Data/ByteSubarray.lean#L15-L15","name":"Batteries.ByteSubarray.start","line":15,"kind":"def","docLink":"./Batteries/Data/ByteSubarray.html#Batteries.ByteSubarray.start","doc":"`O(1)`. Get start index of a `ByteSubarray`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/ByteSubarray.html#Batteries.ByteSubarray.start\"><span class=\"name\">Batteries</span>.<span class=\"name\">ByteSubarray</span>.<span class=\"name\">start</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Batteries/Data/ByteSubarray.html#Batteries.ByteSubarray\">ByteSubarray</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/78e1181c4752c7e10874d2ed5a6a15063f4a35b6/Batteries/Data/ByteSubarray.lean#L13-L13","name":"Batteries.ByteSubarray.array","line":13,"kind":"def","docLink":"./Batteries/Data/ByteSubarray.html#Batteries.ByteSubarray.array","doc":"`O(1)`. Get data array of a `ByteSubarray`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/ByteSubarray.html#Batteries.ByteSubarray.array\"><span class=\"name\">Batteries</span>.<span class=\"name\">ByteSubarray</span>.<span class=\"name\">array</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Batteries/Data/ByteSubarray.html#Batteries.ByteSubarray\">ByteSubarray</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/ByteArray/Basic.html#ByteArray\">ByteArray</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/78e1181c4752c7e10874d2ed5a6a15063f4a35b6/Batteries/Data/ByteSubarray.lean#L11-L11","name":"Batteries.ByteSubarray.mk","line":11,"kind":"ctor","docLink":"./Batteries/Data/ByteSubarray.html#Batteries.ByteSubarray.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/ByteSubarray.html#Batteries.ByteSubarray.mk\"><span class=\"name\">Batteries</span>.<span class=\"name\">ByteSubarray</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">array</span> : <a href=\"./Init/Data/ByteArray/Basic.html#ByteArray\">ByteArray</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">start </span><span class=\"fn\">stop</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">start_le_stop</span> : <span class=\"fn\">start</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">stop</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">stop_le_array_size</span> : <span class=\"fn\">stop</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">array</span>.<a href=\"./Init/Data/ByteArray/Basic.html#ByteArray.size\">size</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Batteries/Data/ByteSubarray.html#Batteries.ByteSubarray\">ByteSubarray</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/78e1181c4752c7e10874d2ed5a6a15063f4a35b6/Batteries/Data/ByteSubarray.lean#L10-L21","name":"Batteries.ByteSubarray","line":10,"kind":"structure","docLink":"./Batteries/Data/ByteSubarray.html#Batteries.ByteSubarray","doc":"A subarray of a `ByteArray`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/ByteSubarray.html#Batteries.ByteSubarray\"><span class=\"name\">Batteries</span>.<span class=\"name\">ByteSubarray</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"}]}