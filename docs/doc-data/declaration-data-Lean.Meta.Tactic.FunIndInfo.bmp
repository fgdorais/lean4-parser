{"name":"Lean.Meta.Tactic.FunIndInfo","instances":[{"typeNames":["Lean.Meta.FunIndParamKind"],"name":"Lean.Meta.instBEqFunIndParamKind","className":"BEq"},{"typeNames":["Lean.Meta.FunIndParamKind"],"name":"Lean.Meta.instReprFunIndParamKind","className":"Repr"},{"typeNames":["Lean.Meta.FunIndParamKind"],"name":"Lean.Meta.instInhabitedFunIndParamKind","className":"Inhabited"},{"typeNames":["Lean.Meta.FunIndInfo"],"name":"Lean.Meta.instInhabitedFunIndInfo","className":"Inhabited"},{"typeNames":["Lean.Meta.FunIndInfo"],"name":"Lean.Meta.instReprFunIndInfo","className":"Repr"}],"imports":["Lean.Meta.Basic","Lean.ScopedEnvExtension","Lean.ReservedNameAction"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/FunIndInfo.lean#L81-L83","name":"Lean.Meta.getFunIndInfo?","line":81,"kind":"def","docLink":"./Lean/Meta/Tactic/FunIndInfo.html#Lean.Meta.getFunIndInfo?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/FunIndInfo.html#Lean.Meta.getFunIndInfo?\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">getFunIndInfo?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">cases</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">funName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">CoreM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Meta/Tactic/FunIndInfo.html#Lean.Meta.FunIndInfo\">FunIndInfo</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/FunIndInfo.lean#L78-L79","name":"Lean.Meta.getFunIndInfoForInduct?","line":78,"kind":"def","docLink":"./Lean/Meta/Tactic/FunIndInfo.html#Lean.Meta.getFunIndInfoForInduct?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/FunIndInfo.html#Lean.Meta.getFunIndInfoForInduct?\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">getFunIndInfoForInduct?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">inductName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">CoreM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Meta/Tactic/FunIndInfo.html#Lean.Meta.FunIndInfo\">FunIndInfo</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/FunIndInfo.lean#L74-L76","name":"Lean.Meta.setFunIndInfo","line":74,"kind":"def","docLink":"./Lean/Meta/Tactic/FunIndInfo.html#Lean.Meta.setFunIndInfo","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/FunIndInfo.html#Lean.Meta.setFunIndInfo\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">setFunIndInfo</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">funIndInfo</span> : <a href=\"./Lean/Meta/Tactic/FunIndInfo.html#Lean.Meta.FunIndInfo\">FunIndInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">CoreM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/FunIndInfo.lean#L62-L72","name":"Lean.Meta.getFunInduct?","line":62,"kind":"def","docLink":"./Lean/Meta/Tactic/FunIndInfo.html#Lean.Meta.getFunInduct?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/FunIndInfo.html#Lean.Meta.getFunInduct?\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">getFunInduct?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">cases</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">declName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">CoreM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/FunIndInfo.lean#L56-L60","name":"Lean.Meta.getMutualInductName","line":56,"kind":"def","docLink":"./Lean/Meta/Tactic/FunIndInfo.html#Lean.Meta.getMutualInductName","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/FunIndInfo.html#Lean.Meta.getMutualInductName\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">getMutualInductName</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">declName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">unfolding</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/Prelude.html#Bool.false\">false</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Name\">Name</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/FunIndInfo.lean#L50-L54","name":"Lean.Meta.getFunCasesName","line":50,"kind":"def","docLink":"./Lean/Meta/Tactic/FunIndInfo.html#Lean.Meta.getFunCasesName","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/FunIndInfo.html#Lean.Meta.getFunCasesName\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">getFunCasesName</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">declName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">unfolding</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/Prelude.html#Bool.false\">false</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Name\">Name</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/FunIndInfo.lean#L44-L48","name":"Lean.Meta.getFunInductName","line":44,"kind":"def","docLink":"./Lean/Meta/Tactic/FunIndInfo.html#Lean.Meta.getFunInductName","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/FunIndInfo.html#Lean.Meta.getFunInductName\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">getFunInductName</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">declName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">unfolding</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/Prelude.html#Bool.false\">false</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Name\">Name</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/FunIndInfo.lean#L42-L42","name":"Lean.Meta.funIndInfoExt","line":42,"kind":"opaque","docLink":"./Lean/Meta/Tactic/FunIndInfo.html#Lean.Meta.funIndInfoExt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/FunIndInfo.html#Lean.Meta.funIndInfoExt\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">funIndInfoExt</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/EnvExtension.html#Lean.MapDeclarationExtension\">MapDeclarationExtension</a> <a href=\"./Lean/Meta/Tactic/FunIndInfo.html#Lean.Meta.FunIndInfo\">FunIndInfo</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/FunIndInfo.lean#L40-L40","name":"Lean.Meta.instReprFunIndInfo","line":40,"kind":"instance","docLink":"./Lean/Meta/Tactic/FunIndInfo.html#Lean.Meta.instReprFunIndInfo","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/FunIndInfo.html#Lean.Meta.instReprFunIndInfo\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">instReprFunIndInfo</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <a href=\"./Lean/Meta/Tactic/FunIndInfo.html#Lean.Meta.FunIndInfo\">FunIndInfo</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/FunIndInfo.lean#L40-L40","name":"Lean.Meta.instInhabitedFunIndInfo","line":40,"kind":"instance","docLink":"./Lean/Meta/Tactic/FunIndInfo.html#Lean.Meta.instInhabitedFunIndInfo","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/FunIndInfo.html#Lean.Meta.instInhabitedFunIndInfo\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">instInhabitedFunIndInfo</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Meta/Tactic/FunIndInfo.html#Lean.Meta.FunIndInfo\">FunIndInfo</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/FunIndInfo.lean#L39-L39","name":"Lean.Meta.FunIndInfo.params","line":39,"kind":"def","docLink":"./Lean/Meta/Tactic/FunIndInfo.html#Lean.Meta.FunIndInfo.params","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/FunIndInfo.html#Lean.Meta.FunIndInfo.params\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunIndInfo</span>.<span class=\"name\">params</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Meta/Tactic/FunIndInfo.html#Lean.Meta.FunIndInfo\">FunIndInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Meta/Tactic/FunIndInfo.html#Lean.Meta.FunIndParamKind\">FunIndParamKind</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/FunIndInfo.lean#L38-L38","name":"Lean.Meta.FunIndInfo.levelMask","line":38,"kind":"def","docLink":"./Lean/Meta/Tactic/FunIndInfo.html#Lean.Meta.FunIndInfo.levelMask","doc":"`true` means that the corresponding level parameter of the function is also a level param\nof the induction principle.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/FunIndInfo.html#Lean.Meta.FunIndInfo.levelMask\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunIndInfo</span>.<span class=\"name\">levelMask</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Meta/Tactic/FunIndInfo.html#Lean.Meta.FunIndInfo\">FunIndInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/FunIndInfo.lean#L33-L33","name":"Lean.Meta.FunIndInfo.funIndName","line":33,"kind":"def","docLink":"./Lean/Meta/Tactic/FunIndInfo.html#Lean.Meta.FunIndInfo.funIndName","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/FunIndInfo.html#Lean.Meta.FunIndInfo.funIndName\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunIndInfo</span>.<span class=\"name\">funIndName</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Meta/Tactic/FunIndInfo.html#Lean.Meta.FunIndInfo\">FunIndInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Name\">Name</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/FunIndInfo.lean#L32-L32","name":"Lean.Meta.FunIndInfo.mk","line":32,"kind":"ctor","docLink":"./Lean/Meta/Tactic/FunIndInfo.html#Lean.Meta.FunIndInfo.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/FunIndInfo.html#Lean.Meta.FunIndInfo.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunIndInfo</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">funIndName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">levelMask</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">params</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Meta/Tactic/FunIndInfo.html#Lean.Meta.FunIndParamKind\">FunIndParamKind</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/FunIndInfo.html#Lean.Meta.FunIndInfo\">FunIndInfo</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/FunIndInfo.lean#L26-L40","name":"Lean.Meta.FunIndInfo","line":26,"kind":"structure","docLink":"./Lean/Meta/Tactic/FunIndInfo.html#Lean.Meta.FunIndInfo","doc":"A `FunIndInfo` indicates how a function's arguments map to the arguments of the functional induction\n(resp. cases) theorem.\n\nThe size of `params` also indicates the arity of the function.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/FunIndInfo.html#Lean.Meta.FunIndInfo\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunIndInfo</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/FunIndInfo.lean#L24-L24","name":"Lean.Meta.instInhabitedFunIndParamKind","line":24,"kind":"instance","docLink":"./Lean/Meta/Tactic/FunIndInfo.html#Lean.Meta.instInhabitedFunIndParamKind","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/FunIndInfo.html#Lean.Meta.instInhabitedFunIndParamKind\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">instInhabitedFunIndParamKind</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Meta/Tactic/FunIndInfo.html#Lean.Meta.FunIndParamKind\">FunIndParamKind</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/FunIndInfo.lean#L24-L24","name":"Lean.Meta.instReprFunIndParamKind","line":24,"kind":"instance","docLink":"./Lean/Meta/Tactic/FunIndInfo.html#Lean.Meta.instReprFunIndParamKind","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/FunIndInfo.html#Lean.Meta.instReprFunIndParamKind\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">instReprFunIndParamKind</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <a href=\"./Lean/Meta/Tactic/FunIndInfo.html#Lean.Meta.FunIndParamKind\">FunIndParamKind</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/FunIndInfo.lean#L24-L24","name":"Lean.Meta.instBEqFunIndParamKind","line":24,"kind":"instance","docLink":"./Lean/Meta/Tactic/FunIndInfo.html#Lean.Meta.instBEqFunIndParamKind","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/FunIndInfo.html#Lean.Meta.instBEqFunIndParamKind\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">instBEqFunIndParamKind</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <a href=\"./Lean/Meta/Tactic/FunIndInfo.html#Lean.Meta.FunIndParamKind\">FunIndParamKind</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/FunIndInfo.lean#L23-L23","name":"Lean.Meta.FunIndParamKind.target","line":23,"kind":"ctor","docLink":"./Lean/Meta/Tactic/FunIndInfo.html#Lean.Meta.FunIndParamKind.target","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/FunIndInfo.html#Lean.Meta.FunIndParamKind.target\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunIndParamKind</span>.<span class=\"name\">target</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/FunIndInfo.html#Lean.Meta.FunIndParamKind\">FunIndParamKind</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/FunIndInfo.lean#L22-L22","name":"Lean.Meta.FunIndParamKind.param","line":22,"kind":"ctor","docLink":"./Lean/Meta/Tactic/FunIndInfo.html#Lean.Meta.FunIndParamKind.param","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/FunIndInfo.html#Lean.Meta.FunIndParamKind.param\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunIndParamKind</span>.<span class=\"name\">param</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/FunIndInfo.html#Lean.Meta.FunIndParamKind\">FunIndParamKind</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/FunIndInfo.lean#L21-L21","name":"Lean.Meta.FunIndParamKind.dropped","line":21,"kind":"ctor","docLink":"./Lean/Meta/Tactic/FunIndInfo.html#Lean.Meta.FunIndParamKind.dropped","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/FunIndInfo.html#Lean.Meta.FunIndParamKind.dropped\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunIndParamKind</span>.<span class=\"name\">dropped</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/FunIndInfo.html#Lean.Meta.FunIndParamKind\">FunIndParamKind</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/FunIndInfo.lean#L20-L24","name":"Lean.Meta.FunIndParamKind","line":20,"kind":"inductive","docLink":"./Lean/Meta/Tactic/FunIndInfo.html#Lean.Meta.FunIndParamKind","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/FunIndInfo.html#Lean.Meta.FunIndParamKind\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunIndParamKind</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"}]}