{"name":"Lean.Meta.AbstractNestedProofs","instances":[],"imports":["Init.Grind.Util","Lean.Meta.Closure","Lean.Meta.Transform"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/AbstractNestedProofs.lean#L85-L91","name":"Lean.Meta.abstractNestedProofs","line":85,"kind":"def","docLink":"./Lean/Meta/AbstractNestedProofs.html#Lean.Meta.abstractNestedProofs","doc":"Replace proofs nested in `e` with new lemmas. The new lemmas have names of the form `mainDeclName.proof_<idx>` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/AbstractNestedProofs.html#Lean.Meta.abstractNestedProofs\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">abstractNestedProofs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">mainDeclName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">cache</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/Prelude.html#Bool.true\">true</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">MetaM</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/AbstractNestedProofs.lean#L71-L81","name":"Lean.Meta.AbstractNestedProofs.visit.mkAuxLemma","line":71,"kind":"opaque","docLink":"./Lean/Meta/AbstractNestedProofs.html#Lean.Meta.AbstractNestedProofs.visit.mkAuxLemma","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/AbstractNestedProofs.html#Lean.Meta.AbstractNestedProofs.visit.mkAuxLemma\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">AbstractNestedProofs</span>.<span class=\"name\">visit</span>.<span class=\"name\">mkAuxLemma</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/AbstractNestedProofs.html#Lean.Meta.AbstractNestedProofs.M\">M</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/AbstractNestedProofs.lean#L42-L81","name":"Lean.Meta.AbstractNestedProofs.visit","line":42,"kind":"opaque","docLink":"./Lean/Meta/AbstractNestedProofs.html#Lean.Meta.AbstractNestedProofs.visit","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/AbstractNestedProofs.html#Lean.Meta.AbstractNestedProofs.visit\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">AbstractNestedProofs</span>.<span class=\"name\">visit</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/AbstractNestedProofs.html#Lean.Meta.AbstractNestedProofs.M\">M</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/AbstractNestedProofs.lean#L40-L40","name":"Lean.Meta.AbstractNestedProofs.M","line":40,"kind":"def","docLink":"./Lean/Meta/AbstractNestedProofs.html#Lean.Meta.AbstractNestedProofs.M","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/AbstractNestedProofs.html#Lean.Meta.AbstractNestedProofs.M\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">AbstractNestedProofs</span>.<span class=\"name\">M</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">Î±</span> : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/AbstractNestedProofs.lean#L38-L38","name":"Lean.Meta.AbstractNestedProofs.State.nextIdx","line":38,"kind":"def","docLink":"./Lean/Meta/AbstractNestedProofs.html#Lean.Meta.AbstractNestedProofs.State.nextIdx","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/AbstractNestedProofs.html#Lean.Meta.AbstractNestedProofs.State.nextIdx\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">AbstractNestedProofs</span>.<span class=\"name\">State</span>.<span class=\"name\">nextIdx</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Meta/AbstractNestedProofs.html#Lean.Meta.AbstractNestedProofs.State\">State</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/AbstractNestedProofs.lean#L37-L37","name":"Lean.Meta.AbstractNestedProofs.State.mk","line":37,"kind":"ctor","docLink":"./Lean/Meta/AbstractNestedProofs.html#Lean.Meta.AbstractNestedProofs.State.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/AbstractNestedProofs.html#Lean.Meta.AbstractNestedProofs.State.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">AbstractNestedProofs</span>.<span class=\"name\">State</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">nextIdx</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/AbstractNestedProofs.html#Lean.Meta.AbstractNestedProofs.State\">State</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/AbstractNestedProofs.lean#L37-L38","name":"Lean.Meta.AbstractNestedProofs.State","line":37,"kind":"structure","docLink":"./Lean/Meta/AbstractNestedProofs.html#Lean.Meta.AbstractNestedProofs.State","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/AbstractNestedProofs.html#Lean.Meta.AbstractNestedProofs.State\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">AbstractNestedProofs</span>.<span class=\"name\">State</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/AbstractNestedProofs.lean#L35-L35","name":"Lean.Meta.AbstractNestedProofs.Context.baseName","line":35,"kind":"def","docLink":"./Lean/Meta/AbstractNestedProofs.html#Lean.Meta.AbstractNestedProofs.Context.baseName","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/AbstractNestedProofs.html#Lean.Meta.AbstractNestedProofs.Context.baseName\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">AbstractNestedProofs</span>.<span class=\"name\">Context</span>.<span class=\"name\">baseName</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Meta/AbstractNestedProofs.html#Lean.Meta.AbstractNestedProofs.Context\">Context</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Name\">Name</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/AbstractNestedProofs.lean#L34-L34","name":"Lean.Meta.AbstractNestedProofs.Context.cache","line":34,"kind":"def","docLink":"./Lean/Meta/AbstractNestedProofs.html#Lean.Meta.AbstractNestedProofs.Context.cache","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/AbstractNestedProofs.html#Lean.Meta.AbstractNestedProofs.Context.cache\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">AbstractNestedProofs</span>.<span class=\"name\">Context</span>.<span class=\"name\">cache</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Meta/AbstractNestedProofs.html#Lean.Meta.AbstractNestedProofs.Context\">Context</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/AbstractNestedProofs.lean#L33-L33","name":"Lean.Meta.AbstractNestedProofs.Context.mk","line":33,"kind":"ctor","docLink":"./Lean/Meta/AbstractNestedProofs.html#Lean.Meta.AbstractNestedProofs.Context.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/AbstractNestedProofs.html#Lean.Meta.AbstractNestedProofs.Context.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">AbstractNestedProofs</span>.<span class=\"name\">Context</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">cache</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">baseName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/AbstractNestedProofs.html#Lean.Meta.AbstractNestedProofs.Context\">Context</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/AbstractNestedProofs.lean#L33-L35","name":"Lean.Meta.AbstractNestedProofs.Context","line":33,"kind":"structure","docLink":"./Lean/Meta/AbstractNestedProofs.html#Lean.Meta.AbstractNestedProofs.Context","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/AbstractNestedProofs.html#Lean.Meta.AbstractNestedProofs.Context\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">AbstractNestedProofs</span>.<span class=\"name\">Context</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/AbstractNestedProofs.lean#L19-L31","name":"Lean.Meta.AbstractNestedProofs.isNonTrivialProof","line":19,"kind":"def","docLink":"./Lean/Meta/AbstractNestedProofs.html#Lean.Meta.AbstractNestedProofs.isNonTrivialProof","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/AbstractNestedProofs.html#Lean.Meta.AbstractNestedProofs.isNonTrivialProof\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">AbstractNestedProofs</span>.<span class=\"name\">isNonTrivialProof</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">MetaM</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/AbstractNestedProofs.lean#L14-L17","name":"Lean.Meta.AbstractNestedProofs.getLambdaBody","line":14,"kind":"def","docLink":"./Lean/Meta/AbstractNestedProofs.html#Lean.Meta.AbstractNestedProofs.getLambdaBody","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/AbstractNestedProofs.html#Lean.Meta.AbstractNestedProofs.getLambdaBody\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">AbstractNestedProofs</span>.<span class=\"name\">getLambdaBody</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></div></div>"}]}