{"name":"Batteries.Data.UnionFind.Basic","instances":[{"typeNames":["Batteries.UnionFind"],"name":"Batteries.UnionFind.instEmptyCollection","className":"EmptyCollection"}],"imports":["Init","Batteries.Tactic.Alias","Batteries.Tactic.Lint.Misc","Batteries.Tactic.SeqFocus","Batteries.Util.Panic","Batteries.Data.Array.Lemmas"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/78e1181c4752c7e10874d2ed5a6a15063f4a35b6/Batteries/Data/UnionFind/Basic.lean#L583-L584","name":"Batteries.UnionFind.Equiv","line":583,"kind":"def","docLink":"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.Equiv","doc":"Equivalence relation from a `UnionFind` structure "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.Equiv\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">Equiv</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind\">UnionFind</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/78e1181c4752c7e10874d2ed5a6a15063f4a35b6/Batteries/Data/UnionFind/Basic.lean#L576-L581","name":"Batteries.UnionFind.checkEquivD","line":576,"kind":"def","docLink":"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.checkEquivD","doc":"Check whether two union-find nodes are equivalent with path compression,\nreturns `x == y` if either index is out of bounds "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.checkEquivD\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">checkEquivD</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind\">UnionFind</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind\">UnionFind</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/78e1181c4752c7e10874d2ed5a6a15063f4a35b6/Batteries/Data/UnionFind/Basic.lean#L568-L574","name":"Batteries.UnionFind.checkEquiv!","line":568,"kind":"def","docLink":"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.checkEquiv!","doc":"Check whether two union-find nodes are equivalent, updating structure using path compression.\nPanics if either index is out of bounds. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.checkEquiv!\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">checkEquiv!</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind\">UnionFind</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind\">UnionFind</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/78e1181c4752c7e10874d2ed5a6a15063f4a35b6/Batteries/Data/UnionFind/Basic.lean#L564-L566","name":"Batteries.UnionFind.checkEquivN","line":564,"kind":"def","docLink":"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.checkEquivN","doc":"Check whether two union-find nodes are equivalent, updating structure using path compression. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.checkEquivN\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">checkEquivN</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind\">UnionFind</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.size\">size</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind\">UnionFind</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/78e1181c4752c7e10874d2ed5a6a15063f4a35b6/Batteries/Data/UnionFind/Basic.lean#L558-L562","name":"Batteries.UnionFind.checkEquiv","line":558,"kind":"def","docLink":"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.checkEquiv","doc":"Check whether two union-find nodes are equivalent, updating structure using path compression. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.checkEquiv\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">checkEquiv</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind\">UnionFind</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.size\">size</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind\">UnionFind</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/78e1181c4752c7e10874d2ed5a6a15063f4a35b6/Batteries/Data/UnionFind/Basic.lean#L550-L556","name":"Batteries.UnionFind.union!","line":550,"kind":"def","docLink":"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.union!","doc":"Link two union-find nodes, uniting their respective classes.\nPanics if either index is out of bounds. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.union!\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">union!</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind\">UnionFind</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind\">UnionFind</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/78e1181c4752c7e10874d2ed5a6a15063f4a35b6/Batteries/Data/UnionFind/Basic.lean#L546-L548","name":"Batteries.UnionFind.unionN","line":546,"kind":"def","docLink":"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.unionN","doc":"Link two union-find nodes, uniting their respective classes. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.unionN\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">unionN</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind\">UnionFind</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.size\">size</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind\">UnionFind</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/78e1181c4752c7e10874d2ed5a6a15063f4a35b6/Batteries/Data/UnionFind/Basic.lean#L535-L544","name":"Batteries.UnionFind.union","line":535,"kind":"def","docLink":"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.union","doc":"Link two union-find nodes, uniting their respective classes. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.union\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">union</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind\">UnionFind</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.size\">size</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind\">UnionFind</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/78e1181c4752c7e10874d2ed5a6a15063f4a35b6/Batteries/Data/UnionFind/Basic.lean#L528-L533","name":"Batteries.UnionFind.link!","line":528,"kind":"def","docLink":"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.link!","doc":"Link a union-find node to a root node. Panics if either index is out of bounds. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.link!\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">link!</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind\">UnionFind</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">yroot</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.parent\">parent</a></span> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind\">UnionFind</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/78e1181c4752c7e10874d2ed5a6a15063f4a35b6/Batteries/Data/UnionFind/Basic.lean#L524-L526","name":"Batteries.UnionFind.linkN","line":524,"kind":"def","docLink":"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.linkN","doc":"Link a union-find node to a root node. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.linkN\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">linkN</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind\">UnionFind</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">yroot</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.parent\">parent</a></span> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">y</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.size\">size</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind\">UnionFind</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/78e1181c4752c7e10874d2ed5a6a15063f4a35b6/Batteries/Data/UnionFind/Basic.lean#L492-L522","name":"Batteries.UnionFind.link","line":492,"kind":"def","docLink":"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.link","doc":"Link a union-find node to a root node. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.link\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">link</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind\">UnionFind</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.size\">size</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">yroot</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.parent\">parent</a></span> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind\">UnionFind</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/78e1181c4752c7e10874d2ed5a6a15063f4a35b6/Batteries/Data/UnionFind/Basic.lean#L488-L490","name":"Batteries.UnionFind.linkAux_size","line":488,"kind":"theorem","docLink":"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.linkAux_size","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.linkAux_size\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">linkAux_size</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UFNode\">UFNode</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Init/Prelude.html#Array.size\">size</a></span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.linkAux\">linkAux</a> <span class=\"fn\">self</span> <span class=\"fn\">x</span> <span class=\"fn\">y</span>)</span>.<a href=\"./Init/Prelude.html#Array.size\">size</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Init/Prelude.html#Array.size\">size</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/78e1181c4752c7e10874d2ed5a6a15063f4a35b6/Batteries/Data/UnionFind/Basic.lean#L480-L486","name":"Batteries.UnionFind.setParent_rankD_lt","line":480,"kind":"theorem","docLink":"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.setParent_rankD_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.setParent_rankD_lt\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">setParent_rankD_lt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">arr</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UFNode\">UFNode</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\"><span class=\"fn\">arr</span>.<a href=\"./Init/Prelude.html#Array.size\">size</a></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">arr</span><a href=\"./Init/GetElem.html#GetElem.getElem\">[</a><span class=\"fn\">↑<span class=\"fn\">x</span></span><a href=\"./Init/GetElem.html#GetElem.getElem\">]</a>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UFNode.rank\">rank</a></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">arr</span><a href=\"./Init/GetElem.html#GetElem.getElem\">[</a><span class=\"fn\">↑<span class=\"fn\">y</span></span><a href=\"./Init/GetElem.html#GetElem.getElem\">]</a>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UFNode.rank\">rank</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">rankD_lt</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.parentD\">parentD</a> <span class=\"fn\">arr</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">i</span> → <span class=\"fn\"><a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rankD\">rankD</a> <span class=\"fn\">arr</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rankD\">rankD</a> <span class=\"fn\">arr</span> <span class=\"fn\">(<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.parentD\">parentD</a> <span class=\"fn\">arr</span> <span class=\"fn\">i</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">let <span class=\"fn\">arr'</span> := <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">arr</span>.<a href=\"./Init/Data/Array/Set.html#Array.set\">set</a></span> <span class=\"fn\">↑<span class=\"fn\">x</span></span> <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UFNode.mk\">{</a> <span class=\"fn\">parent</span> := <span class=\"fn\">↑<span class=\"fn\">y</span></span>, <span class=\"fn\">rank</span> := <span class=\"fn\"><span class=\"fn\">arr</span><a href=\"./Init/GetElem.html#GetElem.getElem\">[</a><span class=\"fn\">x</span><a href=\"./Init/GetElem.html#GetElem.getElem\">]</a>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UFNode.rank\">rank</a></span> <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UFNode.mk\">}</a> <span class=\"fn\">⋯</span></span>;\n<span class=\"fn\"><span class=\"fn\"><a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.parentD\">parentD</a> <span class=\"fn\">arr'</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">i</span> → <span class=\"fn\"><a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rankD\">rankD</a> <span class=\"fn\">arr'</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rankD\">rankD</a> <span class=\"fn\">arr'</span> <span class=\"fn\">(<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.parentD\">parentD</a> <span class=\"fn\">arr'</span> <span class=\"fn\">i</span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/78e1181c4752c7e10874d2ed5a6a15063f4a35b6/Batteries/Data/UnionFind/Basic.lean#L455-L478","name":"Batteries.UnionFind.setParentBump_rankD_lt","line":455,"kind":"theorem","docLink":"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.setParentBump_rankD_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.setParentBump_rankD_lt\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">setParentBump_rankD_lt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">arr' </span><span class=\"fn\">arr</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UFNode\">UFNode</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\"><span class=\"fn\">arr</span>.<a href=\"./Init/Prelude.html#Array.size\">size</a></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hroot</span> : <span class=\"fn\"><span class=\"fn\">arr</span><a href=\"./Init/GetElem.html#GetElem.getElem\">[</a><span class=\"fn\">↑<span class=\"fn\">x</span></span><a href=\"./Init/GetElem.html#GetElem.getElem\">]</a>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UFNode.rank\">rank</a></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">arr</span><a href=\"./Init/GetElem.html#GetElem.getElem\">[</a><span class=\"fn\">↑<span class=\"fn\">y</span></span><a href=\"./Init/GetElem.html#GetElem.getElem\">]</a>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UFNode.rank\">rank</a></span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\"><span class=\"fn\">arr</span><a href=\"./Init/GetElem.html#GetElem.getElem\">[</a><span class=\"fn\">↑<span class=\"fn\">y</span></span><a href=\"./Init/GetElem.html#GetElem.getElem\">]</a>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UFNode.parent\">parent</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">y</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">H</span> : <span class=\"fn\"><span class=\"fn\">arr</span><a href=\"./Init/GetElem.html#GetElem.getElem\">[</a><span class=\"fn\">↑<span class=\"fn\">x</span></span><a href=\"./Init/GetElem.html#GetElem.getElem\">]</a>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UFNode.rank\">rank</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">arr</span><a href=\"./Init/GetElem.html#GetElem.getElem\">[</a><span class=\"fn\">↑<span class=\"fn\">y</span></span><a href=\"./Init/GetElem.html#GetElem.getElem\">]</a>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UFNode.rank\">rank</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">rankD_lt</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.parentD\">parentD</a> <span class=\"fn\">arr</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">i</span> → <span class=\"fn\"><a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rankD\">rankD</a> <span class=\"fn\">arr</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rankD\">rankD</a> <span class=\"fn\">arr</span> <span class=\"fn\">(<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.parentD\">parentD</a> <span class=\"fn\">arr</span> <span class=\"fn\">i</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hP</span> : <span class=\"fn\"><a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.parentD\">parentD</a> <span class=\"fn\">arr'</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#ite\">if</a> <span class=\"fn\">↑<span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#ite\">then</a> <span class=\"fn\">↑<span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#ite\">else</a> <span class=\"fn\"><a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.parentD\">parentD</a> <span class=\"fn\">arr</span> <span class=\"fn\">i</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hR</span> : <span class=\"fn\">∀ {<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}, <span class=\"fn\"><a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rankD\">rankD</a> <span class=\"fn\">arr'</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#ite\">if</a> <span class=\"fn\">↑<span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">arr</span><a href=\"./Init/GetElem.html#GetElem.getElem\">[</a><span class=\"fn\">↑<span class=\"fn\">x</span></span><a href=\"./Init/GetElem.html#GetElem.getElem\">]</a>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UFNode.rank\">rank</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">arr</span><a href=\"./Init/GetElem.html#GetElem.getElem\">[</a><span class=\"fn\">↑<span class=\"fn\">y</span></span><a href=\"./Init/GetElem.html#GetElem.getElem\">]</a>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UFNode.rank\">rank</a></span> <a href=\"./Init/Prelude.html#ite\">then</a> <span class=\"fn\"><span class=\"fn\">arr</span><a href=\"./Init/GetElem.html#GetElem.getElem\">[</a><span class=\"fn\">↑<span class=\"fn\">y</span></span><a href=\"./Init/GetElem.html#GetElem.getElem\">]</a>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UFNode.rank\">rank</a></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#ite\">else</a> <span class=\"fn\"><a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rankD\">rankD</a> <span class=\"fn\">arr</span> <span class=\"fn\">i</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.parentD\">parentD</a> <span class=\"fn\">arr'</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">i</span> → <span class=\"fn\"><a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rankD\">rankD</a> <span class=\"fn\">arr'</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rankD\">rankD</a> <span class=\"fn\">arr'</span> <span class=\"fn\">(<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.parentD\">parentD</a> <span class=\"fn\">arr'</span> <span class=\"fn\">i</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/78e1181c4752c7e10874d2ed5a6a15063f4a35b6/Batteries/Data/UnionFind/Basic.lean#L439-L453","name":"Batteries.UnionFind.linkAux","line":439,"kind":"def","docLink":"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.linkAux","doc":"Link two union-find nodes "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.linkAux\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">linkAux</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UFNode\">UFNode</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Init/Prelude.html#Array.size\">size</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UFNode\">UFNode</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/78e1181c4752c7e10874d2ed5a6a15063f4a35b6/Batteries/Data/UnionFind/Basic.lean#L423-L437","name":"Batteries.UnionFind.find_root_1","line":423,"kind":"theorem","docLink":"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.find_root_1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.find_root_1\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">find_root_1</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind\">UnionFind</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.size\">size</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.find\">find</a></span> <span class=\"fn\">x</span>)</span>.<a href=\"./Init/Core.html#Sigma.fst\">fst</a></span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rootD\">rootD</a></span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rootD\">rootD</a></span> <span class=\"fn\">i</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/78e1181c4752c7e10874d2ed5a6a15063f4a35b6/Batteries/Data/UnionFind/Basic.lean#L419-L421","name":"Batteries.UnionFind.find_parent_or","line":419,"kind":"theorem","docLink":"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.find_parent_or","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.find_parent_or\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">find_parent_or</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind\">UnionFind</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.size\">size</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.find\">find</a></span> <span class=\"fn\">x</span>)</span>.<a href=\"./Init/Core.html#Sigma.fst\">fst</a></span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.parent\">parent</a></span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rootD\">rootD</a></span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rootD\">rootD</a></span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rootD\">rootD</a></span> <span class=\"fn\">↑<span class=\"fn\">x</span></span></span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.find\">find</a></span> <span class=\"fn\">x</span>)</span>.<a href=\"./Init/Core.html#Sigma.fst\">fst</a></span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.parent\">parent</a></span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.parent\">parent</a></span> <span class=\"fn\">i</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/78e1181c4752c7e10874d2ed5a6a15063f4a35b6/Batteries/Data/UnionFind/Basic.lean#L414-L417","name":"Batteries.UnionFind.find_parent_1","line":414,"kind":"theorem","docLink":"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.find_parent_1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.find_parent_1\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">find_parent_1</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind\">UnionFind</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.size\">size</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.find\">find</a></span> <span class=\"fn\">x</span>)</span>.<a href=\"./Init/Core.html#Sigma.fst\">fst</a></span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.parent\">parent</a></span> <span class=\"fn\">↑<span class=\"fn\">x</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rootD\">rootD</a></span> <span class=\"fn\">↑<span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/78e1181c4752c7e10874d2ed5a6a15063f4a35b6/Batteries/Data/UnionFind/Basic.lean#L411-L412","name":"Batteries.UnionFind.find_root_2","line":411,"kind":"theorem","docLink":"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.find_root_2","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.find_root_2\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">find_root_2</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind\">UnionFind</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.size\">size</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.find\">find</a></span> <span class=\"fn\">x</span>)</span>.<a href=\"./Init/Core.html#Sigma.snd\">snd</a></span>.<a href=\"./Init/Prelude.html#Subtype.val\">val</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rootD\">rootD</a></span> <span class=\"fn\">↑<span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/78e1181c4752c7e10874d2ed5a6a15063f4a35b6/Batteries/Data/UnionFind/Basic.lean#L408-L409","name":"Batteries.UnionFind.find_size","line":408,"kind":"theorem","docLink":"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.find_size","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.find_size\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">find_size</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind\">UnionFind</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.size\">size</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.find\">find</a></span> <span class=\"fn\">x</span>)</span>.<a href=\"./Init/Core.html#Sigma.fst\">fst</a></span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.size\">size</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.size\">size</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/78e1181c4752c7e10874d2ed5a6a15063f4a35b6/Batteries/Data/UnionFind/Basic.lean#L400-L406","name":"Batteries.UnionFind.findD","line":400,"kind":"def","docLink":"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.findD","doc":"Find root of a union-find node, updating the structure using path compression.\nReturns inputs unchanged when index is out of bounds. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.findD\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">findD</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind\">UnionFind</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind\">UnionFind</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/78e1181c4752c7e10874d2ed5a6a15063f4a35b6/Batteries/Data/UnionFind/Basic.lean#L392-L398","name":"Batteries.UnionFind.find!","line":392,"kind":"def","docLink":"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.find!","doc":"Find root of a union-find node, updating the structure using path compression.\nPanics if index is out of bounds. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.find!\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">find!</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind\">UnionFind</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind\">UnionFind</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/78e1181c4752c7e10874d2ed5a6a15063f4a35b6/Batteries/Data/UnionFind/Basic.lean#L388-L390","name":"Batteries.UnionFind.findN","line":388,"kind":"def","docLink":"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.findN","doc":"Find root of a union-find node, updating the structure using path compression. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.findN\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">findN</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind\">UnionFind</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.size\">size</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind\">UnionFind</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/78e1181c4752c7e10874d2ed5a6a15063f4a35b6/Batteries/Data/UnionFind/Basic.lean#L375-L386","name":"Batteries.UnionFind.find","line":375,"kind":"def","docLink":"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.find","doc":"Find root of a union-find node, updating the structure using path compression. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.find\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">find</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind\">UnionFind</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.size\">size</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind\">UnionFind</a>) × <a href=\"./Init/Prelude.html#Subtype\">{</a> <span class=\"fn\">_root</span> <a href=\"./Init/Prelude.html#Subtype\">:</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.size\">size</a></span></span> <a href=\"./Init/Prelude.html#Subtype\">//</a> <span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.size\">size</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.size\">size</a></span> <a href=\"./Init/Prelude.html#Subtype\">}</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/78e1181c4752c7e10874d2ed5a6a15063f4a35b6/Batteries/Data/UnionFind/Basic.lean#L363-L373","name":"Batteries.UnionFind.lt_rankD_findAux","line":363,"kind":"theorem","docLink":"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.lt_rankD_findAux","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.lt_rankD_findAux\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">lt_rankD_findAux</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">self</span> : <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind\">UnionFind</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.size\">size</a></span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.parentD\">parentD</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.findAux\">findAux</a></span> <span class=\"fn\">x</span>)</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.FindAux.s\">s</a></span> <span class=\"fn\">i</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">i</span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rank\">rank</a></span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rank\">rank</a></span> <span class=\"fn\">(<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.parentD\">parentD</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.findAux\">findAux</a></span> <span class=\"fn\">x</span>)</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.FindAux.s\">s</a></span> <span class=\"fn\">i</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/78e1181c4752c7e10874d2ed5a6a15063f4a35b6/Batteries/Data/UnionFind/Basic.lean#L348-L361","name":"Batteries.UnionFind.parentD_findAux_or","line":348,"kind":"theorem","docLink":"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.parentD_findAux_or","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.parentD_findAux_or\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">parentD_findAux_or</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind\">UnionFind</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.size\">size</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.parentD\">parentD</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.findAux\">findAux</a></span> <span class=\"fn\">x</span>)</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.FindAux.s\">s</a></span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rootD\">rootD</a></span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rootD\">rootD</a></span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rootD\">rootD</a></span> <span class=\"fn\">↑<span class=\"fn\">x</span></span></span> <a href=\"./Init/Prelude.html#Or\">∨</a>   <span class=\"fn\"><a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.parentD\">parentD</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.findAux\">findAux</a></span> <span class=\"fn\">x</span>)</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.FindAux.s\">s</a></span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.parent\">parent</a></span> <span class=\"fn\">i</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/78e1181c4752c7e10874d2ed5a6a15063f4a35b6/Batteries/Data/UnionFind/Basic.lean#L336-L346","name":"Batteries.UnionFind.parentD_findAux_lt","line":336,"kind":"theorem","docLink":"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.parentD_findAux_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.parentD_findAux_lt\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">parentD_findAux_lt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">self</span> : <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind\">UnionFind</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.size\">size</a></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.size\">size</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.parentD\">parentD</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.findAux\">findAux</a></span> <span class=\"fn\">x</span>)</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.FindAux.s\">s</a></span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.size\">size</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/78e1181c4752c7e10874d2ed5a6a15063f4a35b6/Batteries/Data/UnionFind/Basic.lean#L327-L334","name":"Batteries.UnionFind.parentD_findAux_rootD","line":327,"kind":"theorem","docLink":"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.parentD_findAux_rootD","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.parentD_findAux_rootD\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">parentD_findAux_rootD</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">self</span> : <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind\">UnionFind</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.size\">size</a></span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.parentD\">parentD</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.findAux\">findAux</a></span> <span class=\"fn\">x</span>)</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.FindAux.s\">s</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rootD\">rootD</a></span> <span class=\"fn\">↑<span class=\"fn\">x</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rootD\">rootD</a></span> <span class=\"fn\">↑<span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/78e1181c4752c7e10874d2ed5a6a15063f4a35b6/Batteries/Data/UnionFind/Basic.lean#L313-L325","name":"Batteries.UnionFind.parentD_findAux","line":313,"kind":"theorem","docLink":"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.parentD_findAux","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.parentD_findAux\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">parentD_findAux</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">self</span> : <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind\">UnionFind</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.size\">size</a></span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.parentD\">parentD</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.findAux\">findAux</a></span> <span class=\"fn\">x</span>)</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.FindAux.s\">s</a></span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#ite\">if</a> <span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#ite\">then</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rootD\">rootD</a></span> <span class=\"fn\">↑<span class=\"fn\">x</span></span></span> <a href=\"./Init/Prelude.html#ite\">else</a> <span class=\"fn\"><a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.parentD\">parentD</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.findAux\">findAux</a></span> <a href=\"./Init/Prelude.html#Fin.mk\">⟨</a><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.arr\">arr</a></span><a href=\"./Init/GetElem.html#GetElem.getElem\">[</a><span class=\"fn\">↑<span class=\"fn\">x</span></span><a href=\"./Init/GetElem.html#GetElem.getElem\">]</a>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UFNode.parent\">parent</a></span>, <span class=\"fn\">⋯</span><a href=\"./Init/Prelude.html#Fin.mk\">⟩</a>)</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.FindAux.s\">s</a></span> <span class=\"fn\">i</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/78e1181c4752c7e10874d2ed5a6a15063f4a35b6/Batteries/Data/UnionFind/Basic.lean#L299-L311","name":"Batteries.UnionFind.rankD_findAux","line":299,"kind":"theorem","docLink":"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rankD_findAux","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rankD_findAux\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">rankD_findAux</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">self</span> : <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind\">UnionFind</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.size\">size</a></span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rankD\">rankD</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.findAux\">findAux</a></span> <span class=\"fn\">x</span>)</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.FindAux.s\">s</a></span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rank\">rank</a></span> <span class=\"fn\">i</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/78e1181c4752c7e10874d2ed5a6a15063f4a35b6/Batteries/Data/UnionFind/Basic.lean#L287-L297","name":"Batteries.UnionFind.findAux_s","line":287,"kind":"theorem","docLink":"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.findAux_s","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.findAux_s\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">findAux_s</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">self</span> : <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind\">UnionFind</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.size\">size</a></span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.findAux\">findAux</a></span> <span class=\"fn\">x</span>)</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.FindAux.s\">s</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <a href=\"./Init/Prelude.html#ite\">if</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.arr\">arr</a></span><a href=\"./Init/GetElem.html#GetElem.getElem\">[</a><span class=\"fn\">↑<span class=\"fn\">x</span></span><a href=\"./Init/GetElem.html#GetElem.getElem\">]</a>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UFNode.parent\">parent</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#ite\">then</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.arr\">arr</a></span>\n  <a href=\"./Init/Prelude.html#ite\">else</a>     <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.findAux\">findAux</a></span> <a href=\"./Init/Prelude.html#Fin.mk\">⟨</a><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.arr\">arr</a></span><a href=\"./Init/GetElem.html#GetElem.getElem\">[</a><span class=\"fn\">↑<span class=\"fn\">x</span></span><a href=\"./Init/GetElem.html#GetElem.getElem\">]</a>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UFNode.parent\">parent</a></span>, <span class=\"fn\">⋯</span><a href=\"./Init/Prelude.html#Fin.mk\">⟩</a>)</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.FindAux.s\">s</a></span>.<a href=\"./Init/Data/Array/Basic.html#Array.modify\">modify</a></span> <span class=\"fn\">↑<span class=\"fn\">x</span></span> <span class=\"fn\">fun (<span class=\"fn\">s</span> : <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UFNode\">UFNode</a>) =&gt; <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UFNode.mk\">{</a> <span class=\"fn\">parent</span> := <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rootD\">rootD</a></span> <span class=\"fn\">↑<span class=\"fn\">x</span></span></span>, <span class=\"fn\">rank</span> := <span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UFNode.rank\">rank</a></span> <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UFNode.mk\">}</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/78e1181c4752c7e10874d2ed5a6a15063f4a35b6/Batteries/Data/UnionFind/Basic.lean#L277-L285","name":"Batteries.UnionFind.findAux_root","line":277,"kind":"theorem","docLink":"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.findAux_root","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.findAux_root\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">findAux_root</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">self</span> : <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind\">UnionFind</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.size\">size</a></span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.findAux\">findAux</a></span> <span class=\"fn\">x</span>)</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.FindAux.root\">root</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.root\">root</a></span> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/78e1181c4752c7e10874d2ed5a6a15063f4a35b6/Batteries/Data/UnionFind/Basic.lean#L266-L275","name":"Batteries.UnionFind.findAux","line":266,"kind":"def","docLink":"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.findAux","doc":"Auxiliary function for find operation "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.findAux\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">findAux</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind\">UnionFind</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.size\">size</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.FindAux\">FindAux</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.size\">size</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/78e1181c4752c7e10874d2ed5a6a15063f4a35b6/Batteries/Data/UnionFind/Basic.lean#L264-L264","name":"Batteries.UnionFind.FindAux.size_eq","line":264,"kind":"theorem","docLink":"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.FindAux.size_eq","doc":"Size requirement "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.FindAux.size_eq\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">FindAux</span>.<span class=\"name\">size_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.FindAux\">FindAux</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.FindAux.s\">s</a></span>.<a href=\"./Init/Prelude.html#Array.size\">size</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/78e1181c4752c7e10874d2ed5a6a15063f4a35b6/Batteries/Data/UnionFind/Basic.lean#L262-L262","name":"Batteries.UnionFind.FindAux.root","line":262,"kind":"def","docLink":"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.FindAux.root","doc":"Index of root node "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.FindAux.root\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">FindAux</span>.<span class=\"name\">root</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.FindAux\">FindAux</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/78e1181c4752c7e10874d2ed5a6a15063f4a35b6/Batteries/Data/UnionFind/Basic.lean#L260-L260","name":"Batteries.UnionFind.FindAux.s","line":260,"kind":"def","docLink":"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.FindAux.s","doc":"Array of nodes "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.FindAux.s\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">FindAux</span>.<span class=\"name\">s</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.FindAux\">FindAux</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UFNode\">UFNode</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/78e1181c4752c7e10874d2ed5a6a15063f4a35b6/Batteries/Data/UnionFind/Basic.lean#L258-L258","name":"Batteries.UnionFind.FindAux.mk","line":258,"kind":"ctor","docLink":"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.FindAux.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.FindAux.mk\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">FindAux</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UFNode\">UFNode</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">root</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">size_eq</span> : <span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Init/Prelude.html#Array.size\">size</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.FindAux\">FindAux</a> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/78e1181c4752c7e10874d2ed5a6a15063f4a35b6/Batteries/Data/UnionFind/Basic.lean#L257-L264","name":"Batteries.UnionFind.FindAux","line":257,"kind":"structure","docLink":"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.FindAux","doc":"Auxiliary data structure for find operation "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.FindAux\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">FindAux</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/78e1181c4752c7e10874d2ed5a6a15063f4a35b6/Batteries/Data/UnionFind/Basic.lean#L251-L255","name":"Batteries.UnionFind.lt_rank_root","line":251,"kind":"theorem","docLink":"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.lt_rank_root","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.lt_rank_root\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">lt_rank_root</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">self</span> : <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind\">UnionFind</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rank\">rank</a></span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rank\">rank</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rootD\">rootD</a></span> <span class=\"fn\">x</span>)</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.parent\">parent</a></span> <span class=\"fn\">x</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">x</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/78e1181c4752c7e10874d2ed5a6a15063f4a35b6/Batteries/Data/UnionFind/Basic.lean#L242-L249","name":"Batteries.UnionFind.le_rank_root","line":242,"kind":"theorem","docLink":"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.le_rank_root","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.le_rank_root\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">le_rank_root</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">self</span> : <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind\">UnionFind</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rank\">rank</a></span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rank\">rank</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rootD\">rootD</a></span> <span class=\"fn\">x</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/78e1181c4752c7e10874d2ed5a6a15063f4a35b6/Batteries/Data/UnionFind/Basic.lean#L233-L240","name":"Batteries.UnionFind.rootD_ext","line":233,"kind":"theorem","docLink":"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rootD_ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rootD_ext\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">rootD_ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m1 </span><span class=\"fn\">m2</span> : <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind\">UnionFind</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">H</span> : <span class=\"fn\">∀ (<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m1</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.parent\">parent</a></span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m2</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.parent\">parent</a></span> <span class=\"fn\">x</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m1</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rootD\">rootD</a></span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m2</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rootD\">rootD</a></span> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/78e1181c4752c7e10874d2ed5a6a15063f4a35b6/Batteries/Data/UnionFind/Basic.lean#L230-L231","name":"Batteries.UnionFind.rootD_rootD","line":230,"kind":"theorem","docLink":"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rootD_rootD","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rootD_rootD\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">rootD_rootD</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">self</span> : <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind\">UnionFind</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rootD\">rootD</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rootD\">rootD</a></span> <span class=\"fn\">x</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rootD\">rootD</a></span> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/78e1181c4752c7e10874d2ed5a6a15063f4a35b6/Batteries/Data/UnionFind/Basic.lean#L225-L228","name":"Batteries.UnionFind.rootD_eq_self","line":225,"kind":"theorem","docLink":"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rootD_eq_self","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rootD_eq_self\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">rootD_eq_self</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">self</span> : <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind\">UnionFind</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rootD\">rootD</a></span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.parent\">parent</a></span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/78e1181c4752c7e10874d2ed5a6a15063f4a35b6/Batteries/Data/UnionFind/Basic.lean#L222-L223","name":"Batteries.UnionFind.rootD_lt","line":222,"kind":"theorem","docLink":"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rootD_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rootD_lt\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">rootD_lt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">self</span> : <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind\">UnionFind</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rootD\">rootD</a></span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.size\">size</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.size\">size</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/78e1181c4752c7e10874d2ed5a6a15063f4a35b6/Batteries/Data/UnionFind/Basic.lean#L212-L220","name":"Batteries.UnionFind.rootD_parent","line":212,"kind":"theorem","docLink":"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rootD_parent","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rootD_parent\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">rootD_parent</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind\">UnionFind</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rootD\">rootD</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.parent\">parent</a></span> <span class=\"fn\">x</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rootD\">rootD</a></span> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/78e1181c4752c7e10874d2ed5a6a15063f4a35b6/Batteries/Data/UnionFind/Basic.lean#L205-L210","name":"Batteries.UnionFind.parent_rootD","line":205,"kind":"theorem","docLink":"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.parent_rootD","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.parent_rootD\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">parent_rootD</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind\">UnionFind</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.parent\">parent</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rootD\">rootD</a></span> <span class=\"fn\">x</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rootD\">rootD</a></span> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/78e1181c4752c7e10874d2ed5a6a15063f4a35b6/Batteries/Data/UnionFind/Basic.lean#L197-L203","name":"Batteries.UnionFind.parent_root","line":197,"kind":"theorem","docLink":"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.parent_root","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.parent_root\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">parent_root</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind\">UnionFind</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.size\">size</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.arr\">arr</a></span><a href=\"./Init/GetElem.html#GetElem.getElem\">[</a><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.root\">root</a></span> <span class=\"fn\">x</span>)</span></span><a href=\"./Init/GetElem.html#GetElem.getElem\">]</a>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UFNode.parent\">parent</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.root\">root</a></span> <span class=\"fn\">x</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/78e1181c4752c7e10874d2ed5a6a15063f4a35b6/Batteries/Data/UnionFind/Basic.lean#L193-L195","name":"Batteries.UnionFind.rootD","line":193,"kind":"def","docLink":"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rootD","doc":"Root of a union-find node. Returns input if index is out of bounds. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rootD\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">rootD</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind\">UnionFind</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/78e1181c4752c7e10874d2ed5a6a15063f4a35b6/Batteries/Data/UnionFind/Basic.lean#L189-L191","name":"Batteries.UnionFind.root!","line":189,"kind":"def","docLink":"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.root!","doc":"Root of a union-find node. Panics if index is out of bounds. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.root!\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">root!</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind\">UnionFind</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/78e1181c4752c7e10874d2ed5a6a15063f4a35b6/Batteries/Data/UnionFind/Basic.lean#L185-L187","name":"Batteries.UnionFind.rootN","line":185,"kind":"def","docLink":"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rootN","doc":"Root of a union-find node. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rootN\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">rootN</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind\">UnionFind</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.size\">size</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/78e1181c4752c7e10874d2ed5a6a15063f4a35b6/Batteries/Data/UnionFind/Basic.lean#L175-L183","name":"Batteries.UnionFind.root","line":175,"kind":"def","docLink":"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.root","doc":"Root of a union-find node. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.root\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">root</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind\">UnionFind</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.size\">size</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.size\">size</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/78e1181c4752c7e10874d2ed5a6a15063f4a35b6/Batteries/Data/UnionFind/Basic.lean#L167-L173","name":"Batteries.UnionFind.push","line":167,"kind":"def","docLink":"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.push","doc":"Add a new node to a union-find structure, unlinked with any other nodes "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.push\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">push</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind\">UnionFind</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind\">UnionFind</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/78e1181c4752c7e10874d2ed5a6a15063f4a35b6/Batteries/Data/UnionFind/Basic.lean#L161-L165","name":"Batteries.UnionFind.push_parentD","line":161,"kind":"theorem","docLink":"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.push_parentD","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.push_parentD\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">push_parentD</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">arr</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UFNode\">UFNode</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.parentD\">parentD</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">arr</span>.<a href=\"./Init/Prelude.html#Array.push\">push</a></span> <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UFNode.mk\">{</a> <span class=\"fn\">parent</span> := <span class=\"fn\"><span class=\"fn\">arr</span>.<a href=\"./Init/Prelude.html#Array.size\">size</a></span>, <span class=\"fn\">rank</span> := <span class=\"fn\">0</span> <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UFNode.mk\">}</a>)</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.parentD\">parentD</a> <span class=\"fn\">arr</span> <span class=\"fn\">i</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/78e1181c4752c7e10874d2ed5a6a15063f4a35b6/Batteries/Data/UnionFind/Basic.lean#L157-L159","name":"Batteries.UnionFind.push_rankD","line":157,"kind":"theorem","docLink":"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.push_rankD","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.push_rankD\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">push_rankD</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">arr</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UFNode\">UFNode</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rankD\">rankD</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">arr</span>.<a href=\"./Init/Prelude.html#Array.push\">push</a></span> <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UFNode.mk\">{</a> <span class=\"fn\">parent</span> := <span class=\"fn\"><span class=\"fn\">arr</span>.<a href=\"./Init/Prelude.html#Array.size\">size</a></span>, <span class=\"fn\">rank</span> := <span class=\"fn\">0</span> <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UFNode.mk\">}</a>)</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rankD\">rankD</a> <span class=\"fn\">arr</span> <span class=\"fn\">i</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/78e1181c4752c7e10874d2ed5a6a15063f4a35b6/Batteries/Data/UnionFind/Basic.lean#L155-L155","name":"Batteries.UnionFind.lt_rankMax","line":155,"kind":"theorem","docLink":"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.lt_rankMax","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.lt_rankMax\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">lt_rankMax</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind\">UnionFind</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rank\">rank</a></span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rankMax\">rankMax</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/78e1181c4752c7e10874d2ed5a6a15063f4a35b6/Batteries/Data/UnionFind/Basic.lean#L151-L153","name":"Batteries.UnionFind.rankD_lt_rankMax","line":151,"kind":"theorem","docLink":"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rankD_lt_rankMax","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rankD_lt_rankMax\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">rankD_lt_rankMax</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind\">UnionFind</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rankD\">rankD</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.arr\">arr</a></span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rankMax\">rankMax</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/78e1181c4752c7e10874d2ed5a6a15063f4a35b6/Batteries/Data/UnionFind/Basic.lean#L145-L147","name":"Batteries.UnionFind.rank'_lt_rankMax.go","line":145,"kind":"theorem","docLink":"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rank'_lt_rankMax.go","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rank'_lt_rankMax.go\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">rank'_lt_rankMax</span>.<span class=\"name\">go</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">l</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UFNode\">UFNode</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UFNode\">UFNode</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">l</span> → <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UFNode.rank\">rank</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Init/Data/List/Basic.html#List.foldr\">List.foldr</a> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UFNode\">UFNode</a>) =&gt; <span class=\"fn\"><a href=\"./Init/Prelude.html#Max.max\">max</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UFNode.rank\">rank</a></span></span>)</span> <span class=\"fn\">0</span> <span class=\"fn\">l</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/78e1181c4752c7e10874d2ed5a6a15063f4a35b6/Batteries/Data/UnionFind/Basic.lean#L144-L149","name":"Batteries.UnionFind.rank'_lt_rankMax","line":144,"kind":"theorem","docLink":"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rank'_lt_rankMax","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rank'_lt_rankMax\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">rank'_lt_rankMax</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind\">UnionFind</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.arr\">arr</a></span>.<a href=\"./Init/Prelude.html#Array.size\">size</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.arr\">arr</a></span><a href=\"./Init/GetElem.html#GetElem.getElem\">[</a><span class=\"fn\">i</span><a href=\"./Init/GetElem.html#GetElem.getElem\">]</a>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UFNode.rank\">rank</a></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rankMax\">rankMax</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/78e1181c4752c7e10874d2ed5a6a15063f4a35b6/Batteries/Data/UnionFind/Basic.lean#L141-L142","name":"Batteries.UnionFind.rankMax","line":141,"kind":"def","docLink":"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rankMax","doc":"Maximum rank of nodes in a union-find structure "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rankMax\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">rankMax</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind\">UnionFind</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/78e1181c4752c7e10874d2ed5a6a15063f4a35b6/Batteries/Data/UnionFind/Basic.lean#L137-L139","name":"Batteries.UnionFind.rank'_lt","line":137,"kind":"theorem","docLink":"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rank'_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rank'_lt\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">rank'_lt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind\">UnionFind</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.arr\">arr</a></span>.<a href=\"./Init/Prelude.html#Array.size\">size</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.arr\">arr</a></span><a href=\"./Init/GetElem.html#GetElem.getElem\">[</a><span class=\"fn\">i</span><a href=\"./Init/GetElem.html#GetElem.getElem\">]</a>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UFNode.parent\">parent</a></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">i</span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rank\">rank</a></span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rank\">rank</a></span> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.arr\">arr</a></span><a href=\"./Init/GetElem.html#GetElem.getElem\">[</a><span class=\"fn\">i</span><a href=\"./Init/GetElem.html#GetElem.getElem\">]</a>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UFNode.parent\">parent</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/78e1181c4752c7e10874d2ed5a6a15063f4a35b6/Batteries/Data/UnionFind/Basic.lean#L134-L135","name":"Batteries.UnionFind.rank_lt","line":134,"kind":"theorem","docLink":"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rank_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rank_lt\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">rank_lt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">self</span> : <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind\">UnionFind</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.parent\">parent</a></span> <span class=\"fn\">i</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">i</span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rank\">rank</a></span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rank\">rank</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.parent\">parent</a></span> <span class=\"fn\">i</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/78e1181c4752c7e10874d2ed5a6a15063f4a35b6/Batteries/Data/UnionFind/Basic.lean#L131-L132","name":"Batteries.UnionFind.rank","line":131,"kind":"def","docLink":"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rank","doc":"Rank of union-find node "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rank\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">rank</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind\">UnionFind</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/78e1181c4752c7e10874d2ed5a6a15063f4a35b6/Batteries/Data/UnionFind/Basic.lean#L128-L129","name":"Batteries.UnionFind.parent_lt","line":128,"kind":"theorem","docLink":"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.parent_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.parent_lt\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">parent_lt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind\">UnionFind</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.parent\">parent</a></span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.size\">size</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.size\">size</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/78e1181c4752c7e10874d2ed5a6a15063f4a35b6/Batteries/Data/UnionFind/Basic.lean#L125-L126","name":"Batteries.UnionFind.parent'_lt","line":125,"kind":"theorem","docLink":"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.parent'_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.parent'_lt\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">parent'_lt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind\">UnionFind</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.arr\">arr</a></span>.<a href=\"./Init/Prelude.html#Array.size\">size</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.arr\">arr</a></span><a href=\"./Init/GetElem.html#GetElem.getElem\">[</a><span class=\"fn\">i</span><a href=\"./Init/GetElem.html#GetElem.getElem\">]</a>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UFNode.parent\">parent</a></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.size\">size</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/78e1181c4752c7e10874d2ed5a6a15063f4a35b6/Batteries/Data/UnionFind/Basic.lean#L122-L123","name":"Batteries.UnionFind.parent","line":122,"kind":"def","docLink":"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.parent","doc":"Parent of union-find node "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.parent\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">parent</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind\">UnionFind</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/78e1181c4752c7e10874d2ed5a6a15063f4a35b6/Batteries/Data/UnionFind/Basic.lean#L120-L120","name":"Batteries.UnionFind.instEmptyCollection","line":120,"kind":"instance","docLink":"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.instEmptyCollection","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.instEmptyCollection\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">instEmptyCollection</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Core.html#EmptyCollection\">EmptyCollection</a> <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind\">UnionFind</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/78e1181c4752c7e10874d2ed5a6a15063f4a35b6/Batteries/Data/UnionFind/Basic.lean#L117-L118","name":"Batteries.UnionFind.empty","line":117,"kind":"def","docLink":"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.empty","doc":"Empty union-find structure "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.empty\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">empty</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind\">UnionFind</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/78e1181c4752c7e10874d2ed5a6a15063f4a35b6/Batteries/Data/UnionFind/Basic.lean#L111-L115","name":"Batteries.UnionFind.mkEmpty","line":111,"kind":"def","docLink":"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.mkEmpty","doc":"Create an empty union-find structure with specific capacity "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.mkEmpty\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">mkEmpty</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind\">UnionFind</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/78e1181c4752c7e10874d2ed5a6a15063f4a35b6/Batteries/Data/UnionFind/Basic.lean#L108-L109","name":"Batteries.UnionFind.size","line":108,"kind":"def","docLink":"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.size","doc":"Size of union-find structure. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.size\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">size</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind\">UnionFind</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/78e1181c4752c7e10874d2ed5a6a15063f4a35b6/Batteries/Data/UnionFind/Basic.lean#L104-L104","name":"Batteries.UnionFind.rankD_lt","line":104,"kind":"theorem","docLink":"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rankD_lt","doc":"Validity for rank "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rankD_lt\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">rankD_lt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind\">UnionFind</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.parentD\">parentD</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.arr\">arr</a></span> <span class=\"fn\">i</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">i</span> → <span class=\"fn\"><a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rankD\">rankD</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.arr\">arr</a></span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rankD\">rankD</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.arr\">arr</a></span> <span class=\"fn\">(<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.parentD\">parentD</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.arr\">arr</a></span> <span class=\"fn\">i</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/78e1181c4752c7e10874d2ed5a6a15063f4a35b6/Batteries/Data/UnionFind/Basic.lean#L102-L102","name":"Batteries.UnionFind.parentD_lt","line":102,"kind":"theorem","docLink":"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.parentD_lt","doc":"Validity for parent nodes "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.parentD_lt\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">parentD_lt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind\">UnionFind</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.arr\">arr</a></span>.<a href=\"./Init/Prelude.html#Array.size\">size</a></span> → <span class=\"fn\"><a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.parentD\">parentD</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.arr\">arr</a></span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.arr\">arr</a></span>.<a href=\"./Init/Prelude.html#Array.size\">size</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/78e1181c4752c7e10874d2ed5a6a15063f4a35b6/Batteries/Data/UnionFind/Basic.lean#L100-L100","name":"Batteries.UnionFind.arr","line":100,"kind":"def","docLink":"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.arr","doc":"Array of union-find nodes "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.arr\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">arr</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind\">UnionFind</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UFNode\">UFNode</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/78e1181c4752c7e10874d2ed5a6a15063f4a35b6/Batteries/Data/UnionFind/Basic.lean#L98-L98","name":"Batteries.UnionFind.mk","line":98,"kind":"ctor","docLink":"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.mk\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">arr</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UFNode\">UFNode</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">parentD_lt</span> : <span class=\"fn\">∀ {<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}, <span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">arr</span>.<a href=\"./Init/Prelude.html#Array.size\">size</a></span> → <span class=\"fn\"><a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.parentD\">parentD</a> <span class=\"fn\">arr</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">arr</span>.<a href=\"./Init/Prelude.html#Array.size\">size</a></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">rankD_lt</span> : <span class=\"fn\">∀ {<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}, <span class=\"fn\"><span class=\"fn\"><a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.parentD\">parentD</a> <span class=\"fn\">arr</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">i</span> → <span class=\"fn\"><a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rankD\">rankD</a> <span class=\"fn\">arr</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rankD\">rankD</a> <span class=\"fn\">arr</span> <span class=\"fn\">(<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.parentD\">parentD</a> <span class=\"fn\">arr</span> <span class=\"fn\">i</span>)</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind\">UnionFind</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/78e1181c4752c7e10874d2ed5a6a15063f4a35b6/Batteries/Data/UnionFind/Basic.lean#L62-L104","name":"Batteries.UnionFind","line":62,"kind":"structure","docLink":"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind","doc":"### Union-find data structure\n\nThe `UnionFind` structure is an implementation of disjoint-set data structure\nthat uses path compression to make the primary operations run in amortized\nnearly linear time. The nodes of a `UnionFind` structure `s` are natural\nnumbers smaller than `s.size`. The structure associates with a canonical\nrepresentative from its equivalence class. The structure can be extended\nusing the `push` operation and equivalence classes can be updated using the\n`union` operation.\n\nThe main operations for `UnionFind` are:\n\n* `empty`/`mkEmpty` are used to create a new empty structure.\n* `size` returns the size of the data structure.\n* `push` adds a new node to a structure, unlinked to any other node.\n* `union` links two nodes of the data structure, joining their equivalence\n  classes, and performs path compression.\n* `find` returns the canonical representative of a node and updates the data\n  structure using path compression.\n* `root` returns the canonical representative of a node without altering the\n  data structure.\n* `checkEquiv` checks whether two nodes have the same canonical representative\n  and updates the structure using path compression.\n\nMost use cases should prefer `find` over `root` to benefit from the speedup from path-compression.\n\nThe main operations use `Fin s.size` to represent nodes of the union-find structure.\nSome alternatives are provided:\n\n* `unionN`, `findN`, `rootN`, `checkEquivN` use `Fin n` with a proof that `n = s.size`.\n* `union!`, `find!`, `root!`, `checkEquiv!` use `Nat` and panic when the indices are out of bounds.\n* `findD`, `rootD`, `checkEquivD` use `Nat` and treat out of bound indices as isolated nodes.\n\nThe noncomputable relation `UnionFind.Equiv` is provided to use the equivalence relation from a\n`UnionFind` structure in the context of proofs.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/78e1181c4752c7e10874d2ed5a6a15063f4a35b6/Batteries/Data/UnionFind/Basic.lean#L51-L56","name":"Batteries.UnionFind.rankD_set","line":51,"kind":"theorem","docLink":"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rankD_set","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rankD_set\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">rankD_set</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">arr</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UFNode\">UFNode</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">v</span> : <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UFNode\">UFNode</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">h</span> : <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">arr</span>.<a href=\"./Init/Prelude.html#Array.size\">size</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rankD\">rankD</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">arr</span>.<a href=\"./Init/Data/Array/Set.html#Array.set\">set</a></span> <span class=\"fn\">x</span> <span class=\"fn\">v</span> <span class=\"fn\">h</span>)</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#ite\">if</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#ite\">then</a> <span class=\"fn\"><span class=\"fn\">v</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UFNode.rank\">rank</a></span> <a href=\"./Init/Prelude.html#ite\">else</a> <span class=\"fn\"><a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rankD\">rankD</a> <span class=\"fn\">arr</span> <span class=\"fn\">i</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/78e1181c4752c7e10874d2ed5a6a15063f4a35b6/Batteries/Data/UnionFind/Basic.lean#L44-L49","name":"Batteries.UnionFind.parentD_set","line":44,"kind":"theorem","docLink":"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.parentD_set","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.parentD_set\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">parentD_set</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">arr</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UFNode\">UFNode</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">v</span> : <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UFNode\">UFNode</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">h</span> : <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">arr</span>.<a href=\"./Init/Prelude.html#Array.size\">size</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.parentD\">parentD</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">arr</span>.<a href=\"./Init/Data/Array/Set.html#Array.set\">set</a></span> <span class=\"fn\">x</span> <span class=\"fn\">v</span> <span class=\"fn\">h</span>)</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#ite\">if</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#ite\">then</a> <span class=\"fn\"><span class=\"fn\">v</span>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UFNode.parent\">parent</a></span> <a href=\"./Init/Prelude.html#ite\">else</a> <span class=\"fn\"><a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.parentD\">parentD</a> <span class=\"fn\">arr</span> <span class=\"fn\">i</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/78e1181c4752c7e10874d2ed5a6a15063f4a35b6/Batteries/Data/UnionFind/Basic.lean#L41-L42","name":"Batteries.UnionFind.lt_of_parentD","line":41,"kind":"theorem","docLink":"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.lt_of_parentD","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.lt_of_parentD\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">lt_of_parentD</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">arr</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UFNode\">UFNode</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.parentD\">parentD</a> <span class=\"fn\">arr</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">i</span> → <span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">arr</span>.<a href=\"./Init/Prelude.html#Array.size\">size</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/78e1181c4752c7e10874d2ed5a6a15063f4a35b6/Batteries/Data/UnionFind/Basic.lean#L39-L39","name":"Batteries.UnionFind.parentD_of_not_lt","line":39,"kind":"theorem","docLink":"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.parentD_of_not_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.parentD_of_not_lt\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">parentD_of_not_lt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">arr</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UFNode\">UFNode</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">arr</span>.<a href=\"./Init/Prelude.html#Array.size\">size</a></span> → <span class=\"fn\"><a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.parentD\">parentD</a> <span class=\"fn\">arr</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">i</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/78e1181c4752c7e10874d2ed5a6a15063f4a35b6/Batteries/Data/UnionFind/Basic.lean#L37-L37","name":"Batteries.UnionFind.rankD_eq","line":37,"kind":"theorem","docLink":"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rankD_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rankD_eq\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">rankD_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">arr</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UFNode\">UFNode</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">arr</span>.<a href=\"./Init/Prelude.html#Array.size\">size</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rankD\">rankD</a> <span class=\"fn\">arr</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">arr</span><a href=\"./Init/GetElem.html#GetElem.getElem\">[</a><span class=\"fn\">i</span><a href=\"./Init/GetElem.html#GetElem.getElem\">]</a>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UFNode.rank\">rank</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/78e1181c4752c7e10874d2ed5a6a15063f4a35b6/Batteries/Data/UnionFind/Basic.lean#L34-L35","name":"Batteries.UnionFind.parentD_eq","line":34,"kind":"theorem","docLink":"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.parentD_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.parentD_eq\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">parentD_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">arr</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UFNode\">UFNode</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">arr</span>.<a href=\"./Init/Prelude.html#Array.size\">size</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.parentD\">parentD</a> <span class=\"fn\">arr</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">arr</span><a href=\"./Init/GetElem.html#GetElem.getElem\">[</a><span class=\"fn\">i</span><a href=\"./Init/GetElem.html#GetElem.getElem\">]</a>.<a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UFNode.parent\">parent</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/78e1181c4752c7e10874d2ed5a6a15063f4a35b6/Batteries/Data/UnionFind/Basic.lean#L30-L32","name":"Batteries.UnionFind.rankD","line":30,"kind":"def","docLink":"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rankD","doc":"Rank of a union-find node, defaults to 0 when the node is a root "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.rankD\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">rankD</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">arr</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UFNode\">UFNode</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/78e1181c4752c7e10874d2ed5a6a15063f4a35b6/Batteries/Data/UnionFind/Basic.lean#L26-L28","name":"Batteries.UnionFind.parentD","line":26,"kind":"def","docLink":"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.parentD","doc":"Parent of a union-find node, defaults to self when the node is a root "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.parentD\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">parentD</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">arr</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UFNode\">UFNode</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/78e1181c4752c7e10874d2ed5a6a15063f4a35b6/Batteries/Data/UnionFind/Basic.lean#L22-L22","name":"Batteries.UFNode.rank","line":22,"kind":"def","docLink":"./Batteries/Data/UnionFind/Basic.html#Batteries.UFNode.rank","doc":"Rank of node "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UFNode.rank\"><span class=\"name\">Batteries</span>.<span class=\"name\">UFNode</span>.<span class=\"name\">rank</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UFNode\">UFNode</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/78e1181c4752c7e10874d2ed5a6a15063f4a35b6/Batteries/Data/UnionFind/Basic.lean#L20-L20","name":"Batteries.UFNode.parent","line":20,"kind":"def","docLink":"./Batteries/Data/UnionFind/Basic.html#Batteries.UFNode.parent","doc":"Parent of node "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UFNode.parent\"><span class=\"name\">Batteries</span>.<span class=\"name\">UFNode</span>.<span class=\"name\">parent</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UFNode\">UFNode</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/78e1181c4752c7e10874d2ed5a6a15063f4a35b6/Batteries/Data/UnionFind/Basic.lean#L18-L18","name":"Batteries.UFNode.mk","line":18,"kind":"ctor","docLink":"./Batteries/Data/UnionFind/Basic.html#Batteries.UFNode.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UFNode.mk\"><span class=\"name\">Batteries</span>.<span class=\"name\">UFNode</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">parent </span><span class=\"fn\">rank</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UFNode\">UFNode</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/78e1181c4752c7e10874d2ed5a6a15063f4a35b6/Batteries/Data/UnionFind/Basic.lean#L17-L22","name":"Batteries.UFNode","line":17,"kind":"structure","docLink":"./Batteries/Data/UnionFind/Basic.html#Batteries.UFNode","doc":"Union-find node type "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UFNode\"><span class=\"name\">Batteries</span>.<span class=\"name\">UFNode</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/78e1181c4752c7e10874d2ed5a6a15063f4a35b6/Batteries/Data/UnionFind/Basic.lean#L12-L13","name":"Batteries.UnionFind.panicWith","line":12,"kind":"def","docLink":"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.panicWith","doc":"**Alias** of `Batteries.panicWith`.\n\n---\n\nPanic with a specific default value `v`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/UnionFind/Basic.html#Batteries.UnionFind.panicWith\"><span class=\"name\">Batteries</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">panicWith</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Sort</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">v</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">msg</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">α</span></div></div>"}]}