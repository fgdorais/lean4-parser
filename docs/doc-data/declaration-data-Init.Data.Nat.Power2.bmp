{"name":"Init.Data.Nat.Power2","instances":[],"imports":["Init.Data.Nat.Linear"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/Nat/Power2.lean#L67-L71","name":"Nat.isPowerOfTwo_nextPowerOfTwo.isPowerOfTwo_go","line":67,"kind":"theorem","docLink":"./Init/Data/Nat/Power2.html#Nat.isPowerOfTwo_nextPowerOfTwo.isPowerOfTwo_go","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Power2.html#Nat.isPowerOfTwo_nextPowerOfTwo.isPowerOfTwo_go\"><span class=\"name\">Nat</span>.<span class=\"name\">isPowerOfTwo_nextPowerOfTwo</span>.<span class=\"name\">isPowerOfTwo_go</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n </span><span class=\"fn\">power</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h₁</span> : <span class=\"fn\">power</span> <a href=\"./Init/Prelude.html#GT.gt\">&gt;</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h₂</span> : <span class=\"fn\"><span class=\"fn\">power</span>.<a href=\"./Init/Data/Nat/Power2.html#Nat.isPowerOfTwo\">isPowerOfTwo</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Init/Data/Nat/Power2.html#Nat.nextPowerOfTwo.go\">nextPowerOfTwo.go</a> <span class=\"fn\">n</span> <span class=\"fn\">power</span> <span class=\"fn\">h₁</span>)</span>.<a href=\"./Init/Data/Nat/Power2.html#Nat.isPowerOfTwo\">isPowerOfTwo</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/Nat/Power2.lean#L63-L73","name":"Nat.isPowerOfTwo_nextPowerOfTwo","line":63,"kind":"theorem","docLink":"./Init/Data/Nat/Power2.html#Nat.isPowerOfTwo_nextPowerOfTwo","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Power2.html#Nat.isPowerOfTwo_nextPowerOfTwo\"><span class=\"name\">Nat</span>.<span class=\"name\">isPowerOfTwo_nextPowerOfTwo</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/Nat/Power2.html#Nat.nextPowerOfTwo\">nextPowerOfTwo</a></span>.<a href=\"./Init/Data/Nat/Power2.html#Nat.isPowerOfTwo\">isPowerOfTwo</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/Nat/Power2.lean#L57-L61","name":"Nat.pos_of_isPowerOfTwo","line":57,"kind":"theorem","docLink":"./Init/Data/Nat/Power2.html#Nat.pos_of_isPowerOfTwo","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Power2.html#Nat.pos_of_isPowerOfTwo\"><span class=\"name\">Nat</span>.<span class=\"name\">pos_of_isPowerOfTwo</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/Nat/Power2.html#Nat.isPowerOfTwo\">isPowerOfTwo</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#GT.gt\">&gt;</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/Nat/Power2.lean#L54-L55","name":"Nat.mul2_isPowerOfTwo_of_isPowerOfTwo","line":54,"kind":"def","docLink":"./Init/Data/Nat/Power2.html#Nat.mul2_isPowerOfTwo_of_isPowerOfTwo","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Power2.html#Nat.mul2_isPowerOfTwo_of_isPowerOfTwo\"><span class=\"name\">Nat</span>.<span class=\"name\">mul2_isPowerOfTwo_of_isPowerOfTwo</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/Nat/Power2.html#Nat.isPowerOfTwo\">isPowerOfTwo</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">2</span>).<a href=\"./Init/Data/Nat/Power2.html#Nat.isPowerOfTwo\">isPowerOfTwo</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/Nat/Power2.lean#L50-L52","name":"Nat.isPowerOfTwo_mul_two_of_isPowerOfTwo","line":50,"kind":"theorem","docLink":"./Init/Data/Nat/Power2.html#Nat.isPowerOfTwo_mul_two_of_isPowerOfTwo","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Power2.html#Nat.isPowerOfTwo_mul_two_of_isPowerOfTwo\"><span class=\"name\">Nat</span>.<span class=\"name\">isPowerOfTwo_mul_two_of_isPowerOfTwo</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/Nat/Power2.html#Nat.isPowerOfTwo\">isPowerOfTwo</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">2</span>).<a href=\"./Init/Data/Nat/Power2.html#Nat.isPowerOfTwo\">isPowerOfTwo</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/Nat/Power2.lean#L47-L48","name":"Nat.one_isPowerOfTwo","line":47,"kind":"def","docLink":"./Init/Data/Nat/Power2.html#Nat.one_isPowerOfTwo","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Power2.html#Nat.one_isPowerOfTwo\"><span class=\"name\">Nat</span>.<span class=\"name\">one_isPowerOfTwo</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Power2.html#Nat.isPowerOfTwo\">isPowerOfTwo</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/Nat/Power2.lean#L44-L45","name":"Nat.isPowerOfTwo_one","line":44,"kind":"theorem","docLink":"./Init/Data/Nat/Power2.html#Nat.isPowerOfTwo_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Power2.html#Nat.isPowerOfTwo_one\"><span class=\"name\">Nat</span>.<span class=\"name\">isPowerOfTwo_one</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Power2.html#Nat.isPowerOfTwo\">isPowerOfTwo</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/Nat/Power2.lean#L39-L42","name":"Nat.isPowerOfTwo","line":39,"kind":"def","docLink":"./Init/Data/Nat/Power2.html#Nat.isPowerOfTwo","doc":"A natural number `n` is a power of two if there exists some `k : Nat` such that `n = 2 ^ k`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Power2.html#Nat.isPowerOfTwo\"><span class=\"name\">Nat</span>.<span class=\"name\">isPowerOfTwo</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/Nat/Power2.lean#L31-L35","name":"Nat.nextPowerOfTwo.go","line":31,"kind":"def","docLink":"./Init/Data/Nat/Power2.html#Nat.nextPowerOfTwo.go","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Power2.html#Nat.nextPowerOfTwo.go\"><span class=\"name\">Nat</span>.<span class=\"name\">nextPowerOfTwo</span>.<span class=\"name\">go</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n </span><span class=\"fn\">power</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">power</span> <a href=\"./Init/Prelude.html#GT.gt\">&gt;</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/Nat/Power2.lean#L18-L37","name":"Nat.nextPowerOfTwo","line":18,"kind":"def","docLink":"./Init/Data/Nat/Power2.html#Nat.nextPowerOfTwo","doc":"Returns the least power of two that's greater than or equal to `n`.\n\nExamples:\n* `Nat.nextPowerOfTwo 0 = 1`\n* `Nat.nextPowerOfTwo 1 = 1`\n* `Nat.nextPowerOfTwo 2 = 2`\n* `Nat.nextPowerOfTwo 3 = 4`\n* `Nat.nextPowerOfTwo 5 = 8`\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Power2.html#Nat.nextPowerOfTwo\"><span class=\"name\">Nat</span>.<span class=\"name\">nextPowerOfTwo</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/Nat/Power2.lean#L13-L16","name":"Nat.nextPowerOfTwo_dec","line":13,"kind":"theorem","docLink":"./Init/Data/Nat/Power2.html#Nat.nextPowerOfTwo_dec","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Power2.html#Nat.nextPowerOfTwo_dec\"><span class=\"name\">Nat</span>.<span class=\"name\">nextPowerOfTwo_dec</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n </span><span class=\"fn\">power</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h₁</span> : <span class=\"fn\">power</span> <a href=\"./Init/Prelude.html#GT.gt\">&gt;</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h₂</span> : <span class=\"fn\">power</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">n</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">power</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">power</span></div></div>"}]}