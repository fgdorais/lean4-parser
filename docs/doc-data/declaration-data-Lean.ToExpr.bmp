{"name":"Lean.ToExpr","instances":[{"typeNames":["Nat"],"name":"Lean.instToExprNat","className":"Lean.ToExpr"},{"typeNames":["Int"],"name":"Lean.instToExprInt","className":"Lean.ToExpr"},{"typeNames":["Fin"],"name":"Lean.instToExprFin","className":"Lean.ToExpr"},{"typeNames":["BitVec"],"name":"Lean.instToExprBitVec","className":"Lean.ToExpr"},{"typeNames":["UInt8"],"name":"Lean.instToExprUInt8","className":"Lean.ToExpr"},{"typeNames":["UInt16"],"name":"Lean.instToExprUInt16","className":"Lean.ToExpr"},{"typeNames":["UInt32"],"name":"Lean.instToExprUInt32","className":"Lean.ToExpr"},{"typeNames":["UInt64"],"name":"Lean.instToExprUInt64","className":"Lean.ToExpr"},{"typeNames":["USize"],"name":"Lean.instToExprUSize","className":"Lean.ToExpr"},{"typeNames":["Int8"],"name":"Lean.instToExprInt8","className":"Lean.ToExpr"},{"typeNames":["Int16"],"name":"Lean.instToExprInt16","className":"Lean.ToExpr"},{"typeNames":["Int32"],"name":"Lean.instToExprInt32","className":"Lean.ToExpr"},{"typeNames":["Int64"],"name":"Lean.instToExprInt64","className":"Lean.ToExpr"},{"typeNames":["ISize"],"name":"Lean.instToExprISize","className":"Lean.ToExpr"},{"typeNames":["Bool"],"name":"Lean.instToExprBool","className":"Lean.ToExpr"},{"typeNames":["Char"],"name":"Lean.instToExprChar","className":"Lean.ToExpr"},{"typeNames":["String"],"name":"Lean.instToExprString","className":"Lean.ToExpr"},{"typeNames":["Unit"],"name":"Lean.instToExprUnit","className":"Lean.ToExpr"},{"typeNames":["System.FilePath"],"name":"Lean.instToExprFilePath","className":"Lean.ToExpr"},{"typeNames":["Lean.Name"],"name":"Lean.instToExprName","className":"Lean.ToExpr"},{"typeNames":["Option"],"name":"Lean.instToExprOptionOfToLevel","className":"Lean.ToExpr"},{"typeNames":["List"],"name":"Lean.instToExprListOfToLevel","className":"Lean.ToExpr"},{"typeNames":["Array"],"name":"Lean.instToExprArrayOfToLevel","className":"Lean.ToExpr"},{"typeNames":["Prod"],"name":"Lean.instToExprProdOfToLevel","className":"Lean.ToExpr"},{"typeNames":["Lean.Literal"],"name":"Lean.instToExprLiteral","className":"Lean.ToExpr"},{"typeNames":["Lean.FVarId"],"name":"Lean.instToExprFVarId","className":"Lean.ToExpr"},{"typeNames":["Lean.Syntax.Preresolved"],"name":"Lean.instToExprPreresolved","className":"Lean.ToExpr"}],"imports":["Lean.Expr","Lean.ToLevel","Init.Data.BitVec.Basic","Init.Data.SInt.Basic"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/ToExpr.lean#L259-L265","name":"Lean.Expr.toCtorIfLit","line":259,"kind":"def","docLink":"./Lean/ToExpr.html#Lean.Expr.toCtorIfLit","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ToExpr.html#Lean.Expr.toCtorIfLit\"><span class=\"name\">Lean</span>.<span class=\"name\">Expr</span>.<span class=\"name\">toCtorIfLit</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a> → <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/ToExpr.lean#L253-L257","name":"Lean.instToExprPreresolved","line":253,"kind":"instance","docLink":"./Lean/ToExpr.html#Lean.instToExprPreresolved","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ToExpr.html#Lean.instToExprPreresolved\"><span class=\"name\">Lean</span>.<span class=\"name\">instToExprPreresolved</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">ToExpr</a> <a href=\"./Init/Prelude.html#Lean.Syntax.Preresolved\">Syntax.Preresolved</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/ToExpr.lean#L249-L251","name":"Lean.instToExprFVarId","line":249,"kind":"instance","docLink":"./Lean/ToExpr.html#Lean.instToExprFVarId","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ToExpr.html#Lean.instToExprFVarId\"><span class=\"name\">Lean</span>.<span class=\"name\">instToExprFVarId</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">ToExpr</a> <a href=\"./Lean/Expr.html#Lean.FVarId\">FVarId</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/ToExpr.lean#L243-L247","name":"Lean.instToExprLiteral","line":243,"kind":"instance","docLink":"./Lean/ToExpr.html#Lean.instToExprLiteral","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ToExpr.html#Lean.instToExprLiteral\"><span class=\"name\">Lean</span>.<span class=\"name\">instToExprLiteral</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">ToExpr</a> <a href=\"./Lean/Expr.html#Lean.Literal\">Literal</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/ToExpr.lean#L236-L241","name":"Lean.instToExprProdOfToLevel","line":236,"kind":"instance","docLink":"./Lean/ToExpr.html#Lean.instToExprProdOfToLevel","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ToExpr.html#Lean.instToExprProdOfToLevel\"><span class=\"name\">Lean</span>.<span class=\"name\">instToExprProdOfToLevel</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<a href=\"./Lean/ToLevel.html#Lean.ToLevel\">ToLevel</a>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<a href=\"./Lean/ToLevel.html#Lean.ToLevel\">ToLevel</a>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">ToExpr</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">ToExpr</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">ToExpr</a> (<span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">β</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/ToExpr.lean#L231-L234","name":"Lean.instToExprArrayOfToLevel","line":231,"kind":"instance","docLink":"./Lean/ToExpr.html#Lean.instToExprArrayOfToLevel","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ToExpr.html#Lean.instToExprArrayOfToLevel\"><span class=\"name\">Lean</span>.<span class=\"name\">instToExprArrayOfToLevel</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<a href=\"./Lean/ToLevel.html#Lean.ToLevel\">ToLevel</a>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">ToExpr</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">ToExpr</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">α</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/ToExpr.lean#L224-L229","name":"Lean.instToExprListOfToLevel","line":224,"kind":"instance","docLink":"./Lean/ToExpr.html#Lean.instToExprListOfToLevel","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ToExpr.html#Lean.instToExprListOfToLevel\"><span class=\"name\">Lean</span>.<span class=\"name\">instToExprListOfToLevel</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<a href=\"./Lean/ToLevel.html#Lean.ToLevel\">ToLevel</a>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">ToExpr</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">ToExpr</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/ToExpr.lean#L213-L218","name":"Lean.instToExprOptionOfToLevel","line":213,"kind":"instance","docLink":"./Lean/ToExpr.html#Lean.instToExprOptionOfToLevel","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ToExpr.html#Lean.instToExprOptionOfToLevel\"><span class=\"name\">Lean</span>.<span class=\"name\">instToExprOptionOfToLevel</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<a href=\"./Lean/ToLevel.html#Lean.ToLevel\">ToLevel</a>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">ToExpr</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">ToExpr</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">α</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/ToExpr.lean#L209-L211","name":"Lean.instToExprName","line":209,"kind":"instance","docLink":"./Lean/ToExpr.html#Lean.instToExprName","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ToExpr.html#Lean.instToExprName\"><span class=\"name\">Lean</span>.<span class=\"name\">instToExprName</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">ToExpr</a> <a href=\"./Init/Prelude.html#Lean.Name\">Name</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/ToExpr.lean#L182-L184","name":"Lean.instToExprFilePath","line":182,"kind":"instance","docLink":"./Lean/ToExpr.html#Lean.instToExprFilePath","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ToExpr.html#Lean.instToExprFilePath\"><span class=\"name\">Lean</span>.<span class=\"name\">instToExprFilePath</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">ToExpr</a> <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/ToExpr.lean#L178-L180","name":"Lean.instToExprUnit","line":178,"kind":"instance","docLink":"./Lean/ToExpr.html#Lean.instToExprUnit","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ToExpr.html#Lean.instToExprUnit\"><span class=\"name\">Lean</span>.<span class=\"name\">instToExprUnit</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">ToExpr</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/ToExpr.lean#L174-L176","name":"Lean.instToExprString","line":174,"kind":"instance","docLink":"./Lean/ToExpr.html#Lean.instToExprString","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ToExpr.html#Lean.instToExprString\"><span class=\"name\">Lean</span>.<span class=\"name\">instToExprString</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">ToExpr</a> <a href=\"./Init/Prelude.html#String\">String</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/ToExpr.lean#L170-L172","name":"Lean.instToExprChar","line":170,"kind":"instance","docLink":"./Lean/ToExpr.html#Lean.instToExprChar","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ToExpr.html#Lean.instToExprChar\"><span class=\"name\">Lean</span>.<span class=\"name\">instToExprChar</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">ToExpr</a> <a href=\"./Init/Prelude.html#Char\">Char</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/ToExpr.lean#L166-L168","name":"Lean.instToExprBool","line":166,"kind":"instance","docLink":"./Lean/ToExpr.html#Lean.instToExprBool","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ToExpr.html#Lean.instToExprBool\"><span class=\"name\">Lean</span>.<span class=\"name\">instToExprBool</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">ToExpr</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/ToExpr.lean#L161-L164","name":"Lean.instToExprISize.mkNat","line":161,"kind":"def","docLink":"./Lean/ToExpr.html#Lean.instToExprISize.mkNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ToExpr.html#Lean.instToExprISize.mkNat\"><span class=\"name\">Lean</span>.<span class=\"name\">instToExprISize</span>.<span class=\"name\">mkNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/ToExpr.lean#L153-L164","name":"Lean.instToExprISize","line":153,"kind":"instance","docLink":"./Lean/ToExpr.html#Lean.instToExprISize","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ToExpr.html#Lean.instToExprISize\"><span class=\"name\">Lean</span>.<span class=\"name\">instToExprISize</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">ToExpr</a> <a href=\"./Init/Data/SInt/Basic.html#ISize\">ISize</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/ToExpr.lean#L148-L151","name":"Lean.instToExprInt64.mkNat","line":148,"kind":"def","docLink":"./Lean/ToExpr.html#Lean.instToExprInt64.mkNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ToExpr.html#Lean.instToExprInt64.mkNat\"><span class=\"name\">Lean</span>.<span class=\"name\">instToExprInt64</span>.<span class=\"name\">mkNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/ToExpr.lean#L140-L151","name":"Lean.instToExprInt64","line":140,"kind":"instance","docLink":"./Lean/ToExpr.html#Lean.instToExprInt64","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ToExpr.html#Lean.instToExprInt64\"><span class=\"name\">Lean</span>.<span class=\"name\">instToExprInt64</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">ToExpr</a> <a href=\"./Init/Data/SInt/Basic.html#Int64\">Int64</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/ToExpr.lean#L135-L138","name":"Lean.instToExprInt32.mkNat","line":135,"kind":"def","docLink":"./Lean/ToExpr.html#Lean.instToExprInt32.mkNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ToExpr.html#Lean.instToExprInt32.mkNat\"><span class=\"name\">Lean</span>.<span class=\"name\">instToExprInt32</span>.<span class=\"name\">mkNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/ToExpr.lean#L127-L138","name":"Lean.instToExprInt32","line":127,"kind":"instance","docLink":"./Lean/ToExpr.html#Lean.instToExprInt32","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ToExpr.html#Lean.instToExprInt32\"><span class=\"name\">Lean</span>.<span class=\"name\">instToExprInt32</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">ToExpr</a> <a href=\"./Init/Data/SInt/Basic.html#Int32\">Int32</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/ToExpr.lean#L122-L125","name":"Lean.instToExprInt16.mkNat","line":122,"kind":"def","docLink":"./Lean/ToExpr.html#Lean.instToExprInt16.mkNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ToExpr.html#Lean.instToExprInt16.mkNat\"><span class=\"name\">Lean</span>.<span class=\"name\">instToExprInt16</span>.<span class=\"name\">mkNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/ToExpr.lean#L114-L125","name":"Lean.instToExprInt16","line":114,"kind":"instance","docLink":"./Lean/ToExpr.html#Lean.instToExprInt16","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ToExpr.html#Lean.instToExprInt16\"><span class=\"name\">Lean</span>.<span class=\"name\">instToExprInt16</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">ToExpr</a> <a href=\"./Init/Data/SInt/Basic.html#Int16\">Int16</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/ToExpr.lean#L109-L112","name":"Lean.instToExprInt8.mkNat","line":109,"kind":"def","docLink":"./Lean/ToExpr.html#Lean.instToExprInt8.mkNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ToExpr.html#Lean.instToExprInt8.mkNat\"><span class=\"name\">Lean</span>.<span class=\"name\">instToExprInt8</span>.<span class=\"name\">mkNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/ToExpr.lean#L101-L112","name":"Lean.instToExprInt8","line":101,"kind":"instance","docLink":"./Lean/ToExpr.html#Lean.instToExprInt8","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ToExpr.html#Lean.instToExprInt8\"><span class=\"name\">Lean</span>.<span class=\"name\">instToExprInt8</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">ToExpr</a> <a href=\"./Init/Data/SInt/Basic.html#Int8\">Int8</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/ToExpr.lean#L94-L99","name":"Lean.instToExprUSize","line":94,"kind":"instance","docLink":"./Lean/ToExpr.html#Lean.instToExprUSize","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ToExpr.html#Lean.instToExprUSize\"><span class=\"name\">Lean</span>.<span class=\"name\">instToExprUSize</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">ToExpr</a> <a href=\"./Init/Prelude.html#USize\">USize</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/ToExpr.lean#L87-L92","name":"Lean.instToExprUInt64","line":87,"kind":"instance","docLink":"./Lean/ToExpr.html#Lean.instToExprUInt64","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ToExpr.html#Lean.instToExprUInt64\"><span class=\"name\">Lean</span>.<span class=\"name\">instToExprUInt64</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">ToExpr</a> <a href=\"./Init/Prelude.html#UInt64\">UInt64</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/ToExpr.lean#L80-L85","name":"Lean.instToExprUInt32","line":80,"kind":"instance","docLink":"./Lean/ToExpr.html#Lean.instToExprUInt32","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ToExpr.html#Lean.instToExprUInt32\"><span class=\"name\">Lean</span>.<span class=\"name\">instToExprUInt32</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">ToExpr</a> <a href=\"./Init/Prelude.html#UInt32\">UInt32</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/ToExpr.lean#L73-L78","name":"Lean.instToExprUInt16","line":73,"kind":"instance","docLink":"./Lean/ToExpr.html#Lean.instToExprUInt16","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ToExpr.html#Lean.instToExprUInt16\"><span class=\"name\">Lean</span>.<span class=\"name\">instToExprUInt16</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">ToExpr</a> <a href=\"./Init/Prelude.html#UInt16\">UInt16</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/ToExpr.lean#L66-L71","name":"Lean.instToExprUInt8","line":66,"kind":"instance","docLink":"./Lean/ToExpr.html#Lean.instToExprUInt8","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ToExpr.html#Lean.instToExprUInt8\"><span class=\"name\">Lean</span>.<span class=\"name\">instToExprUInt8</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">ToExpr</a> <a href=\"./Init/Prelude.html#UInt8\">UInt8</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/ToExpr.lean#L61-L64","name":"Lean.instToExprBitVec","line":61,"kind":"instance","docLink":"./Lean/ToExpr.html#Lean.instToExprBitVec","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ToExpr.html#Lean.instToExprBitVec\"><span class=\"name\">Lean</span>.<span class=\"name\">instToExprBitVec</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">ToExpr</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#BitVec\">BitVec</a> <span class=\"fn\">n</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/ToExpr.lean#L53-L59","name":"Lean.instToExprFin","line":53,"kind":"instance","docLink":"./Lean/ToExpr.html#Lean.instToExprFin","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ToExpr.html#Lean.instToExprFin\"><span class=\"name\">Lean</span>.<span class=\"name\">instToExprFin</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">ToExpr</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">n</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/ToExpr.lean#L48-L51","name":"Lean.instToExprInt.mkNat","line":48,"kind":"def","docLink":"./Lean/ToExpr.html#Lean.instToExprInt.mkNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ToExpr.html#Lean.instToExprInt.mkNat\"><span class=\"name\">Lean</span>.<span class=\"name\">instToExprInt</span>.<span class=\"name\">mkNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/ToExpr.lean#L40-L51","name":"Lean.instToExprInt","line":40,"kind":"instance","docLink":"./Lean/ToExpr.html#Lean.instToExprInt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ToExpr.html#Lean.instToExprInt\"><span class=\"name\">Lean</span>.<span class=\"name\">instToExprInt</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">ToExpr</a> <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/ToExpr.lean#L36-L38","name":"Lean.instToExprNat","line":36,"kind":"instance","docLink":"./Lean/ToExpr.html#Lean.instToExprNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ToExpr.html#Lean.instToExprNat\"><span class=\"name\">Lean</span>.<span class=\"name\">instToExprNat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">ToExpr</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/ToExpr.lean#L32-L32","name":"Lean.ToExpr.toTypeExpr","line":32,"kind":"def","docLink":"./Lean/ToExpr.html#Lean.ToExpr.toTypeExpr","doc":"Expression representing the type `α` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ToExpr.html#Lean.ToExpr.toTypeExpr\"><span class=\"name\">Lean</span>.<span class=\"name\">ToExpr</span>.<span class=\"name\">toTypeExpr</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">ToExpr</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/ToExpr.lean#L30-L30","name":"Lean.ToExpr.toExpr","line":30,"kind":"def","docLink":"./Lean/ToExpr.html#Lean.ToExpr.toExpr","doc":"Convert a value `a : α` into an expression that denotes `a` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ToExpr.html#Lean.ToExpr.toExpr\"><span class=\"name\">Lean</span>.<span class=\"name\">ToExpr</span>.<span class=\"name\">toExpr</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">ToExpr</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/ToExpr.lean#L28-L28","name":"Lean.ToExpr.mk","line":28,"kind":"ctor","docLink":"./Lean/ToExpr.html#Lean.ToExpr.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ToExpr.html#Lean.ToExpr.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">ToExpr</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">toExpr</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">toTypeExpr</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">ToExpr</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/ToExpr.lean#L15-L32","name":"Lean.ToExpr","line":15,"kind":"class","docLink":"./Lean/ToExpr.html#Lean.ToExpr","doc":"We use the `ToExpr` type class to convert values of type `α` into\nexpressions that denote these values in Lean.\n\nExamples:\n```\ntoExpr true = .const ``Bool.true []\n\ntoTypeExpr Bool = .const ``Bool []\n```\n\nSee also `ToLevel` for representing universe levels as `Level` expressions.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">class</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ToExpr.html#Lean.ToExpr\"><span class=\"name\">Lean</span>.<span class=\"name\">ToExpr</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u</div></div>"}]}