{"name":"Lean.Meta.Tactic.Grind.Arith.Cutsat.Inv","instances":[],"imports":["Lean.Meta.Tactic.Grind.Arith.Cutsat.Util","Lean.Meta.Tactic.Grind.Arith.Cutsat.Var"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/Inv.lean#L110-L117","name":"Lean.Meta.Grind.Arith.Cutsat.checkInvariants","line":110,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Inv.html#Lean.Meta.Grind.Arith.Cutsat.checkInvariants","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Inv.html#Lean.Meta.Grind.Arith.Cutsat.checkInvariants\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">checkInvariants</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.GoalM\">GoalM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/Inv.lean#L100-L108","name":"Lean.Meta.Grind.Arith.Cutsat.checkDiseqCnstrs","line":100,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Inv.html#Lean.Meta.Grind.Arith.Cutsat.checkDiseqCnstrs","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Inv.html#Lean.Meta.Grind.Arith.Cutsat.checkDiseqCnstrs\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">checkDiseqCnstrs</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.GoalM\">GoalM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/Inv.lean#L96-L98","name":"Lean.Meta.Grind.Arith.Cutsat.checkElimStack","line":96,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Inv.html#Lean.Meta.Grind.Arith.Cutsat.checkElimStack","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Inv.html#Lean.Meta.Grind.Arith.Cutsat.checkElimStack\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">checkElimStack</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.GoalM\">GoalM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/Inv.lean#L84-L94","name":"Lean.Meta.Grind.Arith.Cutsat.checkElimEqs","line":84,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Inv.html#Lean.Meta.Grind.Arith.Cutsat.checkElimEqs","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Inv.html#Lean.Meta.Grind.Arith.Cutsat.checkElimEqs\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">checkElimEqs</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.GoalM\">GoalM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/Inv.lean#L72-L82","name":"Lean.Meta.Grind.Arith.Cutsat.checkVars","line":72,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Inv.html#Lean.Meta.Grind.Arith.Cutsat.checkVars","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Inv.html#Lean.Meta.Grind.Arith.Cutsat.checkVars\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">checkVars</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.GoalM\">GoalM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/Inv.lean#L62-L70","name":"Lean.Meta.Grind.Arith.Cutsat.checkDvds","line":62,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Inv.html#Lean.Meta.Grind.Arith.Cutsat.checkDvds","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Inv.html#Lean.Meta.Grind.Arith.Cutsat.checkDvds\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">checkDvds</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.GoalM\">GoalM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/Inv.lean#L57-L60","name":"Lean.Meta.Grind.Arith.Cutsat.checkUppers","line":57,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Inv.html#Lean.Meta.Grind.Arith.Cutsat.checkUppers","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Inv.html#Lean.Meta.Grind.Arith.Cutsat.checkUppers\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">checkUppers</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.GoalM\">GoalM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/Inv.lean#L52-L55","name":"Lean.Meta.Grind.Arith.Cutsat.checkLowers","line":52,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Inv.html#Lean.Meta.Grind.Arith.Cutsat.checkLowers","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Inv.html#Lean.Meta.Grind.Arith.Cutsat.checkLowers\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">checkLowers</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.GoalM\">GoalM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/Inv.lean#L42-L50","name":"Lean.Meta.Grind.Arith.Cutsat.checkLeCnstrs","line":42,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Inv.html#Lean.Meta.Grind.Arith.Cutsat.checkLeCnstrs","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Inv.html#Lean.Meta.Grind.Arith.Cutsat.checkLeCnstrs\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">checkLeCnstrs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">css</span> : <span class=\"fn\"><a href=\"./Lean/Data/PersistentArray.html#Lean.PArray\">PArray</a> <span class=\"fn\">(<a href=\"./Lean/Data/PersistentArray.html#Lean.PArray\">PArray</a> <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Types.html#Lean.Meta.Grind.Arith.Cutsat.LeCnstr\">LeCnstr</a>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">isLower</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.GoalM\">GoalM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/Inv.lean#L33-L40","name":"Int.Linear.Poly.checkCnstrOf","line":33,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Inv.html#Int.Linear.Poly.checkCnstrOf","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Inv.html#Int.Linear.Poly.checkCnstrOf\"><span class=\"name\">Int</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Poly</span>.<span class=\"name\">checkCnstrOf</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Init/Data/Int/Linear.html#Int.Linear.Poly\">Poly</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Init/Data/Int/Linear.html#Int.Linear.Var\">Var</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.GoalM\">Lean.Meta.Grind.GoalM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/Inv.lean#L27-L30","name":"Int.Linear.Poly.checkOccs.go","line":27,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Inv.html#Int.Linear.Poly.checkOccs.go","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Inv.html#Int.Linear.Poly.checkOccs.go\"><span class=\"name\">Int</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Poly</span>.<span class=\"name\">checkOccs</span>.<span class=\"name\">go</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">y</span> : <a href=\"./Init/Data/Int/Linear.html#Int.Linear.Var\">Var</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Init/Data/Int/Linear.html#Int.Linear.Poly\">Poly</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.GoalM\">Lean.Meta.Grind.GoalM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/Inv.lean#L25-L31","name":"Int.Linear.Poly.checkOccs","line":25,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Inv.html#Int.Linear.Poly.checkOccs","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Inv.html#Int.Linear.Poly.checkOccs\"><span class=\"name\">Int</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Poly</span>.<span class=\"name\">checkOccs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Init/Data/Int/Linear.html#Int.Linear.Poly\">Poly</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.GoalM\">Lean.Meta.Grind.GoalM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/Inv.lean#L20-L23","name":"Int.Linear.Poly.checkNoElimVars","line":20,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Inv.html#Int.Linear.Poly.checkNoElimVars","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Inv.html#Int.Linear.Poly.checkNoElimVars\"><span class=\"name\">Int</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Poly</span>.<span class=\"name\">checkNoElimVars</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Init/Data/Int/Linear.html#Int.Linear.Poly\">Poly</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.GoalM\">Lean.Meta.Grind.GoalM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/Inv.lean#L11-L14","name":"Int.Linear.Poly.checkCoeffs","line":11,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Inv.html#Int.Linear.Poly.checkCoeffs","doc":"Returns `true` if all coefficients are not `0`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Inv.html#Int.Linear.Poly.checkCoeffs\"><span class=\"name\">Int</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Poly</span>.<span class=\"name\">checkCoeffs</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Int/Linear.html#Int.Linear.Poly\">Poly</a> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"}]}