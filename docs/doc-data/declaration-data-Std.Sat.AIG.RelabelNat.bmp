{"name":"Std.Sat.AIG.RelabelNat","instances":[],"imports":["Std.Sat.AIG.Relabel"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Sat/AIG/RelabelNat.lean#L375-L381","name":"Std.Sat.AIG.Entrypoint.relabelNat_unsat_iff","line":375,"kind":"theorem","docLink":"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.Entrypoint.relabelNat_unsat_iff","doc":"`relabelNat` preserves unsatisfiablility.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.Entrypoint.relabelNat_unsat_iff\"><span class=\"name\">Std</span>.<span class=\"name\">Sat</span>.<span class=\"name\">AIG</span>.<span class=\"name\">Entrypoint</span>.<span class=\"name\">relabelNat_unsat_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">entry</span> : <span class=\"fn\"><a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.Entrypoint\">Entrypoint</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">entry</span>.<a href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.Entrypoint.relabelNat\">relabelNat</a></span>.<a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.Entrypoint.Unsat\">Unsat</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">entry</span>.<a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.Entrypoint.Unsat\">Unsat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Sat/AIG/RelabelNat.lean#L364-L373","name":"Std.Sat.AIG.Entrypoint.relabelNat","line":364,"kind":"def","docLink":"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.Entrypoint.relabelNat","doc":"Map an `Entrypoint` with arbitrary atom identifiers to one that uses `Nat` as atom identifiers.\nThis is useful for preparing an `AIG` for CNF translation if it doesn't already use `Nat`\nidentifiers.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.Entrypoint.relabelNat\"><span class=\"name\">Std</span>.<span class=\"name\">Sat</span>.<span class=\"name\">AIG</span>.<span class=\"name\">Entrypoint</span>.<span class=\"name\">relabelNat</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">entry</span> : <span class=\"fn\"><a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.Entrypoint\">Entrypoint</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.Entrypoint\">Entrypoint</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Sat/AIG/RelabelNat.lean#L355-L362","name":"Std.Sat.AIG.Entrypoint.relabelNat'","line":355,"kind":"def","docLink":"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.Entrypoint.relabelNat'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.Entrypoint.relabelNat'\"><span class=\"name\">Std</span>.<span class=\"name\">Sat</span>.<span class=\"name\">AIG</span>.<span class=\"name\">Entrypoint</span>.<span class=\"name\">relabelNat'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">entry</span> : <span class=\"fn\"><a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.Entrypoint\">Entrypoint</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.Entrypoint\">Entrypoint</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Std/Data/HashMap/Basic.html#Std.HashMap\">HashMap</a> <span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Sat/AIG/RelabelNat.lean#L328-L351","name":"Std.Sat.AIG.relabelNat_unsat_iff","line":328,"kind":"theorem","docLink":"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.relabelNat_unsat_iff","doc":"`relabelNat` preserves unsatisfiablility.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.relabelNat_unsat_iff\"><span class=\"name\">Std</span>.<span class=\"name\">Sat</span>.<span class=\"name\">AIG</span>.<span class=\"name\">relabelNat_unsat_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">idx</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">invert</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">aig</span> : <span class=\"fn\"><a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG\">AIG</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">hidx1</span> : <span class=\"fn\">idx</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">aig</span>.<a href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.relabelNat\">relabelNat</a></span>.<a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.decls\">decls</a></span>.<a href=\"./Init/Prelude.html#Array.size\">size</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">hidx2</span> : <span class=\"fn\">idx</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">aig</span>.<a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.decls\">decls</a></span>.<a href=\"./Init/Prelude.html#Array.size\">size</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">aig</span>.<a href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.relabelNat\">relabelNat</a></span>.<a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.UnsatAt\">UnsatAt</a></span> <span class=\"fn\">idx</span> <span class=\"fn\">invert</span> <span class=\"fn\">hidx1</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">aig</span>.<a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.UnsatAt\">UnsatAt</a></span> <span class=\"fn\">idx</span> <span class=\"fn\">invert</span> <span class=\"fn\">hidx2</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Sat/AIG/RelabelNat.lean#L324-L326","name":"Std.Sat.AIG.relabelNat_size_eq_size","line":324,"kind":"theorem","docLink":"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.relabelNat_size_eq_size","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.relabelNat_size_eq_size\"><span class=\"name\">Std</span>.<span class=\"name\">Sat</span>.<span class=\"name\">AIG</span>.<span class=\"name\">relabelNat_size_eq_size</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">aig</span> : <span class=\"fn\"><a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG\">AIG</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">aig</span>.<a href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.relabelNat\">relabelNat</a></span>.<a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.decls\">decls</a></span>.<a href=\"./Init/Prelude.html#Array.size\">size</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">aig</span>.<a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.decls\">decls</a></span>.<a href=\"./Init/Prelude.html#Array.size\">size</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Sat/AIG/RelabelNat.lean#L320-L322","name":"Std.Sat.AIG.relabelNat'_fst_eq_relabelNat","line":320,"kind":"theorem","docLink":"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.relabelNat'_fst_eq_relabelNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.relabelNat'_fst_eq_relabelNat\"><span class=\"name\">Std</span>.<span class=\"name\">Sat</span>.<span class=\"name\">AIG</span>.<span class=\"name\">relabelNat'_fst_eq_relabelNat</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">aig</span> : <span class=\"fn\"><a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG\">AIG</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">aig</span>.<a href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.relabelNat'\">relabelNat'</a></span>.<a href=\"./Init/Prelude.html#Prod.fst\">fst</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">aig</span>.<a href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.relabelNat\">relabelNat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Sat/AIG/RelabelNat.lean#L313-L318","name":"Std.Sat.AIG.relabelNat","line":313,"kind":"def","docLink":"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.relabelNat","doc":"Map an `AIG` with arbitrary atom identifiers to one that uses `Nat` as atom identifiers. This is\nuseful for preparing an `AIG` for CNF translation if it doesn't already use `Nat` identifiers.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.relabelNat\"><span class=\"name\">Std</span>.<span class=\"name\">Sat</span>.<span class=\"name\">AIG</span>.<span class=\"name\">relabelNat</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">aig</span> : <span class=\"fn\"><a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG\">AIG</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG\">AIG</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Sat/AIG/RelabelNat.lean#L304-L311","name":"Std.Sat.AIG.relabelNat'","line":304,"kind":"def","docLink":"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.relabelNat'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.relabelNat'\"><span class=\"name\">Std</span>.<span class=\"name\">Sat</span>.<span class=\"name\">AIG</span>.<span class=\"name\">relabelNat'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">aig</span> : <span class=\"fn\"><a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG\">AIG</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG\">AIG</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Std/Data/HashMap/Basic.html#Std.HashMap\">HashMap</a> <span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Sat/AIG/RelabelNat.lean#L288-L299","name":"Std.Sat.AIG.RelabelNat.State.ofAIG_find_some","line":288,"kind":"theorem","docLink":"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.ofAIG_find_some","doc":"We will find a `Nat` for every atom in the `AIG` that the `ofAIG` map was built from.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.ofAIG_find_some\"><span class=\"name\">Std</span>.<span class=\"name\">Sat</span>.<span class=\"name\">AIG</span>.<span class=\"name\">RelabelNat</span>.<span class=\"name\">State</span>.<span class=\"name\">ofAIG_find_some</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">aig</span> : <span class=\"fn\"><a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG\">AIG</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">aig</span> → <a href=\"./Init/Core.html#Exists\">∃</a> <a href=\"./Init/Core.html#Exists\">(</a><span class=\"fn\">n</span> <a href=\"./Init/Core.html#Exists\">:</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a><a href=\"./Init/Core.html#Exists\">)</a><a href=\"./Init/Core.html#Exists\">,</a> <span class=\"fn\">(<a href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.ofAIG\">ofAIG</a> <span class=\"fn\">aig</span>)</span><a href=\"./Init/GetElem.html#GetElem?.getElem?\">[</a><span class=\"fn\">a</span><a href=\"./Init/GetElem.html#GetElem?.getElem?\">]</a><a href=\"./Init/GetElem.html#GetElem?.getElem?\">?</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Option.some\">some</a> <span class=\"fn\">n</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Sat/AIG/RelabelNat.lean#L279-L286","name":"Std.Sat.AIG.RelabelNat.State.ofAIG_find_unique","line":279,"kind":"theorem","docLink":"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.ofAIG_find_unique","doc":"Assuming that we find a `Nat` for an atom in the `ofAIG` map, that `Nat` is unique in the map.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.ofAIG_find_unique\"><span class=\"name\">Std</span>.<span class=\"name\">Sat</span>.<span class=\"name\">AIG</span>.<span class=\"name\">RelabelNat</span>.<span class=\"name\">State</span>.<span class=\"name\">ofAIG_find_unique</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">aig</span> : <span class=\"fn\"><a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG\">AIG</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ha</span> : <span class=\"fn\">(<a href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.ofAIG\">ofAIG</a> <span class=\"fn\">aig</span>)</span><a href=\"./Init/GetElem.html#GetElem?.getElem?\">[</a><span class=\"fn\">a</span><a href=\"./Init/GetElem.html#GetElem?.getElem?\">]</a><a href=\"./Init/GetElem.html#GetElem?.getElem?\">?</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Option.some\">some</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a'</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.ofAIG\">ofAIG</a> <span class=\"fn\">aig</span>)</span><a href=\"./Init/GetElem.html#GetElem?.getElem?\">[</a><span class=\"fn\">a'</span><a href=\"./Init/GetElem.html#GetElem?.getElem?\">]</a><a href=\"./Init/GetElem.html#GetElem?.getElem?\">?</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Option.some\">some</a> <span class=\"fn\">n</span></span> → <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a'</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Sat/AIG/RelabelNat.lean#L272-L277","name":"Std.Sat.AIG.RelabelNat.State.ofAIG.Inv2","line":272,"kind":"theorem","docLink":"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.ofAIG.Inv2","doc":"The map returned by `ofAIG` fulfills the `Inv2` property.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.ofAIG.Inv2\"><span class=\"name\">Std</span>.<span class=\"name\">Sat</span>.<span class=\"name\">AIG</span>.<span class=\"name\">RelabelNat</span>.<span class=\"name\">State</span>.<span class=\"name\">ofAIG</span>.<span class=\"name\">Inv2</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">aig</span> : <span class=\"fn\"><a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG\">AIG</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.Inv2\">State.Inv2</a> <span class=\"fn\"><span class=\"fn\">aig</span>.<a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.decls\">decls</a></span> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">aig</span>.<a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.decls\">decls</a></span>.<a href=\"./Init/Prelude.html#Array.size\">size</a></span> <span class=\"fn\">(<a href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.ofAIG\">ofAIG</a> <span class=\"fn\">aig</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Sat/AIG/RelabelNat.lean#L264-L270","name":"Std.Sat.AIG.RelabelNat.State.ofAIG.Inv1","line":264,"kind":"theorem","docLink":"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.ofAIG.Inv1","doc":"The map returned by `ofAIG` fulfills the `Inv1` property.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.ofAIG.Inv1\"><span class=\"name\">Std</span>.<span class=\"name\">Sat</span>.<span class=\"name\">AIG</span>.<span class=\"name\">RelabelNat</span>.<span class=\"name\">State</span>.<span class=\"name\">ofAIG</span>.<span class=\"name\">Inv1</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">aig</span> : <span class=\"fn\"><a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG\">AIG</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Core.html#Exists\">∃</a> <a href=\"./Init/Core.html#Exists\">(</a><span class=\"fn\">n</span> <a href=\"./Init/Core.html#Exists\">:</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a><a href=\"./Init/Core.html#Exists\">)</a><a href=\"./Init/Core.html#Exists\">,</a> <span class=\"fn\"><a href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.Inv1\">State.Inv1</a> <span class=\"fn\">n</span> <span class=\"fn\">(<a href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.ofAIG\">ofAIG</a> <span class=\"fn\">aig</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Sat/AIG/RelabelNat.lean#L258-L262","name":"Std.Sat.AIG.RelabelNat.State.ofAIG","line":258,"kind":"def","docLink":"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.ofAIG","doc":"Obtain the atom mapping from α to `Nat` for a given `AIG`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.ofAIG\"><span class=\"name\">Std</span>.<span class=\"name\">Sat</span>.<span class=\"name\">AIG</span>.<span class=\"name\">RelabelNat</span>.<span class=\"name\">State</span>.<span class=\"name\">ofAIG</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">aig</span> : <span class=\"fn\"><a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG\">AIG</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Data/HashMap/Basic.html#Std.HashMap\">HashMap</a> <span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Sat/AIG/RelabelNat.lean#L244-L255","name":"Std.Sat.AIG.RelabelNat.State.ofAIGAux.go","line":244,"kind":"def","docLink":"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.ofAIGAux.go","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.ofAIGAux.go\"><span class=\"name\">Std</span>.<span class=\"name\">Sat</span>.<span class=\"name\">AIG</span>.<span class=\"name\">RelabelNat</span>.<span class=\"name\">State</span>.<span class=\"name\">ofAIGAux</span>.<span class=\"name\">go</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">decls</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.Decl\">Decl</a> <span class=\"fn\">α</span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">idx</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">state</span> : <span class=\"fn\"><a href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State\">State</a> <span class=\"fn\">α</span> <span class=\"fn\">decls</span> <span class=\"fn\">idx</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State\">State</a> <span class=\"fn\">α</span> <span class=\"fn\">decls</span> <span class=\"fn\"><span class=\"fn\">decls</span>.<a href=\"./Init/Prelude.html#Array.size\">size</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Sat/AIG/RelabelNat.lean#L238-L256","name":"Std.Sat.AIG.RelabelNat.State.ofAIGAux","line":238,"kind":"def","docLink":"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.ofAIGAux","doc":"Build up a `State` that has all atoms of an `AIG` inserted.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.ofAIGAux\"><span class=\"name\">Std</span>.<span class=\"name\">Sat</span>.<span class=\"name\">AIG</span>.<span class=\"name\">RelabelNat</span>.<span class=\"name\">State</span>.<span class=\"name\">ofAIGAux</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">aig</span> : <span class=\"fn\"><a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG\">AIG</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State\">State</a> <span class=\"fn\">α</span> <span class=\"fn\"><span class=\"fn\">aig</span>.<a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.decls\">decls</a></span> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">aig</span>.<a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.decls\">decls</a></span>.<a href=\"./Init/Prelude.html#Array.size\">size</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Sat/AIG/RelabelNat.lean#L225-L236","name":"Std.Sat.AIG.RelabelNat.State.addGate","line":225,"kind":"def","docLink":"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.addGate","doc":"Insert a `Decl.gate` into the `State` structure.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.addGate\"><span class=\"name\">Std</span>.<span class=\"name\">Sat</span>.<span class=\"name\">AIG</span>.<span class=\"name\">RelabelNat</span>.<span class=\"name\">State</span>.<span class=\"name\">addGate</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">idx</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">decls</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.Decl\">Decl</a> <span class=\"fn\">α</span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">hidx</span> : <span class=\"fn\">idx</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">decls</span>.<a href=\"./Init/Prelude.html#Array.size\">size</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">state</span> : <span class=\"fn\"><a href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State\">State</a> <span class=\"fn\">α</span> <span class=\"fn\">decls</span> <span class=\"fn\">idx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">lhs </span><span class=\"fn\">rhs</span> : <a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.Fanin\">Fanin</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">decls</span><a href=\"./Init/GetElem.html#GetElem.getElem\">[</a><span class=\"fn\">idx</span><a href=\"./Init/GetElem.html#GetElem.getElem\">]</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.Decl.gate\">Decl.gate</a> <span class=\"fn\">lhs</span> <span class=\"fn\">rhs</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State\">State</a> <span class=\"fn\">α</span> <span class=\"fn\">decls</span> (<span class=\"fn\">idx</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Sat/AIG/RelabelNat.lean#L212-L223","name":"Std.Sat.AIG.RelabelNat.State.addFalse","line":212,"kind":"def","docLink":"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.addFalse","doc":"Insert a `Decl.false` into the `State` structure.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.addFalse\"><span class=\"name\">Std</span>.<span class=\"name\">Sat</span>.<span class=\"name\">AIG</span>.<span class=\"name\">RelabelNat</span>.<span class=\"name\">State</span>.<span class=\"name\">addFalse</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">idx</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">decls</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.Decl\">Decl</a> <span class=\"fn\">α</span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">hidx</span> : <span class=\"fn\">idx</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">decls</span>.<a href=\"./Init/Prelude.html#Array.size\">size</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">state</span> : <span class=\"fn\"><a href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State\">State</a> <span class=\"fn\">α</span> <span class=\"fn\">decls</span> <span class=\"fn\">idx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">decls</span><a href=\"./Init/GetElem.html#GetElem.getElem\">[</a><span class=\"fn\">idx</span><a href=\"./Init/GetElem.html#GetElem.getElem\">]</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.Decl.false\">Decl.false</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State\">State</a> <span class=\"fn\">α</span> <span class=\"fn\">decls</span> (<span class=\"fn\">idx</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Sat/AIG/RelabelNat.lean#L182-L210","name":"Std.Sat.AIG.RelabelNat.State.addAtom","line":182,"kind":"def","docLink":"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.addAtom","doc":"Insert a `Decl.atom` into the `State` structure.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.addAtom\"><span class=\"name\">Std</span>.<span class=\"name\">Sat</span>.<span class=\"name\">AIG</span>.<span class=\"name\">RelabelNat</span>.<span class=\"name\">State</span>.<span class=\"name\">addAtom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">idx</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">decls</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.Decl\">Decl</a> <span class=\"fn\">α</span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">hidx</span> : <span class=\"fn\">idx</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">decls</span>.<a href=\"./Init/Prelude.html#Array.size\">size</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">state</span> : <span class=\"fn\"><a href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State\">State</a> <span class=\"fn\">α</span> <span class=\"fn\">decls</span> <span class=\"fn\">idx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">decls</span><a href=\"./Init/GetElem.html#GetElem.getElem\">[</a><span class=\"fn\">idx</span><a href=\"./Init/GetElem.html#GetElem.getElem\">]</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.Decl.atom\">Decl.atom</a> <span class=\"fn\">a</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State\">State</a> <span class=\"fn\">α</span> <span class=\"fn\">decls</span> (<span class=\"fn\">idx</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Sat/AIG/RelabelNat.lean#L176-L180","name":"Std.Sat.AIG.RelabelNat.State.empty","line":176,"kind":"def","docLink":"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.empty","doc":"The basic initial state.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.empty\"><span class=\"name\">Std</span>.<span class=\"name\">Sat</span>.<span class=\"name\">AIG</span>.<span class=\"name\">RelabelNat</span>.<span class=\"name\">State</span>.<span class=\"name\">empty</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">decls</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.Decl\">Decl</a> <span class=\"fn\">α</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State\">State</a> <span class=\"fn\">α</span> <span class=\"fn\">decls</span> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Sat/AIG/RelabelNat.lean#L172-L172","name":"Std.Sat.AIG.RelabelNat.State.inv2","line":172,"kind":"theorem","docLink":"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.inv2","doc":"Proof that we inserted all atoms until `idx`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.inv2\"><span class=\"name\">Std</span>.<span class=\"name\">Sat</span>.<span class=\"name\">AIG</span>.<span class=\"name\">RelabelNat</span>.<span class=\"name\">State</span>.<span class=\"name\">inv2</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">decls</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.Decl\">Decl</a> <span class=\"fn\">α</span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">idx</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State\">State</a> <span class=\"fn\">α</span> <span class=\"fn\">decls</span> <span class=\"fn\">idx</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.Inv2\">Inv2</a> <span class=\"fn\">decls</span> <span class=\"fn\">idx</span> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.map\">map</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Sat/AIG/RelabelNat.lean#L168-L168","name":"Std.Sat.AIG.RelabelNat.State.inv1","line":168,"kind":"theorem","docLink":"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.inv1","doc":"Proof that we never reuse a number.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.inv1\"><span class=\"name\">Std</span>.<span class=\"name\">Sat</span>.<span class=\"name\">AIG</span>.<span class=\"name\">RelabelNat</span>.<span class=\"name\">State</span>.<span class=\"name\">inv1</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">decls</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.Decl\">Decl</a> <span class=\"fn\">α</span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">idx</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State\">State</a> <span class=\"fn\">α</span> <span class=\"fn\">decls</span> <span class=\"fn\">idx</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.Inv1\">Inv1</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.max\">max</a></span> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.map\">map</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Sat/AIG/RelabelNat.lean#L164-L164","name":"Std.Sat.AIG.RelabelNat.State.map","line":164,"kind":"def","docLink":"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.map","doc":"The translation `HashMap`\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.map\"><span class=\"name\">Std</span>.<span class=\"name\">Sat</span>.<span class=\"name\">AIG</span>.<span class=\"name\">RelabelNat</span>.<span class=\"name\">State</span>.<span class=\"name\">map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">decls</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.Decl\">Decl</a> <span class=\"fn\">α</span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">idx</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State\">State</a> <span class=\"fn\">α</span> <span class=\"fn\">decls</span> <span class=\"fn\">idx</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Data/HashMap/Basic.html#Std.HashMap\">HashMap</a> <span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Sat/AIG/RelabelNat.lean#L160-L160","name":"Std.Sat.AIG.RelabelNat.State.max","line":160,"kind":"def","docLink":"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.max","doc":"The next number to use for identifying an atom.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.max\"><span class=\"name\">Std</span>.<span class=\"name\">Sat</span>.<span class=\"name\">AIG</span>.<span class=\"name\">RelabelNat</span>.<span class=\"name\">State</span>.<span class=\"name\">max</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">decls</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.Decl\">Decl</a> <span class=\"fn\">α</span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">idx</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State\">State</a> <span class=\"fn\">α</span> <span class=\"fn\">decls</span> <span class=\"fn\">idx</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Sat/AIG/RelabelNat.lean#L156-L156","name":"Std.Sat.AIG.RelabelNat.State.mk","line":156,"kind":"ctor","docLink":"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.mk\"><span class=\"name\">Std</span>.<span class=\"name\">Sat</span>.<span class=\"name\">AIG</span>.<span class=\"name\">RelabelNat</span>.<span class=\"name\">State</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">decls</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.Decl\">Decl</a> <span class=\"fn\">α</span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">idx</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">max</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">map</span> : <span class=\"fn\"><a href=\"./Std/Data/HashMap/Basic.html#Std.HashMap\">HashMap</a> <span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">inv1</span> : <span class=\"fn\"><a href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.Inv1\">Inv1</a> <span class=\"fn\">max</span> <span class=\"fn\">map</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">inv2</span> : <span class=\"fn\"><a href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.Inv2\">Inv2</a> <span class=\"fn\">decls</span> <span class=\"fn\">idx</span> <span class=\"fn\">map</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State\">State</a> <span class=\"fn\">α</span> <span class=\"fn\">decls</span> <span class=\"fn\">idx</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Sat/AIG/RelabelNat.lean#L152-L172","name":"Std.Sat.AIG.RelabelNat.State","line":152,"kind":"structure","docLink":"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State","doc":"The invariant carrying state structure for building the `HashMap` that translates from arbitrary\natom identifiers to `Nat`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State\"><span class=\"name\">Std</span>.<span class=\"name\">Sat</span>.<span class=\"name\">AIG</span>.<span class=\"name\">RelabelNat</span>.<span class=\"name\">State</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">decls</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.Decl\">Decl</a> <span class=\"fn\">α</span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">idx</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Sat/AIG/RelabelNat.lean#L101-L148","name":"Std.Sat.AIG.RelabelNat.State.Inv2.property","line":101,"kind":"theorem","docLink":"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.Inv2.property","doc":"The key property provided by `Inv2`, if we have `Inv2` at a certain index, then all atoms below\nthat index have been inserted into the `HashMap`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.Inv2.property\"><span class=\"name\">Std</span>.<span class=\"name\">Sat</span>.<span class=\"name\">AIG</span>.<span class=\"name\">RelabelNat</span>.<span class=\"name\">State</span>.<span class=\"name\">Inv2</span>.<span class=\"name\">property</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">decls</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.Decl\">Decl</a> <span class=\"fn\">α</span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">idx </span><span class=\"fn\">upper</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">map</span> : <span class=\"fn\"><a href=\"./Std/Data/HashMap/Basic.html#Std.HashMap\">HashMap</a> <span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hidx</span> : <span class=\"fn\">idx</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">upper</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hinv</span> : <span class=\"fn\"><a href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.Inv2\">Inv2</a> <span class=\"fn\">decls</span> <span class=\"fn\">upper</span> <span class=\"fn\">map</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">heq</span> : <span class=\"fn\">decls</span><a href=\"./Init/GetElem.html#GetElem.getElem\">[</a><span class=\"fn\">idx</span><a href=\"./Init/GetElem.html#GetElem.getElem\">]</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.Decl.atom\">Decl.atom</a> <span class=\"fn\">a</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Core.html#Exists\">∃</a> <a href=\"./Init/Core.html#Exists\">(</a><span class=\"fn\">n</span> <a href=\"./Init/Core.html#Exists\">:</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a><a href=\"./Init/Core.html#Exists\">)</a><a href=\"./Init/Core.html#Exists\">,</a> <span class=\"fn\">map</span><a href=\"./Init/GetElem.html#GetElem?.getElem?\">[</a><span class=\"fn\">a</span><a href=\"./Init/GetElem.html#GetElem?.getElem?\">]</a><a href=\"./Init/GetElem.html#GetElem?.getElem?\">?</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Option.some\">some</a> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Sat/AIG/RelabelNat.lean#L97-L99","name":"Std.Sat.AIG.RelabelNat.State.Inv2.upper_lt_size","line":97,"kind":"theorem","docLink":"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.Inv2.upper_lt_size","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.Inv2.upper_lt_size\"><span class=\"name\">Std</span>.<span class=\"name\">Sat</span>.<span class=\"name\">AIG</span>.<span class=\"name\">RelabelNat</span>.<span class=\"name\">State</span>.<span class=\"name\">Inv2</span>.<span class=\"name\">upper_lt_size</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">upper</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">map</span> : <span class=\"fn\"><a href=\"./Std/Data/HashMap/Basic.html#Std.HashMap\">HashMap</a> <span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">decls</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.Decl\">Decl</a> <span class=\"fn\">α</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hinv</span> : <span class=\"fn\"><a href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.Inv2\">Inv2</a> <span class=\"fn\">decls</span> <span class=\"fn\">upper</span> <span class=\"fn\">map</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">upper</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">decls</span>.<a href=\"./Init/Prelude.html#Array.size\">size</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Sat/AIG/RelabelNat.lean#L94-L95","name":"Std.Sat.AIG.RelabelNat.State.Inv2.gate","line":94,"kind":"ctor","docLink":"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.Inv2.gate","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.Inv2.gate\"><span class=\"name\">Std</span>.<span class=\"name\">Sat</span>.<span class=\"name\">AIG</span>.<span class=\"name\">RelabelNat</span>.<span class=\"name\">State</span>.<span class=\"name\">Inv2</span>.<span class=\"name\">gate</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">decls</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.Decl\">Decl</a> <span class=\"fn\">α</span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">idx</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">map</span> : <span class=\"fn\"><a href=\"./Std/Data/HashMap/Basic.html#Std.HashMap\">HashMap</a> <span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">l </span><span class=\"fn\">r</span> : <a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.Fanin\">Fanin</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hinv</span> : <span class=\"fn\"><a href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.Inv2\">Inv2</a> <span class=\"fn\">decls</span> <span class=\"fn\">idx</span> <span class=\"fn\">map</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hlt</span> : <span class=\"fn\">idx</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">decls</span>.<a href=\"./Init/Prelude.html#Array.size\">size</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hatom</span> : <span class=\"fn\">decls</span><a href=\"./Init/GetElem.html#GetElem.getElem\">[</a><span class=\"fn\">idx</span><a href=\"./Init/GetElem.html#GetElem.getElem\">]</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.Decl.gate\">Decl.gate</a> <span class=\"fn\">l</span> <span class=\"fn\">r</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.Inv2\">Inv2</a> <span class=\"fn\">decls</span> (<span class=\"fn\">idx</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>) <span class=\"fn\">map</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Sat/AIG/RelabelNat.lean#L92-L93","name":"Std.Sat.AIG.RelabelNat.State.Inv2.false","line":92,"kind":"ctor","docLink":"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.Inv2.false","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.Inv2.false\"><span class=\"name\">Std</span>.<span class=\"name\">Sat</span>.<span class=\"name\">AIG</span>.<span class=\"name\">RelabelNat</span>.<span class=\"name\">State</span>.<span class=\"name\">Inv2</span>.<span class=\"name\">false</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">decls</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.Decl\">Decl</a> <span class=\"fn\">α</span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">idx</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">map</span> : <span class=\"fn\"><a href=\"./Std/Data/HashMap/Basic.html#Std.HashMap\">HashMap</a> <span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hinv</span> : <span class=\"fn\"><a href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.Inv2\">Inv2</a> <span class=\"fn\">decls</span> <span class=\"fn\">idx</span> <span class=\"fn\">map</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hlt</span> : <span class=\"fn\">idx</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">decls</span>.<a href=\"./Init/Prelude.html#Array.size\">size</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hatom</span> : <span class=\"fn\">decls</span><a href=\"./Init/GetElem.html#GetElem.getElem\">[</a><span class=\"fn\">idx</span><a href=\"./Init/GetElem.html#GetElem.getElem\">]</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.Decl.false\">Decl.false</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.Inv2\">Inv2</a> <span class=\"fn\">decls</span> (<span class=\"fn\">idx</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>) <span class=\"fn\">map</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Sat/AIG/RelabelNat.lean#L90-L91","name":"Std.Sat.AIG.RelabelNat.State.Inv2.oldAtom","line":90,"kind":"ctor","docLink":"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.Inv2.oldAtom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.Inv2.oldAtom\"><span class=\"name\">Std</span>.<span class=\"name\">Sat</span>.<span class=\"name\">AIG</span>.<span class=\"name\">RelabelNat</span>.<span class=\"name\">State</span>.<span class=\"name\">Inv2</span>.<span class=\"name\">oldAtom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">decls</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.Decl\">Decl</a> <span class=\"fn\">α</span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">idx</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">map</span> : <span class=\"fn\"><a href=\"./Std/Data/HashMap/Basic.html#Std.HashMap\">HashMap</a> <span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hinv</span> : <span class=\"fn\"><a href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.Inv2\">Inv2</a> <span class=\"fn\">decls</span> <span class=\"fn\">idx</span> <span class=\"fn\">map</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hlt</span> : <span class=\"fn\">idx</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">decls</span>.<a href=\"./Init/Prelude.html#Array.size\">size</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hatom</span> : <span class=\"fn\">decls</span><a href=\"./Init/GetElem.html#GetElem.getElem\">[</a><span class=\"fn\">idx</span><a href=\"./Init/GetElem.html#GetElem.getElem\">]</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.Decl.atom\">Decl.atom</a> <span class=\"fn\">a</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hmap</span> : <span class=\"fn\">map</span><a href=\"./Init/GetElem.html#GetElem?.getElem?\">[</a><span class=\"fn\">a</span><a href=\"./Init/GetElem.html#GetElem?.getElem?\">]</a><a href=\"./Init/GetElem.html#GetElem?.getElem?\">?</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Option.some\">some</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.Inv2\">Inv2</a> <span class=\"fn\">decls</span> (<span class=\"fn\">idx</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>) <span class=\"fn\">map</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Sat/AIG/RelabelNat.lean#L88-L89","name":"Std.Sat.AIG.RelabelNat.State.Inv2.newAtom","line":88,"kind":"ctor","docLink":"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.Inv2.newAtom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.Inv2.newAtom\"><span class=\"name\">Std</span>.<span class=\"name\">Sat</span>.<span class=\"name\">AIG</span>.<span class=\"name\">RelabelNat</span>.<span class=\"name\">State</span>.<span class=\"name\">Inv2</span>.<span class=\"name\">newAtom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">decls</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.Decl\">Decl</a> <span class=\"fn\">α</span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">idx</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">map</span> : <span class=\"fn\"><a href=\"./Std/Data/HashMap/Basic.html#Std.HashMap\">HashMap</a> <span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">val</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hinv</span> : <span class=\"fn\"><a href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.Inv2\">Inv2</a> <span class=\"fn\">decls</span> <span class=\"fn\">idx</span> <span class=\"fn\">map</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hlt</span> : <span class=\"fn\">idx</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">decls</span>.<a href=\"./Init/Prelude.html#Array.size\">size</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hatom</span> : <span class=\"fn\">decls</span><a href=\"./Init/GetElem.html#GetElem.getElem\">[</a><span class=\"fn\">idx</span><a href=\"./Init/GetElem.html#GetElem.getElem\">]</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.Decl.atom\">Decl.atom</a> <span class=\"fn\">a</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hmap</span> : <span class=\"fn\">map</span><a href=\"./Init/GetElem.html#GetElem?.getElem?\">[</a><span class=\"fn\">a</span><a href=\"./Init/GetElem.html#GetElem?.getElem?\">]</a><a href=\"./Init/GetElem.html#GetElem?.getElem?\">?</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Option.none\">none</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.Inv2\">Inv2</a> <span class=\"fn\">decls</span> (<span class=\"fn\">idx</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>) <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">map</span>.<a href=\"./Std/Data/HashMap/Basic.html#Std.HashMap.insert\">insert</a></span> <span class=\"fn\">a</span> <span class=\"fn\">val</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Sat/AIG/RelabelNat.lean#L87-L87","name":"Std.Sat.AIG.RelabelNat.State.Inv2.empty","line":87,"kind":"ctor","docLink":"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.Inv2.empty","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.Inv2.empty\"><span class=\"name\">Std</span>.<span class=\"name\">Sat</span>.<span class=\"name\">AIG</span>.<span class=\"name\">RelabelNat</span>.<span class=\"name\">State</span>.<span class=\"name\">Inv2</span>.<span class=\"name\">empty</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">decls</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.Decl\">Decl</a> <span class=\"fn\">α</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.Inv2\">Inv2</a> <span class=\"fn\">decls</span> <span class=\"fn\">0</span> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Sat/AIG/RelabelNat.lean#L83-L95","name":"Std.Sat.AIG.RelabelNat.State.Inv2","line":83,"kind":"inductive","docLink":"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.Inv2","doc":"This invariant says that we have already visited and inserted all nodes up to a certain index.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.Inv2\"><span class=\"name\">Std</span>.<span class=\"name\">Sat</span>.<span class=\"name\">AIG</span>.<span class=\"name\">RelabelNat</span>.<span class=\"name\">State</span>.<span class=\"name\">Inv2</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">decls</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.Decl\">Decl</a> <span class=\"fn\">α</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">Nat</a> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Std/Data/HashMap/Basic.html#Std.HashMap\">HashMap</a> <span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span> → <a href=\"./foundational_types.html\">Prop</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Sat/AIG/RelabelNat.lean#L46-L81","name":"Std.Sat.AIG.RelabelNat.State.Inv1.property","line":46,"kind":"theorem","docLink":"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.Inv1.property","doc":"If a HashMap fulfills `Inv1` it is in an injection.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.Inv1.property\"><span class=\"name\">Std</span>.<span class=\"name\">Sat</span>.<span class=\"name\">AIG</span>.<span class=\"name\">RelabelNat</span>.<span class=\"name\">State</span>.<span class=\"name\">Inv1</span>.<span class=\"name\">property</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/BEq.html#EquivBEq\">EquivBEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n </span><span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">map</span> : <span class=\"fn\"><a href=\"./Std/Data/HashMap/Basic.html#Std.HashMap\">HashMap</a> <span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hinv</span> : <span class=\"fn\"><a href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.Inv1\">Inv1</a> <span class=\"fn\">n</span> <span class=\"fn\">map</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hfound1</span> : <span class=\"fn\">map</span><a href=\"./Init/GetElem.html#GetElem?.getElem?\">[</a><span class=\"fn\">x</span><a href=\"./Init/GetElem.html#GetElem?.getElem?\">]</a><a href=\"./Init/GetElem.html#GetElem?.getElem?\">?</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Option.some\">some</a> <span class=\"fn\">m</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hfound2</span> : <span class=\"fn\">map</span><a href=\"./Init/GetElem.html#GetElem?.getElem?\">[</a><span class=\"fn\">y</span><a href=\"./Init/GetElem.html#GetElem?.getElem?\">]</a><a href=\"./Init/GetElem.html#GetElem?.getElem?\">?</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Option.some\">some</a> <span class=\"fn\">m</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Sat/AIG/RelabelNat.lean#L27-L44","name":"Std.Sat.AIG.RelabelNat.State.Inv1.lt_of_get?_eq_some","line":27,"kind":"theorem","docLink":"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.Inv1.lt_of_get?_eq_some","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.Inv1.lt_of_get?_eq_some\"><span class=\"name\">Std</span>.<span class=\"name\">Sat</span>.<span class=\"name\">AIG</span>.<span class=\"name\">RelabelNat</span>.<span class=\"name\">State</span>.<span class=\"name\">Inv1</span>.<span class=\"name\">lt_of_get?_eq_some</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/BEq.html#EquivBEq\">EquivBEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n </span><span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">map</span> : <span class=\"fn\"><a href=\"./Std/Data/HashMap/Basic.html#Std.HashMap\">HashMap</a> <span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hinv</span> : <span class=\"fn\"><a href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.Inv1\">Inv1</a> <span class=\"fn\">n</span> <span class=\"fn\">map</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">map</span><a href=\"./Init/GetElem.html#GetElem?.getElem?\">[</a><span class=\"fn\">x</span><a href=\"./Init/GetElem.html#GetElem?.getElem?\">]</a><a href=\"./Init/GetElem.html#GetElem?.getElem?\">?</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Option.some\">some</a> <span class=\"fn\">m</span></span> → <span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Sat/AIG/RelabelNat.lean#L25-L25","name":"Std.Sat.AIG.RelabelNat.State.Inv1.insert","line":25,"kind":"ctor","docLink":"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.Inv1.insert","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.Inv1.insert\"><span class=\"name\">Std</span>.<span class=\"name\">Sat</span>.<span class=\"name\">AIG</span>.<span class=\"name\">RelabelNat</span>.<span class=\"name\">State</span>.<span class=\"name\">Inv1</span>.<span class=\"name\">insert</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">map</span> : <span class=\"fn\"><a href=\"./Std/Data/HashMap/Basic.html#Std.HashMap\">HashMap</a> <span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hinv</span> : <span class=\"fn\"><a href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.Inv1\">Inv1</a> <span class=\"fn\">n</span> <span class=\"fn\">map</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hfind</span> : <span class=\"fn\">map</span><a href=\"./Init/GetElem.html#GetElem?.getElem?\">[</a><span class=\"fn\">x</span><a href=\"./Init/GetElem.html#GetElem?.getElem?\">]</a><a href=\"./Init/GetElem.html#GetElem?.getElem?\">?</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Option.none\">none</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.Inv1\">Inv1</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>) <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">map</span>.<a href=\"./Std/Data/HashMap/Basic.html#Std.HashMap.insert\">insert</a></span> <span class=\"fn\">x</span> <span class=\"fn\">n</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Sat/AIG/RelabelNat.lean#L24-L24","name":"Std.Sat.AIG.RelabelNat.State.Inv1.empty","line":24,"kind":"ctor","docLink":"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.Inv1.empty","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.Inv1.empty\"><span class=\"name\">Std</span>.<span class=\"name\">Sat</span>.<span class=\"name\">AIG</span>.<span class=\"name\">RelabelNat</span>.<span class=\"name\">State</span>.<span class=\"name\">Inv1</span>.<span class=\"name\">empty</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.Inv1\">Inv1</a> <span class=\"fn\">0</span> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Sat/AIG/RelabelNat.lean#L19-L25","name":"Std.Sat.AIG.RelabelNat.State.Inv1","line":19,"kind":"inductive","docLink":"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.Inv1","doc":"This invariant ensures that we only insert an atom at most once and with a monotonically increasing\nindex.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Sat/AIG/RelabelNat.html#Std.Sat.AIG.RelabelNat.State.Inv1\"><span class=\"name\">Std</span>.<span class=\"name\">Sat</span>.<span class=\"name\">AIG</span>.<span class=\"name\">RelabelNat</span>.<span class=\"name\">State</span>.<span class=\"name\">Inv1</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">Nat</a> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Std/Data/HashMap/Basic.html#Std.HashMap\">HashMap</a> <span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span> → <a href=\"./foundational_types.html\">Prop</a></span></span></div></div>"}]}