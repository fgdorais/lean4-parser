{"name":"Lean.Elab.GuardMsgs","instances":[{"typeNames":["Lean.Elab.Tactic.GuardMsgs.GuardMsgFailure"],"name":"Lean.Elab.Tactic.GuardMsgs.instTypeNameGuardMsgFailure","className":"TypeName"}],"imports":["Lean.Elab.Notation","Lean.Util.Diff","Lean.Server.CodeActions.Attr"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/GuardMsgs.lean#L180-L212","name":"Lean.Elab.Tactic.GuardMsgs.guardMsgsCodeAction","line":180,"kind":"def","docLink":"./Lean/Elab/GuardMsgs.html#Lean.Elab.Tactic.GuardMsgs.guardMsgsCodeAction","doc":"A code action which will update the doc comment on a `#guard_msgs` invocation. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/GuardMsgs.html#Lean.Elab.Tactic.GuardMsgs.guardMsgsCodeAction\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">GuardMsgs</span>.<span class=\"name\">guardMsgsCodeAction</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Server/CodeActions/Attr.html#Lean.CodeAction.CommandCodeAction\">CodeAction.CommandCodeAction</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/GuardMsgs.lean#L137-L177","name":"Lean.Elab.Tactic.GuardMsgs.elabGuardMsgs","line":137,"kind":"def","docLink":"./Lean/Elab/GuardMsgs.html#Lean.Elab.Tactic.GuardMsgs.elabGuardMsgs","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/GuardMsgs.html#Lean.Elab.Tactic.GuardMsgs.elabGuardMsgs\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">GuardMsgs</span>.<span class=\"name\">elabGuardMsgs</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.CommandElab\">Command.CommandElab</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/GuardMsgs.lean#L129-L135","name":"Lean.Elab.Tactic.GuardMsgs.MessageOrdering.apply","line":129,"kind":"def","docLink":"./Lean/Elab/GuardMsgs.html#Lean.Elab.Tactic.GuardMsgs.MessageOrdering.apply","doc":"Applies a message ordering mode.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/GuardMsgs.html#Lean.Elab.Tactic.GuardMsgs.MessageOrdering.apply\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">GuardMsgs</span>.<span class=\"name\">MessageOrdering</span>.<span class=\"name\">apply</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">mode</span> : <a href=\"./Lean/Elab/GuardMsgs.html#Lean.Elab.Tactic.GuardMsgs.MessageOrdering\">MessageOrdering</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">msgs</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Prelude.html#String\">String</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Prelude.html#String\">String</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/GuardMsgs.lean#L120-L127","name":"Lean.Elab.Tactic.GuardMsgs.WhitespaceMode.apply","line":120,"kind":"def","docLink":"./Lean/Elab/GuardMsgs.html#Lean.Elab.Tactic.GuardMsgs.WhitespaceMode.apply","doc":"Applies a whitespace normalization mode.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/GuardMsgs.html#Lean.Elab.Tactic.GuardMsgs.WhitespaceMode.apply\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">GuardMsgs</span>.<span class=\"name\">WhitespaceMode</span>.<span class=\"name\">apply</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">mode</span> : <a href=\"./Lean/Elab/GuardMsgs.html#Lean.Elab.Tactic.GuardMsgs.WhitespaceMode\">WhitespaceMode</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#String\">String</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/GuardMsgs.lean#L117-L118","name":"Lean.Elab.Tactic.GuardMsgs.removeTrailingWhitespaceMarker","line":117,"kind":"def","docLink":"./Lean/Elab/GuardMsgs.html#Lean.Elab.Tactic.GuardMsgs.removeTrailingWhitespaceMarker","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/GuardMsgs.html#Lean.Elab.Tactic.GuardMsgs.removeTrailingWhitespaceMarker\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">GuardMsgs</span>.<span class=\"name\">removeTrailingWhitespaceMarker</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#String\">String</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/GuardMsgs.lean#L108-L114","name":"Lean.Elab.Tactic.GuardMsgs.revealTrailingWhitespace","line":108,"kind":"def","docLink":"./Lean/Elab/GuardMsgs.html#Lean.Elab.Tactic.GuardMsgs.revealTrailingWhitespace","doc":"Makes trailing whitespace visible and protectes them against trimming by the editor, by appending\nthe symbol ‚èé to such a line (and also to any line that ends with such a symbol, to avoid\nambiguities in the case the message already had that symbol).\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/GuardMsgs.html#Lean.Elab.Tactic.GuardMsgs.revealTrailingWhitespace\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">GuardMsgs</span>.<span class=\"name\">revealTrailingWhitespace</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#String\">String</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/GuardMsgs.lean#L106-L106","name":"Lean.Elab.Tactic.GuardMsgs.instTypeNameGuardMsgFailure","line":106,"kind":"instance","docLink":"./Lean/Elab/GuardMsgs.html#Lean.Elab.Tactic.GuardMsgs.instTypeNameGuardMsgFailure","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/GuardMsgs.html#Lean.Elab.Tactic.GuardMsgs.instTypeNameGuardMsgFailure\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">GuardMsgs</span>.<span class=\"name\">instTypeNameGuardMsgFailure</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Dynamic.html#TypeName\">TypeName</a> <a href=\"./Lean/Elab/GuardMsgs.html#Lean.Elab.Tactic.GuardMsgs.GuardMsgFailure\">GuardMsgFailure</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/GuardMsgs.lean#L105-L105","name":"Lean.Elab.Tactic.GuardMsgs.GuardMsgFailure.res","line":105,"kind":"def","docLink":"./Lean/Elab/GuardMsgs.html#Lean.Elab.Tactic.GuardMsgs.GuardMsgFailure.res","doc":"The result of the nested command "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/GuardMsgs.html#Lean.Elab.Tactic.GuardMsgs.GuardMsgFailure.res\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">GuardMsgs</span>.<span class=\"name\">GuardMsgFailure</span>.<span class=\"name\">res</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/GuardMsgs.html#Lean.Elab.Tactic.GuardMsgs.GuardMsgFailure\">GuardMsgFailure</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#String\">String</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/GuardMsgs.lean#L103-L103","name":"Lean.Elab.Tactic.GuardMsgs.GuardMsgFailure.mk","line":103,"kind":"ctor","docLink":"./Lean/Elab/GuardMsgs.html#Lean.Elab.Tactic.GuardMsgs.GuardMsgFailure.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/GuardMsgs.html#Lean.Elab.Tactic.GuardMsgs.GuardMsgFailure.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">GuardMsgs</span>.<span class=\"name\">GuardMsgFailure</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">res</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/GuardMsgs.html#Lean.Elab.Tactic.GuardMsgs.GuardMsgFailure\">GuardMsgFailure</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/GuardMsgs.lean#L101-L106","name":"Lean.Elab.Tactic.GuardMsgs.GuardMsgFailure","line":101,"kind":"structure","docLink":"./Lean/Elab/GuardMsgs.html#Lean.Elab.Tactic.GuardMsgs.GuardMsgFailure","doc":"An info tree node corresponding to a failed `#guard_msgs` invocation,\nused for code action support. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/GuardMsgs.html#Lean.Elab.Tactic.GuardMsgs.GuardMsgFailure\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">GuardMsgs</span>.<span class=\"name\">GuardMsgFailure</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/GuardMsgs.lean#L67-L99","name":"Lean.Elab.Tactic.GuardMsgs.parseGuardMsgsSpec","line":67,"kind":"def","docLink":"./Lean/Elab/GuardMsgs.html#Lean.Elab.Tactic.GuardMsgs.parseGuardMsgsSpec","doc":"Parses a `guardMsgsSpec`.\n- No specification: check everything.\n- With a specification: interpret the spec, and if nothing applies pass it through. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/GuardMsgs.html#Lean.Elab.Tactic.GuardMsgs.parseGuardMsgsSpec\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">GuardMsgs</span>.<span class=\"name\">parseGuardMsgsSpec</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">spec?</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> (<a href=\"./Init/Prelude.html#Lean.TSyntax\">TSyntax</a> <span class=\"fn\">`Lean.guardMsgsSpec</span>)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.CommandElabM\">Command.CommandElabM</a> (<a href=\"./Lean/Elab/GuardMsgs.html#Lean.Elab.Tactic.GuardMsgs.WhitespaceMode\">WhitespaceMode</a> <a href=\"./Init/Prelude.html#Prod\">√ó</a> <a href=\"./Lean/Elab/GuardMsgs.html#Lean.Elab.Tactic.GuardMsgs.MessageOrdering\">MessageOrdering</a> <a href=\"./Init/Prelude.html#Prod\">√ó</a> <span class=\"fn\">(<a href=\"./Lean/Message.html#Lean.Message\">Message</a> ‚Üí <a href=\"./Lean/Elab/GuardMsgs.html#Lean.Elab.Tactic.GuardMsgs.SpecResult\">SpecResult</a>)</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/GuardMsgs.lean#L64-L65","name":"Lean.Elab.Tactic.GuardMsgs.MessageOrdering.sorted","line":64,"kind":"ctor","docLink":"./Lean/Elab/GuardMsgs.html#Lean.Elab.Tactic.GuardMsgs.MessageOrdering.sorted","doc":"Sort the produced messages. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/GuardMsgs.html#Lean.Elab.Tactic.GuardMsgs.MessageOrdering.sorted\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">GuardMsgs</span>.<span class=\"name\">MessageOrdering</span>.<span class=\"name\">sorted</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/GuardMsgs.html#Lean.Elab.Tactic.GuardMsgs.MessageOrdering\">MessageOrdering</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/GuardMsgs.lean#L62-L63","name":"Lean.Elab.Tactic.GuardMsgs.MessageOrdering.exact","line":62,"kind":"ctor","docLink":"./Lean/Elab/GuardMsgs.html#Lean.Elab.Tactic.GuardMsgs.MessageOrdering.exact","doc":"Use the exact ordering of the produced messages. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/GuardMsgs.html#Lean.Elab.Tactic.GuardMsgs.MessageOrdering.exact\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">GuardMsgs</span>.<span class=\"name\">MessageOrdering</span>.<span class=\"name\">exact</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/GuardMsgs.html#Lean.Elab.Tactic.GuardMsgs.MessageOrdering\">MessageOrdering</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/GuardMsgs.lean#L60-L65","name":"Lean.Elab.Tactic.GuardMsgs.MessageOrdering","line":60,"kind":"inductive","docLink":"./Lean/Elab/GuardMsgs.html#Lean.Elab.Tactic.GuardMsgs.MessageOrdering","doc":"Method to use when combining multiple messages. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/GuardMsgs.html#Lean.Elab.Tactic.GuardMsgs.MessageOrdering\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">GuardMsgs</span>.<span class=\"name\">MessageOrdering</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/GuardMsgs.lean#L57-L58","name":"Lean.Elab.Tactic.GuardMsgs.WhitespaceMode.lax","line":57,"kind":"ctor","docLink":"./Lean/Elab/GuardMsgs.html#Lean.Elab.Tactic.GuardMsgs.WhitespaceMode.lax","doc":"Equality after collapsing whitespace into single spaces. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/GuardMsgs.html#Lean.Elab.Tactic.GuardMsgs.WhitespaceMode.lax\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">GuardMsgs</span>.<span class=\"name\">WhitespaceMode</span>.<span class=\"name\">lax</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/GuardMsgs.html#Lean.Elab.Tactic.GuardMsgs.WhitespaceMode\">WhitespaceMode</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/GuardMsgs.lean#L55-L56","name":"Lean.Elab.Tactic.GuardMsgs.WhitespaceMode.normalized","line":55,"kind":"ctor","docLink":"./Lean/Elab/GuardMsgs.html#Lean.Elab.Tactic.GuardMsgs.WhitespaceMode.normalized","doc":"Equality after normalizing newlines into spaces. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/GuardMsgs.html#Lean.Elab.Tactic.GuardMsgs.WhitespaceMode.normalized\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">GuardMsgs</span>.<span class=\"name\">WhitespaceMode</span>.<span class=\"name\">normalized</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/GuardMsgs.html#Lean.Elab.Tactic.GuardMsgs.WhitespaceMode\">WhitespaceMode</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/GuardMsgs.lean#L53-L54","name":"Lean.Elab.Tactic.GuardMsgs.WhitespaceMode.exact","line":53,"kind":"ctor","docLink":"./Lean/Elab/GuardMsgs.html#Lean.Elab.Tactic.GuardMsgs.WhitespaceMode.exact","doc":"Exact equality. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/GuardMsgs.html#Lean.Elab.Tactic.GuardMsgs.WhitespaceMode.exact\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">GuardMsgs</span>.<span class=\"name\">WhitespaceMode</span>.<span class=\"name\">exact</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/GuardMsgs.html#Lean.Elab.Tactic.GuardMsgs.WhitespaceMode\">WhitespaceMode</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/GuardMsgs.lean#L51-L58","name":"Lean.Elab.Tactic.GuardMsgs.WhitespaceMode","line":51,"kind":"inductive","docLink":"./Lean/Elab/GuardMsgs.html#Lean.Elab.Tactic.GuardMsgs.WhitespaceMode","doc":"The method to use when normalizing whitespace, after trimming. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/GuardMsgs.html#Lean.Elab.Tactic.GuardMsgs.WhitespaceMode\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">GuardMsgs</span>.<span class=\"name\">WhitespaceMode</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/GuardMsgs.lean#L48-L49","name":"Lean.Elab.Tactic.GuardMsgs.SpecResult.passthrough","line":48,"kind":"ctor","docLink":"./Lean/Elab/GuardMsgs.html#Lean.Elab.Tactic.GuardMsgs.SpecResult.passthrough","doc":"Do not capture the message. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/GuardMsgs.html#Lean.Elab.Tactic.GuardMsgs.SpecResult.passthrough\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">GuardMsgs</span>.<span class=\"name\">SpecResult</span>.<span class=\"name\">passthrough</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/GuardMsgs.html#Lean.Elab.Tactic.GuardMsgs.SpecResult\">SpecResult</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/GuardMsgs.lean#L46-L47","name":"Lean.Elab.Tactic.GuardMsgs.SpecResult.drop","line":46,"kind":"ctor","docLink":"./Lean/Elab/GuardMsgs.html#Lean.Elab.Tactic.GuardMsgs.SpecResult.drop","doc":"Drop the message and delete it. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/GuardMsgs.html#Lean.Elab.Tactic.GuardMsgs.SpecResult.drop\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">GuardMsgs</span>.<span class=\"name\">SpecResult</span>.<span class=\"name\">drop</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/GuardMsgs.html#Lean.Elab.Tactic.GuardMsgs.SpecResult\">SpecResult</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/GuardMsgs.lean#L44-L45","name":"Lean.Elab.Tactic.GuardMsgs.SpecResult.check","line":44,"kind":"ctor","docLink":"./Lean/Elab/GuardMsgs.html#Lean.Elab.Tactic.GuardMsgs.SpecResult.check","doc":"Capture the message and check it matches the docstring. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/GuardMsgs.html#Lean.Elab.Tactic.GuardMsgs.SpecResult.check\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">GuardMsgs</span>.<span class=\"name\">SpecResult</span>.<span class=\"name\">check</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/GuardMsgs.html#Lean.Elab.Tactic.GuardMsgs.SpecResult\">SpecResult</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/GuardMsgs.lean#L42-L49","name":"Lean.Elab.Tactic.GuardMsgs.SpecResult","line":42,"kind":"inductive","docLink":"./Lean/Elab/GuardMsgs.html#Lean.Elab.Tactic.GuardMsgs.SpecResult","doc":"The decision made by a specification for a message. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/GuardMsgs.html#Lean.Elab.Tactic.GuardMsgs.SpecResult\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">GuardMsgs</span>.<span class=\"name\">SpecResult</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/GuardMsgs.lean#L19-L22","name":"guard_msgs.diff","line":19,"kind":"opaque","docLink":"./Lean/Elab/GuardMsgs.html#guard_msgs.diff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/GuardMsgs.html#guard_msgs.diff\"><span class=\"name\">guard_msgs</span>.<span class=\"name\">diff</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/Options.html#Lean.Option\">Lean.Option</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"}]}