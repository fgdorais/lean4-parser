{"name":"Lean.Meta.BinderNameHint","instances":[],"imports":["Lean.Util.FindExpr","Lean.Meta.Basic","Init.BinderNameHint"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/BinderNameHint.lean#L53-L101","name":"Lean.Expr.resolveBinderNameHint.go","line":53,"kind":"opaque","docLink":"./Lean/Meta/BinderNameHint.html#Lean.Expr.resolveBinderNameHint.go","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/BinderNameHint.html#Lean.Expr.resolveBinderNameHint.go\"><span class=\"name\">Lean</span>.<span class=\"name\">Expr</span>.<span class=\"name\">resolveBinderNameHint</span>.<span class=\"name\">go</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Util/MonadCache.html#Lean.MonadCacheT\">MonadCacheT</a> <a href=\"./Lean/Expr.html#Lean.ExprStructEq\">ExprStructEq</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a> <span class=\"fn\">(<a href=\"./Init/Control/State.html#StateT\">StateT</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span> <a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">CoreM</a>)</span> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/BinderNameHint.lean#L37-L101","name":"Lean.Expr.resolveBinderNameHint","line":37,"kind":"def","docLink":"./Lean/Meta/BinderNameHint.html#Lean.Expr.resolveBinderNameHint","doc":"Resolves occurrences of `binderNameHint` in `e`. See docstring of `binderNameHint` for more\ninformation.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/BinderNameHint.html#Lean.Expr.resolveBinderNameHint\"><span class=\"name\">Lean</span>.<span class=\"name\">Expr</span>.<span class=\"name\">resolveBinderNameHint</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">CoreM</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/BinderNameHint.lean#L16-L18","name":"Lean.Expr.hasBinderNameHint","line":16,"kind":"def","docLink":"./Lean/Meta/BinderNameHint.html#Lean.Expr.hasBinderNameHint","doc":"Does `e` have a binder name hint? (quick check) "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/BinderNameHint.html#Lean.Expr.hasBinderNameHint\"><span class=\"name\">Lean</span>.<span class=\"name\">Expr</span>.<span class=\"name\">hasBinderNameHint</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"}]}