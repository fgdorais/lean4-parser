{"name":"Lean.Compiler.LCNF.ElimDead","instances":[],"imports":["Lean.Compiler.LCNF.CompilerM"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/LCNF/ElimDead.lean#L97-L98","name":"Lean.Compiler.LCNF.Decl.elimDead","line":97,"kind":"def","docLink":"./Lean/Compiler/LCNF/ElimDead.html#Lean.Compiler.LCNF.Decl.elimDead","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/ElimDead.html#Lean.Compiler.LCNF.Decl.elimDead\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">Decl</span>.<span class=\"name\">elimDead</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">decl</span> : <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Decl\">Decl</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/LCNF/CompilerM.html#Lean.Compiler.LCNF.CompilerM\">CompilerM</a> <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Decl\">Decl</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/LCNF/ElimDead.lean#L94-L95","name":"Lean.Compiler.LCNF.Code.elimDead","line":94,"kind":"def","docLink":"./Lean/Compiler/LCNF/ElimDead.html#Lean.Compiler.LCNF.Code.elimDead","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/ElimDead.html#Lean.Compiler.LCNF.Code.elimDead\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">Code</span>.<span class=\"name\">elimDead</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">code</span> : <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Code\">Code</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/LCNF/CompilerM.html#Lean.Compiler.LCNF.CompilerM\">CompilerM</a> <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Code\">Code</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/LCNF/ElimDead.lean#L63-L88","name":"Lean.Compiler.LCNF.ElimDead.elimDead","line":63,"kind":"opaque","docLink":"./Lean/Compiler/LCNF/ElimDead.html#Lean.Compiler.LCNF.ElimDead.elimDead","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/ElimDead.html#Lean.Compiler.LCNF.ElimDead.elimDead\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">ElimDead</span>.<span class=\"name\">elimDead</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">code</span> : <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Code\">Code</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/LCNF/ElimDead.html#Lean.Compiler.LCNF.ElimDead.M\">M</a> <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Code\">Code</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/LCNF/ElimDead.lean#L59-L61","name":"Lean.Compiler.LCNF.ElimDead.visitFunDecl","line":59,"kind":"opaque","docLink":"./Lean/Compiler/LCNF/ElimDead.html#Lean.Compiler.LCNF.ElimDead.visitFunDecl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/ElimDead.html#Lean.Compiler.LCNF.ElimDead.visitFunDecl\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">ElimDead</span>.<span class=\"name\">visitFunDecl</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">funDecl</span> : <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.FunDecl\">FunDecl</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/LCNF/ElimDead.html#Lean.Compiler.LCNF.ElimDead.M\">M</a> <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.FunDecl\">FunDecl</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/LCNF/ElimDead.lean#L47-L47","name":"Lean.Compiler.LCNF.ElimDead.M","line":47,"kind":"def","docLink":"./Lean/Compiler/LCNF/ElimDead.html#Lean.Compiler.LCNF.ElimDead.M","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/ElimDead.html#Lean.Compiler.LCNF.ElimDead.M\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">ElimDead</span>.<span class=\"name\">M</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">Î±</span> : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/LCNF/ElimDead.lean#L38-L43","name":"Lean.Compiler.LCNF.collectLocalDeclsLetValue","line":38,"kind":"def","docLink":"./Lean/Compiler/LCNF/ElimDead.html#Lean.Compiler.LCNF.collectLocalDeclsLetValue","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/ElimDead.html#Lean.Compiler.LCNF.collectLocalDeclsLetValue\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">collectLocalDeclsLetValue</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Lean/Compiler/LCNF/ElimDead.html#Lean.Compiler.LCNF.UsedLocalDecls\">UsedLocalDecls</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.LetValue\">LetValue</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/LCNF/ElimDead.html#Lean.Compiler.LCNF.UsedLocalDecls\">UsedLocalDecls</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/LCNF/ElimDead.lean#L35-L36","name":"Lean.Compiler.LCNF.collectLocalDeclsArgs","line":35,"kind":"def","docLink":"./Lean/Compiler/LCNF/ElimDead.html#Lean.Compiler.LCNF.collectLocalDeclsArgs","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/ElimDead.html#Lean.Compiler.LCNF.collectLocalDeclsArgs\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">collectLocalDeclsArgs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Lean/Compiler/LCNF/ElimDead.html#Lean.Compiler.LCNF.UsedLocalDecls\">UsedLocalDecls</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">args</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Arg\">Arg</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/LCNF/ElimDead.html#Lean.Compiler.LCNF.UsedLocalDecls\">UsedLocalDecls</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/LCNF/ElimDead.lean#L29-L33","name":"Lean.Compiler.LCNF.collectLocalDeclsArg","line":29,"kind":"def","docLink":"./Lean/Compiler/LCNF/ElimDead.html#Lean.Compiler.LCNF.collectLocalDeclsArg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/ElimDead.html#Lean.Compiler.LCNF.collectLocalDeclsArg\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">collectLocalDeclsArg</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Lean/Compiler/LCNF/ElimDead.html#Lean.Compiler.LCNF.UsedLocalDecls\">UsedLocalDecls</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">arg</span> : <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Arg\">Arg</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/LCNF/ElimDead.html#Lean.Compiler.LCNF.UsedLocalDecls\">UsedLocalDecls</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/LCNF/ElimDead.lean#L20-L27","name":"Lean.Compiler.LCNF.collectLocalDeclsType.go","line":20,"kind":"def","docLink":"./Lean/Compiler/LCNF/ElimDead.html#Lean.Compiler.LCNF.collectLocalDeclsType.go","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/ElimDead.html#Lean.Compiler.LCNF.collectLocalDeclsType.go\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">collectLocalDeclsType</span>.<span class=\"name\">go</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Lean/Compiler/LCNF/ElimDead.html#Lean.Compiler.LCNF.UsedLocalDecls\">UsedLocalDecls</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/LCNF/ElimDead.html#Lean.Compiler.LCNF.UsedLocalDecls\">UsedLocalDecls</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/LCNF/ElimDead.lean#L13-L27","name":"Lean.Compiler.LCNF.collectLocalDeclsType","line":13,"kind":"def","docLink":"./Lean/Compiler/LCNF/ElimDead.html#Lean.Compiler.LCNF.collectLocalDeclsType","doc":"Collect set of (let) free variables in a LCNF value.\nThis code exploits the LCNF property that local declarations do not occur in types.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/ElimDead.html#Lean.Compiler.LCNF.collectLocalDeclsType\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">collectLocalDeclsType</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Lean/Compiler/LCNF/ElimDead.html#Lean.Compiler.LCNF.UsedLocalDecls\">UsedLocalDecls</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">type</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/LCNF/ElimDead.html#Lean.Compiler.LCNF.UsedLocalDecls\">UsedLocalDecls</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/LCNF/ElimDead.lean#L11-L11","name":"Lean.Compiler.LCNF.UsedLocalDecls","line":11,"kind":"def","docLink":"./Lean/Compiler/LCNF/ElimDead.html#Lean.Compiler.LCNF.UsedLocalDecls","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/ElimDead.html#Lean.Compiler.LCNF.UsedLocalDecls\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">UsedLocalDecls</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"}]}