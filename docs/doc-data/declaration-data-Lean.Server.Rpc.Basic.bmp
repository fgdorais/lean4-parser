{"name":"Lean.Server.Rpc.Basic","instances":[{"typeNames":["Lean.Lsp.RpcRef"],"name":"Lean.Lsp.instBEqRpcRef","className":"BEq"},{"typeNames":["Lean.Lsp.RpcRef"],"name":"Lean.Lsp.instHashableRpcRef","className":"Hashable"},{"typeNames":["Lean.Lsp.RpcRef"],"name":"Lean.Lsp.instFromJsonRpcRef","className":"Lean.FromJson"},{"typeNames":["Lean.Lsp.RpcRef"],"name":"Lean.Lsp.instToJsonRpcRef","className":"Lean.ToJson"},{"typeNames":["Lean.Lsp.RpcRef"],"name":"Lean.Lsp.instToStringRpcRef","className":"ToString"},{"typeNames":["Lean.Server.RpcEncodable"],"name":"Lean.Server.instNonemptyRpcEncodable","className":"Nonempty"},{"typeNames":[],"name":"Lean.Server.instRpcEncodableOfFromJsonOfToJson","className":"Lean.Server.RpcEncodable"},{"typeNames":["Option"],"name":"Lean.Server.instRpcEncodableOption","className":"Lean.Server.RpcEncodable"},{"typeNames":["Array"],"name":"Lean.Server.instRpcEncodableArray","className":"Lean.Server.RpcEncodable"},{"typeNames":["Prod"],"name":"Lean.Server.instRpcEncodableProd","className":"Lean.Server.RpcEncodable"},{"typeNames":["StateM"],"name":"Lean.Server.instRpcEncodableStateMRpcObjectStore","className":"Lean.Server.RpcEncodable"},{"typeNames":["Lean.Server.WithRpcRef"],"name":"Lean.Server.instInhabitedWithRpcRef","className":"Inhabited"},{"typeNames":["Lean.Server.WithRpcRef"],"name":"Lean.Server.instRpcEncodableWithRpcRefOfTypeName","className":"Lean.Server.RpcEncodable"}],"imports":["Init.Dynamic","Lean.Data.Json"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Server/Rpc/Basic.lean#L136-L144","name":"Lean.Server.instRpcEncodableWithRpcRefOfTypeName.rpcDecode","line":136,"kind":"def","docLink":"./Lean/Server/Rpc/Basic.html#Lean.Server.instRpcEncodableWithRpcRefOfTypeName.rpcDecode","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.instRpcEncodableWithRpcRefOfTypeName.rpcDecode\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">instRpcEncodableWithRpcRefOfTypeName</span>.<span class=\"name\">rpcDecode</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Dynamic.html#TypeName\">TypeName</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">j</span> : <a href=\"./Lean/Data/Json/Basic.html#Lean.Json\">Json</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Control/Except.html#ExceptT\">ExceptT</a> <a href=\"./Init/Prelude.html#String\">String</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#ReaderT\">ReaderT</a> <a href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.RpcObjectStore\">RpcObjectStore</a> <a href=\"./Init/Control/Id.html#Id\">Id</a>)</span> <span class=\"fn\">(<a href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.WithRpcRef\">WithRpcRef</a> <span class=\"fn\">α</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Server/Rpc/Basic.lean#L135-L135","name":"Lean.Server.instRpcEncodableWithRpcRefOfTypeName.rpcEncode","line":135,"kind":"def","docLink":"./Lean/Server/Rpc/Basic.html#Lean.Server.instRpcEncodableWithRpcRefOfTypeName.rpcEncode","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.instRpcEncodableWithRpcRefOfTypeName.rpcEncode\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">instRpcEncodableWithRpcRefOfTypeName</span>.<span class=\"name\">rpcEncode</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Dynamic.html#TypeName\">TypeName</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">r</span> : <span class=\"fn\"><a href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.WithRpcRef\">WithRpcRef</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Control/State.html#StateM\">StateM</a> <a href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.RpcObjectStore\">RpcObjectStore</a> <a href=\"./Lean/Data/Json/Basic.html#Lean.Json\">Json</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Server/Rpc/Basic.lean#L131-L144","name":"Lean.Server.instRpcEncodableWithRpcRefOfTypeName","line":131,"kind":"instance","docLink":"./Lean/Server/Rpc/Basic.html#Lean.Server.instRpcEncodableWithRpcRefOfTypeName","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.instRpcEncodableWithRpcRefOfTypeName\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">instRpcEncodableWithRpcRefOfTypeName</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Dynamic.html#TypeName\">TypeName</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.RpcEncodable\">RpcEncodable</a> <span class=\"fn\">(<a href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.WithRpcRef\">WithRpcRef</a> <span class=\"fn\">α</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Server/Rpc/Basic.lean#L129-L129","name":"Lean.Server.instInhabitedWithRpcRef","line":129,"kind":"instance","docLink":"./Lean/Server/Rpc/Basic.html#Lean.Server.instInhabitedWithRpcRef","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.instInhabitedWithRpcRef\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">instInhabitedWithRpcRef</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a✝</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">a✝</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<a href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.WithRpcRef\">WithRpcRef</a> <span class=\"fn\">a✝</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Server/Rpc/Basic.lean#L128-L128","name":"Lean.Server.WithRpcRef.val","line":128,"kind":"def","docLink":"./Lean/Server/Rpc/Basic.html#Lean.Server.WithRpcRef.val","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.WithRpcRef.val\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">WithRpcRef</span>.<span class=\"name\">val</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.WithRpcRef\">WithRpcRef</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">α</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Server/Rpc/Basic.lean#L127-L127","name":"Lean.Server.WithRpcRef.mk","line":127,"kind":"ctor","docLink":"./Lean/Server/Rpc/Basic.html#Lean.Server.WithRpcRef.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.WithRpcRef.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">WithRpcRef</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">val</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.WithRpcRef\">WithRpcRef</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Server/Rpc/Basic.lean#L124-L129","name":"Lean.Server.WithRpcRef","line":124,"kind":"structure","docLink":"./Lean/Server/Rpc/Basic.html#Lean.Server.WithRpcRef","doc":"Marks values to be encoded as opaque references in RPC packets.\n\nSee the docstring for `RpcEncodable`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.WithRpcRef\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">WithRpcRef</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Server/Rpc/Basic.lean#L118-L122","name":"Lean.Server.instRpcEncodableStateMRpcObjectStore","line":118,"kind":"instance","docLink":"./Lean/Server/Rpc/Basic.html#Lean.Server.instRpcEncodableStateMRpcObjectStore","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.instRpcEncodableStateMRpcObjectStore\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">instRpcEncodableStateMRpcObjectStore</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.RpcEncodable\">RpcEncodable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.RpcEncodable\">RpcEncodable</a> <span class=\"fn\">(<a href=\"./Init/Control/State.html#StateM\">StateM</a> <a href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.RpcObjectStore\">RpcObjectStore</a> <span class=\"fn\">α</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Server/Rpc/Basic.lean#L112-L116","name":"Lean.Server.instRpcEncodableProd","line":112,"kind":"instance","docLink":"./Lean/Server/Rpc/Basic.html#Lean.Server.instRpcEncodableProd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.instRpcEncodableProd\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">instRpcEncodableProd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α </span><span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.RpcEncodable\">RpcEncodable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.RpcEncodable\">RpcEncodable</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.RpcEncodable\">RpcEncodable</a> (<span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">β</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Server/Rpc/Basic.lean#L108-L110","name":"Lean.Server.instRpcEncodableArray","line":108,"kind":"instance","docLink":"./Lean/Server/Rpc/Basic.html#Lean.Server.instRpcEncodableArray","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.instRpcEncodableArray\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">instRpcEncodableArray</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.RpcEncodable\">RpcEncodable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.RpcEncodable\">RpcEncodable</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">α</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Server/Rpc/Basic.lean#L102-L104","name":"Lean.Server.instRpcEncodableOption","line":102,"kind":"instance","docLink":"./Lean/Server/Rpc/Basic.html#Lean.Server.instRpcEncodableOption","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.instRpcEncodableOption\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">instRpcEncodableOption</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.RpcEncodable\">RpcEncodable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.RpcEncodable\">RpcEncodable</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">α</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Server/Rpc/Basic.lean#L98-L100","name":"Lean.Server.instRpcEncodableOfFromJsonOfToJson","line":98,"kind":"instance","docLink":"./Lean/Server/Rpc/Basic.html#Lean.Server.instRpcEncodableOfFromJsonOfToJson","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.instRpcEncodableOfFromJsonOfToJson\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">instRpcEncodableOfFromJsonOfToJson</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Data/Json/FromToJson.html#Lean.FromJson\">FromJson</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Data/Json/FromToJson.html#Lean.ToJson\">ToJson</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.RpcEncodable\">RpcEncodable</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Server/Rpc/Basic.lean#L95-L96","name":"Lean.Server.instNonemptyRpcEncodable","line":95,"kind":"instance","docLink":"./Lean/Server/Rpc/Basic.html#Lean.Server.instNonemptyRpcEncodable","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.instNonemptyRpcEncodable\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">instNonemptyRpcEncodable</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">(<a href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.RpcEncodable\">RpcEncodable</a> <span class=\"fn\">α</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Server/Rpc/Basic.lean#L92-L92","name":"Lean.Server.RpcEncodable.rpcDecode","line":92,"kind":"def","docLink":"./Lean/Server/Rpc/Basic.html#Lean.Server.RpcEncodable.rpcDecode","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.RpcEncodable.rpcDecode\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">RpcEncodable</span>.<span class=\"name\">rpcDecode</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.RpcEncodable\">RpcEncodable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/Json/Basic.html#Lean.Json\">Json</a> → <span class=\"fn\"><a href=\"./Init/Control/Except.html#ExceptT\">ExceptT</a> <a href=\"./Init/Prelude.html#String\">String</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#ReaderT\">ReaderT</a> <a href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.RpcObjectStore\">RpcObjectStore</a> <a href=\"./Init/Control/Id.html#Id\">Id</a>)</span> <span class=\"fn\">α</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Server/Rpc/Basic.lean#L91-L91","name":"Lean.Server.RpcEncodable.rpcEncode","line":91,"kind":"def","docLink":"./Lean/Server/Rpc/Basic.html#Lean.Server.RpcEncodable.rpcEncode","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.RpcEncodable.rpcEncode\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">RpcEncodable</span>.<span class=\"name\">rpcEncode</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.RpcEncodable\">RpcEncodable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><a href=\"./Init/Control/State.html#StateM\">StateM</a> <a href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.RpcObjectStore\">RpcObjectStore</a> <a href=\"./Lean/Data/Json/Basic.html#Lean.Json\">Json</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Server/Rpc/Basic.lean#L90-L90","name":"Lean.Server.RpcEncodable.mk","line":90,"kind":"ctor","docLink":"./Lean/Server/Rpc/Basic.html#Lean.Server.RpcEncodable.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.RpcEncodable.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">RpcEncodable</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">rpcEncode</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><a href=\"./Init/Control/State.html#StateM\">StateM</a> <a href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.RpcObjectStore\">RpcObjectStore</a> <a href=\"./Lean/Data/Json/Basic.html#Lean.Json\">Json</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">rpcDecode</span> : <span class=\"fn\"><a href=\"./Lean/Data/Json/Basic.html#Lean.Json\">Json</a> → <span class=\"fn\"><a href=\"./Init/Control/Except.html#ExceptT\">ExceptT</a> <a href=\"./Init/Prelude.html#String\">String</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#ReaderT\">ReaderT</a> <a href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.RpcObjectStore\">RpcObjectStore</a> <a href=\"./Init/Control/Id.html#Id\">Id</a>)</span> <span class=\"fn\">α</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.RpcEncodable\">RpcEncodable</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Server/Rpc/Basic.lean#L67-L92","name":"Lean.Server.RpcEncodable","line":67,"kind":"class","docLink":"./Lean/Server/Rpc/Basic.html#Lean.Server.RpcEncodable","doc":"`RpcEncodable α` means that `α` can be deserialized from and serialized into JSON\nfor the purpose of receiving arguments to and sending return values from\nRemote Procedure Calls (RPCs).\n\nAny type with `FromJson` and `ToJson` instances is `RpcEncodable`.\n\nFurthermore, types that do not have these instances may still be `RpcEncodable`.\nUse `deriving RpcEncodable` to automatically derive instances for such types.\n\nThis occurs when `α` contains data that should not or cannot be serialized:\nfor instance, heavy objects such as `Lean.Environment`, or closures.\nFor such data, we use the `WithRpcRef` marker.\nNote that for `WithRpcRef α` to be `RpcEncodable`,\n`α` must have a `TypeName` instance\n\nOn the server side, `WithRpcRef α` is just a structure\ncontaining a value of type `α`.\nOn the client side, it is an opaque reference of (structural) type `Lsp.RpcRef`.\nThus, `WithRpcRef α` is cheap to transmit over the network\nbut may only be accessed on the server side.\nIn practice, it is used by the client to pass data\nbetween various RPC methods provided by the server. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">class</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.RpcEncodable\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">RpcEncodable</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Server/Rpc/Basic.lean#L59-L65","name":"Lean.Server.rpcReleaseRef","line":59,"kind":"def","docLink":"./Lean/Server/Rpc/Basic.html#Lean.Server.rpcReleaseRef","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.rpcReleaseRef\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">rpcReleaseRef</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">r</span> : <a href=\"./Lean/Server/Rpc/Basic.html#Lean.Lsp.RpcRef\">Lsp.RpcRef</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Control/State.html#StateM\">StateM</a> <a href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.RpcObjectStore\">RpcObjectStore</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Server/Rpc/Basic.lean#L56-L57","name":"Lean.Server.rpcGetRef","line":56,"kind":"def","docLink":"./Lean/Server/Rpc/Basic.html#Lean.Server.rpcGetRef","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.rpcGetRef\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">rpcGetRef</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">r</span> : <a href=\"./Lean/Server/Rpc/Basic.html#Lean.Lsp.RpcRef\">Lsp.RpcRef</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#ReaderT\">ReaderT</a> <a href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.RpcObjectStore\">RpcObjectStore</a> <a href=\"./Init/Control/Id.html#Id\">Id</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Dynamic.html#Dynamic\">Dynamic</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Server/Rpc/Basic.lean#L48-L54","name":"Lean.Server.rpcStoreRef","line":48,"kind":"def","docLink":"./Lean/Server/Rpc/Basic.html#Lean.Server.rpcStoreRef","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.rpcStoreRef\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">rpcStoreRef</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">any</span> : <a href=\"./Init/Dynamic.html#Dynamic\">Dynamic</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Control/State.html#StateM\">StateM</a> <a href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.RpcObjectStore\">RpcObjectStore</a> <a href=\"./Lean/Server/Rpc/Basic.html#Lean.Lsp.RpcRef\">Lsp.RpcRef</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Server/Rpc/Basic.lean#L46-L46","name":"Lean.Server.RpcObjectStore.nextRef","line":46,"kind":"def","docLink":"./Lean/Server/Rpc/Basic.html#Lean.Server.RpcObjectStore.nextRef","doc":"Value to use for the next `RpcRef`. It is monotonically increasing to avoid any possible\nbugs resulting from its reuse. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.RpcObjectStore.nextRef\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">RpcObjectStore</span>.<span class=\"name\">nextRef</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.RpcObjectStore\">RpcObjectStore</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#USize\">USize</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Server/Rpc/Basic.lean#L43-L43","name":"Lean.Server.RpcObjectStore.aliveRefs","line":43,"kind":"def","docLink":"./Lean/Server/Rpc/Basic.html#Lean.Server.RpcObjectStore.aliveRefs","doc":"Objects that are being kept alive for the RPC client, together with their type names,\nmapped to by their RPC reference.\n\nNote that we may currently have multiple references to the same object. It is only disposed\nof once all of those are gone. This simplifies the client a bit as it can drop every reference\nreceived separately. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.RpcObjectStore.aliveRefs\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">RpcObjectStore</span>.<span class=\"name\">aliveRefs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.RpcObjectStore\">RpcObjectStore</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap\">PersistentHashMap</a> <a href=\"./Lean/Server/Rpc/Basic.html#Lean.Lsp.RpcRef\">Lsp.RpcRef</a> <a href=\"./Init/Dynamic.html#Dynamic\">Dynamic</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Server/Rpc/Basic.lean#L36-L36","name":"Lean.Server.RpcObjectStore.mk","line":36,"kind":"ctor","docLink":"./Lean/Server/Rpc/Basic.html#Lean.Server.RpcObjectStore.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.RpcObjectStore.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">RpcObjectStore</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">aliveRefs</span> : <span class=\"fn\"><a href=\"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap\">PersistentHashMap</a> <a href=\"./Lean/Server/Rpc/Basic.html#Lean.Lsp.RpcRef\">Lsp.RpcRef</a> <a href=\"./Init/Dynamic.html#Dynamic\">Dynamic</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">nextRef</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.RpcObjectStore\">RpcObjectStore</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Server/Rpc/Basic.lean#L36-L46","name":"Lean.Server.RpcObjectStore","line":36,"kind":"structure","docLink":"./Lean/Server/Rpc/Basic.html#Lean.Server.RpcObjectStore","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.RpcObjectStore\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">RpcObjectStore</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Server/Rpc/Basic.lean#L29-L30","name":"Lean.Lsp.instToStringRpcRef","line":29,"kind":"instance","docLink":"./Lean/Server/Rpc/Basic.html#Lean.Lsp.instToStringRpcRef","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Rpc/Basic.html#Lean.Lsp.instToStringRpcRef\"><span class=\"name\">Lean</span>.<span class=\"name\">Lsp</span>.<span class=\"name\">instToStringRpcRef</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/ToString/Basic.html#ToString\">ToString</a> <a href=\"./Lean/Server/Rpc/Basic.html#Lean.Lsp.RpcRef\">RpcRef</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Server/Rpc/Basic.lean#L27-L27","name":"Lean.Lsp.instToJsonRpcRef","line":27,"kind":"instance","docLink":"./Lean/Server/Rpc/Basic.html#Lean.Lsp.instToJsonRpcRef","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Rpc/Basic.html#Lean.Lsp.instToJsonRpcRef\"><span class=\"name\">Lean</span>.<span class=\"name\">Lsp</span>.<span class=\"name\">instToJsonRpcRef</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/Json/FromToJson.html#Lean.ToJson\">ToJson</a> <a href=\"./Lean/Server/Rpc/Basic.html#Lean.Lsp.RpcRef\">RpcRef</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Server/Rpc/Basic.lean#L27-L27","name":"Lean.Lsp.instFromJsonRpcRef","line":27,"kind":"instance","docLink":"./Lean/Server/Rpc/Basic.html#Lean.Lsp.instFromJsonRpcRef","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Rpc/Basic.html#Lean.Lsp.instFromJsonRpcRef\"><span class=\"name\">Lean</span>.<span class=\"name\">Lsp</span>.<span class=\"name\">instFromJsonRpcRef</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/Json/FromToJson.html#Lean.FromJson\">FromJson</a> <a href=\"./Lean/Server/Rpc/Basic.html#Lean.Lsp.RpcRef\">RpcRef</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Server/Rpc/Basic.lean#L27-L27","name":"Lean.Lsp.instHashableRpcRef","line":27,"kind":"instance","docLink":"./Lean/Server/Rpc/Basic.html#Lean.Lsp.instHashableRpcRef","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Rpc/Basic.html#Lean.Lsp.instHashableRpcRef\"><span class=\"name\">Lean</span>.<span class=\"name\">Lsp</span>.<span class=\"name\">instHashableRpcRef</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <a href=\"./Lean/Server/Rpc/Basic.html#Lean.Lsp.RpcRef\">RpcRef</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Server/Rpc/Basic.lean#L27-L27","name":"Lean.Lsp.instBEqRpcRef","line":27,"kind":"instance","docLink":"./Lean/Server/Rpc/Basic.html#Lean.Lsp.instBEqRpcRef","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Rpc/Basic.html#Lean.Lsp.instBEqRpcRef\"><span class=\"name\">Lean</span>.<span class=\"name\">Lsp</span>.<span class=\"name\">instBEqRpcRef</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <a href=\"./Lean/Server/Rpc/Basic.html#Lean.Lsp.RpcRef\">RpcRef</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Server/Rpc/Basic.lean#L26-L26","name":"Lean.Lsp.RpcRef.p","line":26,"kind":"def","docLink":"./Lean/Server/Rpc/Basic.html#Lean.Lsp.RpcRef.p","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Rpc/Basic.html#Lean.Lsp.RpcRef.p\"><span class=\"name\">Lean</span>.<span class=\"name\">Lsp</span>.<span class=\"name\">RpcRef</span>.<span class=\"name\">p</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Server/Rpc/Basic.html#Lean.Lsp.RpcRef\">RpcRef</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#USize\">USize</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Server/Rpc/Basic.lean#L23-L23","name":"Lean.Lsp.RpcRef.mk","line":23,"kind":"ctor","docLink":"./Lean/Server/Rpc/Basic.html#Lean.Lsp.RpcRef.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Rpc/Basic.html#Lean.Lsp.RpcRef.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Lsp</span>.<span class=\"name\">RpcRef</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Server/Rpc/Basic.html#Lean.Lsp.RpcRef\">RpcRef</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Server/Rpc/Basic.lean#L22-L27","name":"Lean.Lsp.RpcRef","line":22,"kind":"structure","docLink":"./Lean/Server/Rpc/Basic.html#Lean.Lsp.RpcRef","doc":"An object which RPC clients can refer to without marshalling. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Rpc/Basic.html#Lean.Lsp.RpcRef\"><span class=\"name\">Lean</span>.<span class=\"name\">Lsp</span>.<span class=\"name\">RpcRef</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"}]}