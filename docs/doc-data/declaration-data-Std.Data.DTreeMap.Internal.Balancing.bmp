{"name":"Std.Data.DTreeMap.Internal.Balancing","instances":[],"imports":["Init.Data.AC","Std.Data.DTreeMap.Internal.Balanced"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Data/DTreeMap/Internal/Balancing.lean#L877-L882","name":"Std.DTreeMap.Internal.Impl.balanced_balanceR","line":877,"kind":"theorem","docLink":"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.balanced_balanceR","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.balanced_balanceR\"><span class=\"name\">Std</span>.<span class=\"name\">DTreeMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Impl</span>.<span class=\"name\">balanced_balanceR</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k</span> : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">v</span> : <span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">k</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">l </span><span class=\"fn\">r</span> : <span class=\"fn\"><a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl\">Impl</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hlb</span> : <span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Std/Data/DTreeMap/Internal/Balanced.html#Std.DTreeMap.Internal.Impl.Balanced\">Balanced</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hrb</span> : <span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Std/Data/DTreeMap/Internal/Balanced.html#Std.DTreeMap.Internal.Impl.Balanced\">Balanced</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hlr</span> : <span class=\"fn\"><a href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.BalanceLPrecond\">BalanceLPrecond</a> <span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl.size\">size</a></span> <span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl.size\">size</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.balanceR\">balanceR</a> <span class=\"fn\">k</span> <span class=\"fn\">v</span> <span class=\"fn\">l</span> <span class=\"fn\">r</span> <span class=\"fn\">hlb</span> <span class=\"fn\">hrb</span> <span class=\"fn\">hlr</span>)</span>.<a href=\"./Std/Data/DTreeMap/Internal/Balanced.html#Std.DTreeMap.Internal.Impl.Balanced\">Balanced</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Data/DTreeMap/Internal/Balancing.lean#L871-L875","name":"Std.DTreeMap.Internal.Impl.size_balanceR","line":871,"kind":"theorem","docLink":"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.size_balanceR","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.size_balanceR\"><span class=\"name\">Std</span>.<span class=\"name\">DTreeMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Impl</span>.<span class=\"name\">size_balanceR</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k</span> : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">v</span> : <span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">k</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">l </span><span class=\"fn\">r</span> : <span class=\"fn\"><a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl\">Impl</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hlb</span> : <span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Std/Data/DTreeMap/Internal/Balanced.html#Std.DTreeMap.Internal.Impl.Balanced\">Balanced</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hrb</span> : <span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Std/Data/DTreeMap/Internal/Balanced.html#Std.DTreeMap.Internal.Impl.Balanced\">Balanced</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hlr</span> : <span class=\"fn\"><a href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.BalanceLPrecond\">BalanceLPrecond</a> <span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl.size\">size</a></span> <span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl.size\">size</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.balanceR\">balanceR</a> <span class=\"fn\">k</span> <span class=\"fn\">v</span> <span class=\"fn\">l</span> <span class=\"fn\">r</span> <span class=\"fn\">hlb</span> <span class=\"fn\">hrb</span> <span class=\"fn\">hlr</span>)</span>.<a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl.size\">size</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl.size\">size</a></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl.size\">size</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Data/DTreeMap/Internal/Balancing.lean#L864-L869","name":"Std.DTreeMap.Internal.Impl.balanced_balanceRErase","line":864,"kind":"theorem","docLink":"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.balanced_balanceRErase","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.balanced_balanceRErase\"><span class=\"name\">Std</span>.<span class=\"name\">DTreeMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Impl</span>.<span class=\"name\">balanced_balanceRErase</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k</span> : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">v</span> : <span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">k</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">l </span><span class=\"fn\">r</span> : <span class=\"fn\"><a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl\">Impl</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hlb</span> : <span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Std/Data/DTreeMap/Internal/Balanced.html#Std.DTreeMap.Internal.Impl.Balanced\">Balanced</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hrb</span> : <span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Std/Data/DTreeMap/Internal/Balanced.html#Std.DTreeMap.Internal.Impl.Balanced\">Balanced</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hlr</span> : <span class=\"fn\"><a href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.BalanceLErasePrecond\">BalanceLErasePrecond</a> <span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl.size\">size</a></span> <span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl.size\">size</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.balanceRErase\">balanceRErase</a> <span class=\"fn\">k</span> <span class=\"fn\">v</span> <span class=\"fn\">l</span> <span class=\"fn\">r</span> <span class=\"fn\">hlb</span> <span class=\"fn\">hrb</span> <span class=\"fn\">hlr</span>)</span>.<a href=\"./Std/Data/DTreeMap/Internal/Balanced.html#Std.DTreeMap.Internal.Impl.Balanced\">Balanced</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Data/DTreeMap/Internal/Balancing.lean#L858-L862","name":"Std.DTreeMap.Internal.Impl.size_balanceRErase","line":858,"kind":"theorem","docLink":"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.size_balanceRErase","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.size_balanceRErase\"><span class=\"name\">Std</span>.<span class=\"name\">DTreeMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Impl</span>.<span class=\"name\">size_balanceRErase</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k</span> : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">v</span> : <span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">k</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">l </span><span class=\"fn\">r</span> : <span class=\"fn\"><a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl\">Impl</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hlb</span> : <span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Std/Data/DTreeMap/Internal/Balanced.html#Std.DTreeMap.Internal.Impl.Balanced\">Balanced</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hrb</span> : <span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Std/Data/DTreeMap/Internal/Balanced.html#Std.DTreeMap.Internal.Impl.Balanced\">Balanced</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hlr</span> : <span class=\"fn\"><a href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.BalanceLErasePrecond\">BalanceLErasePrecond</a> <span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl.size\">size</a></span> <span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl.size\">size</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.balanceRErase\">balanceRErase</a> <span class=\"fn\">k</span> <span class=\"fn\">v</span> <span class=\"fn\">l</span> <span class=\"fn\">r</span> <span class=\"fn\">hlb</span> <span class=\"fn\">hrb</span> <span class=\"fn\">hlr</span>)</span>.<a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl.size\">size</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl.size\">size</a></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl.size\">size</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Data/DTreeMap/Internal/Balancing.lean#L851-L856","name":"Std.DTreeMap.Internal.Impl.balanced_balanceR!","line":851,"kind":"theorem","docLink":"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.balanced_balanceR!","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.balanced_balanceR!\"><span class=\"name\">Std</span>.<span class=\"name\">DTreeMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Impl</span>.<span class=\"name\">balanced_balanceR!</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k</span> : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">v</span> : <span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">k</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">l </span><span class=\"fn\">r</span> : <span class=\"fn\"><a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl\">Impl</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hlb</span> : <span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Std/Data/DTreeMap/Internal/Balanced.html#Std.DTreeMap.Internal.Impl.Balanced\">Balanced</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hrb</span> : <span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Std/Data/DTreeMap/Internal/Balanced.html#Std.DTreeMap.Internal.Impl.Balanced\">Balanced</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hlr</span> : <span class=\"fn\"><a href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.BalanceLErasePrecond\">BalanceLErasePrecond</a> <span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl.size\">size</a></span> <span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl.size\">size</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.balanceR!\">balanceR!</a> <span class=\"fn\">k</span> <span class=\"fn\">v</span> <span class=\"fn\">l</span> <span class=\"fn\">r</span>)</span>.<a href=\"./Std/Data/DTreeMap/Internal/Balanced.html#Std.DTreeMap.Internal.Impl.Balanced\">Balanced</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Data/DTreeMap/Internal/Balancing.lean#L845-L849","name":"Std.DTreeMap.Internal.Impl.size_balanceR!","line":845,"kind":"theorem","docLink":"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.size_balanceR!","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.size_balanceR!\"><span class=\"name\">Std</span>.<span class=\"name\">DTreeMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Impl</span>.<span class=\"name\">size_balanceR!</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k</span> : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">v</span> : <span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">k</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">l </span><span class=\"fn\">r</span> : <span class=\"fn\"><a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl\">Impl</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hlb</span> : <span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Std/Data/DTreeMap/Internal/Balanced.html#Std.DTreeMap.Internal.Impl.Balanced\">Balanced</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hrb</span> : <span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Std/Data/DTreeMap/Internal/Balanced.html#Std.DTreeMap.Internal.Impl.Balanced\">Balanced</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hlr</span> : <span class=\"fn\"><a href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.BalanceLErasePrecond\">BalanceLErasePrecond</a> <span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl.size\">size</a></span> <span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl.size\">size</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.balanceR!\">balanceR!</a> <span class=\"fn\">k</span> <span class=\"fn\">v</span> <span class=\"fn\">l</span> <span class=\"fn\">r</span>)</span>.<a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl.size\">size</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl.size\">size</a></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl.size\">size</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Data/DTreeMap/Internal/Balancing.lean#L838-L843","name":"Std.DTreeMap.Internal.Impl.balanced_balanceL","line":838,"kind":"theorem","docLink":"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.balanced_balanceL","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.balanced_balanceL\"><span class=\"name\">Std</span>.<span class=\"name\">DTreeMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Impl</span>.<span class=\"name\">balanced_balanceL</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k</span> : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">v</span> : <span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">k</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">l </span><span class=\"fn\">r</span> : <span class=\"fn\"><a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl\">Impl</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hlb</span> : <span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Std/Data/DTreeMap/Internal/Balanced.html#Std.DTreeMap.Internal.Impl.Balanced\">Balanced</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hrb</span> : <span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Std/Data/DTreeMap/Internal/Balanced.html#Std.DTreeMap.Internal.Impl.Balanced\">Balanced</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hlr</span> : <span class=\"fn\"><a href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.BalanceLPrecond\">BalanceLPrecond</a> <span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl.size\">size</a></span> <span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl.size\">size</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.balanceL\">balanceL</a> <span class=\"fn\">k</span> <span class=\"fn\">v</span> <span class=\"fn\">l</span> <span class=\"fn\">r</span> <span class=\"fn\">hlb</span> <span class=\"fn\">hrb</span> <span class=\"fn\">hlr</span>)</span>.<a href=\"./Std/Data/DTreeMap/Internal/Balanced.html#Std.DTreeMap.Internal.Impl.Balanced\">Balanced</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Data/DTreeMap/Internal/Balancing.lean#L832-L836","name":"Std.DTreeMap.Internal.Impl.size_balanceL","line":832,"kind":"theorem","docLink":"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.size_balanceL","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.size_balanceL\"><span class=\"name\">Std</span>.<span class=\"name\">DTreeMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Impl</span>.<span class=\"name\">size_balanceL</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k</span> : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">v</span> : <span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">k</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">l </span><span class=\"fn\">r</span> : <span class=\"fn\"><a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl\">Impl</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hlb</span> : <span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Std/Data/DTreeMap/Internal/Balanced.html#Std.DTreeMap.Internal.Impl.Balanced\">Balanced</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hrb</span> : <span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Std/Data/DTreeMap/Internal/Balanced.html#Std.DTreeMap.Internal.Impl.Balanced\">Balanced</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hlr</span> : <span class=\"fn\"><a href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.BalanceLPrecond\">BalanceLPrecond</a> <span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl.size\">size</a></span> <span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl.size\">size</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.balanceL\">balanceL</a> <span class=\"fn\">k</span> <span class=\"fn\">v</span> <span class=\"fn\">l</span> <span class=\"fn\">r</span> <span class=\"fn\">hlb</span> <span class=\"fn\">hrb</span> <span class=\"fn\">hlr</span>)</span>.<a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl.size\">size</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl.size\">size</a></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl.size\">size</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Data/DTreeMap/Internal/Balancing.lean#L825-L830","name":"Std.DTreeMap.Internal.Impl.balanced_balanceLErase","line":825,"kind":"theorem","docLink":"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.balanced_balanceLErase","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.balanced_balanceLErase\"><span class=\"name\">Std</span>.<span class=\"name\">DTreeMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Impl</span>.<span class=\"name\">balanced_balanceLErase</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k</span> : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">v</span> : <span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">k</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">l </span><span class=\"fn\">r</span> : <span class=\"fn\"><a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl\">Impl</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hlb</span> : <span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Std/Data/DTreeMap/Internal/Balanced.html#Std.DTreeMap.Internal.Impl.Balanced\">Balanced</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hrb</span> : <span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Std/Data/DTreeMap/Internal/Balanced.html#Std.DTreeMap.Internal.Impl.Balanced\">Balanced</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hlr</span> : <span class=\"fn\"><a href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.BalanceLErasePrecond\">BalanceLErasePrecond</a> <span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl.size\">size</a></span> <span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl.size\">size</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.balanceLErase\">balanceLErase</a> <span class=\"fn\">k</span> <span class=\"fn\">v</span> <span class=\"fn\">l</span> <span class=\"fn\">r</span> <span class=\"fn\">hlb</span> <span class=\"fn\">hrb</span> <span class=\"fn\">hlr</span>)</span>.<a href=\"./Std/Data/DTreeMap/Internal/Balanced.html#Std.DTreeMap.Internal.Impl.Balanced\">Balanced</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Data/DTreeMap/Internal/Balancing.lean#L819-L823","name":"Std.DTreeMap.Internal.Impl.size_balanceLErase","line":819,"kind":"theorem","docLink":"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.size_balanceLErase","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.size_balanceLErase\"><span class=\"name\">Std</span>.<span class=\"name\">DTreeMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Impl</span>.<span class=\"name\">size_balanceLErase</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k</span> : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">v</span> : <span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">k</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">l </span><span class=\"fn\">r</span> : <span class=\"fn\"><a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl\">Impl</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hlb</span> : <span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Std/Data/DTreeMap/Internal/Balanced.html#Std.DTreeMap.Internal.Impl.Balanced\">Balanced</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hrb</span> : <span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Std/Data/DTreeMap/Internal/Balanced.html#Std.DTreeMap.Internal.Impl.Balanced\">Balanced</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hlr</span> : <span class=\"fn\"><a href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.BalanceLErasePrecond\">BalanceLErasePrecond</a> <span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl.size\">size</a></span> <span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl.size\">size</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.balanceLErase\">balanceLErase</a> <span class=\"fn\">k</span> <span class=\"fn\">v</span> <span class=\"fn\">l</span> <span class=\"fn\">r</span> <span class=\"fn\">hlb</span> <span class=\"fn\">hrb</span> <span class=\"fn\">hlr</span>)</span>.<a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl.size\">size</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl.size\">size</a></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl.size\">size</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Data/DTreeMap/Internal/Balancing.lean#L812-L817","name":"Std.DTreeMap.Internal.Impl.balanced_balanceL!","line":812,"kind":"theorem","docLink":"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.balanced_balanceL!","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.balanced_balanceL!\"><span class=\"name\">Std</span>.<span class=\"name\">DTreeMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Impl</span>.<span class=\"name\">balanced_balanceL!</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k</span> : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">v</span> : <span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">k</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">l </span><span class=\"fn\">r</span> : <span class=\"fn\"><a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl\">Impl</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hlb</span> : <span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Std/Data/DTreeMap/Internal/Balanced.html#Std.DTreeMap.Internal.Impl.Balanced\">Balanced</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hrb</span> : <span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Std/Data/DTreeMap/Internal/Balanced.html#Std.DTreeMap.Internal.Impl.Balanced\">Balanced</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hlr</span> : <span class=\"fn\"><a href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.BalanceLErasePrecond\">BalanceLErasePrecond</a> <span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl.size\">size</a></span> <span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl.size\">size</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.balanceL!\">balanceL!</a> <span class=\"fn\">k</span> <span class=\"fn\">v</span> <span class=\"fn\">l</span> <span class=\"fn\">r</span>)</span>.<a href=\"./Std/Data/DTreeMap/Internal/Balanced.html#Std.DTreeMap.Internal.Impl.Balanced\">Balanced</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Data/DTreeMap/Internal/Balancing.lean#L806-L810","name":"Std.DTreeMap.Internal.Impl.size_balanceL!","line":806,"kind":"theorem","docLink":"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.size_balanceL!","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.size_balanceL!\"><span class=\"name\">Std</span>.<span class=\"name\">DTreeMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Impl</span>.<span class=\"name\">size_balanceL!</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k</span> : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">v</span> : <span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">k</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">l </span><span class=\"fn\">r</span> : <span class=\"fn\"><a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl\">Impl</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hlb</span> : <span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Std/Data/DTreeMap/Internal/Balanced.html#Std.DTreeMap.Internal.Impl.Balanced\">Balanced</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hrb</span> : <span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Std/Data/DTreeMap/Internal/Balanced.html#Std.DTreeMap.Internal.Impl.Balanced\">Balanced</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hlr</span> : <span class=\"fn\"><a href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.BalanceLErasePrecond\">BalanceLErasePrecond</a> <span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl.size\">size</a></span> <span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl.size\">size</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.balanceL!\">balanceL!</a> <span class=\"fn\">k</span> <span class=\"fn\">v</span> <span class=\"fn\">l</span> <span class=\"fn\">r</span>)</span>.<a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl.size\">size</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl.size\">size</a></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl.size\">size</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Data/DTreeMap/Internal/Balancing.lean#L799-L804","name":"Std.DTreeMap.Internal.Impl.balance_balance","line":799,"kind":"theorem","docLink":"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.balance_balance","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.balance_balance\"><span class=\"name\">Std</span>.<span class=\"name\">DTreeMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Impl</span>.<span class=\"name\">balance_balance</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k</span> : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">v</span> : <span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">k</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">l </span><span class=\"fn\">r</span> : <span class=\"fn\"><a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl\">Impl</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hlb</span> : <span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Std/Data/DTreeMap/Internal/Balanced.html#Std.DTreeMap.Internal.Impl.Balanced\">Balanced</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hrb</span> : <span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Std/Data/DTreeMap/Internal/Balanced.html#Std.DTreeMap.Internal.Impl.Balanced\">Balanced</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hlr</span> : <span class=\"fn\"><a href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.BalanceLErasePrecond\">BalanceLErasePrecond</a> <span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl.size\">size</a></span> <span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl.size\">size</a></span></span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\"><a href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.BalanceLErasePrecond\">BalanceLErasePrecond</a> <span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl.size\">size</a></span> <span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl.size\">size</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.balance\">balance</a> <span class=\"fn\">k</span> <span class=\"fn\">v</span> <span class=\"fn\">l</span> <span class=\"fn\">r</span> <span class=\"fn\">hlb</span> <span class=\"fn\">hrb</span> <span class=\"fn\">hlr</span>)</span>.<a href=\"./Std/Data/DTreeMap/Internal/Balanced.html#Std.DTreeMap.Internal.Impl.Balanced\">Balanced</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Data/DTreeMap/Internal/Balancing.lean#L793-L797","name":"Std.DTreeMap.Internal.Impl.size_balance","line":793,"kind":"theorem","docLink":"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.size_balance","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.size_balance\"><span class=\"name\">Std</span>.<span class=\"name\">DTreeMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Impl</span>.<span class=\"name\">size_balance</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k</span> : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">v</span> : <span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">k</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">l </span><span class=\"fn\">r</span> : <span class=\"fn\"><a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl\">Impl</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hlb</span> : <span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Std/Data/DTreeMap/Internal/Balanced.html#Std.DTreeMap.Internal.Impl.Balanced\">Balanced</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hrb</span> : <span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Std/Data/DTreeMap/Internal/Balanced.html#Std.DTreeMap.Internal.Impl.Balanced\">Balanced</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hlr</span> : <span class=\"fn\"><a href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.BalanceLErasePrecond\">BalanceLErasePrecond</a> <span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl.size\">size</a></span> <span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl.size\">size</a></span></span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\"><a href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.BalanceLErasePrecond\">BalanceLErasePrecond</a> <span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl.size\">size</a></span> <span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl.size\">size</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.balance\">balance</a> <span class=\"fn\">k</span> <span class=\"fn\">v</span> <span class=\"fn\">l</span> <span class=\"fn\">r</span> <span class=\"fn\">hlb</span> <span class=\"fn\">hrb</span> <span class=\"fn\">hlr</span>)</span>.<a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl.size\">size</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl.size\">size</a></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl.size\">size</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Data/DTreeMap/Internal/Balancing.lean#L787-L791","name":"Std.DTreeMap.Internal.Impl.balanced_balance!","line":787,"kind":"theorem","docLink":"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.balanced_balance!","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.balanced_balance!\"><span class=\"name\">Std</span>.<span class=\"name\">DTreeMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Impl</span>.<span class=\"name\">balanced_balance!</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k</span> : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">v</span> : <span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">k</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">l </span><span class=\"fn\">r</span> : <span class=\"fn\"><a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl\">Impl</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hlb</span> : <span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Std/Data/DTreeMap/Internal/Balanced.html#Std.DTreeMap.Internal.Impl.Balanced\">Balanced</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hrb</span> : <span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Std/Data/DTreeMap/Internal/Balanced.html#Std.DTreeMap.Internal.Impl.Balanced\">Balanced</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hlr</span> : <span class=\"fn\"><a href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.BalanceLErasePrecond\">BalanceLErasePrecond</a> <span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl.size\">size</a></span> <span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl.size\">size</a></span></span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\"><a href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.BalanceLErasePrecond\">BalanceLErasePrecond</a> <span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl.size\">size</a></span> <span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl.size\">size</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.balance!\">balance!</a> <span class=\"fn\">k</span> <span class=\"fn\">v</span> <span class=\"fn\">l</span> <span class=\"fn\">r</span>)</span>.<a href=\"./Std/Data/DTreeMap/Internal/Balanced.html#Std.DTreeMap.Internal.Impl.Balanced\">Balanced</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Data/DTreeMap/Internal/Balancing.lean#L781-L785","name":"Std.DTreeMap.Internal.Impl.size_balance!","line":781,"kind":"theorem","docLink":"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.size_balance!","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.size_balance!\"><span class=\"name\">Std</span>.<span class=\"name\">DTreeMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Impl</span>.<span class=\"name\">size_balance!</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k</span> : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">v</span> : <span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">k</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">l </span><span class=\"fn\">r</span> : <span class=\"fn\"><a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl\">Impl</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hlb</span> : <span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Std/Data/DTreeMap/Internal/Balanced.html#Std.DTreeMap.Internal.Impl.Balanced\">Balanced</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hrb</span> : <span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Std/Data/DTreeMap/Internal/Balanced.html#Std.DTreeMap.Internal.Impl.Balanced\">Balanced</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hlr</span> : <span class=\"fn\"><a href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.BalanceLErasePrecond\">BalanceLErasePrecond</a> <span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl.size\">size</a></span> <span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl.size\">size</a></span></span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\"><a href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.BalanceLErasePrecond\">BalanceLErasePrecond</a> <span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl.size\">size</a></span> <span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl.size\">size</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.balance!\">balance!</a> <span class=\"fn\">k</span> <span class=\"fn\">v</span> <span class=\"fn\">l</span> <span class=\"fn\">r</span>)</span>.<a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl.size\">size</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl.size\">size</a></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl.size\">size</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Data/DTreeMap/Internal/Balancing.lean#L757-L779","name":"Std.DTreeMap.Internal.Impl.balance!_desc","line":757,"kind":"theorem","docLink":"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.balance!_desc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.balance!_desc\"><span class=\"name\">Std</span>.<span class=\"name\">DTreeMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Impl</span>.<span class=\"name\">balance!_desc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k</span> : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">v</span> : <span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">k</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">l </span><span class=\"fn\">r</span> : <span class=\"fn\"><a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl\">Impl</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hlb</span> : <span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Std/Data/DTreeMap/Internal/Balanced.html#Std.DTreeMap.Internal.Impl.Balanced\">Balanced</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hrb</span> : <span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Std/Data/DTreeMap/Internal/Balanced.html#Std.DTreeMap.Internal.Impl.Balanced\">Balanced</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hlr</span> : <span class=\"fn\"><a href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.BalanceLErasePrecond\">BalanceLErasePrecond</a> <span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl.size\">size</a></span> <span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl.size\">size</a></span></span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\"><a href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.BalanceLErasePrecond\">BalanceLErasePrecond</a> <span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl.size\">size</a></span> <span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl.size\">size</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.balance!\">balance!</a> <span class=\"fn\">k</span> <span class=\"fn\">v</span> <span class=\"fn\">l</span> <span class=\"fn\">r</span>)</span>.<a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl.size\">size</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl.size\">size</a></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl.size\">size</a></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.balance!\">balance!</a> <span class=\"fn\">k</span> <span class=\"fn\">v</span> <span class=\"fn\">l</span> <span class=\"fn\">r</span>)</span>.<a href=\"./Std/Data/DTreeMap/Internal/Balanced.html#Std.DTreeMap.Internal.Impl.Balanced\">Balanced</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Data/DTreeMap/Internal/Balancing.lean#L747-L755","name":"Std.DTreeMap.Internal.Impl.balance_eq_inner","line":747,"kind":"theorem","docLink":"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.balance_eq_inner","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.balance_eq_inner\"><span class=\"name\">Std</span>.<span class=\"name\">DTreeMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Impl</span>.<span class=\"name\">balance_eq_inner</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/Ord.html#Ord\">Ord</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">sz</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k</span> : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">v</span> : <span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">k</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">l </span><span class=\"fn\">r</span> : <span class=\"fn\"><a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl\">Impl</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hl</span> : <span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl.inner\">inner</a> <span class=\"fn\">sz</span> <span class=\"fn\">k</span> <span class=\"fn\">v</span> <span class=\"fn\">l</span> <span class=\"fn\">r</span>)</span>.<a href=\"./Std/Data/DTreeMap/Internal/Balanced.html#Std.DTreeMap.Internal.Impl.Balanced\">Balanced</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.BalanceLErasePrecond\">BalanceLErasePrecond</a> <span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl.size\">size</a></span> <span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl.size\">size</a></span></span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\"><a href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.BalanceLErasePrecond\">BalanceLErasePrecond</a> <span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl.size\">size</a></span> <span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl.size\">size</a></span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.balance\">balance</a> <span class=\"fn\">k</span> <span class=\"fn\">v</span> <span class=\"fn\">l</span> <span class=\"fn\">r</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span> <span class=\"fn\">h</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl.inner\">inner</a> <span class=\"fn\">sz</span> <span class=\"fn\">k</span> <span class=\"fn\">v</span> <span class=\"fn\">l</span> <span class=\"fn\">r</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Data/DTreeMap/Internal/Balancing.lean#L739-L745","name":"Std.DTreeMap.Internal.Impl.balance_eq_balance!","line":739,"kind":"theorem","docLink":"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.balance_eq_balance!","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.balance_eq_balance!\"><span class=\"name\">Std</span>.<span class=\"name\">DTreeMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Impl</span>.<span class=\"name\">balance_eq_balance!</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k</span> : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">v</span> : <span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">k</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">l </span><span class=\"fn\">r</span> : <span class=\"fn\"><a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl\">Impl</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">hlb</span> : <span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Std/Data/DTreeMap/Internal/Balanced.html#Std.DTreeMap.Internal.Impl.Balanced\">Balanced</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">hrb</span> : <span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Std/Data/DTreeMap/Internal/Balanced.html#Std.DTreeMap.Internal.Impl.Balanced\">Balanced</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">hlr</span> : <span class=\"fn\"><a href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.BalanceLErasePrecond\">BalanceLErasePrecond</a> <span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl.size\">size</a></span> <span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl.size\">size</a></span></span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\"><a href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.BalanceLErasePrecond\">BalanceLErasePrecond</a> <span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl.size\">size</a></span> <span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl.size\">size</a></span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.balance\">balance</a> <span class=\"fn\">k</span> <span class=\"fn\">v</span> <span class=\"fn\">l</span> <span class=\"fn\">r</span> <span class=\"fn\">hlb</span> <span class=\"fn\">hrb</span> <span class=\"fn\">hlr</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.balance!\">balance!</a> <span class=\"fn\">k</span> <span class=\"fn\">v</span> <span class=\"fn\">l</span> <span class=\"fn\">r</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Data/DTreeMap/Internal/Balancing.lean#L727-L737","name":"Std.DTreeMap.Internal.Impl.balanceR!_eq_balance!","line":727,"kind":"theorem","docLink":"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.balanceR!_eq_balance!","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.balanceR!_eq_balance!\"><span class=\"name\">Std</span>.<span class=\"name\">DTreeMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Impl</span>.<span class=\"name\">balanceR!_eq_balance!</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k</span> : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">v</span> : <span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">k</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">l </span><span class=\"fn\">r</span> : <span class=\"fn\"><a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl\">Impl</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hlb</span> : <span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Std/Data/DTreeMap/Internal/Balanced.html#Std.DTreeMap.Internal.Impl.Balanced\">Balanced</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hrb</span> : <span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Std/Data/DTreeMap/Internal/Balanced.html#Std.DTreeMap.Internal.Impl.Balanced\">Balanced</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hlr</span> : <span class=\"fn\"><a href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.BalanceLErasePrecond\">BalanceLErasePrecond</a> <span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl.size\">size</a></span> <span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl.size\">size</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.balanceR!\">balanceR!</a> <span class=\"fn\">k</span> <span class=\"fn\">v</span> <span class=\"fn\">l</span> <span class=\"fn\">r</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.balance!\">balance!</a> <span class=\"fn\">k</span> <span class=\"fn\">v</span> <span class=\"fn\">l</span> <span class=\"fn\">r</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Data/DTreeMap/Internal/Balancing.lean#L719-L725","name":"Std.DTreeMap.Internal.Impl.balanceRErase_eq_balanceR!","line":719,"kind":"theorem","docLink":"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.balanceRErase_eq_balanceR!","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.balanceRErase_eq_balanceR!\"><span class=\"name\">Std</span>.<span class=\"name\">DTreeMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Impl</span>.<span class=\"name\">balanceRErase_eq_balanceR!</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k</span> : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">v</span> : <span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">k</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">l </span><span class=\"fn\">r</span> : <span class=\"fn\"><a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl\">Impl</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">hlb</span> : <span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Std/Data/DTreeMap/Internal/Balanced.html#Std.DTreeMap.Internal.Impl.Balanced\">Balanced</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">hrb</span> : <span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Std/Data/DTreeMap/Internal/Balanced.html#Std.DTreeMap.Internal.Impl.Balanced\">Balanced</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">hlr</span> : <span class=\"fn\"><a href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.BalanceLErasePrecond\">BalanceLErasePrecond</a> <span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl.size\">size</a></span> <span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl.size\">size</a></span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.balanceRErase\">balanceRErase</a> <span class=\"fn\">k</span> <span class=\"fn\">v</span> <span class=\"fn\">l</span> <span class=\"fn\">r</span> <span class=\"fn\">hlb</span> <span class=\"fn\">hrb</span> <span class=\"fn\">hlr</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.balanceR!\">balanceR!</a> <span class=\"fn\">k</span> <span class=\"fn\">v</span> <span class=\"fn\">l</span> <span class=\"fn\">r</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Data/DTreeMap/Internal/Balancing.lean#L710-L717","name":"Std.DTreeMap.Internal.Impl.balanceR_eq_balanceRErase","line":710,"kind":"theorem","docLink":"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.balanceR_eq_balanceRErase","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.balanceR_eq_balanceRErase\"><span class=\"name\">Std</span>.<span class=\"name\">DTreeMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Impl</span>.<span class=\"name\">balanceR_eq_balanceRErase</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k</span> : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">v</span> : <span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">k</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">l </span><span class=\"fn\">r</span> : <span class=\"fn\"><a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl\">Impl</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">hlb</span> : <span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Std/Data/DTreeMap/Internal/Balanced.html#Std.DTreeMap.Internal.Impl.Balanced\">Balanced</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">hrb</span> : <span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Std/Data/DTreeMap/Internal/Balanced.html#Std.DTreeMap.Internal.Impl.Balanced\">Balanced</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">hlr</span> : <span class=\"fn\"><a href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.BalanceLPrecond\">BalanceLPrecond</a> <span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl.size\">size</a></span> <span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl.size\">size</a></span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.balanceR\">balanceR</a> <span class=\"fn\">k</span> <span class=\"fn\">v</span> <span class=\"fn\">l</span> <span class=\"fn\">r</span> <span class=\"fn\">hlb</span> <span class=\"fn\">hrb</span> <span class=\"fn\">hlr</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.balanceRErase\">balanceRErase</a> <span class=\"fn\">k</span> <span class=\"fn\">v</span> <span class=\"fn\">l</span> <span class=\"fn\">r</span> <span class=\"fn\">hlb</span> <span class=\"fn\">hrb</span> <span class=\"fn\">⋯</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Data/DTreeMap/Internal/Balancing.lean#L698-L708","name":"Std.DTreeMap.Internal.Impl.balanceL!_eq_balance!","line":698,"kind":"theorem","docLink":"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.balanceL!_eq_balance!","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.balanceL!_eq_balance!\"><span class=\"name\">Std</span>.<span class=\"name\">DTreeMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Impl</span>.<span class=\"name\">balanceL!_eq_balance!</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k</span> : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">v</span> : <span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">k</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">l </span><span class=\"fn\">r</span> : <span class=\"fn\"><a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl\">Impl</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hlb</span> : <span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Std/Data/DTreeMap/Internal/Balanced.html#Std.DTreeMap.Internal.Impl.Balanced\">Balanced</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hrb</span> : <span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Std/Data/DTreeMap/Internal/Balanced.html#Std.DTreeMap.Internal.Impl.Balanced\">Balanced</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hlr</span> : <span class=\"fn\"><a href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.BalanceLErasePrecond\">BalanceLErasePrecond</a> <span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl.size\">size</a></span> <span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl.size\">size</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.balanceL!\">balanceL!</a> <span class=\"fn\">k</span> <span class=\"fn\">v</span> <span class=\"fn\">l</span> <span class=\"fn\">r</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.balance!\">balance!</a> <span class=\"fn\">k</span> <span class=\"fn\">v</span> <span class=\"fn\">l</span> <span class=\"fn\">r</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Data/DTreeMap/Internal/Balancing.lean#L690-L696","name":"Std.DTreeMap.Internal.Impl.balanceLErase_eq_balanceL!","line":690,"kind":"theorem","docLink":"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.balanceLErase_eq_balanceL!","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.balanceLErase_eq_balanceL!\"><span class=\"name\">Std</span>.<span class=\"name\">DTreeMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Impl</span>.<span class=\"name\">balanceLErase_eq_balanceL!</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k</span> : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">v</span> : <span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">k</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">l </span><span class=\"fn\">r</span> : <span class=\"fn\"><a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl\">Impl</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">hlb</span> : <span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Std/Data/DTreeMap/Internal/Balanced.html#Std.DTreeMap.Internal.Impl.Balanced\">Balanced</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">hrb</span> : <span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Std/Data/DTreeMap/Internal/Balanced.html#Std.DTreeMap.Internal.Impl.Balanced\">Balanced</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">hlr</span> : <span class=\"fn\"><a href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.BalanceLErasePrecond\">BalanceLErasePrecond</a> <span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl.size\">size</a></span> <span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl.size\">size</a></span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.balanceLErase\">balanceLErase</a> <span class=\"fn\">k</span> <span class=\"fn\">v</span> <span class=\"fn\">l</span> <span class=\"fn\">r</span> <span class=\"fn\">hlb</span> <span class=\"fn\">hrb</span> <span class=\"fn\">hlr</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.balanceL!\">balanceL!</a> <span class=\"fn\">k</span> <span class=\"fn\">v</span> <span class=\"fn\">l</span> <span class=\"fn\">r</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Data/DTreeMap/Internal/Balancing.lean#L681-L688","name":"Std.DTreeMap.Internal.Impl.balanceL_eq_balanceLErase","line":681,"kind":"theorem","docLink":"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.balanceL_eq_balanceLErase","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.balanceL_eq_balanceLErase\"><span class=\"name\">Std</span>.<span class=\"name\">DTreeMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Impl</span>.<span class=\"name\">balanceL_eq_balanceLErase</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k</span> : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">v</span> : <span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">k</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">l </span><span class=\"fn\">r</span> : <span class=\"fn\"><a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl\">Impl</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">hlb</span> : <span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Std/Data/DTreeMap/Internal/Balanced.html#Std.DTreeMap.Internal.Impl.Balanced\">Balanced</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">hrb</span> : <span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Std/Data/DTreeMap/Internal/Balanced.html#Std.DTreeMap.Internal.Impl.Balanced\">Balanced</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">hlr</span> : <span class=\"fn\"><a href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.BalanceLPrecond\">BalanceLPrecond</a> <span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl.size\">size</a></span> <span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl.size\">size</a></span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.balanceL\">balanceL</a> <span class=\"fn\">k</span> <span class=\"fn\">v</span> <span class=\"fn\">l</span> <span class=\"fn\">r</span> <span class=\"fn\">hlb</span> <span class=\"fn\">hrb</span> <span class=\"fn\">hlr</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.balanceLErase\">balanceLErase</a> <span class=\"fn\">k</span> <span class=\"fn\">v</span> <span class=\"fn\">l</span> <span class=\"fn\">r</span> <span class=\"fn\">hlb</span> <span class=\"fn\">hrb</span> <span class=\"fn\">⋯</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Data/DTreeMap/Internal/Balancing.lean#L667-L679","name":"Std.DTreeMap.Internal.Impl.balanced_rotateR","line":667,"kind":"theorem","docLink":"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.balanced_rotateR","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.balanced_rotateR\"><span class=\"name\">Std</span>.<span class=\"name\">DTreeMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Impl</span>.<span class=\"name\">balanced_rotateR</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">v</span> : <span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">k</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ls</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">lk</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">lv</span> : <span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">lk</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ll </span><span class=\"fn\">lr </span><span class=\"fn\">r</span> : <span class=\"fn\"><a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl\">Impl</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hl</span> : <span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl.inner\">inner</a> <span class=\"fn\">ls</span> <span class=\"fn\">lk</span> <span class=\"fn\">lv</span> <span class=\"fn\">ll</span> <span class=\"fn\">lr</span>)</span>.<a href=\"./Std/Data/DTreeMap/Internal/Balanced.html#Std.DTreeMap.Internal.Impl.Balanced\">Balanced</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hr</span> : <span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Std/Data/DTreeMap/Internal/Balanced.html#Std.DTreeMap.Internal.Impl.Balanced\">Balanced</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hlr</span> : <span class=\"fn\"><a href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.BalanceLErasePrecond\">BalanceLErasePrecond</a> <span class=\"fn\">ls</span> <span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl.size\">size</a></span></span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\"><a href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.BalanceLErasePrecond\">BalanceLErasePrecond</a> <span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl.size\">size</a></span> <span class=\"fn\">ls</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hh</span> : <span class=\"fn\">ls</span> <a href=\"./Init/Prelude.html#GT.gt\">&gt;</a> <a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.delta\">delta</a> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl.size\">size</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.rotateR\">rotateR</a> <span class=\"fn\">k</span> <span class=\"fn\">v</span> <span class=\"fn\">lk</span> <span class=\"fn\">lv</span> <span class=\"fn\">ll</span> <span class=\"fn\">lr</span> <span class=\"fn\">r</span>)</span>.<a href=\"./Std/Data/DTreeMap/Internal/Balanced.html#Std.DTreeMap.Internal.Impl.Balanced\">Balanced</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Data/DTreeMap/Internal/Balancing.lean#L652-L665","name":"Std.DTreeMap.Internal.Impl.balanced_rotateL","line":652,"kind":"theorem","docLink":"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.balanced_rotateL","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.balanced_rotateL\"><span class=\"name\">Std</span>.<span class=\"name\">DTreeMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Impl</span>.<span class=\"name\">balanced_rotateL</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">v</span> : <span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">k</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">l</span> : <span class=\"fn\"><a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl\">Impl</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">rs</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">rk</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">rv</span> : <span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">rk</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">rl </span><span class=\"fn\">rr</span> : <span class=\"fn\"><a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl\">Impl</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hl</span> : <span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Std/Data/DTreeMap/Internal/Balanced.html#Std.DTreeMap.Internal.Impl.Balanced\">Balanced</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hr</span> : <span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl.inner\">inner</a> <span class=\"fn\">rs</span> <span class=\"fn\">rk</span> <span class=\"fn\">rv</span> <span class=\"fn\">rl</span> <span class=\"fn\">rr</span>)</span>.<a href=\"./Std/Data/DTreeMap/Internal/Balanced.html#Std.DTreeMap.Internal.Impl.Balanced\">Balanced</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hlr</span> : <span class=\"fn\"><a href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.BalanceLErasePrecond\">BalanceLErasePrecond</a> <span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl.size\">size</a></span> <span class=\"fn\">rs</span></span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\"><a href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.BalanceLErasePrecond\">BalanceLErasePrecond</a> <span class=\"fn\">rs</span> <span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl.size\">size</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hh</span> : <span class=\"fn\">rs</span> <a href=\"./Init/Prelude.html#GT.gt\">&gt;</a> <a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.delta\">delta</a> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl.size\">size</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.rotateL\">rotateL</a> <span class=\"fn\">k</span> <span class=\"fn\">v</span> <span class=\"fn\">l</span> <span class=\"fn\">rk</span> <span class=\"fn\">rv</span> <span class=\"fn\">rl</span> <span class=\"fn\">rr</span>)</span>.<a href=\"./Std/Data/DTreeMap/Internal/Balanced.html#Std.DTreeMap.Internal.Impl.Balanced\">Balanced</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Data/DTreeMap/Internal/Balancing.lean#L645-L650","name":"Std.DTreeMap.Internal.Impl.balanced_doubleR","line":645,"kind":"theorem","docLink":"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.balanced_doubleR","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.balanced_doubleR\"><span class=\"name\">Std</span>.<span class=\"name\">DTreeMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Impl</span>.<span class=\"name\">balanced_doubleR</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">v</span> : <span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">k</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ls</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">lk</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">lv</span> : <span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">lk</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ll</span> : <span class=\"fn\"><a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl\">Impl</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">lrs</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">lrk</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">lrv</span> : <span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">lrk</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">lrl </span><span class=\"fn\">lrr </span><span class=\"fn\">r</span> : <span class=\"fn\"><a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl\">Impl</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hl</span> : <span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl.inner\">inner</a> <span class=\"fn\">ls</span> <span class=\"fn\">lk</span> <span class=\"fn\">lv</span> <span class=\"fn\">ll</span> <span class=\"fn\">(<a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl.inner\">inner</a> <span class=\"fn\">lrs</span> <span class=\"fn\">lrk</span> <span class=\"fn\">lrv</span> <span class=\"fn\">lrl</span> <span class=\"fn\">lrr</span>)</span>)</span>.<a href=\"./Std/Data/DTreeMap/Internal/Balanced.html#Std.DTreeMap.Internal.Impl.Balanced\">Balanced</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hr</span> : <span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Std/Data/DTreeMap/Internal/Balanced.html#Std.DTreeMap.Internal.Impl.Balanced\">Balanced</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hlr</span> : <span class=\"fn\"><a href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.BalanceLErasePrecond\">BalanceLErasePrecond</a> <span class=\"fn\">ls</span> <span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl.size\">size</a></span></span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\"><a href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.BalanceLErasePrecond\">BalanceLErasePrecond</a> <span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl.size\">size</a></span> <span class=\"fn\">ls</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hh</span> : <span class=\"fn\">ls</span> <a href=\"./Init/Prelude.html#GT.gt\">&gt;</a> <a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.delta\">delta</a> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl.size\">size</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hx</span> : <a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\">lrs</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.ratio\">ratio</a> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">ll</span>.<a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl.size\">size</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.doubleR\">doubleR</a> <span class=\"fn\">k</span> <span class=\"fn\">v</span> <span class=\"fn\">lk</span> <span class=\"fn\">lv</span> <span class=\"fn\">ll</span> <span class=\"fn\">lrk</span> <span class=\"fn\">lrv</span> <span class=\"fn\">lrl</span> <span class=\"fn\">lrr</span> <span class=\"fn\">r</span>)</span>.<a href=\"./Std/Data/DTreeMap/Internal/Balanced.html#Std.DTreeMap.Internal.Impl.Balanced\">Balanced</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Data/DTreeMap/Internal/Balancing.lean#L638-L643","name":"Std.DTreeMap.Internal.Impl.balanced_doubleL","line":638,"kind":"theorem","docLink":"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.balanced_doubleL","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.balanced_doubleL\"><span class=\"name\">Std</span>.<span class=\"name\">DTreeMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Impl</span>.<span class=\"name\">balanced_doubleL</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">v</span> : <span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">k</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">l</span> : <span class=\"fn\"><a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl\">Impl</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">rs</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">rk</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">rv</span> : <span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">rk</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">rls</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">rlk</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">rlv</span> : <span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">rlk</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">rll </span><span class=\"fn\">rlr </span><span class=\"fn\">rr</span> : <span class=\"fn\"><a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl\">Impl</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hl</span> : <span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Std/Data/DTreeMap/Internal/Balanced.html#Std.DTreeMap.Internal.Impl.Balanced\">Balanced</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hr</span> : <span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl.inner\">inner</a> <span class=\"fn\">rs</span> <span class=\"fn\">rk</span> <span class=\"fn\">rv</span> <span class=\"fn\">(<a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl.inner\">inner</a> <span class=\"fn\">rls</span> <span class=\"fn\">rlk</span> <span class=\"fn\">rlv</span> <span class=\"fn\">rll</span> <span class=\"fn\">rlr</span>)</span> <span class=\"fn\">rr</span>)</span>.<a href=\"./Std/Data/DTreeMap/Internal/Balanced.html#Std.DTreeMap.Internal.Impl.Balanced\">Balanced</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hlr</span> : <span class=\"fn\"><a href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.BalanceLErasePrecond\">BalanceLErasePrecond</a> <span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl.size\">size</a></span> <span class=\"fn\">rs</span></span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\"><a href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.BalanceLErasePrecond\">BalanceLErasePrecond</a> <span class=\"fn\">rs</span> <span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl.size\">size</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hh</span> : <span class=\"fn\">rs</span> <a href=\"./Init/Prelude.html#GT.gt\">&gt;</a> <a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.delta\">delta</a> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl.size\">size</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hx</span> : <a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\">rls</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.ratio\">ratio</a> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">rr</span>.<a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl.size\">size</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.doubleL\">doubleL</a> <span class=\"fn\">k</span> <span class=\"fn\">v</span> <span class=\"fn\">l</span> <span class=\"fn\">rk</span> <span class=\"fn\">rv</span> <span class=\"fn\">rlk</span> <span class=\"fn\">rlv</span> <span class=\"fn\">rll</span> <span class=\"fn\">rlr</span> <span class=\"fn\">rr</span>)</span>.<a href=\"./Std/Data/DTreeMap/Internal/Balanced.html#Std.DTreeMap.Internal.Impl.Balanced\">Balanced</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Data/DTreeMap/Internal/Balancing.lean#L631-L636","name":"Std.DTreeMap.Internal.Impl.balanced_singleR","line":631,"kind":"theorem","docLink":"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.balanced_singleR","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.balanced_singleR\"><span class=\"name\">Std</span>.<span class=\"name\">DTreeMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Impl</span>.<span class=\"name\">balanced_singleR</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">v</span> : <span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">k</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ls</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">lk</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">lv</span> : <span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">lk</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ll </span><span class=\"fn\">lr </span><span class=\"fn\">r</span> : <span class=\"fn\"><a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl\">Impl</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hl</span> : <span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl.inner\">inner</a> <span class=\"fn\">ls</span> <span class=\"fn\">lk</span> <span class=\"fn\">lv</span> <span class=\"fn\">ll</span> <span class=\"fn\">lr</span>)</span>.<a href=\"./Std/Data/DTreeMap/Internal/Balanced.html#Std.DTreeMap.Internal.Impl.Balanced\">Balanced</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hr</span> : <span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Std/Data/DTreeMap/Internal/Balanced.html#Std.DTreeMap.Internal.Impl.Balanced\">Balanced</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hlr</span> : <span class=\"fn\"><a href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.BalanceLErasePrecond\">BalanceLErasePrecond</a> <span class=\"fn\">ls</span> <span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl.size\">size</a></span></span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\"><a href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.BalanceLErasePrecond\">BalanceLErasePrecond</a> <span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl.size\">size</a></span> <span class=\"fn\">ls</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hh</span> : <span class=\"fn\">ls</span> <a href=\"./Init/Prelude.html#GT.gt\">&gt;</a> <a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.delta\">delta</a> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl.size\">size</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hx</span> : <span class=\"fn\"><span class=\"fn\">lr</span>.<a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl.size\">size</a></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.ratio\">ratio</a> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">ll</span>.<a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl.size\">size</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.singleR\">singleR</a> <span class=\"fn\">k</span> <span class=\"fn\">v</span> <span class=\"fn\">lk</span> <span class=\"fn\">lv</span> <span class=\"fn\">ll</span> <span class=\"fn\">lr</span> <span class=\"fn\">r</span>)</span>.<a href=\"./Std/Data/DTreeMap/Internal/Balanced.html#Std.DTreeMap.Internal.Impl.Balanced\">Balanced</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Data/DTreeMap/Internal/Balancing.lean#L623-L629","name":"Std.DTreeMap.Internal.Impl.balanced_singleL","line":623,"kind":"theorem","docLink":"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.balanced_singleL","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.balanced_singleL\"><span class=\"name\">Std</span>.<span class=\"name\">DTreeMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Impl</span>.<span class=\"name\">balanced_singleL</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">v</span> : <span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">k</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">l</span> : <span class=\"fn\"><a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl\">Impl</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">rs</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">rk</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">rv</span> : <span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">rk</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">rl </span><span class=\"fn\">rr</span> : <span class=\"fn\"><a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl\">Impl</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hl</span> : <span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Std/Data/DTreeMap/Internal/Balanced.html#Std.DTreeMap.Internal.Impl.Balanced\">Balanced</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hr</span> : <span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl.inner\">inner</a> <span class=\"fn\">rs</span> <span class=\"fn\">rk</span> <span class=\"fn\">rv</span> <span class=\"fn\">rl</span> <span class=\"fn\">rr</span>)</span>.<a href=\"./Std/Data/DTreeMap/Internal/Balanced.html#Std.DTreeMap.Internal.Impl.Balanced\">Balanced</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hlr</span> : <span class=\"fn\"><a href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.BalanceLErasePrecond\">BalanceLErasePrecond</a> <span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl.size\">size</a></span> <span class=\"fn\">rs</span></span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\"><a href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.BalanceLErasePrecond\">BalanceLErasePrecond</a> <span class=\"fn\">rs</span> <span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl.size\">size</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hh</span> : <span class=\"fn\">rs</span> <a href=\"./Init/Prelude.html#GT.gt\">&gt;</a> <a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.delta\">delta</a> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl.size\">size</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hx</span> : <span class=\"fn\"><span class=\"fn\">rl</span>.<a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl.size\">size</a></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.ratio\">ratio</a> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">rr</span>.<a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl.size\">size</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.singleL\">singleL</a> <span class=\"fn\">k</span> <span class=\"fn\">v</span> <span class=\"fn\">l</span> <span class=\"fn\">rk</span> <span class=\"fn\">rv</span> <span class=\"fn\">rl</span> <span class=\"fn\">rr</span>)</span>.<a href=\"./Std/Data/DTreeMap/Internal/Balanced.html#Std.DTreeMap.Internal.Impl.Balanced\">Balanced</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Data/DTreeMap/Internal/Balancing.lean#L620-L621","name":"Std.DTreeMap.Internal.Impl.Balanced.map","line":620,"kind":"theorem","docLink":"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.Balanced.map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.Balanced.map\"><span class=\"name\">Std</span>.<span class=\"name\">DTreeMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Impl</span>.<span class=\"name\">Balanced</span>.<span class=\"name\">map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">t₁ </span><span class=\"fn\">t₂</span> : <span class=\"fn\"><a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl\">Impl</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">t₁</span>.<a href=\"./Std/Data/DTreeMap/Internal/Balanced.html#Std.DTreeMap.Internal.Impl.Balanced\">Balanced</a></span> → <span class=\"fn\"><span class=\"fn\">t₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">t₂</span> → <span class=\"fn\"><span class=\"fn\">t₂</span>.<a href=\"./Std/Data/DTreeMap/Internal/Balanced.html#Std.DTreeMap.Internal.Impl.Balanced\">Balanced</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Data/DTreeMap/Internal/Balancing.lean#L529-L618","name":"Std.DTreeMap.Internal.Impl.balance!_eq_balanceₘ","line":529,"kind":"theorem","docLink":"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.balance!_eq_balanceₘ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.balance!_eq_balanceₘ\"><span class=\"name\">Std</span>.<span class=\"name\">DTreeMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Impl</span>.<span class=\"name\">balance!_eq_balanceₘ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k</span> : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">v</span> : <span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">k</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">l </span><span class=\"fn\">r</span> : <span class=\"fn\"><a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl\">Impl</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hlb</span> : <span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Std/Data/DTreeMap/Internal/Balanced.html#Std.DTreeMap.Internal.Impl.Balanced\">Balanced</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hrb</span> : <span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Std/Data/DTreeMap/Internal/Balanced.html#Std.DTreeMap.Internal.Impl.Balanced\">Balanced</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hlr</span> : <span class=\"fn\"><a href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.BalanceLErasePrecond\">BalanceLErasePrecond</a> <span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl.size\">size</a></span> <span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl.size\">size</a></span></span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\"><a href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.BalanceLErasePrecond\">BalanceLErasePrecond</a> <span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl.size\">size</a></span> <span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl.size\">size</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.balance!\">balance!</a> <span class=\"fn\">k</span> <span class=\"fn\">v</span> <span class=\"fn\">l</span> <span class=\"fn\">r</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.balanceₘ\">balanceₘ</a> <span class=\"fn\">k</span> <span class=\"fn\">v</span> <span class=\"fn\">l</span> <span class=\"fn\">r</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Data/DTreeMap/Internal/Balancing.lean#L512-L525","name":"Std.DTreeMap.Internal.Impl.balanceₘ","line":512,"kind":"def","docLink":"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.balanceₘ","doc":"Internal implementation detail of the tree map "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.balanceₘ\"><span class=\"name\">Std</span>.<span class=\"name\">DTreeMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Impl</span>.<span class=\"name\">balanceₘ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">v</span> : <span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">k</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">l </span><span class=\"fn\">r</span> : <span class=\"fn\"><a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl\">Impl</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl\">Impl</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Data/DTreeMap/Internal/Balancing.lean#L503-L510","name":"Std.DTreeMap.Internal.Impl.size_rotateR","line":503,"kind":"theorem","docLink":"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.size_rotateR","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.size_rotateR\"><span class=\"name\">Std</span>.<span class=\"name\">DTreeMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Impl</span>.<span class=\"name\">size_rotateR</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k</span> : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">v</span> : <span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">k</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">lk</span> : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">lv</span> : <span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">lk</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ll </span><span class=\"fn\">lr </span><span class=\"fn\">r</span> : <span class=\"fn\"><a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl\">Impl</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">lr</span>.<a href=\"./Std/Data/DTreeMap/Internal/Balanced.html#Std.DTreeMap.Internal.Impl.Balanced\">Balanced</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.rotateR\">rotateR</a> <span class=\"fn\">k</span> <span class=\"fn\">v</span> <span class=\"fn\">lk</span> <span class=\"fn\">lv</span> <span class=\"fn\">ll</span> <span class=\"fn\">lr</span> <span class=\"fn\">r</span>)</span>.<a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl.size\">size</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.bin\">bin</a> <span class=\"fn\">k</span> <span class=\"fn\">v</span> <span class=\"fn\">(<a href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.bin\">bin</a> <span class=\"fn\">lk</span> <span class=\"fn\">lv</span> <span class=\"fn\">ll</span> <span class=\"fn\">lr</span>)</span> <span class=\"fn\">r</span>)</span>.<a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl.size\">size</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Data/DTreeMap/Internal/Balancing.lean#L494-L501","name":"Std.DTreeMap.Internal.Impl.rotateR","line":494,"kind":"def","docLink":"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.rotateR","doc":"Internal implementation detail of the tree map "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.rotateR\"><span class=\"name\">Std</span>.<span class=\"name\">DTreeMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Impl</span>.<span class=\"name\">rotateR</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">v</span> : <span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">k</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">lk</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">lv</span> : <span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">lk</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ll </span><span class=\"fn\">lr </span><span class=\"fn\">r</span> : <span class=\"fn\"><a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl\">Impl</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl\">Impl</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Data/DTreeMap/Internal/Balancing.lean#L485-L492","name":"Std.DTreeMap.Internal.Impl.size_rotateL","line":485,"kind":"theorem","docLink":"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.size_rotateL","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.size_rotateL\"><span class=\"name\">Std</span>.<span class=\"name\">DTreeMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Impl</span>.<span class=\"name\">size_rotateL</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k</span> : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">v</span> : <span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">k</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">l</span> : <span class=\"fn\"><a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl\">Impl</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">rk</span> : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">rv</span> : <span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">rk</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">rl </span><span class=\"fn\">rr</span> : <span class=\"fn\"><a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl\">Impl</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">rl</span>.<a href=\"./Std/Data/DTreeMap/Internal/Balanced.html#Std.DTreeMap.Internal.Impl.Balanced\">Balanced</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.rotateL\">rotateL</a> <span class=\"fn\">k</span> <span class=\"fn\">v</span> <span class=\"fn\">l</span> <span class=\"fn\">rk</span> <span class=\"fn\">rv</span> <span class=\"fn\">rl</span> <span class=\"fn\">rr</span>)</span>.<a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl.size\">size</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.bin\">bin</a> <span class=\"fn\">k</span> <span class=\"fn\">v</span> <span class=\"fn\">l</span> <span class=\"fn\">(<a href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.bin\">bin</a> <span class=\"fn\">rk</span> <span class=\"fn\">rv</span> <span class=\"fn\">rl</span> <span class=\"fn\">rr</span>)</span>)</span>.<a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl.size\">size</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Data/DTreeMap/Internal/Balancing.lean#L475-L483","name":"Std.DTreeMap.Internal.Impl.rotateL","line":475,"kind":"def","docLink":"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.rotateL","doc":"Internal implementation detail of the tree map "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.rotateL\"><span class=\"name\">Std</span>.<span class=\"name\">DTreeMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Impl</span>.<span class=\"name\">rotateL</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">v</span> : <span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">k</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">l</span> : <span class=\"fn\"><a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl\">Impl</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">rk</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">rv</span> : <span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">rk</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">rl </span><span class=\"fn\">rr</span> : <span class=\"fn\"><a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl\">Impl</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl\">Impl</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Data/DTreeMap/Internal/Balancing.lean#L469-L473","name":"Std.DTreeMap.Internal.Impl.size_doubleR","line":469,"kind":"theorem","docLink":"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.size_doubleR","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.size_doubleR\"><span class=\"name\">Std</span>.<span class=\"name\">DTreeMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Impl</span>.<span class=\"name\">size_doubleR</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">v</span> : <span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">k</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">lk</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">lv</span> : <span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">lk</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ll</span> : <span class=\"fn\"><a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl\">Impl</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">lrk</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">lrv</span> : <span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">lrk</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">lrl </span><span class=\"fn\">lrr </span><span class=\"fn\">r</span> : <span class=\"fn\"><a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl\">Impl</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.doubleR\">doubleR</a> <span class=\"fn\">k</span> <span class=\"fn\">v</span> <span class=\"fn\">lk</span> <span class=\"fn\">lv</span> <span class=\"fn\">ll</span> <span class=\"fn\">lrk</span> <span class=\"fn\">lrv</span> <span class=\"fn\">lrl</span> <span class=\"fn\">lrr</span> <span class=\"fn\">r</span>)</span>.<a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl.size\">size</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.bin\">bin</a> <span class=\"fn\">k</span> <span class=\"fn\">v</span> <span class=\"fn\">(<a href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.bin\">bin</a> <span class=\"fn\">lk</span> <span class=\"fn\">lv</span> <span class=\"fn\">ll</span> <span class=\"fn\">(<a href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.bin\">bin</a> <span class=\"fn\">lrk</span> <span class=\"fn\">lrv</span> <span class=\"fn\">lrl</span> <span class=\"fn\">lrr</span>)</span>)</span> <span class=\"fn\">r</span>)</span>.<a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl.size\">size</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Data/DTreeMap/Internal/Balancing.lean#L463-L467","name":"Std.DTreeMap.Internal.Impl.doubleR","line":463,"kind":"def","docLink":"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.doubleR","doc":"A double right rotation. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.doubleR\"><span class=\"name\">Std</span>.<span class=\"name\">DTreeMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Impl</span>.<span class=\"name\">doubleR</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">v</span> : <span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">k</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">lk</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">lv</span> : <span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">lk</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ll</span> : <span class=\"fn\"><a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl\">Impl</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">lrk</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">lrv</span> : <span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">lrk</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">lrl </span><span class=\"fn\">lrr </span><span class=\"fn\">r</span> : <span class=\"fn\"><a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl\">Impl</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl\">Impl</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Data/DTreeMap/Internal/Balancing.lean#L457-L461","name":"Std.DTreeMap.Internal.Impl.size_doubleL","line":457,"kind":"theorem","docLink":"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.size_doubleL","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.size_doubleL\"><span class=\"name\">Std</span>.<span class=\"name\">DTreeMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Impl</span>.<span class=\"name\">size_doubleL</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">v</span> : <span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">k</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">l</span> : <span class=\"fn\"><a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl\">Impl</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">rk</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">rv</span> : <span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">rk</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">rlk</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">rlv</span> : <span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">rlk</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">rll </span><span class=\"fn\">rlr </span><span class=\"fn\">rr</span> : <span class=\"fn\"><a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl\">Impl</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.doubleL\">doubleL</a> <span class=\"fn\">k</span> <span class=\"fn\">v</span> <span class=\"fn\">l</span> <span class=\"fn\">rk</span> <span class=\"fn\">rv</span> <span class=\"fn\">rlk</span> <span class=\"fn\">rlv</span> <span class=\"fn\">rll</span> <span class=\"fn\">rlr</span> <span class=\"fn\">rr</span>)</span>.<a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl.size\">size</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.bin\">bin</a> <span class=\"fn\">k</span> <span class=\"fn\">v</span> <span class=\"fn\">l</span> <span class=\"fn\">(<a href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.bin\">bin</a> <span class=\"fn\">rk</span> <span class=\"fn\">rv</span> <span class=\"fn\">(<a href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.bin\">bin</a> <span class=\"fn\">rlk</span> <span class=\"fn\">rlv</span> <span class=\"fn\">rll</span> <span class=\"fn\">rlr</span>)</span> <span class=\"fn\">rr</span>)</span>)</span>.<a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl.size\">size</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Data/DTreeMap/Internal/Balancing.lean#L451-L455","name":"Std.DTreeMap.Internal.Impl.doubleL","line":451,"kind":"def","docLink":"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.doubleL","doc":"A double left rotation. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.doubleL\"><span class=\"name\">Std</span>.<span class=\"name\">DTreeMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Impl</span>.<span class=\"name\">doubleL</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">v</span> : <span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">k</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">l</span> : <span class=\"fn\"><a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl\">Impl</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">rk</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">rv</span> : <span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">rk</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">rlk</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">rlv</span> : <span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">rlk</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">rll </span><span class=\"fn\">rlr </span><span class=\"fn\">rr</span> : <span class=\"fn\"><a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl\">Impl</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl\">Impl</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Data/DTreeMap/Internal/Balancing.lean#L446-L449","name":"Std.DTreeMap.Internal.Impl.size_singleR","line":446,"kind":"theorem","docLink":"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.size_singleR","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.size_singleR\"><span class=\"name\">Std</span>.<span class=\"name\">DTreeMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Impl</span>.<span class=\"name\">size_singleR</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">v</span> : <span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">k</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">lk</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">lv</span> : <span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">lk</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ll </span><span class=\"fn\">lr </span><span class=\"fn\">r</span> : <span class=\"fn\"><a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl\">Impl</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.singleR\">singleR</a> <span class=\"fn\">k</span> <span class=\"fn\">v</span> <span class=\"fn\">lk</span> <span class=\"fn\">lv</span> <span class=\"fn\">ll</span> <span class=\"fn\">lr</span> <span class=\"fn\">r</span>)</span>.<a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl.size\">size</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.bin\">bin</a> <span class=\"fn\">k</span> <span class=\"fn\">v</span> <span class=\"fn\">(<a href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.bin\">bin</a> <span class=\"fn\">lk</span> <span class=\"fn\">lv</span> <span class=\"fn\">ll</span> <span class=\"fn\">lr</span>)</span> <span class=\"fn\">r</span>)</span>.<a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl.size\">size</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Data/DTreeMap/Internal/Balancing.lean#L441-L444","name":"Std.DTreeMap.Internal.Impl.singleR","line":441,"kind":"def","docLink":"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.singleR","doc":"A single right rotation. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.singleR\"><span class=\"name\">Std</span>.<span class=\"name\">DTreeMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Impl</span>.<span class=\"name\">singleR</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">v</span> : <span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">k</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">lk</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">lv</span> : <span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">lk</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ll </span><span class=\"fn\">lr </span><span class=\"fn\">r</span> : <span class=\"fn\"><a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl\">Impl</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl\">Impl</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Data/DTreeMap/Internal/Balancing.lean#L436-L439","name":"Std.DTreeMap.Internal.Impl.size_singleL","line":436,"kind":"theorem","docLink":"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.size_singleL","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.size_singleL\"><span class=\"name\">Std</span>.<span class=\"name\">DTreeMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Impl</span>.<span class=\"name\">size_singleL</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">v</span> : <span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">k</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">l</span> : <span class=\"fn\"><a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl\">Impl</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">rk</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">rv</span> : <span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">rk</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">rl </span><span class=\"fn\">rr</span> : <span class=\"fn\"><a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl\">Impl</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.singleL\">singleL</a> <span class=\"fn\">k</span> <span class=\"fn\">v</span> <span class=\"fn\">l</span> <span class=\"fn\">rk</span> <span class=\"fn\">rv</span> <span class=\"fn\">rl</span> <span class=\"fn\">rr</span>)</span>.<a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl.size\">size</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.bin\">bin</a> <span class=\"fn\">k</span> <span class=\"fn\">v</span> <span class=\"fn\">l</span> <span class=\"fn\">(<a href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.bin\">bin</a> <span class=\"fn\">rk</span> <span class=\"fn\">rv</span> <span class=\"fn\">rl</span> <span class=\"fn\">rr</span>)</span>)</span>.<a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl.size\">size</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Data/DTreeMap/Internal/Balancing.lean#L431-L434","name":"Std.DTreeMap.Internal.Impl.singleL","line":431,"kind":"def","docLink":"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.singleL","doc":"A single left rotation. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.singleL\"><span class=\"name\">Std</span>.<span class=\"name\">DTreeMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Impl</span>.<span class=\"name\">singleL</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">v</span> : <span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">k</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">l</span> : <span class=\"fn\"><a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl\">Impl</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">rk</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">rv</span> : <span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">rk</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">rl </span><span class=\"fn\">rr</span> : <span class=\"fn\"><a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl\">Impl</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl\">Impl</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Data/DTreeMap/Internal/Balancing.lean#L428-L429","name":"Std.DTreeMap.Internal.Impl.size_bin","line":428,"kind":"theorem","docLink":"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.size_bin","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.size_bin\"><span class=\"name\">Std</span>.<span class=\"name\">DTreeMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Impl</span>.<span class=\"name\">size_bin</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">v</span> : <span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">k</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">l </span><span class=\"fn\">r</span> : <span class=\"fn\"><a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl\">Impl</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.bin\">bin</a> <span class=\"fn\">k</span> <span class=\"fn\">v</span> <span class=\"fn\">l</span> <span class=\"fn\">r</span>)</span>.<a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl.size\">size</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl.size\">size</a></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl.size\">size</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Data/DTreeMap/Internal/Balancing.lean#L423-L426","name":"Std.DTreeMap.Internal.Impl.bin","line":423,"kind":"def","docLink":"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.bin","doc":"Constructor for an inner node with the correct size. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.bin\"><span class=\"name\">Std</span>.<span class=\"name\">DTreeMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Impl</span>.<span class=\"name\">bin</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">v</span> : <span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">k</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">l </span><span class=\"fn\">r</span> : <span class=\"fn\"><a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl\">Impl</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl\">Impl</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Data/DTreeMap/Internal/Balancing.lean#L411-L412","name":"Std.DTreeMap.Internal.Impl.balanceLErasePrecond_zero_iff'","line":411,"kind":"theorem","docLink":"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.balanceLErasePrecond_zero_iff'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.balanceLErasePrecond_zero_iff'\"><span class=\"name\">Std</span>.<span class=\"name\">DTreeMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Impl</span>.<span class=\"name\">balanceLErasePrecond_zero_iff'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.BalanceLErasePrecond\">BalanceLErasePrecond</a> <span class=\"fn\">n</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">3</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Data/DTreeMap/Internal/Balancing.lean#L408-L409","name":"Std.DTreeMap.Internal.Impl.balanceLErasePrecond_zero_iff","line":408,"kind":"theorem","docLink":"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.balanceLErasePrecond_zero_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.balanceLErasePrecond_zero_iff\"><span class=\"name\">Std</span>.<span class=\"name\">DTreeMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Impl</span>.<span class=\"name\">balanceLErasePrecond_zero_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.BalanceLErasePrecond\">BalanceLErasePrecond</a> <span class=\"fn\">0</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Data/DTreeMap/Internal/Balancing.lean#L404-L406","name":"Std.DTreeMap.Internal.Impl.BalancedAtRoot.adjust_right","line":404,"kind":"theorem","docLink":"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.BalancedAtRoot.adjust_right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.BalancedAtRoot.adjust_right\"><span class=\"name\">Std</span>.<span class=\"name\">DTreeMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Impl</span>.<span class=\"name\">BalancedAtRoot</span>.<span class=\"name\">adjust_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">l </span><span class=\"fn\">r </span><span class=\"fn\">r'</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Std/Data/DTreeMap/Internal/Balanced.html#Std.DTreeMap.Internal.Impl.BalancedAtRoot\">BalancedAtRoot</a> <span class=\"fn\">l</span> <span class=\"fn\">r</span></span> → <span class=\"fn\"><span class=\"fn\">r</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">r'</span> → <span class=\"fn\"><span class=\"fn\">r'</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">r</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span> → <span class=\"fn\"><a href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.BalanceLErasePrecond\">BalanceLErasePrecond</a> <span class=\"fn\">l</span> <span class=\"fn\">r'</span></span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\"><a href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.BalanceLErasePrecond\">BalanceLErasePrecond</a> <span class=\"fn\">r'</span> <span class=\"fn\">l</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Data/DTreeMap/Internal/Balancing.lean#L401-L402","name":"Std.DTreeMap.Internal.Impl.BalancedAtRoot.adjust_left","line":401,"kind":"theorem","docLink":"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.BalancedAtRoot.adjust_left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.BalancedAtRoot.adjust_left\"><span class=\"name\">Std</span>.<span class=\"name\">DTreeMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Impl</span>.<span class=\"name\">BalancedAtRoot</span>.<span class=\"name\">adjust_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">l </span><span class=\"fn\">l' </span><span class=\"fn\">r</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Std/Data/DTreeMap/Internal/Balanced.html#Std.DTreeMap.Internal.Impl.BalancedAtRoot\">BalancedAtRoot</a> <span class=\"fn\">l</span> <span class=\"fn\">r</span></span> → <span class=\"fn\"><span class=\"fn\">l</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">l'</span> → <span class=\"fn\"><span class=\"fn\">l'</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">l</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span> → <span class=\"fn\"><a href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.BalanceLErasePrecond\">BalanceLErasePrecond</a> <span class=\"fn\">l'</span> <span class=\"fn\">r</span></span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\"><a href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.BalanceLErasePrecond\">BalanceLErasePrecond</a> <span class=\"fn\">r</span> <span class=\"fn\">l'</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Data/DTreeMap/Internal/Balancing.lean#L397-L399","name":"Std.DTreeMap.Internal.Impl.BalancedAtRoot.erase_right","line":397,"kind":"theorem","docLink":"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.BalancedAtRoot.erase_right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.BalancedAtRoot.erase_right\"><span class=\"name\">Std</span>.<span class=\"name\">DTreeMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Impl</span>.<span class=\"name\">BalancedAtRoot</span>.<span class=\"name\">erase_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">l </span><span class=\"fn\">r </span><span class=\"fn\">r'</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Std/Data/DTreeMap/Internal/Balanced.html#Std.DTreeMap.Internal.Impl.BalancedAtRoot\">BalancedAtRoot</a> <span class=\"fn\">l</span> <span class=\"fn\">r</span></span> → <span class=\"fn\"><span class=\"fn\">r</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">r'</span> → <span class=\"fn\"><span class=\"fn\">r'</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">r</span> → <span class=\"fn\"><a href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.BalanceLErasePrecond\">BalanceLErasePrecond</a> <span class=\"fn\">l</span> <span class=\"fn\">r'</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Data/DTreeMap/Internal/Balancing.lean#L394-L395","name":"Std.DTreeMap.Internal.Impl.BalancedAtRoot.erase_left","line":394,"kind":"theorem","docLink":"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.BalancedAtRoot.erase_left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.BalancedAtRoot.erase_left\"><span class=\"name\">Std</span>.<span class=\"name\">DTreeMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Impl</span>.<span class=\"name\">BalancedAtRoot</span>.<span class=\"name\">erase_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">l </span><span class=\"fn\">l' </span><span class=\"fn\">r</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Std/Data/DTreeMap/Internal/Balanced.html#Std.DTreeMap.Internal.Impl.BalancedAtRoot\">BalancedAtRoot</a> <span class=\"fn\">l</span> <span class=\"fn\">r</span></span> → <span class=\"fn\"><span class=\"fn\">l</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">l'</span> → <span class=\"fn\"><span class=\"fn\">l'</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">l</span> → <span class=\"fn\"><a href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.BalanceLErasePrecond\">BalanceLErasePrecond</a> <span class=\"fn\">r</span> <span class=\"fn\">l'</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Data/DTreeMap/Internal/Balancing.lean#L340-L388","name":"Std.DTreeMap.Internal.Impl.balance!","line":340,"kind":"def","docLink":"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.balance!","doc":"Slower version of `balance` which can be used in the complete absence of balancing information\nbut still assumes that the preconditions of `balance` are satisfied\n(otherwise panics).\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.balance!\"><span class=\"name\">Std</span>.<span class=\"name\">DTreeMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Impl</span>.<span class=\"name\">balance!</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">v</span> : <span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">k</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">l </span><span class=\"fn\">r</span> : <span class=\"fn\"><a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl\">Impl</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl\">Impl</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Data/DTreeMap/Internal/Balancing.lean#L276-L338","name":"Std.DTreeMap.Internal.Impl.balance","line":276,"kind":"def","docLink":"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.balance","doc":"Rebalances a tree after at most one element was added or removed from either subtree. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.balance\"><span class=\"name\">Std</span>.<span class=\"name\">DTreeMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Impl</span>.<span class=\"name\">balance</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">v</span> : <span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">k</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">l </span><span class=\"fn\">r</span> : <span class=\"fn\"><a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl\">Impl</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hl</span> : <span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Std/Data/DTreeMap/Internal/Balanced.html#Std.DTreeMap.Internal.Impl.Balanced\">Balanced</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hr</span> : <span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Std/Data/DTreeMap/Internal/Balanced.html#Std.DTreeMap.Internal.Impl.Balanced\">Balanced</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.BalanceLErasePrecond\">BalanceLErasePrecond</a> <span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl.size\">size</a></span> <span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl.size\">size</a></span></span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\"><a href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.BalanceLErasePrecond\">BalanceLErasePrecond</a> <span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl.size\">size</a></span> <span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl.size\">size</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl\">Impl</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Data/DTreeMap/Internal/Balancing.lean#L242-L270","name":"Std.DTreeMap.Internal.Impl.balanceR!","line":242,"kind":"def","docLink":"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.balanceR!","doc":"Slower version of `balanceR` which can be used in the complete absence of balancing information\nbut still assumes that the preconditions of `balanceR` or `balanceRErase` are satisfied\n(otherwise panics).\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.balanceR!\"><span class=\"name\">Std</span>.<span class=\"name\">DTreeMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Impl</span>.<span class=\"name\">balanceR!</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">v</span> : <span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">k</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">l </span><span class=\"fn\">r</span> : <span class=\"fn\"><a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl\">Impl</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl\">Impl</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Data/DTreeMap/Internal/Balancing.lean#L212-L240","name":"Std.DTreeMap.Internal.Impl.balanceRErase","line":212,"kind":"def","docLink":"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.balanceRErase","doc":"Slower version of `balanceR` with weaker balancing assumptions that hold after erasing from\nthe left side of the tree.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.balanceRErase\"><span class=\"name\">Std</span>.<span class=\"name\">DTreeMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Impl</span>.<span class=\"name\">balanceRErase</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">v</span> : <span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">k</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">l </span><span class=\"fn\">r</span> : <span class=\"fn\"><a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl\">Impl</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hlb</span> : <span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Std/Data/DTreeMap/Internal/Balanced.html#Std.DTreeMap.Internal.Impl.Balanced\">Balanced</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hrb</span> : <span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Std/Data/DTreeMap/Internal/Balanced.html#Std.DTreeMap.Internal.Impl.Balanced\">Balanced</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hlr</span> : <span class=\"fn\"><a href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.BalanceLErasePrecond\">BalanceLErasePrecond</a> <span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl.size\">size</a></span> <span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl.size\">size</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl\">Impl</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Data/DTreeMap/Internal/Balancing.lean#L182-L210","name":"Std.DTreeMap.Internal.Impl.balanceR","line":182,"kind":"def","docLink":"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.balanceR","doc":"Rebalances a tree after at most one element was added to the right subtree. Uses balancing\ninformation to show that some cases are impossible.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.balanceR\"><span class=\"name\">Std</span>.<span class=\"name\">DTreeMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Impl</span>.<span class=\"name\">balanceR</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">v</span> : <span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">k</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">l </span><span class=\"fn\">r</span> : <span class=\"fn\"><a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl\">Impl</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hlb</span> : <span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Std/Data/DTreeMap/Internal/Balanced.html#Std.DTreeMap.Internal.Impl.Balanced\">Balanced</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hrb</span> : <span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Std/Data/DTreeMap/Internal/Balanced.html#Std.DTreeMap.Internal.Impl.Balanced\">Balanced</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hlr</span> : <span class=\"fn\"><a href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.BalanceLPrecond\">BalanceLPrecond</a> <span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl.size\">size</a></span> <span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl.size\">size</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl\">Impl</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Data/DTreeMap/Internal/Balancing.lean#L148-L176","name":"Std.DTreeMap.Internal.Impl.balanceL!","line":148,"kind":"def","docLink":"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.balanceL!","doc":"Slower version of `balanceL` which can be used in the complete absence of balancing information\nbut still assumes that the preconditions of `balanceL` or `balanceL` are satisfied\n(otherwise panics).\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.balanceL!\"><span class=\"name\">Std</span>.<span class=\"name\">DTreeMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Impl</span>.<span class=\"name\">balanceL!</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">v</span> : <span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">k</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">l </span><span class=\"fn\">r</span> : <span class=\"fn\"><a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl\">Impl</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl\">Impl</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Data/DTreeMap/Internal/Balancing.lean#L117-L146","name":"Std.DTreeMap.Internal.Impl.balanceLErase","line":117,"kind":"def","docLink":"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.balanceLErase","doc":"Slower version of `balanceL` with weaker balancing assumptions that hold after erasing from\nthe right side of the tree.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.balanceLErase\"><span class=\"name\">Std</span>.<span class=\"name\">DTreeMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Impl</span>.<span class=\"name\">balanceLErase</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">v</span> : <span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">k</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">l </span><span class=\"fn\">r</span> : <span class=\"fn\"><a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl\">Impl</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hlb</span> : <span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Std/Data/DTreeMap/Internal/Balanced.html#Std.DTreeMap.Internal.Impl.Balanced\">Balanced</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hrb</span> : <span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Std/Data/DTreeMap/Internal/Balanced.html#Std.DTreeMap.Internal.Impl.Balanced\">Balanced</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hlr</span> : <span class=\"fn\"><a href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.BalanceLErasePrecond\">BalanceLErasePrecond</a> <span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl.size\">size</a></span> <span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl.size\">size</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl\">Impl</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Data/DTreeMap/Internal/Balancing.lean#L87-L115","name":"Std.DTreeMap.Internal.Impl.balanceL","line":87,"kind":"def","docLink":"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.balanceL","doc":"Rebalances a tree after at most one element was added to the left subtree. Uses balancing\ninformation to show that some cases are impossible.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.balanceL\"><span class=\"name\">Std</span>.<span class=\"name\">DTreeMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Impl</span>.<span class=\"name\">balanceL</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">v</span> : <span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">k</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">l </span><span class=\"fn\">r</span> : <span class=\"fn\"><a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl\">Impl</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hlb</span> : <span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Std/Data/DTreeMap/Internal/Balanced.html#Std.DTreeMap.Internal.Impl.Balanced\">Balanced</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hrb</span> : <span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Std/Data/DTreeMap/Internal/Balanced.html#Std.DTreeMap.Internal.Impl.Balanced\">Balanced</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hlr</span> : <span class=\"fn\"><a href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.BalanceLPrecond\">BalanceLPrecond</a> <span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl.size\">size</a></span> <span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl.size\">size</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Data/DTreeMap/Internal/Def.html#Std.DTreeMap.Internal.Impl\">Impl</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Data/DTreeMap/Internal/Balancing.lean#L79-L81","name":"Std.DTreeMap.Internal.Impl.BalanceLPrecond.erase","line":79,"kind":"theorem","docLink":"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.BalanceLPrecond.erase","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.BalanceLPrecond.erase\"><span class=\"name\">Std</span>.<span class=\"name\">DTreeMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Impl</span>.<span class=\"name\">BalanceLPrecond</span>.<span class=\"name\">erase</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">left </span><span class=\"fn\">right</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.BalanceLPrecond\">BalanceLPrecond</a> <span class=\"fn\">left</span> <span class=\"fn\">right</span></span> → <span class=\"fn\"><a href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.BalanceLErasePrecond\">BalanceLErasePrecond</a> <span class=\"fn\">left</span> <span class=\"fn\">right</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Data/DTreeMap/Internal/Balancing.lean#L75-L75","name":"Std.DTreeMap.Internal.Impl.«term✓»","line":75,"kind":"def","docLink":"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.«term✓»","doc":"Internal implementation detail of the tree map "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.«term✓»\"><span class=\"name\">Std</span>.<span class=\"name\">DTreeMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Impl</span>.<span class=\"name\">«term✓»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Data/DTreeMap/Internal/Balancing.lean#L57-L72","name":"Std.DTreeMap.Internal.Impl.tacticTree_tac","line":57,"kind":"def","docLink":"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.tacticTree_tac","doc":"Internal implementation detail of the tree map "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.tacticTree_tac\"><span class=\"name\">Std</span>.<span class=\"name\">DTreeMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Impl</span>.<span class=\"name\">tacticTree_tac</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Data/DTreeMap/Internal/Balancing.lean#L46-L50","name":"Std.DTreeMap.Internal.Impl.BalanceLErasePrecond","line":46,"kind":"def","docLink":"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.BalanceLErasePrecond","doc":"Precondition for `balanceLErase`. As Breitner et al. remark, \"not very educational\". "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.BalanceLErasePrecond\"><span class=\"name\">Std</span>.<span class=\"name\">DTreeMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Impl</span>.<span class=\"name\">BalanceLErasePrecond</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">left </span><span class=\"fn\">right</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Data/DTreeMap/Internal/Balancing.lean#L41-L44","name":"Std.DTreeMap.Internal.Impl.BalanceLPrecond","line":41,"kind":"def","docLink":"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.BalanceLPrecond","doc":"Precondition for `balanceL`: at most one element was added to left subtree. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DTreeMap/Internal/Balancing.html#Std.DTreeMap.Internal.Impl.BalanceLPrecond\"><span class=\"name\">Std</span>.<span class=\"name\">DTreeMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Impl</span>.<span class=\"name\">BalanceLPrecond</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">left </span><span class=\"fn\">right</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"}]}