{"name":"Lean.Parser.Term.Doc","instances":[],"imports":["Lean.Parser.Extension"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Parser/Term/Doc.lean#L75-L81","name":"Lean.Parser.Term.Doc.getRecommendedSpellingString.bullet","line":75,"kind":"def","docLink":"./Lean/Parser/Term/Doc.html#Lean.Parser.Term.Doc.getRecommendedSpellingString.bullet","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Term/Doc.html#Lean.Parser.Term.Doc.getRecommendedSpellingString.bullet\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Term</span>.<span class=\"name\">Doc</span>.<span class=\"name\">getRecommendedSpellingString</span>.<span class=\"name\">bullet</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">spelling</span> : <a href=\"./Lean/Parser/Term/Doc.html#Lean.Parser.Term.Doc.RecommendedSpelling\">RecommendedSpelling</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#String\">String</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Parser/Term/Doc.lean#L73-L74","name":"Lean.Parser.Term.Doc.getRecommendedSpellingString.indentLine","line":73,"kind":"def","docLink":"./Lean/Parser/Term/Doc.html#Lean.Parser.Term.Doc.getRecommendedSpellingString.indentLine","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Term/Doc.html#Lean.Parser.Term.Doc.getRecommendedSpellingString.indentLine\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Term</span>.<span class=\"name\">Doc</span>.<span class=\"name\">getRecommendedSpellingString</span>.<span class=\"name\">indentLine</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">str</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#String\">String</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Parser/Term/Doc.lean#L66-L81","name":"Lean.Parser.Term.Doc.getRecommendedSpellingString","line":66,"kind":"def","docLink":"./Lean/Parser/Term/Doc.html#Lean.Parser.Term.Doc.getRecommendedSpellingString","doc":"Renders the recommended spellings for the given declaration into a string for appending to\nthe docstring. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Term/Doc.html#Lean.Parser.Term.Doc.getRecommendedSpellingString\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Term</span>.<span class=\"name\">Doc</span>.<span class=\"name\">getRecommendedSpellingString</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">env</span> : <a href=\"./Lean/Environment.html#Lean.Environment\">Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">declName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#String\">String</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Parser/Term/Doc.lean#L55-L64","name":"Lean.Parser.Term.Doc.getRecommendedSpellingsForName","line":55,"kind":"def","docLink":"./Lean/Parser/Term/Doc.html#Lean.Parser.Term.Doc.getRecommendedSpellingsForName","doc":"Returns the recommended spellings associated with the given declaration name. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Term/Doc.html#Lean.Parser.Term.Doc.getRecommendedSpellingsForName\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Term</span>.<span class=\"name\">Doc</span>.<span class=\"name\">getRecommendedSpellingsForName</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">env</span> : <a href=\"./Lean/Environment.html#Lean.Environment\">Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">declName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Parser/Term/Doc.html#Lean.Parser.Term.Doc.RecommendedSpelling\">RecommendedSpelling</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Parser/Term/Doc.lean#L50-L53","name":"Lean.Parser.Term.Doc.addRecommendedSpelling","line":50,"kind":"def","docLink":"./Lean/Parser/Term/Doc.html#Lean.Parser.Term.Doc.addRecommendedSpelling","doc":"Adds a recommended spelling to the environment. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Term/Doc.html#Lean.Parser.Term.Doc.addRecommendedSpelling\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Term</span>.<span class=\"name\">Doc</span>.<span class=\"name\">addRecommendedSpelling</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">env</span> : <a href=\"./Lean/Environment.html#Lean.Environment\">Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">rec</span> : <a href=\"./Lean/Parser/Term/Doc.html#Lean.Parser.Term.Doc.RecommendedSpelling\">RecommendedSpelling</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">names</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Lean.Name\">Name</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Environment.html#Lean.Environment\">Environment</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Parser/Term/Doc.lean#L39-L48","name":"Lean.Parser.Term.Doc.recommendedSpellingExt","line":39,"kind":"opaque","docLink":"./Lean/Parser/Term/Doc.html#Lean.Parser.Term.Doc.recommendedSpellingExt","doc":"Recommended spellings for notations, stored in such a way that it is easy to generate a table\ncontaining every recommended spelling exactly once. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Term/Doc.html#Lean.Parser.Term.Doc.recommendedSpellingExt\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Term</span>.<span class=\"name\">Doc</span>.<span class=\"name\">recommendedSpellingExt</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.PersistentEnvExtension\">PersistentEnvExtension</a> <a href=\"./Lean/Parser/Term/Doc.html#Lean.Parser.Term.Doc.RecommendedSpelling\">RecommendedSpelling</a> <a href=\"./Lean/Parser/Term/Doc.html#Lean.Parser.Term.Doc.RecommendedSpelling\">RecommendedSpelling</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Parser/Term/Doc.html#Lean.Parser.Term.Doc.RecommendedSpelling\">RecommendedSpelling</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Parser/Term/Doc.lean#L24-L37","name":"Lean.Parser.Term.Doc.recommendedSpellingByNameExt","line":24,"kind":"opaque","docLink":"./Lean/Parser/Term/Doc.html#Lean.Parser.Term.Doc.recommendedSpellingByNameExt","doc":"Recommended spellings for notations, stored in a way so that the recommended spellings for a given\ndeclaration are easily accessible.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Term/Doc.html#Lean.Parser.Term.Doc.recommendedSpellingByNameExt\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Term</span>.<span class=\"name\">Doc</span>.<span class=\"name\">recommendedSpellingByNameExt</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.PersistentEnvExtension\">PersistentEnvExtension</a> (<a href=\"./Init/Prelude.html#Lean.Name\">Name</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Parser/Term/Doc.html#Lean.Parser.Term.Doc.RecommendedSpelling\">RecommendedSpelling</a></span>) (<a href=\"./Lean/Parser/Term/Doc.html#Lean.Parser.Term.Doc.RecommendedSpelling\">RecommendedSpelling</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Lean.Name\">Name</a></span>)\n  <span class=\"fn\">(<a href=\"./Lean/Data/NameMap.html#Lean.NameMap\">NameMap</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Parser/Term/Doc.html#Lean.Parser.Term.Doc.RecommendedSpelling\">RecommendedSpelling</a>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Parser/Term/Doc.lean#L22-L22","name":"Lean.Parser.Term.Doc.RecommendedSpelling.additionalInformation?","line":22,"kind":"def","docLink":"./Lean/Parser/Term/Doc.html#Lean.Parser.Term.Doc.RecommendedSpelling.additionalInformation?","doc":"Additional information. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Term/Doc.html#Lean.Parser.Term.Doc.RecommendedSpelling.additionalInformation?\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Term</span>.<span class=\"name\">Doc</span>.<span class=\"name\">RecommendedSpelling</span>.<span class=\"name\">additionalInformation?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Parser/Term/Doc.html#Lean.Parser.Term.Doc.RecommendedSpelling\">RecommendedSpelling</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#String\">String</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Parser/Term/Doc.lean#L20-L20","name":"Lean.Parser.Term.Doc.RecommendedSpelling.recommendedSpelling","line":20,"kind":"def","docLink":"./Lean/Parser/Term/Doc.html#Lean.Parser.Term.Doc.RecommendedSpelling.recommendedSpelling","doc":"The recommended spelling of the notation in identifiers. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Term/Doc.html#Lean.Parser.Term.Doc.RecommendedSpelling.recommendedSpelling\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Term</span>.<span class=\"name\">Doc</span>.<span class=\"name\">RecommendedSpelling</span>.<span class=\"name\">recommendedSpelling</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Parser/Term/Doc.html#Lean.Parser.Term.Doc.RecommendedSpelling\">RecommendedSpelling</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#String\">String</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Parser/Term/Doc.lean#L18-L18","name":"Lean.Parser.Term.Doc.RecommendedSpelling.notation","line":18,"kind":"def","docLink":"./Lean/Parser/Term/Doc.html#Lean.Parser.Term.Doc.RecommendedSpelling.notation","doc":"The notation in question. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Term/Doc.html#Lean.Parser.Term.Doc.RecommendedSpelling.notation\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Term</span>.<span class=\"name\">Doc</span>.<span class=\"name\">RecommendedSpelling</span>.<span class=\"name\">notation</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Parser/Term/Doc.html#Lean.Parser.Term.Doc.RecommendedSpelling\">RecommendedSpelling</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#String\">String</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Parser/Term/Doc.lean#L16-L16","name":"Lean.Parser.Term.Doc.RecommendedSpelling.mk","line":16,"kind":"ctor","docLink":"./Lean/Parser/Term/Doc.html#Lean.Parser.Term.Doc.RecommendedSpelling.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Term/Doc.html#Lean.Parser.Term.Doc.RecommendedSpelling.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Term</span>.<span class=\"name\">Doc</span>.<span class=\"name\">RecommendedSpelling</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">«notation» </span><span class=\"fn\">recommendedSpelling</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">additionalInformation?</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#String\">String</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Term/Doc.html#Lean.Parser.Term.Doc.RecommendedSpelling\">RecommendedSpelling</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Parser/Term/Doc.lean#L15-L22","name":"Lean.Parser.Term.Doc.RecommendedSpelling","line":15,"kind":"structure","docLink":"./Lean/Parser/Term/Doc.html#Lean.Parser.Term.Doc.RecommendedSpelling","doc":"Information about how to spell a certain notation for an identifier in declaration names. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Term/Doc.html#Lean.Parser.Term.Doc.RecommendedSpelling\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Term</span>.<span class=\"name\">Doc</span>.<span class=\"name\">RecommendedSpelling</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"}]}