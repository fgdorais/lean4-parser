{"name":"Init.Data.UInt.Bitwise","instances":[{"typeNames":[],"name":"instAssociativeUInt8HOr","className":"Std.Associative"},{"typeNames":[],"name":"instAssociativeUInt16HOr","className":"Std.Associative"},{"typeNames":[],"name":"instAssociativeUInt32HOr","className":"Std.Associative"},{"typeNames":[],"name":"instAssociativeUInt64HOr","className":"Std.Associative"},{"typeNames":[],"name":"instAssociativeUSizeHOr","className":"Std.Associative"},{"typeNames":[],"name":"instCommutativeUInt8HOr","className":"Std.Commutative"},{"typeNames":[],"name":"instCommutativeUInt16HOr","className":"Std.Commutative"},{"typeNames":[],"name":"instCommutativeUInt32HOr","className":"Std.Commutative"},{"typeNames":[],"name":"instCommutativeUInt64HOr","className":"Std.Commutative"},{"typeNames":[],"name":"instCommutativeUSizeHOr","className":"Std.Commutative"},{"typeNames":[],"name":"instIdempotentOpUInt8HOr","className":"Std.IdempotentOp"},{"typeNames":[],"name":"instIdempotentOpUInt16HOr","className":"Std.IdempotentOp"},{"typeNames":[],"name":"instIdempotentOpUInt32HOr","className":"Std.IdempotentOp"},{"typeNames":[],"name":"instIdempotentOpUInt64HOr","className":"Std.IdempotentOp"},{"typeNames":[],"name":"instIdempotentOpUSizeHOr","className":"Std.IdempotentOp"},{"typeNames":["OfNat.ofNat"],"name":"instLawfulCommIdentityUInt8HOrOfNat","className":"Std.LawfulCommIdentity"},{"typeNames":["OfNat.ofNat"],"name":"instLawfulCommIdentityUInt16HOrOfNat","className":"Std.LawfulCommIdentity"},{"typeNames":["OfNat.ofNat"],"name":"instLawfulCommIdentityUInt32HOrOfNat","className":"Std.LawfulCommIdentity"},{"typeNames":["OfNat.ofNat"],"name":"instLawfulCommIdentityUInt64HOrOfNat","className":"Std.LawfulCommIdentity"},{"typeNames":["OfNat.ofNat"],"name":"instLawfulCommIdentityUSizeHOrOfNat","className":"Std.LawfulCommIdentity"},{"typeNames":[],"name":"instAssociativeUInt8HAnd","className":"Std.Associative"},{"typeNames":[],"name":"instAssociativeUInt16HAnd","className":"Std.Associative"},{"typeNames":[],"name":"instAssociativeUInt32HAnd","className":"Std.Associative"},{"typeNames":[],"name":"instAssociativeUInt64HAnd","className":"Std.Associative"},{"typeNames":[],"name":"instAssociativeUSizeHAnd","className":"Std.Associative"},{"typeNames":[],"name":"instCommutativeUInt8HAnd","className":"Std.Commutative"},{"typeNames":[],"name":"instCommutativeUInt16HAnd","className":"Std.Commutative"},{"typeNames":[],"name":"instCommutativeUInt32HAnd","className":"Std.Commutative"},{"typeNames":[],"name":"instCommutativeUInt64HAnd","className":"Std.Commutative"},{"typeNames":[],"name":"instCommutativeUSizeHAnd","className":"Std.Commutative"},{"typeNames":[],"name":"instIdempotentOpUInt8HAnd","className":"Std.IdempotentOp"},{"typeNames":[],"name":"instIdempotentOpUInt16HAnd","className":"Std.IdempotentOp"},{"typeNames":[],"name":"instIdempotentOpUInt32HAnd","className":"Std.IdempotentOp"},{"typeNames":[],"name":"instIdempotentOpUInt64HAnd","className":"Std.IdempotentOp"},{"typeNames":[],"name":"instIdempotentOpUSizeHAnd","className":"Std.IdempotentOp"},{"typeNames":["Neg.neg"],"name":"instLawfulCommIdentityUInt8HAndNegOfNat","className":"Std.LawfulCommIdentity"},{"typeNames":["Neg.neg"],"name":"instLawfulCommIdentityUInt16HAndNegOfNat","className":"Std.LawfulCommIdentity"},{"typeNames":["Neg.neg"],"name":"instLawfulCommIdentityUInt32HAndNegOfNat","className":"Std.LawfulCommIdentity"},{"typeNames":["Neg.neg"],"name":"instLawfulCommIdentityUInt64HAndNegOfNat","className":"Std.LawfulCommIdentity"},{"typeNames":["Neg.neg"],"name":"instLawfulCommIdentityUSizeHAndNegOfNat","className":"Std.LawfulCommIdentity"},{"typeNames":[],"name":"instAssociativeUInt8HXor","className":"Std.Associative"},{"typeNames":[],"name":"instAssociativeUInt16HXor","className":"Std.Associative"},{"typeNames":[],"name":"instAssociativeUInt32HXor","className":"Std.Associative"},{"typeNames":[],"name":"instAssociativeUInt64HXor","className":"Std.Associative"},{"typeNames":[],"name":"instAssociativeUSizeHXor","className":"Std.Associative"},{"typeNames":[],"name":"instCommutativeUInt8HXor","className":"Std.Commutative"},{"typeNames":[],"name":"instCommutativeUInt16HXor","className":"Std.Commutative"},{"typeNames":[],"name":"instCommutativeUInt32HXor","className":"Std.Commutative"},{"typeNames":[],"name":"instCommutativeUInt64HXor","className":"Std.Commutative"},{"typeNames":[],"name":"instCommutativeUSizeHXor","className":"Std.Commutative"},{"typeNames":["OfNat.ofNat"],"name":"instLawfulCommIdentityUInt8HXorOfNat","className":"Std.LawfulCommIdentity"},{"typeNames":["OfNat.ofNat"],"name":"instLawfulCommIdentityUInt16HXorOfNat","className":"Std.LawfulCommIdentity"},{"typeNames":["OfNat.ofNat"],"name":"instLawfulCommIdentityUInt32HXorOfNat","className":"Std.LawfulCommIdentity"},{"typeNames":["OfNat.ofNat"],"name":"instLawfulCommIdentityUInt64HXorOfNat","className":"Std.LawfulCommIdentity"},{"typeNames":["OfNat.ofNat"],"name":"instLawfulCommIdentityUSizeHXorOfNat","className":"Std.LawfulCommIdentity"}],"imports":["Init.Data.UInt.Lemmas","Init.Data.Fin.Bitwise"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L1326-L1327","name":"USize.right_le_or","line":1326,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#USize.right_le_or","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#USize.right_le_or\"><span class=\"name\">USize</span>.<span class=\"name\">right_le_or</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">b</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L1324-L1325","name":"UInt64.right_le_or","line":1324,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt64.right_le_or","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt64.right_le_or\"><span class=\"name\">UInt64</span>.<span class=\"name\">right_le_or</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">b</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L1322-L1323","name":"UInt32.right_le_or","line":1322,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt32.right_le_or","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt32.right_le_or\"><span class=\"name\">UInt32</span>.<span class=\"name\">right_le_or</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">b</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L1320-L1321","name":"UInt16.right_le_or","line":1320,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt16.right_le_or","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt16.right_le_or\"><span class=\"name\">UInt16</span>.<span class=\"name\">right_le_or</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">b</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L1318-L1319","name":"UInt8.right_le_or","line":1318,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt8.right_le_or","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt8.right_le_or\"><span class=\"name\">UInt8</span>.<span class=\"name\">right_le_or</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">b</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L1315-L1316","name":"USize.left_le_or","line":1315,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#USize.left_le_or","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#USize.left_le_or\"><span class=\"name\">USize</span>.<span class=\"name\">left_le_or</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">b</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L1313-L1314","name":"UInt64.left_le_or","line":1313,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt64.left_le_or","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt64.left_le_or\"><span class=\"name\">UInt64</span>.<span class=\"name\">left_le_or</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">b</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L1311-L1312","name":"UInt32.left_le_or","line":1311,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt32.left_le_or","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt32.left_le_or\"><span class=\"name\">UInt32</span>.<span class=\"name\">left_le_or</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">b</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L1309-L1310","name":"UInt16.left_le_or","line":1309,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt16.left_le_or","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt16.left_le_or\"><span class=\"name\">UInt16</span>.<span class=\"name\">left_le_or</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">b</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L1307-L1308","name":"UInt8.left_le_or","line":1307,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt8.left_le_or","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt8.left_le_or\"><span class=\"name\">UInt8</span>.<span class=\"name\">left_le_or</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">b</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L1304-L1305","name":"USize.and_le_left","line":1304,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#USize.and_le_left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#USize.and_le_left\"><span class=\"name\">USize</span>.<span class=\"name\">and_le_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L1302-L1303","name":"UInt64.and_le_left","line":1302,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt64.and_le_left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt64.and_le_left\"><span class=\"name\">UInt64</span>.<span class=\"name\">and_le_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L1300-L1301","name":"UInt32.and_le_left","line":1300,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt32.and_le_left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt32.and_le_left\"><span class=\"name\">UInt32</span>.<span class=\"name\">and_le_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L1298-L1299","name":"UInt16.and_le_left","line":1298,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt16.and_le_left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt16.and_le_left\"><span class=\"name\">UInt16</span>.<span class=\"name\">and_le_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L1296-L1297","name":"UInt8.and_le_left","line":1296,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt8.and_le_left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt8.and_le_left\"><span class=\"name\">UInt8</span>.<span class=\"name\">and_le_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L1293-L1294","name":"USize.and_le_right","line":1293,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#USize.and_le_right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#USize.and_le_right\"><span class=\"name\">USize</span>.<span class=\"name\">and_le_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">b</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L1291-L1292","name":"UInt64.and_le_right","line":1291,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt64.and_le_right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt64.and_le_right\"><span class=\"name\">UInt64</span>.<span class=\"name\">and_le_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">b</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L1289-L1290","name":"UInt32.and_le_right","line":1289,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt32.and_le_right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt32.and_le_right\"><span class=\"name\">UInt32</span>.<span class=\"name\">and_le_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">b</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L1287-L1288","name":"UInt16.and_le_right","line":1287,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt16.and_le_right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt16.and_le_right\"><span class=\"name\">UInt16</span>.<span class=\"name\">and_le_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">b</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L1285-L1286","name":"UInt8.and_le_right","line":1285,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt8.and_le_right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt8.and_le_right\"><span class=\"name\">UInt8</span>.<span class=\"name\">and_le_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">b</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L1282-L1283","name":"USize.shiftRight_or","line":1282,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#USize.shiftRight_or","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#USize.shiftRight_or\"><span class=\"name\">USize</span>.<span class=\"name\">shiftRight_or</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">b</span>) <a href=\"./Init/Prelude.html#HShiftRight.hShiftRight\">&gt;&gt;&gt;</a> <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftRight.hShiftRight\">&gt;&gt;&gt;</a> <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HShiftRight.hShiftRight\">&gt;&gt;&gt;</a> <span class=\"fn\">c</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L1280-L1281","name":"UInt64.shiftRight_or","line":1280,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt64.shiftRight_or","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt64.shiftRight_or\"><span class=\"name\">UInt64</span>.<span class=\"name\">shiftRight_or</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">b</span>) <a href=\"./Init/Prelude.html#HShiftRight.hShiftRight\">&gt;&gt;&gt;</a> <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftRight.hShiftRight\">&gt;&gt;&gt;</a> <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HShiftRight.hShiftRight\">&gt;&gt;&gt;</a> <span class=\"fn\">c</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L1278-L1279","name":"UInt32.shiftRight_or","line":1278,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt32.shiftRight_or","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt32.shiftRight_or\"><span class=\"name\">UInt32</span>.<span class=\"name\">shiftRight_or</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">b</span>) <a href=\"./Init/Prelude.html#HShiftRight.hShiftRight\">&gt;&gt;&gt;</a> <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftRight.hShiftRight\">&gt;&gt;&gt;</a> <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HShiftRight.hShiftRight\">&gt;&gt;&gt;</a> <span class=\"fn\">c</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L1276-L1277","name":"UInt16.shiftRight_or","line":1276,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt16.shiftRight_or","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt16.shiftRight_or\"><span class=\"name\">UInt16</span>.<span class=\"name\">shiftRight_or</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">b</span>) <a href=\"./Init/Prelude.html#HShiftRight.hShiftRight\">&gt;&gt;&gt;</a> <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftRight.hShiftRight\">&gt;&gt;&gt;</a> <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HShiftRight.hShiftRight\">&gt;&gt;&gt;</a> <span class=\"fn\">c</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L1274-L1275","name":"UInt8.shiftRight_or","line":1274,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt8.shiftRight_or","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt8.shiftRight_or\"><span class=\"name\">UInt8</span>.<span class=\"name\">shiftRight_or</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">b</span>) <a href=\"./Init/Prelude.html#HShiftRight.hShiftRight\">&gt;&gt;&gt;</a> <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftRight.hShiftRight\">&gt;&gt;&gt;</a> <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HShiftRight.hShiftRight\">&gt;&gt;&gt;</a> <span class=\"fn\">c</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L1271-L1272","name":"USize.shiftRight_and","line":1271,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#USize.shiftRight_and","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#USize.shiftRight_and\"><span class=\"name\">USize</span>.<span class=\"name\">shiftRight_and</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\">b</span>) <a href=\"./Init/Prelude.html#HShiftRight.hShiftRight\">&gt;&gt;&gt;</a> <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftRight.hShiftRight\">&gt;&gt;&gt;</a> <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HShiftRight.hShiftRight\">&gt;&gt;&gt;</a> <span class=\"fn\">c</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L1269-L1270","name":"UInt64.shiftRight_and","line":1269,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt64.shiftRight_and","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt64.shiftRight_and\"><span class=\"name\">UInt64</span>.<span class=\"name\">shiftRight_and</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\">b</span>) <a href=\"./Init/Prelude.html#HShiftRight.hShiftRight\">&gt;&gt;&gt;</a> <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftRight.hShiftRight\">&gt;&gt;&gt;</a> <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HShiftRight.hShiftRight\">&gt;&gt;&gt;</a> <span class=\"fn\">c</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L1267-L1268","name":"UInt32.shiftRight_and","line":1267,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt32.shiftRight_and","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt32.shiftRight_and\"><span class=\"name\">UInt32</span>.<span class=\"name\">shiftRight_and</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\">b</span>) <a href=\"./Init/Prelude.html#HShiftRight.hShiftRight\">&gt;&gt;&gt;</a> <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftRight.hShiftRight\">&gt;&gt;&gt;</a> <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HShiftRight.hShiftRight\">&gt;&gt;&gt;</a> <span class=\"fn\">c</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L1265-L1266","name":"UInt16.shiftRight_and","line":1265,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt16.shiftRight_and","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt16.shiftRight_and\"><span class=\"name\">UInt16</span>.<span class=\"name\">shiftRight_and</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\">b</span>) <a href=\"./Init/Prelude.html#HShiftRight.hShiftRight\">&gt;&gt;&gt;</a> <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftRight.hShiftRight\">&gt;&gt;&gt;</a> <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HShiftRight.hShiftRight\">&gt;&gt;&gt;</a> <span class=\"fn\">c</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L1263-L1264","name":"UInt8.shiftRight_and","line":1263,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt8.shiftRight_and","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt8.shiftRight_and\"><span class=\"name\">UInt8</span>.<span class=\"name\">shiftRight_and</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\">b</span>) <a href=\"./Init/Prelude.html#HShiftRight.hShiftRight\">&gt;&gt;&gt;</a> <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftRight.hShiftRight\">&gt;&gt;&gt;</a> <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HShiftRight.hShiftRight\">&gt;&gt;&gt;</a> <span class=\"fn\">c</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L1260-L1261","name":"USize.shiftRight_xor","line":1260,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#USize.shiftRight_xor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#USize.shiftRight_xor\"><span class=\"name\">USize</span>.<span class=\"name\">shiftRight_xor</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">b</span>) <a href=\"./Init/Prelude.html#HShiftRight.hShiftRight\">&gt;&gt;&gt;</a> <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftRight.hShiftRight\">&gt;&gt;&gt;</a> <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HShiftRight.hShiftRight\">&gt;&gt;&gt;</a> <span class=\"fn\">c</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L1258-L1259","name":"UInt64.shiftRight_xor","line":1258,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt64.shiftRight_xor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt64.shiftRight_xor\"><span class=\"name\">UInt64</span>.<span class=\"name\">shiftRight_xor</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">b</span>) <a href=\"./Init/Prelude.html#HShiftRight.hShiftRight\">&gt;&gt;&gt;</a> <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftRight.hShiftRight\">&gt;&gt;&gt;</a> <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HShiftRight.hShiftRight\">&gt;&gt;&gt;</a> <span class=\"fn\">c</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L1256-L1257","name":"UInt32.shiftRight_xor","line":1256,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt32.shiftRight_xor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt32.shiftRight_xor\"><span class=\"name\">UInt32</span>.<span class=\"name\">shiftRight_xor</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">b</span>) <a href=\"./Init/Prelude.html#HShiftRight.hShiftRight\">&gt;&gt;&gt;</a> <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftRight.hShiftRight\">&gt;&gt;&gt;</a> <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HShiftRight.hShiftRight\">&gt;&gt;&gt;</a> <span class=\"fn\">c</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L1254-L1255","name":"UInt16.shiftRight_xor","line":1254,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt16.shiftRight_xor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt16.shiftRight_xor\"><span class=\"name\">UInt16</span>.<span class=\"name\">shiftRight_xor</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">b</span>) <a href=\"./Init/Prelude.html#HShiftRight.hShiftRight\">&gt;&gt;&gt;</a> <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftRight.hShiftRight\">&gt;&gt;&gt;</a> <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HShiftRight.hShiftRight\">&gt;&gt;&gt;</a> <span class=\"fn\">c</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L1252-L1253","name":"UInt8.shiftRight_xor","line":1252,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt8.shiftRight_xor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt8.shiftRight_xor\"><span class=\"name\">UInt8</span>.<span class=\"name\">shiftRight_xor</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">b</span>) <a href=\"./Init/Prelude.html#HShiftRight.hShiftRight\">&gt;&gt;&gt;</a> <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftRight.hShiftRight\">&gt;&gt;&gt;</a> <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HShiftRight.hShiftRight\">&gt;&gt;&gt;</a> <span class=\"fn\">c</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L1250-L1250","name":"USize.zero_shiftRight","line":1250,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#USize.zero_shiftRight","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#USize.zero_shiftRight\"><span class=\"name\">USize</span>.<span class=\"name\">zero_shiftRight</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#HShiftRight.hShiftRight\">&gt;&gt;&gt;</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L1249-L1249","name":"UInt64.zero_shiftRight","line":1249,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt64.zero_shiftRight","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt64.zero_shiftRight\"><span class=\"name\">UInt64</span>.<span class=\"name\">zero_shiftRight</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#HShiftRight.hShiftRight\">&gt;&gt;&gt;</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L1248-L1248","name":"UInt32.zero_shiftRight","line":1248,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt32.zero_shiftRight","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt32.zero_shiftRight\"><span class=\"name\">UInt32</span>.<span class=\"name\">zero_shiftRight</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#HShiftRight.hShiftRight\">&gt;&gt;&gt;</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L1247-L1247","name":"UInt16.zero_shiftRight","line":1247,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt16.zero_shiftRight","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt16.zero_shiftRight\"><span class=\"name\">UInt16</span>.<span class=\"name\">zero_shiftRight</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#HShiftRight.hShiftRight\">&gt;&gt;&gt;</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L1246-L1246","name":"UInt8.zero_shiftRight","line":1246,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt8.zero_shiftRight","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt8.zero_shiftRight\"><span class=\"name\">UInt8</span>.<span class=\"name\">zero_shiftRight</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#HShiftRight.hShiftRight\">&gt;&gt;&gt;</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L1244-L1244","name":"USize.shiftRight_zero","line":1244,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#USize.shiftRight_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#USize.shiftRight_zero\"><span class=\"name\">USize</span>.<span class=\"name\">shiftRight_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftRight.hShiftRight\">&gt;&gt;&gt;</a> <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L1243-L1243","name":"UInt64.shiftRight_zero","line":1243,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt64.shiftRight_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt64.shiftRight_zero\"><span class=\"name\">UInt64</span>.<span class=\"name\">shiftRight_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftRight.hShiftRight\">&gt;&gt;&gt;</a> <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L1242-L1242","name":"UInt32.shiftRight_zero","line":1242,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt32.shiftRight_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt32.shiftRight_zero\"><span class=\"name\">UInt32</span>.<span class=\"name\">shiftRight_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftRight.hShiftRight\">&gt;&gt;&gt;</a> <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L1241-L1241","name":"UInt16.shiftRight_zero","line":1241,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt16.shiftRight_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt16.shiftRight_zero\"><span class=\"name\">UInt16</span>.<span class=\"name\">shiftRight_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftRight.hShiftRight\">&gt;&gt;&gt;</a> <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L1240-L1240","name":"UInt8.shiftRight_zero","line":1240,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt8.shiftRight_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt8.shiftRight_zero\"><span class=\"name\">UInt8</span>.<span class=\"name\">shiftRight_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftRight.hShiftRight\">&gt;&gt;&gt;</a> <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L1237-L1238","name":"USize.neg_one_shiftLeft_or_shiftLeft","line":1237,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#USize.neg_one_shiftLeft_or_shiftLeft","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#USize.neg_one_shiftLeft_or_shiftLeft\"><span class=\"name\">USize</span>.<span class=\"name\">neg_one_shiftLeft_or_shiftLeft</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(-<span class=\"fn\">1</span>)</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">(-<span class=\"fn\">1</span>)</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">b</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L1235-L1236","name":"UInt64.neg_one_shiftLeft_or_shiftLeft","line":1235,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt64.neg_one_shiftLeft_or_shiftLeft","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt64.neg_one_shiftLeft_or_shiftLeft\"><span class=\"name\">UInt64</span>.<span class=\"name\">neg_one_shiftLeft_or_shiftLeft</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(-<span class=\"fn\">1</span>)</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">(-<span class=\"fn\">1</span>)</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">b</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L1233-L1234","name":"UInt32.neg_one_shiftLeft_or_shiftLeft","line":1233,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt32.neg_one_shiftLeft_or_shiftLeft","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt32.neg_one_shiftLeft_or_shiftLeft\"><span class=\"name\">UInt32</span>.<span class=\"name\">neg_one_shiftLeft_or_shiftLeft</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(-<span class=\"fn\">1</span>)</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">(-<span class=\"fn\">1</span>)</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">b</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L1231-L1232","name":"UInt16.neg_one_shiftLeft_or_shiftLeft","line":1231,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt16.neg_one_shiftLeft_or_shiftLeft","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt16.neg_one_shiftLeft_or_shiftLeft\"><span class=\"name\">UInt16</span>.<span class=\"name\">neg_one_shiftLeft_or_shiftLeft</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(-<span class=\"fn\">1</span>)</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">(-<span class=\"fn\">1</span>)</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">b</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L1229-L1230","name":"UInt8.neg_one_shiftLeft_or_shiftLeft","line":1229,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt8.neg_one_shiftLeft_or_shiftLeft","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt8.neg_one_shiftLeft_or_shiftLeft\"><span class=\"name\">UInt8</span>.<span class=\"name\">neg_one_shiftLeft_or_shiftLeft</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(-<span class=\"fn\">1</span>)</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">(-<span class=\"fn\">1</span>)</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">b</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L1226-L1227","name":"USize.neg_one_shiftLeft_and_shiftLeft","line":1226,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#USize.neg_one_shiftLeft_and_shiftLeft","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#USize.neg_one_shiftLeft_and_shiftLeft\"><span class=\"name\">USize</span>.<span class=\"name\">neg_one_shiftLeft_and_shiftLeft</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(-<span class=\"fn\">1</span>)</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">b</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L1224-L1225","name":"UInt64.neg_one_shiftLeft_and_shiftLeft","line":1224,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt64.neg_one_shiftLeft_and_shiftLeft","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt64.neg_one_shiftLeft_and_shiftLeft\"><span class=\"name\">UInt64</span>.<span class=\"name\">neg_one_shiftLeft_and_shiftLeft</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(-<span class=\"fn\">1</span>)</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">b</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L1222-L1223","name":"UInt32.neg_one_shiftLeft_and_shiftLeft","line":1222,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt32.neg_one_shiftLeft_and_shiftLeft","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt32.neg_one_shiftLeft_and_shiftLeft\"><span class=\"name\">UInt32</span>.<span class=\"name\">neg_one_shiftLeft_and_shiftLeft</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(-<span class=\"fn\">1</span>)</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">b</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L1220-L1221","name":"UInt16.neg_one_shiftLeft_and_shiftLeft","line":1220,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt16.neg_one_shiftLeft_and_shiftLeft","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt16.neg_one_shiftLeft_and_shiftLeft\"><span class=\"name\">UInt16</span>.<span class=\"name\">neg_one_shiftLeft_and_shiftLeft</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(-<span class=\"fn\">1</span>)</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">b</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L1218-L1219","name":"UInt8.neg_one_shiftLeft_and_shiftLeft","line":1218,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt8.neg_one_shiftLeft_and_shiftLeft","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt8.neg_one_shiftLeft_and_shiftLeft\"><span class=\"name\">UInt8</span>.<span class=\"name\">neg_one_shiftLeft_and_shiftLeft</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(-<span class=\"fn\">1</span>)</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">b</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L1208-L1216","name":"USize.shiftLeft_add","line":1208,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#USize.shiftLeft_add","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#USize.shiftLeft_add\"><span class=\"name\">USize</span>.<span class=\"name\">shiftLeft_add</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hb</span> : <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#USize.ofNat\">ofNat</a> <a href=\"./Init/Prelude.html#System.Platform.numBits\">System.Platform.numBits</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hc</span> : <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#USize.ofNat\">ofNat</a> <a href=\"./Init/Prelude.html#System.Platform.numBits\">System.Platform.numBits</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hbc</span> : <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#USize.ofNat\">ofNat</a> <a href=\"./Init/Prelude.html#System.Platform.numBits\">System.Platform.numBits</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> (<span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">c</span>) <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">c</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L1201-L1207","name":"UInt64.shiftLeft_add","line":1201,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt64.shiftLeft_add","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt64.shiftLeft_add\"><span class=\"name\">UInt64</span>.<span class=\"name\">shiftLeft_add</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hb</span> : <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">64</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hc</span> : <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">64</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hbc</span> : <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">64</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> (<span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">c</span>) <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">c</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L1194-L1200","name":"UInt32.shiftLeft_add","line":1194,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt32.shiftLeft_add","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt32.shiftLeft_add\"><span class=\"name\">UInt32</span>.<span class=\"name\">shiftLeft_add</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hb</span> : <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">32</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hc</span> : <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">32</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hbc</span> : <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">32</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> (<span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">c</span>) <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">c</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L1187-L1193","name":"UInt16.shiftLeft_add","line":1187,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt16.shiftLeft_add","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt16.shiftLeft_add\"><span class=\"name\">UInt16</span>.<span class=\"name\">shiftLeft_add</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hb</span> : <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">16</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hc</span> : <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">16</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hbc</span> : <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">16</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> (<span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">c</span>) <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">c</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L1180-L1186","name":"UInt8.shiftLeft_add","line":1180,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt8.shiftLeft_add","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt8.shiftLeft_add\"><span class=\"name\">UInt8</span>.<span class=\"name\">shiftLeft_add</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hb</span> : <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">8</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hc</span> : <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">8</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hbc</span> : <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">8</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> (<span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">c</span>) <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">c</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L1168-L1178","name":"USize.shiftLeft_add_of_toNat_lt","line":1168,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#USize.shiftLeft_add_of_toNat_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#USize.shiftLeft_add_of_toNat_lt\"><span class=\"name\">USize</span>.<span class=\"name\">shiftLeft_add_of_toNat_lt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#USize.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Init/Data/UInt/BasicAux.html#USize.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <a href=\"./Init/Prelude.html#System.Platform.numBits\">System.Platform.numBits</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> (<span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">c</span>) <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">c</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L1164-L1167","name":"UInt64.shiftLeft_add_of_toNat_lt","line":1164,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt64.shiftLeft_add_of_toNat_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt64.shiftLeft_add_of_toNat_lt\"><span class=\"name\">UInt64</span>.<span class=\"name\">shiftLeft_add_of_toNat_lt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">64</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> (<span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">c</span>) <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">c</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L1160-L1163","name":"UInt32.shiftLeft_add_of_toNat_lt","line":1160,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt32.shiftLeft_add_of_toNat_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt32.shiftLeft_add_of_toNat_lt\"><span class=\"name\">UInt32</span>.<span class=\"name\">shiftLeft_add_of_toNat_lt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Prelude.html#UInt32.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Init/Prelude.html#UInt32.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">32</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> (<span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">c</span>) <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">c</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L1156-L1159","name":"UInt16.shiftLeft_add_of_toNat_lt","line":1156,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt16.shiftLeft_add_of_toNat_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt16.shiftLeft_add_of_toNat_lt\"><span class=\"name\">UInt16</span>.<span class=\"name\">shiftLeft_add_of_toNat_lt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">16</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> (<span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">c</span>) <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">c</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L1152-L1155","name":"UInt8.shiftLeft_add_of_toNat_lt","line":1152,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt8.shiftLeft_add_of_toNat_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt8.shiftLeft_add_of_toNat_lt\"><span class=\"name\">UInt8</span>.<span class=\"name\">shiftLeft_add_of_toNat_lt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">8</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> (<span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">c</span>) <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">c</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L1149-L1150","name":"USize.shiftLeft_or","line":1149,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#USize.shiftLeft_or","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#USize.shiftLeft_or\"><span class=\"name\">USize</span>.<span class=\"name\">shiftLeft_or</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">b</span>) <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">c</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L1147-L1148","name":"UInt64.shiftLeft_or","line":1147,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt64.shiftLeft_or","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt64.shiftLeft_or\"><span class=\"name\">UInt64</span>.<span class=\"name\">shiftLeft_or</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">b</span>) <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">c</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L1145-L1146","name":"UInt32.shiftLeft_or","line":1145,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt32.shiftLeft_or","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt32.shiftLeft_or\"><span class=\"name\">UInt32</span>.<span class=\"name\">shiftLeft_or</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">b</span>) <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">c</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L1143-L1144","name":"UInt16.shiftLeft_or","line":1143,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt16.shiftLeft_or","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt16.shiftLeft_or\"><span class=\"name\">UInt16</span>.<span class=\"name\">shiftLeft_or</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">b</span>) <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">c</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L1141-L1142","name":"UInt8.shiftLeft_or","line":1141,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt8.shiftLeft_or","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt8.shiftLeft_or\"><span class=\"name\">UInt8</span>.<span class=\"name\">shiftLeft_or</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">b</span>) <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">c</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L1138-L1139","name":"USize.shiftLeft_and","line":1138,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#USize.shiftLeft_and","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#USize.shiftLeft_and\"><span class=\"name\">USize</span>.<span class=\"name\">shiftLeft_and</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\">b</span>) <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">c</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L1136-L1137","name":"UInt64.shiftLeft_and","line":1136,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt64.shiftLeft_and","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt64.shiftLeft_and\"><span class=\"name\">UInt64</span>.<span class=\"name\">shiftLeft_and</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\">b</span>) <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">c</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L1134-L1135","name":"UInt32.shiftLeft_and","line":1134,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt32.shiftLeft_and","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt32.shiftLeft_and\"><span class=\"name\">UInt32</span>.<span class=\"name\">shiftLeft_and</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\">b</span>) <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">c</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L1132-L1133","name":"UInt16.shiftLeft_and","line":1132,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt16.shiftLeft_and","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt16.shiftLeft_and\"><span class=\"name\">UInt16</span>.<span class=\"name\">shiftLeft_and</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\">b</span>) <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">c</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L1130-L1131","name":"UInt8.shiftLeft_and","line":1130,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt8.shiftLeft_and","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt8.shiftLeft_and\"><span class=\"name\">UInt8</span>.<span class=\"name\">shiftLeft_and</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\">b</span>) <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">c</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L1127-L1128","name":"USize.shiftLeft_xor","line":1127,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#USize.shiftLeft_xor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#USize.shiftLeft_xor\"><span class=\"name\">USize</span>.<span class=\"name\">shiftLeft_xor</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">b</span>) <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">c</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L1125-L1126","name":"UInt64.shiftLeft_xor","line":1125,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt64.shiftLeft_xor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt64.shiftLeft_xor\"><span class=\"name\">UInt64</span>.<span class=\"name\">shiftLeft_xor</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">b</span>) <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">c</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L1123-L1124","name":"UInt32.shiftLeft_xor","line":1123,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt32.shiftLeft_xor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt32.shiftLeft_xor\"><span class=\"name\">UInt32</span>.<span class=\"name\">shiftLeft_xor</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">b</span>) <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">c</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L1121-L1122","name":"UInt16.shiftLeft_xor","line":1121,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt16.shiftLeft_xor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt16.shiftLeft_xor\"><span class=\"name\">UInt16</span>.<span class=\"name\">shiftLeft_xor</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">b</span>) <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">c</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L1119-L1120","name":"UInt8.shiftLeft_xor","line":1119,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt8.shiftLeft_xor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt8.shiftLeft_xor\"><span class=\"name\">UInt8</span>.<span class=\"name\">shiftLeft_xor</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">b</span>) <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">c</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L1117-L1117","name":"USize.zero_shiftLeft","line":1117,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#USize.zero_shiftLeft","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#USize.zero_shiftLeft\"><span class=\"name\">USize</span>.<span class=\"name\">zero_shiftLeft</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L1116-L1116","name":"UInt64.zero_shiftLeft","line":1116,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt64.zero_shiftLeft","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt64.zero_shiftLeft\"><span class=\"name\">UInt64</span>.<span class=\"name\">zero_shiftLeft</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L1115-L1115","name":"UInt32.zero_shiftLeft","line":1115,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt32.zero_shiftLeft","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt32.zero_shiftLeft\"><span class=\"name\">UInt32</span>.<span class=\"name\">zero_shiftLeft</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L1114-L1114","name":"UInt16.zero_shiftLeft","line":1114,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt16.zero_shiftLeft","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt16.zero_shiftLeft\"><span class=\"name\">UInt16</span>.<span class=\"name\">zero_shiftLeft</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L1113-L1113","name":"UInt8.zero_shiftLeft","line":1113,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt8.zero_shiftLeft","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt8.zero_shiftLeft\"><span class=\"name\">UInt8</span>.<span class=\"name\">zero_shiftLeft</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L1111-L1111","name":"USize.shiftLeft_zero","line":1111,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#USize.shiftLeft_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#USize.shiftLeft_zero\"><span class=\"name\">USize</span>.<span class=\"name\">shiftLeft_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L1110-L1110","name":"UInt64.shiftLeft_zero","line":1110,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt64.shiftLeft_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt64.shiftLeft_zero\"><span class=\"name\">UInt64</span>.<span class=\"name\">shiftLeft_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L1109-L1109","name":"UInt32.shiftLeft_zero","line":1109,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt32.shiftLeft_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt32.shiftLeft_zero\"><span class=\"name\">UInt32</span>.<span class=\"name\">shiftLeft_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L1108-L1108","name":"UInt16.shiftLeft_zero","line":1108,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt16.shiftLeft_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt16.shiftLeft_zero\"><span class=\"name\">UInt16</span>.<span class=\"name\">shiftLeft_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L1107-L1107","name":"UInt8.shiftLeft_zero","line":1107,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt8.shiftLeft_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt8.shiftLeft_zero\"><span class=\"name\">UInt8</span>.<span class=\"name\">shiftLeft_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L1104-L1105","name":"USize.xor_not","line":1104,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#USize.xor_not","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#USize.xor_not\"><span class=\"name\">USize</span>.<span class=\"name\">xor_not</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Complement.complement\">~~~</a>(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">b</span>)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L1102-L1103","name":"UInt64.xor_not","line":1102,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt64.xor_not","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt64.xor_not\"><span class=\"name\">UInt64</span>.<span class=\"name\">xor_not</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Complement.complement\">~~~</a>(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">b</span>)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L1100-L1101","name":"UInt32.xor_not","line":1100,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt32.xor_not","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt32.xor_not\"><span class=\"name\">UInt32</span>.<span class=\"name\">xor_not</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Complement.complement\">~~~</a>(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">b</span>)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L1098-L1099","name":"UInt16.xor_not","line":1098,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt16.xor_not","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt16.xor_not\"><span class=\"name\">UInt16</span>.<span class=\"name\">xor_not</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Complement.complement\">~~~</a>(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">b</span>)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L1096-L1097","name":"UInt8.xor_not","line":1096,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt8.xor_not","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt8.xor_not\"><span class=\"name\">UInt8</span>.<span class=\"name\">xor_not</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Complement.complement\">~~~</a>(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">b</span>)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L1093-L1094","name":"USize.not_xor","line":1093,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#USize.not_xor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#USize.not_xor\"><span class=\"name\">USize</span>.<span class=\"name\">not_xor</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Complement.complement\">~~~</a>(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">b</span>)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L1091-L1092","name":"UInt64.not_xor","line":1091,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt64.not_xor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt64.not_xor\"><span class=\"name\">UInt64</span>.<span class=\"name\">not_xor</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Complement.complement\">~~~</a>(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">b</span>)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L1089-L1090","name":"UInt32.not_xor","line":1089,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt32.not_xor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt32.not_xor\"><span class=\"name\">UInt32</span>.<span class=\"name\">not_xor</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Complement.complement\">~~~</a>(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">b</span>)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L1087-L1088","name":"UInt16.not_xor","line":1087,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt16.not_xor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt16.not_xor\"><span class=\"name\">UInt16</span>.<span class=\"name\">not_xor</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Complement.complement\">~~~</a>(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">b</span>)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L1085-L1086","name":"UInt8.not_xor","line":1085,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt8.not_xor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt8.not_xor\"><span class=\"name\">UInt8</span>.<span class=\"name\">not_xor</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Complement.complement\">~~~</a>(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">b</span>)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L1083-L1083","name":"USize.not_ne_self","line":1083,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#USize.not_ne_self","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#USize.not_ne_self\"><span class=\"name\">USize</span>.<span class=\"name\">not_ne_self</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><span class=\"fn\">a</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L1082-L1082","name":"UInt64.not_ne_self","line":1082,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt64.not_ne_self","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt64.not_ne_self\"><span class=\"name\">UInt64</span>.<span class=\"name\">not_ne_self</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><span class=\"fn\">a</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L1081-L1081","name":"UInt32.not_ne_self","line":1081,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt32.not_ne_self","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt32.not_ne_self\"><span class=\"name\">UInt32</span>.<span class=\"name\">not_ne_self</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><span class=\"fn\">a</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L1080-L1080","name":"UInt16.not_ne_self","line":1080,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt16.not_ne_self","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt16.not_ne_self\"><span class=\"name\">UInt16</span>.<span class=\"name\">not_ne_self</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><span class=\"fn\">a</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L1079-L1079","name":"UInt8.not_ne_self","line":1079,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt8.not_ne_self","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt8.not_ne_self\"><span class=\"name\">UInt8</span>.<span class=\"name\">not_ne_self</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><span class=\"fn\">a</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L1077-L1077","name":"USize.ne_not_self","line":1077,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#USize.ne_not_self","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#USize.ne_not_self\"><span class=\"name\">USize</span>.<span class=\"name\">ne_not_self</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Core.html#Ne\">≠</a> <a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L1076-L1076","name":"UInt64.ne_not_self","line":1076,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt64.ne_not_self","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt64.ne_not_self\"><span class=\"name\">UInt64</span>.<span class=\"name\">ne_not_self</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Core.html#Ne\">≠</a> <a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L1075-L1075","name":"UInt32.ne_not_self","line":1075,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt32.ne_not_self","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt32.ne_not_self\"><span class=\"name\">UInt32</span>.<span class=\"name\">ne_not_self</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Core.html#Ne\">≠</a> <a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L1074-L1074","name":"UInt16.ne_not_self","line":1074,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt16.ne_not_self","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt16.ne_not_self\"><span class=\"name\">UInt16</span>.<span class=\"name\">ne_not_self</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Core.html#Ne\">≠</a> <a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L1073-L1073","name":"UInt8.ne_not_self","line":1073,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt8.ne_not_self","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt8.ne_not_self\"><span class=\"name\">UInt8</span>.<span class=\"name\">ne_not_self</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Core.html#Ne\">≠</a> <a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L1070-L1071","name":"USize.not_eq_comm","line":1070,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#USize.not_eq_comm","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#USize.not_eq_comm\"><span class=\"name\">USize</span>.<span class=\"name\">not_eq_comm</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><span class=\"fn\">b</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L1068-L1069","name":"UInt64.not_eq_comm","line":1068,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt64.not_eq_comm","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt64.not_eq_comm\"><span class=\"name\">UInt64</span>.<span class=\"name\">not_eq_comm</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><span class=\"fn\">b</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L1066-L1067","name":"UInt32.not_eq_comm","line":1066,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt32.not_eq_comm","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt32.not_eq_comm\"><span class=\"name\">UInt32</span>.<span class=\"name\">not_eq_comm</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><span class=\"fn\">b</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L1064-L1065","name":"UInt16.not_eq_comm","line":1064,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt16.not_eq_comm","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt16.not_eq_comm\"><span class=\"name\">UInt16</span>.<span class=\"name\">not_eq_comm</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><span class=\"fn\">b</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L1062-L1063","name":"UInt8.not_eq_comm","line":1062,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt8.not_eq_comm","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt8.not_eq_comm\"><span class=\"name\">UInt8</span>.<span class=\"name\">not_eq_comm</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><span class=\"fn\">b</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L1060-L1060","name":"USize.not_or_self","line":1060,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#USize.not_or_self","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#USize.not_or_self\"><span class=\"name\">USize</span>.<span class=\"name\">not_or_self</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">-<span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L1059-L1059","name":"UInt64.not_or_self","line":1059,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt64.not_or_self","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt64.not_or_self\"><span class=\"name\">UInt64</span>.<span class=\"name\">not_or_self</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">-<span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L1058-L1058","name":"UInt32.not_or_self","line":1058,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt32.not_or_self","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt32.not_or_self\"><span class=\"name\">UInt32</span>.<span class=\"name\">not_or_self</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">-<span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L1057-L1057","name":"UInt16.not_or_self","line":1057,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt16.not_or_self","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt16.not_or_self\"><span class=\"name\">UInt16</span>.<span class=\"name\">not_or_self</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">-<span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L1056-L1056","name":"UInt8.not_or_self","line":1056,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt8.not_or_self","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt8.not_or_self\"><span class=\"name\">UInt8</span>.<span class=\"name\">not_or_self</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">-<span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L1052-L1054","name":"USize.or_not_self","line":1052,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#USize.or_not_self","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#USize.or_not_self\"><span class=\"name\">USize</span>.<span class=\"name\">or_not_self</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">-<span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L1049-L1051","name":"UInt64.or_not_self","line":1049,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt64.or_not_self","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt64.or_not_self\"><span class=\"name\">UInt64</span>.<span class=\"name\">or_not_self</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">-<span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L1046-L1048","name":"UInt32.or_not_self","line":1046,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt32.or_not_self","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt32.or_not_self\"><span class=\"name\">UInt32</span>.<span class=\"name\">or_not_self</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">-<span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L1043-L1045","name":"UInt16.or_not_self","line":1043,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt16.or_not_self","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt16.or_not_self\"><span class=\"name\">UInt16</span>.<span class=\"name\">or_not_self</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">-<span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L1040-L1042","name":"UInt8.or_not_self","line":1040,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt8.or_not_self","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt8.or_not_self\"><span class=\"name\">UInt8</span>.<span class=\"name\">or_not_self</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">-<span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L1038-L1038","name":"USize.not_and_self","line":1038,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#USize.not_and_self","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#USize.not_and_self\"><span class=\"name\">USize</span>.<span class=\"name\">not_and_self</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L1037-L1037","name":"UInt64.not_and_self","line":1037,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt64.not_and_self","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt64.not_and_self\"><span class=\"name\">UInt64</span>.<span class=\"name\">not_and_self</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L1036-L1036","name":"UInt32.not_and_self","line":1036,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt32.not_and_self","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt32.not_and_self\"><span class=\"name\">UInt32</span>.<span class=\"name\">not_and_self</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L1035-L1035","name":"UInt16.not_and_self","line":1035,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt16.not_and_self","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt16.not_and_self\"><span class=\"name\">UInt16</span>.<span class=\"name\">not_and_self</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L1034-L1034","name":"UInt8.not_and_self","line":1034,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt8.not_and_self","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt8.not_and_self\"><span class=\"name\">UInt8</span>.<span class=\"name\">not_and_self</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L1032-L1032","name":"USize.and_not_self","line":1032,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#USize.and_not_self","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#USize.and_not_self\"><span class=\"name\">USize</span>.<span class=\"name\">and_not_self</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L1031-L1031","name":"UInt64.and_not_self","line":1031,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt64.and_not_self","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt64.and_not_self\"><span class=\"name\">UInt64</span>.<span class=\"name\">and_not_self</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L1030-L1030","name":"UInt32.and_not_self","line":1030,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt32.and_not_self","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt32.and_not_self\"><span class=\"name\">UInt32</span>.<span class=\"name\">and_not_self</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L1029-L1029","name":"UInt16.and_not_self","line":1029,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt16.and_not_self","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt16.and_not_self\"><span class=\"name\">UInt16</span>.<span class=\"name\">and_not_self</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L1028-L1028","name":"UInt8.and_not_self","line":1028,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt8.and_not_self","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt8.and_not_self\"><span class=\"name\">UInt8</span>.<span class=\"name\">and_not_self</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L1026-L1026","name":"USize.not_inj","line":1026,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#USize.not_inj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#USize.not_inj\"><span class=\"name\">USize</span>.<span class=\"name\">not_inj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><span class=\"fn\">b</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L1025-L1025","name":"UInt64.not_inj","line":1025,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt64.not_inj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt64.not_inj\"><span class=\"name\">UInt64</span>.<span class=\"name\">not_inj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><span class=\"fn\">b</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L1024-L1024","name":"UInt32.not_inj","line":1024,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt32.not_inj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt32.not_inj\"><span class=\"name\">UInt32</span>.<span class=\"name\">not_inj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><span class=\"fn\">b</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L1023-L1023","name":"UInt16.not_inj","line":1023,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt16.not_inj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt16.not_inj\"><span class=\"name\">UInt16</span>.<span class=\"name\">not_inj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><span class=\"fn\">b</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L1022-L1022","name":"UInt8.not_inj","line":1022,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt8.not_inj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt8.not_inj\"><span class=\"name\">UInt8</span>.<span class=\"name\">not_inj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><span class=\"fn\">b</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L1020-L1020","name":"USize.not_not","line":1020,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#USize.not_not","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#USize.not_not\"><span class=\"name\">USize</span>.<span class=\"name\">not_not</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L1019-L1019","name":"UInt64.not_not","line":1019,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt64.not_not","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt64.not_not\"><span class=\"name\">UInt64</span>.<span class=\"name\">not_not</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L1018-L1018","name":"UInt32.not_not","line":1018,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt32.not_not","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt32.not_not\"><span class=\"name\">UInt32</span>.<span class=\"name\">not_not</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L1017-L1017","name":"UInt16.not_not","line":1017,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt16.not_not","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt16.not_not\"><span class=\"name\">UInt16</span>.<span class=\"name\">not_not</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L1016-L1016","name":"UInt8.not_not","line":1016,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt8.not_not","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt8.not_not\"><span class=\"name\">UInt8</span>.<span class=\"name\">not_not</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L1014-L1014","name":"USize.not_neg_one","line":1014,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#USize.not_neg_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#USize.not_neg_one\"><span class=\"name\">USize</span>.<span class=\"name\">not_neg_one</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><span class=\"fn\">(-<span class=\"fn\">1</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L1013-L1013","name":"UInt64.not_neg_one","line":1013,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt64.not_neg_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt64.not_neg_one\"><span class=\"name\">UInt64</span>.<span class=\"name\">not_neg_one</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><span class=\"fn\">(-<span class=\"fn\">1</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L1012-L1012","name":"UInt32.not_neg_one","line":1012,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt32.not_neg_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt32.not_neg_one\"><span class=\"name\">UInt32</span>.<span class=\"name\">not_neg_one</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><span class=\"fn\">(-<span class=\"fn\">1</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L1011-L1011","name":"UInt16.not_neg_one","line":1011,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt16.not_neg_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt16.not_neg_one\"><span class=\"name\">UInt16</span>.<span class=\"name\">not_neg_one</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><span class=\"fn\">(-<span class=\"fn\">1</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L1010-L1010","name":"UInt8.not_neg_one","line":1010,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt8.not_neg_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt8.not_neg_one\"><span class=\"name\">UInt8</span>.<span class=\"name\">not_neg_one</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><span class=\"fn\">(-<span class=\"fn\">1</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L1008-L1008","name":"USize.not_zero","line":1008,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#USize.not_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#USize.not_zero\"><span class=\"name\">USize</span>.<span class=\"name\">not_zero</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">-<span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L1007-L1007","name":"UInt64.not_zero","line":1007,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt64.not_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt64.not_zero\"><span class=\"name\">UInt64</span>.<span class=\"name\">not_zero</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">-<span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L1006-L1006","name":"UInt32.not_zero","line":1006,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt32.not_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt32.not_zero\"><span class=\"name\">UInt32</span>.<span class=\"name\">not_zero</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">-<span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L1005-L1005","name":"UInt16.not_zero","line":1005,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt16.not_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt16.not_zero\"><span class=\"name\">UInt16</span>.<span class=\"name\">not_zero</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">-<span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L1004-L1004","name":"UInt8.not_zero","line":1004,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt8.not_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt8.not_zero\"><span class=\"name\">UInt8</span>.<span class=\"name\">not_zero</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">-<span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L1001-L1002","name":"USize.xor_right_inj","line":1001,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#USize.xor_right_inj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#USize.xor_right_inj\"><span class=\"name\">USize</span>.<span class=\"name\">xor_right_inj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">b</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L999-L1000","name":"UInt64.xor_right_inj","line":999,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt64.xor_right_inj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt64.xor_right_inj\"><span class=\"name\">UInt64</span>.<span class=\"name\">xor_right_inj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">b</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L997-L998","name":"UInt32.xor_right_inj","line":997,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt32.xor_right_inj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt32.xor_right_inj\"><span class=\"name\">UInt32</span>.<span class=\"name\">xor_right_inj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">b</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L995-L996","name":"UInt16.xor_right_inj","line":995,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt16.xor_right_inj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt16.xor_right_inj\"><span class=\"name\">UInt16</span>.<span class=\"name\">xor_right_inj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">b</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L993-L994","name":"UInt8.xor_right_inj","line":993,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt8.xor_right_inj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt8.xor_right_inj\"><span class=\"name\">UInt8</span>.<span class=\"name\">xor_right_inj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">b</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L990-L991","name":"USize.xor_left_inj","line":990,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#USize.xor_left_inj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#USize.xor_left_inj\"><span class=\"name\">USize</span>.<span class=\"name\">xor_left_inj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">c</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L988-L989","name":"UInt64.xor_left_inj","line":988,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt64.xor_left_inj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt64.xor_left_inj\"><span class=\"name\">UInt64</span>.<span class=\"name\">xor_left_inj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">c</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L986-L987","name":"UInt32.xor_left_inj","line":986,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt32.xor_left_inj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt32.xor_left_inj\"><span class=\"name\">UInt32</span>.<span class=\"name\">xor_left_inj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">c</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L984-L985","name":"UInt16.xor_left_inj","line":984,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt16.xor_left_inj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt16.xor_left_inj\"><span class=\"name\">UInt16</span>.<span class=\"name\">xor_left_inj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">c</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L982-L983","name":"UInt8.xor_left_inj","line":982,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt8.xor_left_inj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt8.xor_left_inj\"><span class=\"name\">UInt8</span>.<span class=\"name\">xor_left_inj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">c</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L980-L980","name":"USize.xor_eq_zero_iff","line":980,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#USize.xor_eq_zero_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#USize.xor_eq_zero_iff\"><span class=\"name\">USize</span>.<span class=\"name\">xor_eq_zero_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L979-L979","name":"UInt64.xor_eq_zero_iff","line":979,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt64.xor_eq_zero_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt64.xor_eq_zero_iff\"><span class=\"name\">UInt64</span>.<span class=\"name\">xor_eq_zero_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L978-L978","name":"UInt32.xor_eq_zero_iff","line":978,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt32.xor_eq_zero_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt32.xor_eq_zero_iff\"><span class=\"name\">UInt32</span>.<span class=\"name\">xor_eq_zero_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L977-L977","name":"UInt16.xor_eq_zero_iff","line":977,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt16.xor_eq_zero_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt16.xor_eq_zero_iff\"><span class=\"name\">UInt16</span>.<span class=\"name\">xor_eq_zero_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L976-L976","name":"UInt8.xor_eq_zero_iff","line":976,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt8.xor_eq_zero_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt8.xor_eq_zero_iff\"><span class=\"name\">UInt8</span>.<span class=\"name\">xor_eq_zero_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L973-L974","name":"instLawfulCommIdentityUSizeHXorOfNat","line":973,"kind":"instance","docLink":"./Init/Data/UInt/Bitwise.html#instLawfulCommIdentityUSizeHXorOfNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#instLawfulCommIdentityUSizeHXorOfNat\"><span class=\"name\">instLawfulCommIdentityUSizeHXorOfNat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Core.html#Std.LawfulCommIdentity\">Std.LawfulCommIdentity</a> <span class=\"fn\">(fun (<span class=\"fn\">x1</span> <span class=\"fn\">x2</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>) =&gt; <span class=\"fn\">x1</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">x2</span>)</span> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L971-L972","name":"instLawfulCommIdentityUInt64HXorOfNat","line":971,"kind":"instance","docLink":"./Init/Data/UInt/Bitwise.html#instLawfulCommIdentityUInt64HXorOfNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#instLawfulCommIdentityUInt64HXorOfNat\"><span class=\"name\">instLawfulCommIdentityUInt64HXorOfNat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Core.html#Std.LawfulCommIdentity\">Std.LawfulCommIdentity</a> <span class=\"fn\">(fun (<span class=\"fn\">x1</span> <span class=\"fn\">x2</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>) =&gt; <span class=\"fn\">x1</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">x2</span>)</span> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L969-L970","name":"instLawfulCommIdentityUInt32HXorOfNat","line":969,"kind":"instance","docLink":"./Init/Data/UInt/Bitwise.html#instLawfulCommIdentityUInt32HXorOfNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#instLawfulCommIdentityUInt32HXorOfNat\"><span class=\"name\">instLawfulCommIdentityUInt32HXorOfNat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Core.html#Std.LawfulCommIdentity\">Std.LawfulCommIdentity</a> <span class=\"fn\">(fun (<span class=\"fn\">x1</span> <span class=\"fn\">x2</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>) =&gt; <span class=\"fn\">x1</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">x2</span>)</span> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L967-L968","name":"instLawfulCommIdentityUInt16HXorOfNat","line":967,"kind":"instance","docLink":"./Init/Data/UInt/Bitwise.html#instLawfulCommIdentityUInt16HXorOfNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#instLawfulCommIdentityUInt16HXorOfNat\"><span class=\"name\">instLawfulCommIdentityUInt16HXorOfNat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Core.html#Std.LawfulCommIdentity\">Std.LawfulCommIdentity</a> <span class=\"fn\">(fun (<span class=\"fn\">x1</span> <span class=\"fn\">x2</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>) =&gt; <span class=\"fn\">x1</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">x2</span>)</span> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L965-L966","name":"instLawfulCommIdentityUInt8HXorOfNat","line":965,"kind":"instance","docLink":"./Init/Data/UInt/Bitwise.html#instLawfulCommIdentityUInt8HXorOfNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#instLawfulCommIdentityUInt8HXorOfNat\"><span class=\"name\">instLawfulCommIdentityUInt8HXorOfNat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Core.html#Std.LawfulCommIdentity\">Std.LawfulCommIdentity</a> <span class=\"fn\">(fun (<span class=\"fn\">x1</span> <span class=\"fn\">x2</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>) =&gt; <span class=\"fn\">x1</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">x2</span>)</span> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L963-L963","name":"USize.xor_neg_one","line":963,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#USize.xor_neg_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#USize.xor_neg_one\"><span class=\"name\">USize</span>.<span class=\"name\">xor_neg_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">-<span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L962-L962","name":"UInt64.xor_neg_one","line":962,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt64.xor_neg_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt64.xor_neg_one\"><span class=\"name\">UInt64</span>.<span class=\"name\">xor_neg_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">-<span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L961-L961","name":"UInt32.xor_neg_one","line":961,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt32.xor_neg_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt32.xor_neg_one\"><span class=\"name\">UInt32</span>.<span class=\"name\">xor_neg_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">-<span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L960-L960","name":"UInt16.xor_neg_one","line":960,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt16.xor_neg_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt16.xor_neg_one\"><span class=\"name\">UInt16</span>.<span class=\"name\">xor_neg_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">-<span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L959-L959","name":"UInt8.xor_neg_one","line":959,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt8.xor_neg_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt8.xor_neg_one\"><span class=\"name\">UInt8</span>.<span class=\"name\">xor_neg_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">-<span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L955-L957","name":"USize.neg_one_xor","line":955,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#USize.neg_one_xor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#USize.neg_one_xor\"><span class=\"name\">USize</span>.<span class=\"name\">neg_one_xor</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">-<span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L952-L954","name":"UInt64.neg_one_xor","line":952,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt64.neg_one_xor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt64.neg_one_xor\"><span class=\"name\">UInt64</span>.<span class=\"name\">neg_one_xor</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">-<span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L949-L951","name":"UInt32.neg_one_xor","line":949,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt32.neg_one_xor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt32.neg_one_xor\"><span class=\"name\">UInt32</span>.<span class=\"name\">neg_one_xor</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">-<span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L946-L948","name":"UInt16.neg_one_xor","line":946,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt16.neg_one_xor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt16.neg_one_xor\"><span class=\"name\">UInt16</span>.<span class=\"name\">neg_one_xor</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">-<span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L943-L945","name":"UInt8.neg_one_xor","line":943,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt8.neg_one_xor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt8.neg_one_xor\"><span class=\"name\">UInt8</span>.<span class=\"name\">neg_one_xor</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">-<span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L941-L941","name":"USize.zero_xor","line":941,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#USize.zero_xor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#USize.zero_xor\"><span class=\"name\">USize</span>.<span class=\"name\">zero_xor</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L940-L940","name":"UInt64.zero_xor","line":940,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt64.zero_xor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt64.zero_xor\"><span class=\"name\">UInt64</span>.<span class=\"name\">zero_xor</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L939-L939","name":"UInt32.zero_xor","line":939,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt32.zero_xor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt32.zero_xor\"><span class=\"name\">UInt32</span>.<span class=\"name\">zero_xor</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L938-L938","name":"UInt16.zero_xor","line":938,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt16.zero_xor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt16.zero_xor\"><span class=\"name\">UInt16</span>.<span class=\"name\">zero_xor</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L937-L937","name":"UInt8.zero_xor","line":937,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt8.zero_xor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt8.zero_xor\"><span class=\"name\">UInt8</span>.<span class=\"name\">zero_xor</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L935-L935","name":"USize.xor_zero","line":935,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#USize.xor_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#USize.xor_zero\"><span class=\"name\">USize</span>.<span class=\"name\">xor_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L934-L934","name":"UInt64.xor_zero","line":934,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt64.xor_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt64.xor_zero\"><span class=\"name\">UInt64</span>.<span class=\"name\">xor_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L933-L933","name":"UInt32.xor_zero","line":933,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt32.xor_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt32.xor_zero\"><span class=\"name\">UInt32</span>.<span class=\"name\">xor_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L932-L932","name":"UInt16.xor_zero","line":932,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt16.xor_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt16.xor_zero\"><span class=\"name\">UInt16</span>.<span class=\"name\">xor_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L931-L931","name":"UInt8.xor_zero","line":931,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt8.xor_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt8.xor_zero\"><span class=\"name\">UInt8</span>.<span class=\"name\">xor_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L929-L929","name":"USize.xor_self","line":929,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#USize.xor_self","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#USize.xor_self\"><span class=\"name\">USize</span>.<span class=\"name\">xor_self</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L928-L928","name":"UInt64.xor_self","line":928,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt64.xor_self","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt64.xor_self\"><span class=\"name\">UInt64</span>.<span class=\"name\">xor_self</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L927-L927","name":"UInt32.xor_self","line":927,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt32.xor_self","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt32.xor_self\"><span class=\"name\">UInt32</span>.<span class=\"name\">xor_self</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L926-L926","name":"UInt16.xor_self","line":926,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt16.xor_self","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt16.xor_self\"><span class=\"name\">UInt16</span>.<span class=\"name\">xor_self</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L925-L925","name":"UInt8.xor_self","line":925,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt8.xor_self","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt8.xor_self\"><span class=\"name\">UInt8</span>.<span class=\"name\">xor_self</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L923-L923","name":"instCommutativeUSizeHXor","line":923,"kind":"instance","docLink":"./Init/Data/UInt/Bitwise.html#instCommutativeUSizeHXor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#instCommutativeUSizeHXor\"><span class=\"name\">instCommutativeUSizeHXor</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Core.html#Std.Commutative\">Std.Commutative</a> <span class=\"fn\">fun (<span class=\"fn\">x1</span> <span class=\"fn\">x2</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>) =&gt; <span class=\"fn\">x1</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">x2</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L922-L922","name":"instCommutativeUInt64HXor","line":922,"kind":"instance","docLink":"./Init/Data/UInt/Bitwise.html#instCommutativeUInt64HXor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#instCommutativeUInt64HXor\"><span class=\"name\">instCommutativeUInt64HXor</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Core.html#Std.Commutative\">Std.Commutative</a> <span class=\"fn\">fun (<span class=\"fn\">x1</span> <span class=\"fn\">x2</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>) =&gt; <span class=\"fn\">x1</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">x2</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L921-L921","name":"instCommutativeUInt32HXor","line":921,"kind":"instance","docLink":"./Init/Data/UInt/Bitwise.html#instCommutativeUInt32HXor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#instCommutativeUInt32HXor\"><span class=\"name\">instCommutativeUInt32HXor</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Core.html#Std.Commutative\">Std.Commutative</a> <span class=\"fn\">fun (<span class=\"fn\">x1</span> <span class=\"fn\">x2</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>) =&gt; <span class=\"fn\">x1</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">x2</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L920-L920","name":"instCommutativeUInt16HXor","line":920,"kind":"instance","docLink":"./Init/Data/UInt/Bitwise.html#instCommutativeUInt16HXor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#instCommutativeUInt16HXor\"><span class=\"name\">instCommutativeUInt16HXor</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Core.html#Std.Commutative\">Std.Commutative</a> <span class=\"fn\">fun (<span class=\"fn\">x1</span> <span class=\"fn\">x2</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>) =&gt; <span class=\"fn\">x1</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">x2</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L919-L919","name":"instCommutativeUInt8HXor","line":919,"kind":"instance","docLink":"./Init/Data/UInt/Bitwise.html#instCommutativeUInt8HXor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#instCommutativeUInt8HXor\"><span class=\"name\">instCommutativeUInt8HXor</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Core.html#Std.Commutative\">Std.Commutative</a> <span class=\"fn\">fun (<span class=\"fn\">x1</span> <span class=\"fn\">x2</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>) =&gt; <span class=\"fn\">x1</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">x2</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L917-L917","name":"USize.xor_comm","line":917,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#USize.xor_comm","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#USize.xor_comm\"><span class=\"name\">USize</span>.<span class=\"name\">xor_comm</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L916-L916","name":"UInt64.xor_comm","line":916,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt64.xor_comm","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt64.xor_comm\"><span class=\"name\">UInt64</span>.<span class=\"name\">xor_comm</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L915-L915","name":"UInt32.xor_comm","line":915,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt32.xor_comm","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt32.xor_comm\"><span class=\"name\">UInt32</span>.<span class=\"name\">xor_comm</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L914-L914","name":"UInt16.xor_comm","line":914,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt16.xor_comm","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt16.xor_comm\"><span class=\"name\">UInt16</span>.<span class=\"name\">xor_comm</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L913-L913","name":"UInt8.xor_comm","line":913,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt8.xor_comm","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt8.xor_comm\"><span class=\"name\">UInt8</span>.<span class=\"name\">xor_comm</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L911-L911","name":"instAssociativeUSizeHXor","line":911,"kind":"instance","docLink":"./Init/Data/UInt/Bitwise.html#instAssociativeUSizeHXor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#instAssociativeUSizeHXor\"><span class=\"name\">instAssociativeUSizeHXor</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Core.html#Std.Associative\">Std.Associative</a> <span class=\"fn\">fun (<span class=\"fn\">x1</span> <span class=\"fn\">x2</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>) =&gt; <span class=\"fn\">x1</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">x2</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L910-L910","name":"instAssociativeUInt64HXor","line":910,"kind":"instance","docLink":"./Init/Data/UInt/Bitwise.html#instAssociativeUInt64HXor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#instAssociativeUInt64HXor\"><span class=\"name\">instAssociativeUInt64HXor</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Core.html#Std.Associative\">Std.Associative</a> <span class=\"fn\">fun (<span class=\"fn\">x1</span> <span class=\"fn\">x2</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>) =&gt; <span class=\"fn\">x1</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">x2</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L909-L909","name":"instAssociativeUInt32HXor","line":909,"kind":"instance","docLink":"./Init/Data/UInt/Bitwise.html#instAssociativeUInt32HXor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#instAssociativeUInt32HXor\"><span class=\"name\">instAssociativeUInt32HXor</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Core.html#Std.Associative\">Std.Associative</a> <span class=\"fn\">fun (<span class=\"fn\">x1</span> <span class=\"fn\">x2</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>) =&gt; <span class=\"fn\">x1</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">x2</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L908-L908","name":"instAssociativeUInt16HXor","line":908,"kind":"instance","docLink":"./Init/Data/UInt/Bitwise.html#instAssociativeUInt16HXor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#instAssociativeUInt16HXor\"><span class=\"name\">instAssociativeUInt16HXor</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Core.html#Std.Associative\">Std.Associative</a> <span class=\"fn\">fun (<span class=\"fn\">x1</span> <span class=\"fn\">x2</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>) =&gt; <span class=\"fn\">x1</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">x2</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L907-L907","name":"instAssociativeUInt8HXor","line":907,"kind":"instance","docLink":"./Init/Data/UInt/Bitwise.html#instAssociativeUInt8HXor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#instAssociativeUInt8HXor\"><span class=\"name\">instAssociativeUInt8HXor</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Core.html#Std.Associative\">Std.Associative</a> <span class=\"fn\">fun (<span class=\"fn\">x1</span> <span class=\"fn\">x2</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>) =&gt; <span class=\"fn\">x1</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">x2</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L905-L905","name":"USize.xor_assoc","line":905,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#USize.xor_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#USize.xor_assoc\"><span class=\"name\">USize</span>.<span class=\"name\">xor_assoc</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> (<span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">c</span>)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L904-L904","name":"UInt64.xor_assoc","line":904,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt64.xor_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt64.xor_assoc\"><span class=\"name\">UInt64</span>.<span class=\"name\">xor_assoc</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> (<span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">c</span>)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L903-L903","name":"UInt32.xor_assoc","line":903,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt32.xor_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt32.xor_assoc\"><span class=\"name\">UInt32</span>.<span class=\"name\">xor_assoc</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> (<span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">c</span>)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L902-L902","name":"UInt16.xor_assoc","line":902,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt16.xor_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt16.xor_assoc\"><span class=\"name\">UInt16</span>.<span class=\"name\">xor_assoc</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> (<span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">c</span>)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L901-L901","name":"UInt8.xor_assoc","line":901,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt8.xor_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt8.xor_assoc\"><span class=\"name\">UInt8</span>.<span class=\"name\">xor_assoc</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> (<span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">c</span>)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L897-L899","name":"USize.and_eq_neg_one_iff","line":897,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#USize.and_eq_neg_one_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#USize.and_eq_neg_one_iff\"><span class=\"name\">USize</span>.<span class=\"name\">and_eq_neg_one_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">-<span class=\"fn\">1</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">-<span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">-<span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L894-L896","name":"UInt64.and_eq_neg_one_iff","line":894,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt64.and_eq_neg_one_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt64.and_eq_neg_one_iff\"><span class=\"name\">UInt64</span>.<span class=\"name\">and_eq_neg_one_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">-<span class=\"fn\">1</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">-<span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">-<span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L891-L893","name":"UInt32.and_eq_neg_one_iff","line":891,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt32.and_eq_neg_one_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt32.and_eq_neg_one_iff\"><span class=\"name\">UInt32</span>.<span class=\"name\">and_eq_neg_one_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">-<span class=\"fn\">1</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">-<span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">-<span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L888-L890","name":"UInt16.and_eq_neg_one_iff","line":888,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt16.and_eq_neg_one_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt16.and_eq_neg_one_iff\"><span class=\"name\">UInt16</span>.<span class=\"name\">and_eq_neg_one_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">-<span class=\"fn\">1</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">-<span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">-<span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L885-L887","name":"UInt8.and_eq_neg_one_iff","line":885,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt8.and_eq_neg_one_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt8.and_eq_neg_one_iff\"><span class=\"name\">UInt8</span>.<span class=\"name\">and_eq_neg_one_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">-<span class=\"fn\">1</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">-<span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">-<span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L882-L883","name":"instLawfulCommIdentityUSizeHAndNegOfNat","line":882,"kind":"instance","docLink":"./Init/Data/UInt/Bitwise.html#instLawfulCommIdentityUSizeHAndNegOfNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#instLawfulCommIdentityUSizeHAndNegOfNat\"><span class=\"name\">instLawfulCommIdentityUSizeHAndNegOfNat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Core.html#Std.LawfulCommIdentity\">Std.LawfulCommIdentity</a> <span class=\"fn\">(fun (<span class=\"fn\">x1</span> <span class=\"fn\">x2</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>) =&gt; <span class=\"fn\">x1</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\">x2</span>)</span> <span class=\"fn\">(-<span class=\"fn\">1</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L880-L881","name":"instLawfulCommIdentityUInt64HAndNegOfNat","line":880,"kind":"instance","docLink":"./Init/Data/UInt/Bitwise.html#instLawfulCommIdentityUInt64HAndNegOfNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#instLawfulCommIdentityUInt64HAndNegOfNat\"><span class=\"name\">instLawfulCommIdentityUInt64HAndNegOfNat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Core.html#Std.LawfulCommIdentity\">Std.LawfulCommIdentity</a> <span class=\"fn\">(fun (<span class=\"fn\">x1</span> <span class=\"fn\">x2</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>) =&gt; <span class=\"fn\">x1</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\">x2</span>)</span> <span class=\"fn\">(-<span class=\"fn\">1</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L878-L879","name":"instLawfulCommIdentityUInt32HAndNegOfNat","line":878,"kind":"instance","docLink":"./Init/Data/UInt/Bitwise.html#instLawfulCommIdentityUInt32HAndNegOfNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#instLawfulCommIdentityUInt32HAndNegOfNat\"><span class=\"name\">instLawfulCommIdentityUInt32HAndNegOfNat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Core.html#Std.LawfulCommIdentity\">Std.LawfulCommIdentity</a> <span class=\"fn\">(fun (<span class=\"fn\">x1</span> <span class=\"fn\">x2</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>) =&gt; <span class=\"fn\">x1</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\">x2</span>)</span> <span class=\"fn\">(-<span class=\"fn\">1</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L876-L877","name":"instLawfulCommIdentityUInt16HAndNegOfNat","line":876,"kind":"instance","docLink":"./Init/Data/UInt/Bitwise.html#instLawfulCommIdentityUInt16HAndNegOfNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#instLawfulCommIdentityUInt16HAndNegOfNat\"><span class=\"name\">instLawfulCommIdentityUInt16HAndNegOfNat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Core.html#Std.LawfulCommIdentity\">Std.LawfulCommIdentity</a> <span class=\"fn\">(fun (<span class=\"fn\">x1</span> <span class=\"fn\">x2</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>) =&gt; <span class=\"fn\">x1</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\">x2</span>)</span> <span class=\"fn\">(-<span class=\"fn\">1</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L874-L875","name":"instLawfulCommIdentityUInt8HAndNegOfNat","line":874,"kind":"instance","docLink":"./Init/Data/UInt/Bitwise.html#instLawfulCommIdentityUInt8HAndNegOfNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#instLawfulCommIdentityUInt8HAndNegOfNat\"><span class=\"name\">instLawfulCommIdentityUInt8HAndNegOfNat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Core.html#Std.LawfulCommIdentity\">Std.LawfulCommIdentity</a> <span class=\"fn\">(fun (<span class=\"fn\">x1</span> <span class=\"fn\">x2</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>) =&gt; <span class=\"fn\">x1</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\">x2</span>)</span> <span class=\"fn\">(-<span class=\"fn\">1</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L872-L872","name":"USize.and_neg_one","line":872,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#USize.and_neg_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#USize.and_neg_one\"><span class=\"name\">USize</span>.<span class=\"name\">and_neg_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\">-<span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L871-L871","name":"UInt64.and_neg_one","line":871,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt64.and_neg_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt64.and_neg_one\"><span class=\"name\">UInt64</span>.<span class=\"name\">and_neg_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\">-<span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L870-L870","name":"UInt32.and_neg_one","line":870,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt32.and_neg_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt32.and_neg_one\"><span class=\"name\">UInt32</span>.<span class=\"name\">and_neg_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\">-<span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L869-L869","name":"UInt16.and_neg_one","line":869,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt16.and_neg_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt16.and_neg_one\"><span class=\"name\">UInt16</span>.<span class=\"name\">and_neg_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\">-<span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L868-L868","name":"UInt8.and_neg_one","line":868,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt8.and_neg_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt8.and_neg_one\"><span class=\"name\">UInt8</span>.<span class=\"name\">and_neg_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\">-<span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L864-L866","name":"USize.neg_one_and","line":864,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#USize.neg_one_and","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#USize.neg_one_and\"><span class=\"name\">USize</span>.<span class=\"name\">neg_one_and</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">-<span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L861-L863","name":"UInt64.neg_one_and","line":861,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt64.neg_one_and","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt64.neg_one_and\"><span class=\"name\">UInt64</span>.<span class=\"name\">neg_one_and</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">-<span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L858-L860","name":"UInt32.neg_one_and","line":858,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt32.neg_one_and","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt32.neg_one_and\"><span class=\"name\">UInt32</span>.<span class=\"name\">neg_one_and</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">-<span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L855-L857","name":"UInt16.neg_one_and","line":855,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt16.neg_one_and","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt16.neg_one_and\"><span class=\"name\">UInt16</span>.<span class=\"name\">neg_one_and</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">-<span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L852-L854","name":"UInt8.neg_one_and","line":852,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt8.neg_one_and","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt8.neg_one_and\"><span class=\"name\">UInt8</span>.<span class=\"name\">neg_one_and</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">-<span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L850-L850","name":"USize.zero_and","line":850,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#USize.zero_and","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#USize.zero_and\"><span class=\"name\">USize</span>.<span class=\"name\">zero_and</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L849-L849","name":"UInt64.zero_and","line":849,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt64.zero_and","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt64.zero_and\"><span class=\"name\">UInt64</span>.<span class=\"name\">zero_and</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L848-L848","name":"UInt32.zero_and","line":848,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt32.zero_and","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt32.zero_and\"><span class=\"name\">UInt32</span>.<span class=\"name\">zero_and</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L847-L847","name":"UInt16.zero_and","line":847,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt16.zero_and","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt16.zero_and\"><span class=\"name\">UInt16</span>.<span class=\"name\">zero_and</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L846-L846","name":"UInt8.zero_and","line":846,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt8.zero_and","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt8.zero_and\"><span class=\"name\">UInt8</span>.<span class=\"name\">zero_and</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L844-L844","name":"USize.and_zero","line":844,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#USize.and_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#USize.and_zero\"><span class=\"name\">USize</span>.<span class=\"name\">and_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L843-L843","name":"UInt64.and_zero","line":843,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt64.and_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt64.and_zero\"><span class=\"name\">UInt64</span>.<span class=\"name\">and_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L842-L842","name":"UInt32.and_zero","line":842,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt32.and_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt32.and_zero\"><span class=\"name\">UInt32</span>.<span class=\"name\">and_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L841-L841","name":"UInt16.and_zero","line":841,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt16.and_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt16.and_zero\"><span class=\"name\">UInt16</span>.<span class=\"name\">and_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L840-L840","name":"UInt8.and_zero","line":840,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt8.and_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt8.and_zero\"><span class=\"name\">UInt8</span>.<span class=\"name\">and_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L838-L838","name":"instIdempotentOpUSizeHAnd","line":838,"kind":"instance","docLink":"./Init/Data/UInt/Bitwise.html#instIdempotentOpUSizeHAnd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#instIdempotentOpUSizeHAnd\"><span class=\"name\">instIdempotentOpUSizeHAnd</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Core.html#Std.IdempotentOp\">Std.IdempotentOp</a> <span class=\"fn\">fun (<span class=\"fn\">x1</span> <span class=\"fn\">x2</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>) =&gt; <span class=\"fn\">x1</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\">x2</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L837-L837","name":"instIdempotentOpUInt64HAnd","line":837,"kind":"instance","docLink":"./Init/Data/UInt/Bitwise.html#instIdempotentOpUInt64HAnd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#instIdempotentOpUInt64HAnd\"><span class=\"name\">instIdempotentOpUInt64HAnd</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Core.html#Std.IdempotentOp\">Std.IdempotentOp</a> <span class=\"fn\">fun (<span class=\"fn\">x1</span> <span class=\"fn\">x2</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>) =&gt; <span class=\"fn\">x1</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\">x2</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L836-L836","name":"instIdempotentOpUInt32HAnd","line":836,"kind":"instance","docLink":"./Init/Data/UInt/Bitwise.html#instIdempotentOpUInt32HAnd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#instIdempotentOpUInt32HAnd\"><span class=\"name\">instIdempotentOpUInt32HAnd</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Core.html#Std.IdempotentOp\">Std.IdempotentOp</a> <span class=\"fn\">fun (<span class=\"fn\">x1</span> <span class=\"fn\">x2</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>) =&gt; <span class=\"fn\">x1</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\">x2</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L835-L835","name":"instIdempotentOpUInt16HAnd","line":835,"kind":"instance","docLink":"./Init/Data/UInt/Bitwise.html#instIdempotentOpUInt16HAnd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#instIdempotentOpUInt16HAnd\"><span class=\"name\">instIdempotentOpUInt16HAnd</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Core.html#Std.IdempotentOp\">Std.IdempotentOp</a> <span class=\"fn\">fun (<span class=\"fn\">x1</span> <span class=\"fn\">x2</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>) =&gt; <span class=\"fn\">x1</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\">x2</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L834-L834","name":"instIdempotentOpUInt8HAnd","line":834,"kind":"instance","docLink":"./Init/Data/UInt/Bitwise.html#instIdempotentOpUInt8HAnd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#instIdempotentOpUInt8HAnd\"><span class=\"name\">instIdempotentOpUInt8HAnd</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Core.html#Std.IdempotentOp\">Std.IdempotentOp</a> <span class=\"fn\">fun (<span class=\"fn\">x1</span> <span class=\"fn\">x2</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>) =&gt; <span class=\"fn\">x1</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\">x2</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L832-L832","name":"USize.and_self","line":832,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#USize.and_self","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#USize.and_self\"><span class=\"name\">USize</span>.<span class=\"name\">and_self</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L831-L831","name":"UInt64.and_self","line":831,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt64.and_self","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt64.and_self\"><span class=\"name\">UInt64</span>.<span class=\"name\">and_self</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L830-L830","name":"UInt32.and_self","line":830,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt32.and_self","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt32.and_self\"><span class=\"name\">UInt32</span>.<span class=\"name\">and_self</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L829-L829","name":"UInt16.and_self","line":829,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt16.and_self","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt16.and_self\"><span class=\"name\">UInt16</span>.<span class=\"name\">and_self</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L828-L828","name":"UInt8.and_self","line":828,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt8.and_self","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt8.and_self\"><span class=\"name\">UInt8</span>.<span class=\"name\">and_self</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L826-L826","name":"instCommutativeUSizeHAnd","line":826,"kind":"instance","docLink":"./Init/Data/UInt/Bitwise.html#instCommutativeUSizeHAnd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#instCommutativeUSizeHAnd\"><span class=\"name\">instCommutativeUSizeHAnd</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Core.html#Std.Commutative\">Std.Commutative</a> <span class=\"fn\">fun (<span class=\"fn\">x1</span> <span class=\"fn\">x2</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>) =&gt; <span class=\"fn\">x1</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\">x2</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L825-L825","name":"instCommutativeUInt64HAnd","line":825,"kind":"instance","docLink":"./Init/Data/UInt/Bitwise.html#instCommutativeUInt64HAnd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#instCommutativeUInt64HAnd\"><span class=\"name\">instCommutativeUInt64HAnd</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Core.html#Std.Commutative\">Std.Commutative</a> <span class=\"fn\">fun (<span class=\"fn\">x1</span> <span class=\"fn\">x2</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>) =&gt; <span class=\"fn\">x1</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\">x2</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L824-L824","name":"instCommutativeUInt32HAnd","line":824,"kind":"instance","docLink":"./Init/Data/UInt/Bitwise.html#instCommutativeUInt32HAnd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#instCommutativeUInt32HAnd\"><span class=\"name\">instCommutativeUInt32HAnd</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Core.html#Std.Commutative\">Std.Commutative</a> <span class=\"fn\">fun (<span class=\"fn\">x1</span> <span class=\"fn\">x2</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>) =&gt; <span class=\"fn\">x1</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\">x2</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L823-L823","name":"instCommutativeUInt16HAnd","line":823,"kind":"instance","docLink":"./Init/Data/UInt/Bitwise.html#instCommutativeUInt16HAnd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#instCommutativeUInt16HAnd\"><span class=\"name\">instCommutativeUInt16HAnd</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Core.html#Std.Commutative\">Std.Commutative</a> <span class=\"fn\">fun (<span class=\"fn\">x1</span> <span class=\"fn\">x2</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>) =&gt; <span class=\"fn\">x1</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\">x2</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L822-L822","name":"instCommutativeUInt8HAnd","line":822,"kind":"instance","docLink":"./Init/Data/UInt/Bitwise.html#instCommutativeUInt8HAnd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#instCommutativeUInt8HAnd\"><span class=\"name\">instCommutativeUInt8HAnd</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Core.html#Std.Commutative\">Std.Commutative</a> <span class=\"fn\">fun (<span class=\"fn\">x1</span> <span class=\"fn\">x2</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>) =&gt; <span class=\"fn\">x1</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\">x2</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L820-L820","name":"USize.and_comm","line":820,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#USize.and_comm","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#USize.and_comm\"><span class=\"name\">USize</span>.<span class=\"name\">and_comm</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L819-L819","name":"UInt64.and_comm","line":819,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt64.and_comm","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt64.and_comm\"><span class=\"name\">UInt64</span>.<span class=\"name\">and_comm</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L818-L818","name":"UInt32.and_comm","line":818,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt32.and_comm","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt32.and_comm\"><span class=\"name\">UInt32</span>.<span class=\"name\">and_comm</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L817-L817","name":"UInt16.and_comm","line":817,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt16.and_comm","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt16.and_comm\"><span class=\"name\">UInt16</span>.<span class=\"name\">and_comm</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L816-L816","name":"UInt8.and_comm","line":816,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt8.and_comm","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt8.and_comm\"><span class=\"name\">UInt8</span>.<span class=\"name\">and_comm</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L814-L814","name":"instAssociativeUSizeHAnd","line":814,"kind":"instance","docLink":"./Init/Data/UInt/Bitwise.html#instAssociativeUSizeHAnd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#instAssociativeUSizeHAnd\"><span class=\"name\">instAssociativeUSizeHAnd</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Core.html#Std.Associative\">Std.Associative</a> <span class=\"fn\">fun (<span class=\"fn\">x1</span> <span class=\"fn\">x2</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>) =&gt; <span class=\"fn\">x1</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\">x2</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L813-L813","name":"instAssociativeUInt64HAnd","line":813,"kind":"instance","docLink":"./Init/Data/UInt/Bitwise.html#instAssociativeUInt64HAnd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#instAssociativeUInt64HAnd\"><span class=\"name\">instAssociativeUInt64HAnd</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Core.html#Std.Associative\">Std.Associative</a> <span class=\"fn\">fun (<span class=\"fn\">x1</span> <span class=\"fn\">x2</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>) =&gt; <span class=\"fn\">x1</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\">x2</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L812-L812","name":"instAssociativeUInt32HAnd","line":812,"kind":"instance","docLink":"./Init/Data/UInt/Bitwise.html#instAssociativeUInt32HAnd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#instAssociativeUInt32HAnd\"><span class=\"name\">instAssociativeUInt32HAnd</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Core.html#Std.Associative\">Std.Associative</a> <span class=\"fn\">fun (<span class=\"fn\">x1</span> <span class=\"fn\">x2</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>) =&gt; <span class=\"fn\">x1</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\">x2</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L811-L811","name":"instAssociativeUInt16HAnd","line":811,"kind":"instance","docLink":"./Init/Data/UInt/Bitwise.html#instAssociativeUInt16HAnd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#instAssociativeUInt16HAnd\"><span class=\"name\">instAssociativeUInt16HAnd</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Core.html#Std.Associative\">Std.Associative</a> <span class=\"fn\">fun (<span class=\"fn\">x1</span> <span class=\"fn\">x2</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>) =&gt; <span class=\"fn\">x1</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\">x2</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L810-L810","name":"instAssociativeUInt8HAnd","line":810,"kind":"instance","docLink":"./Init/Data/UInt/Bitwise.html#instAssociativeUInt8HAnd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#instAssociativeUInt8HAnd\"><span class=\"name\">instAssociativeUInt8HAnd</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Core.html#Std.Associative\">Std.Associative</a> <span class=\"fn\">fun (<span class=\"fn\">x1</span> <span class=\"fn\">x2</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>) =&gt; <span class=\"fn\">x1</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\">x2</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L808-L808","name":"USize.and_assoc","line":808,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#USize.and_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#USize.and_assoc\"><span class=\"name\">USize</span>.<span class=\"name\">and_assoc</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> (<span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\">c</span>)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L807-L807","name":"UInt64.and_assoc","line":807,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt64.and_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt64.and_assoc\"><span class=\"name\">UInt64</span>.<span class=\"name\">and_assoc</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> (<span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\">c</span>)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L806-L806","name":"UInt32.and_assoc","line":806,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt32.and_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt32.and_assoc\"><span class=\"name\">UInt32</span>.<span class=\"name\">and_assoc</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> (<span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\">c</span>)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L805-L805","name":"UInt16.and_assoc","line":805,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt16.and_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt16.and_assoc\"><span class=\"name\">UInt16</span>.<span class=\"name\">and_assoc</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> (<span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\">c</span>)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L804-L804","name":"UInt8.and_assoc","line":804,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt8.and_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt8.and_assoc\"><span class=\"name\">UInt8</span>.<span class=\"name\">and_assoc</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> (<span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\">c</span>)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L801-L802","name":"USize.or_eq_zero_iff","line":801,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#USize.or_eq_zero_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#USize.or_eq_zero_iff\"><span class=\"name\">USize</span>.<span class=\"name\">or_eq_zero_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L799-L800","name":"UInt64.or_eq_zero_iff","line":799,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt64.or_eq_zero_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt64.or_eq_zero_iff\"><span class=\"name\">UInt64</span>.<span class=\"name\">or_eq_zero_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L797-L798","name":"UInt32.or_eq_zero_iff","line":797,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt32.or_eq_zero_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt32.or_eq_zero_iff\"><span class=\"name\">UInt32</span>.<span class=\"name\">or_eq_zero_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L795-L796","name":"UInt16.or_eq_zero_iff","line":795,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt16.or_eq_zero_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt16.or_eq_zero_iff\"><span class=\"name\">UInt16</span>.<span class=\"name\">or_eq_zero_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L793-L794","name":"UInt8.or_eq_zero_iff","line":793,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt8.or_eq_zero_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt8.or_eq_zero_iff\"><span class=\"name\">UInt8</span>.<span class=\"name\">or_eq_zero_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L791-L791","name":"USize.or_neg_one","line":791,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#USize.or_neg_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#USize.or_neg_one\"><span class=\"name\">USize</span>.<span class=\"name\">or_neg_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">-<span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">-<span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L790-L790","name":"UInt64.or_neg_one","line":790,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt64.or_neg_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt64.or_neg_one\"><span class=\"name\">UInt64</span>.<span class=\"name\">or_neg_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">-<span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">-<span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L789-L789","name":"UInt32.or_neg_one","line":789,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt32.or_neg_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt32.or_neg_one\"><span class=\"name\">UInt32</span>.<span class=\"name\">or_neg_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">-<span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">-<span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L788-L788","name":"UInt16.or_neg_one","line":788,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt16.or_neg_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt16.or_neg_one\"><span class=\"name\">UInt16</span>.<span class=\"name\">or_neg_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">-<span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">-<span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L787-L787","name":"UInt8.or_neg_one","line":787,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt8.or_neg_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt8.or_neg_one\"><span class=\"name\">UInt8</span>.<span class=\"name\">or_neg_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">-<span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">-<span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L783-L785","name":"USize.neg_one_or","line":783,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#USize.neg_one_or","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#USize.neg_one_or\"><span class=\"name\">USize</span>.<span class=\"name\">neg_one_or</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">-<span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">-<span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L780-L782","name":"UInt64.neg_one_or","line":780,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt64.neg_one_or","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt64.neg_one_or\"><span class=\"name\">UInt64</span>.<span class=\"name\">neg_one_or</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">-<span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">-<span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L777-L779","name":"UInt32.neg_one_or","line":777,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt32.neg_one_or","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt32.neg_one_or\"><span class=\"name\">UInt32</span>.<span class=\"name\">neg_one_or</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">-<span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">-<span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L774-L776","name":"UInt16.neg_one_or","line":774,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt16.neg_one_or","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt16.neg_one_or\"><span class=\"name\">UInt16</span>.<span class=\"name\">neg_one_or</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">-<span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">-<span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L771-L773","name":"UInt8.neg_one_or","line":771,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt8.neg_one_or","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt8.neg_one_or\"><span class=\"name\">UInt8</span>.<span class=\"name\">neg_one_or</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">-<span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">-<span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L768-L769","name":"instLawfulCommIdentityUSizeHOrOfNat","line":768,"kind":"instance","docLink":"./Init/Data/UInt/Bitwise.html#instLawfulCommIdentityUSizeHOrOfNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#instLawfulCommIdentityUSizeHOrOfNat\"><span class=\"name\">instLawfulCommIdentityUSizeHOrOfNat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Core.html#Std.LawfulCommIdentity\">Std.LawfulCommIdentity</a> <span class=\"fn\">(fun (<span class=\"fn\">x1</span> <span class=\"fn\">x2</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>) =&gt; <span class=\"fn\">x1</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">x2</span>)</span> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L766-L767","name":"instLawfulCommIdentityUInt64HOrOfNat","line":766,"kind":"instance","docLink":"./Init/Data/UInt/Bitwise.html#instLawfulCommIdentityUInt64HOrOfNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#instLawfulCommIdentityUInt64HOrOfNat\"><span class=\"name\">instLawfulCommIdentityUInt64HOrOfNat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Core.html#Std.LawfulCommIdentity\">Std.LawfulCommIdentity</a> <span class=\"fn\">(fun (<span class=\"fn\">x1</span> <span class=\"fn\">x2</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>) =&gt; <span class=\"fn\">x1</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">x2</span>)</span> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L764-L765","name":"instLawfulCommIdentityUInt32HOrOfNat","line":764,"kind":"instance","docLink":"./Init/Data/UInt/Bitwise.html#instLawfulCommIdentityUInt32HOrOfNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#instLawfulCommIdentityUInt32HOrOfNat\"><span class=\"name\">instLawfulCommIdentityUInt32HOrOfNat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Core.html#Std.LawfulCommIdentity\">Std.LawfulCommIdentity</a> <span class=\"fn\">(fun (<span class=\"fn\">x1</span> <span class=\"fn\">x2</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>) =&gt; <span class=\"fn\">x1</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">x2</span>)</span> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L762-L763","name":"instLawfulCommIdentityUInt16HOrOfNat","line":762,"kind":"instance","docLink":"./Init/Data/UInt/Bitwise.html#instLawfulCommIdentityUInt16HOrOfNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#instLawfulCommIdentityUInt16HOrOfNat\"><span class=\"name\">instLawfulCommIdentityUInt16HOrOfNat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Core.html#Std.LawfulCommIdentity\">Std.LawfulCommIdentity</a> <span class=\"fn\">(fun (<span class=\"fn\">x1</span> <span class=\"fn\">x2</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>) =&gt; <span class=\"fn\">x1</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">x2</span>)</span> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L760-L761","name":"instLawfulCommIdentityUInt8HOrOfNat","line":760,"kind":"instance","docLink":"./Init/Data/UInt/Bitwise.html#instLawfulCommIdentityUInt8HOrOfNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#instLawfulCommIdentityUInt8HOrOfNat\"><span class=\"name\">instLawfulCommIdentityUInt8HOrOfNat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Core.html#Std.LawfulCommIdentity\">Std.LawfulCommIdentity</a> <span class=\"fn\">(fun (<span class=\"fn\">x1</span> <span class=\"fn\">x2</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>) =&gt; <span class=\"fn\">x1</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">x2</span>)</span> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L758-L758","name":"USize.zero_or","line":758,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#USize.zero_or","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#USize.zero_or\"><span class=\"name\">USize</span>.<span class=\"name\">zero_or</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L757-L757","name":"UInt64.zero_or","line":757,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt64.zero_or","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt64.zero_or\"><span class=\"name\">UInt64</span>.<span class=\"name\">zero_or</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L756-L756","name":"UInt32.zero_or","line":756,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt32.zero_or","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt32.zero_or\"><span class=\"name\">UInt32</span>.<span class=\"name\">zero_or</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L755-L755","name":"UInt16.zero_or","line":755,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt16.zero_or","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt16.zero_or\"><span class=\"name\">UInt16</span>.<span class=\"name\">zero_or</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L754-L754","name":"UInt8.zero_or","line":754,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt8.zero_or","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt8.zero_or\"><span class=\"name\">UInt8</span>.<span class=\"name\">zero_or</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L752-L752","name":"USize.or_zero","line":752,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#USize.or_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#USize.or_zero\"><span class=\"name\">USize</span>.<span class=\"name\">or_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L751-L751","name":"UInt64.or_zero","line":751,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt64.or_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt64.or_zero\"><span class=\"name\">UInt64</span>.<span class=\"name\">or_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L750-L750","name":"UInt32.or_zero","line":750,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt32.or_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt32.or_zero\"><span class=\"name\">UInt32</span>.<span class=\"name\">or_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L749-L749","name":"UInt16.or_zero","line":749,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt16.or_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt16.or_zero\"><span class=\"name\">UInt16</span>.<span class=\"name\">or_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L748-L748","name":"UInt8.or_zero","line":748,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt8.or_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt8.or_zero\"><span class=\"name\">UInt8</span>.<span class=\"name\">or_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L746-L746","name":"instIdempotentOpUSizeHOr","line":746,"kind":"instance","docLink":"./Init/Data/UInt/Bitwise.html#instIdempotentOpUSizeHOr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#instIdempotentOpUSizeHOr\"><span class=\"name\">instIdempotentOpUSizeHOr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Core.html#Std.IdempotentOp\">Std.IdempotentOp</a> <span class=\"fn\">fun (<span class=\"fn\">x1</span> <span class=\"fn\">x2</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>) =&gt; <span class=\"fn\">x1</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">x2</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L745-L745","name":"instIdempotentOpUInt64HOr","line":745,"kind":"instance","docLink":"./Init/Data/UInt/Bitwise.html#instIdempotentOpUInt64HOr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#instIdempotentOpUInt64HOr\"><span class=\"name\">instIdempotentOpUInt64HOr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Core.html#Std.IdempotentOp\">Std.IdempotentOp</a> <span class=\"fn\">fun (<span class=\"fn\">x1</span> <span class=\"fn\">x2</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>) =&gt; <span class=\"fn\">x1</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">x2</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L744-L744","name":"instIdempotentOpUInt32HOr","line":744,"kind":"instance","docLink":"./Init/Data/UInt/Bitwise.html#instIdempotentOpUInt32HOr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#instIdempotentOpUInt32HOr\"><span class=\"name\">instIdempotentOpUInt32HOr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Core.html#Std.IdempotentOp\">Std.IdempotentOp</a> <span class=\"fn\">fun (<span class=\"fn\">x1</span> <span class=\"fn\">x2</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>) =&gt; <span class=\"fn\">x1</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">x2</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L743-L743","name":"instIdempotentOpUInt16HOr","line":743,"kind":"instance","docLink":"./Init/Data/UInt/Bitwise.html#instIdempotentOpUInt16HOr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#instIdempotentOpUInt16HOr\"><span class=\"name\">instIdempotentOpUInt16HOr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Core.html#Std.IdempotentOp\">Std.IdempotentOp</a> <span class=\"fn\">fun (<span class=\"fn\">x1</span> <span class=\"fn\">x2</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>) =&gt; <span class=\"fn\">x1</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">x2</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L742-L742","name":"instIdempotentOpUInt8HOr","line":742,"kind":"instance","docLink":"./Init/Data/UInt/Bitwise.html#instIdempotentOpUInt8HOr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#instIdempotentOpUInt8HOr\"><span class=\"name\">instIdempotentOpUInt8HOr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Core.html#Std.IdempotentOp\">Std.IdempotentOp</a> <span class=\"fn\">fun (<span class=\"fn\">x1</span> <span class=\"fn\">x2</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>) =&gt; <span class=\"fn\">x1</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">x2</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L740-L740","name":"USize.or_self","line":740,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#USize.or_self","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#USize.or_self\"><span class=\"name\">USize</span>.<span class=\"name\">or_self</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L739-L739","name":"UInt64.or_self","line":739,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt64.or_self","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt64.or_self\"><span class=\"name\">UInt64</span>.<span class=\"name\">or_self</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L738-L738","name":"UInt32.or_self","line":738,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt32.or_self","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt32.or_self\"><span class=\"name\">UInt32</span>.<span class=\"name\">or_self</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L737-L737","name":"UInt16.or_self","line":737,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt16.or_self","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt16.or_self\"><span class=\"name\">UInt16</span>.<span class=\"name\">or_self</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L736-L736","name":"UInt8.or_self","line":736,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt8.or_self","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt8.or_self\"><span class=\"name\">UInt8</span>.<span class=\"name\">or_self</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L734-L734","name":"instCommutativeUSizeHOr","line":734,"kind":"instance","docLink":"./Init/Data/UInt/Bitwise.html#instCommutativeUSizeHOr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#instCommutativeUSizeHOr\"><span class=\"name\">instCommutativeUSizeHOr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Core.html#Std.Commutative\">Std.Commutative</a> <span class=\"fn\">fun (<span class=\"fn\">x1</span> <span class=\"fn\">x2</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>) =&gt; <span class=\"fn\">x1</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">x2</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L733-L733","name":"instCommutativeUInt64HOr","line":733,"kind":"instance","docLink":"./Init/Data/UInt/Bitwise.html#instCommutativeUInt64HOr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#instCommutativeUInt64HOr\"><span class=\"name\">instCommutativeUInt64HOr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Core.html#Std.Commutative\">Std.Commutative</a> <span class=\"fn\">fun (<span class=\"fn\">x1</span> <span class=\"fn\">x2</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>) =&gt; <span class=\"fn\">x1</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">x2</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L732-L732","name":"instCommutativeUInt32HOr","line":732,"kind":"instance","docLink":"./Init/Data/UInt/Bitwise.html#instCommutativeUInt32HOr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#instCommutativeUInt32HOr\"><span class=\"name\">instCommutativeUInt32HOr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Core.html#Std.Commutative\">Std.Commutative</a> <span class=\"fn\">fun (<span class=\"fn\">x1</span> <span class=\"fn\">x2</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>) =&gt; <span class=\"fn\">x1</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">x2</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L731-L731","name":"instCommutativeUInt16HOr","line":731,"kind":"instance","docLink":"./Init/Data/UInt/Bitwise.html#instCommutativeUInt16HOr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#instCommutativeUInt16HOr\"><span class=\"name\">instCommutativeUInt16HOr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Core.html#Std.Commutative\">Std.Commutative</a> <span class=\"fn\">fun (<span class=\"fn\">x1</span> <span class=\"fn\">x2</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>) =&gt; <span class=\"fn\">x1</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">x2</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L730-L730","name":"instCommutativeUInt8HOr","line":730,"kind":"instance","docLink":"./Init/Data/UInt/Bitwise.html#instCommutativeUInt8HOr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#instCommutativeUInt8HOr\"><span class=\"name\">instCommutativeUInt8HOr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Core.html#Std.Commutative\">Std.Commutative</a> <span class=\"fn\">fun (<span class=\"fn\">x1</span> <span class=\"fn\">x2</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>) =&gt; <span class=\"fn\">x1</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">x2</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L728-L728","name":"USize.or_comm","line":728,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#USize.or_comm","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#USize.or_comm\"><span class=\"name\">USize</span>.<span class=\"name\">or_comm</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L727-L727","name":"UInt64.or_comm","line":727,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt64.or_comm","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt64.or_comm\"><span class=\"name\">UInt64</span>.<span class=\"name\">or_comm</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L726-L726","name":"UInt32.or_comm","line":726,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt32.or_comm","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt32.or_comm\"><span class=\"name\">UInt32</span>.<span class=\"name\">or_comm</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L725-L725","name":"UInt16.or_comm","line":725,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt16.or_comm","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt16.or_comm\"><span class=\"name\">UInt16</span>.<span class=\"name\">or_comm</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L724-L724","name":"UInt8.or_comm","line":724,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt8.or_comm","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt8.or_comm\"><span class=\"name\">UInt8</span>.<span class=\"name\">or_comm</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L722-L722","name":"instAssociativeUSizeHOr","line":722,"kind":"instance","docLink":"./Init/Data/UInt/Bitwise.html#instAssociativeUSizeHOr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#instAssociativeUSizeHOr\"><span class=\"name\">instAssociativeUSizeHOr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Core.html#Std.Associative\">Std.Associative</a> <span class=\"fn\">fun (<span class=\"fn\">x1</span> <span class=\"fn\">x2</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>) =&gt; <span class=\"fn\">x1</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">x2</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L721-L721","name":"instAssociativeUInt64HOr","line":721,"kind":"instance","docLink":"./Init/Data/UInt/Bitwise.html#instAssociativeUInt64HOr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#instAssociativeUInt64HOr\"><span class=\"name\">instAssociativeUInt64HOr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Core.html#Std.Associative\">Std.Associative</a> <span class=\"fn\">fun (<span class=\"fn\">x1</span> <span class=\"fn\">x2</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>) =&gt; <span class=\"fn\">x1</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">x2</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L720-L720","name":"instAssociativeUInt32HOr","line":720,"kind":"instance","docLink":"./Init/Data/UInt/Bitwise.html#instAssociativeUInt32HOr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#instAssociativeUInt32HOr\"><span class=\"name\">instAssociativeUInt32HOr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Core.html#Std.Associative\">Std.Associative</a> <span class=\"fn\">fun (<span class=\"fn\">x1</span> <span class=\"fn\">x2</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>) =&gt; <span class=\"fn\">x1</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">x2</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L719-L719","name":"instAssociativeUInt16HOr","line":719,"kind":"instance","docLink":"./Init/Data/UInt/Bitwise.html#instAssociativeUInt16HOr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#instAssociativeUInt16HOr\"><span class=\"name\">instAssociativeUInt16HOr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Core.html#Std.Associative\">Std.Associative</a> <span class=\"fn\">fun (<span class=\"fn\">x1</span> <span class=\"fn\">x2</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>) =&gt; <span class=\"fn\">x1</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">x2</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L718-L718","name":"instAssociativeUInt8HOr","line":718,"kind":"instance","docLink":"./Init/Data/UInt/Bitwise.html#instAssociativeUInt8HOr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#instAssociativeUInt8HOr\"><span class=\"name\">instAssociativeUInt8HOr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Core.html#Std.Associative\">Std.Associative</a> <span class=\"fn\">fun (<span class=\"fn\">x1</span> <span class=\"fn\">x2</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>) =&gt; <span class=\"fn\">x1</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">x2</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L716-L716","name":"USize.or_assoc","line":716,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#USize.or_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#USize.or_assoc\"><span class=\"name\">USize</span>.<span class=\"name\">or_assoc</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> (<span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">c</span>)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L715-L715","name":"UInt64.or_assoc","line":715,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt64.or_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt64.or_assoc\"><span class=\"name\">UInt64</span>.<span class=\"name\">or_assoc</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> (<span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">c</span>)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L714-L714","name":"UInt32.or_assoc","line":714,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt32.or_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt32.or_assoc\"><span class=\"name\">UInt32</span>.<span class=\"name\">or_assoc</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> (<span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">c</span>)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L713-L713","name":"UInt16.or_assoc","line":713,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt16.or_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt16.or_assoc\"><span class=\"name\">UInt16</span>.<span class=\"name\">or_assoc</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> (<span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">c</span>)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L712-L712","name":"UInt8.or_assoc","line":712,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt8.or_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt8.or_assoc\"><span class=\"name\">UInt8</span>.<span class=\"name\">or_assoc</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> (<span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">c</span>)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L710-L710","name":"USize.not_eq_neg_sub","line":710,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#USize.not_eq_neg_sub","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#USize.not_eq_neg_sub\"><span class=\"name\">USize</span>.<span class=\"name\">not_eq_neg_sub</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L709-L709","name":"UInt64.not_eq_neg_sub","line":709,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt64.not_eq_neg_sub","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt64.not_eq_neg_sub\"><span class=\"name\">UInt64</span>.<span class=\"name\">not_eq_neg_sub</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L708-L708","name":"UInt32.not_eq_neg_sub","line":708,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt32.not_eq_neg_sub","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt32.not_eq_neg_sub\"><span class=\"name\">UInt32</span>.<span class=\"name\">not_eq_neg_sub</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L707-L707","name":"UInt16.not_eq_neg_sub","line":707,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt16.not_eq_neg_sub","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt16.not_eq_neg_sub\"><span class=\"name\">UInt16</span>.<span class=\"name\">not_eq_neg_sub</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L706-L706","name":"UInt8.not_eq_neg_sub","line":706,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt8.not_eq_neg_sub","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt8.not_eq_neg_sub\"><span class=\"name\">UInt8</span>.<span class=\"name\">not_eq_neg_sub</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L704-L704","name":"USize.neg_eq_not_add","line":704,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#USize.neg_eq_not_add","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#USize.neg_eq_not_add\"><span class=\"name\">USize</span>.<span class=\"name\">neg_eq_not_add</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L703-L703","name":"UInt64.neg_eq_not_add","line":703,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt64.neg_eq_not_add","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt64.neg_eq_not_add\"><span class=\"name\">UInt64</span>.<span class=\"name\">neg_eq_not_add</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L702-L702","name":"UInt32.neg_eq_not_add","line":702,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt32.neg_eq_not_add","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt32.neg_eq_not_add\"><span class=\"name\">UInt32</span>.<span class=\"name\">neg_eq_not_add</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L701-L701","name":"UInt16.neg_eq_not_add","line":701,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt16.neg_eq_not_add","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt16.neg_eq_not_add\"><span class=\"name\">UInt16</span>.<span class=\"name\">neg_eq_not_add</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L700-L700","name":"UInt8.neg_eq_not_add","line":700,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt8.neg_eq_not_add","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt8.neg_eq_not_add\"><span class=\"name\">UInt8</span>.<span class=\"name\">neg_eq_not_add</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L692-L698","name":"USize.ofFin_shiftRight_mod","line":692,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#USize.ofFin_shiftRight_mod","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#USize.ofFin_shiftRight_mod\"><span class=\"name\">USize</span>.<span class=\"name\">ofFin_shiftRight_mod</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <a href=\"./Init/Prelude.html#USize.size\">size</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#USize.ofFin\">ofFin</a> (<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftRight.hShiftRight\">&gt;&gt;&gt;</a> (<span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <a href=\"./Init/Prelude.html#Fin.mk\">⟨</a><a href=\"./Init/Prelude.html#System.Platform.numBits\">System.Platform.numBits</a>, <span class=\"fn\">⋯</span><a href=\"./Init/Prelude.html#Fin.mk\">⟩</a>))</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#USize.ofFin\">ofFin</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#HShiftRight.hShiftRight\">&gt;&gt;&gt;</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#USize.ofFin\">ofFin</a> <span class=\"fn\">b</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L690-L691","name":"UInt64.ofFin_shiftRight_mod","line":690,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt64.ofFin_shiftRight_mod","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt64.ofFin_shiftRight_mod\"><span class=\"name\">UInt64</span>.<span class=\"name\">ofFin_shiftRight_mod</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <a href=\"./Init/Prelude.html#UInt64.size\">size</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#UInt64.ofFin\">ofFin</a> (<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftRight.hShiftRight\">&gt;&gt;&gt;</a> (<span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">64</span>))</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#UInt64.ofFin\">ofFin</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#HShiftRight.hShiftRight\">&gt;&gt;&gt;</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#UInt64.ofFin\">ofFin</a> <span class=\"fn\">b</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L688-L689","name":"UInt32.ofFin_shiftRight_mod","line":688,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt32.ofFin_shiftRight_mod","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt32.ofFin_shiftRight_mod\"><span class=\"name\">UInt32</span>.<span class=\"name\">ofFin_shiftRight_mod</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <a href=\"./Init/Prelude.html#UInt32.size\">size</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#UInt32.ofFin\">ofFin</a> (<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftRight.hShiftRight\">&gt;&gt;&gt;</a> (<span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">32</span>))</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#UInt32.ofFin\">ofFin</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#HShiftRight.hShiftRight\">&gt;&gt;&gt;</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#UInt32.ofFin\">ofFin</a> <span class=\"fn\">b</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L686-L687","name":"UInt16.ofFin_shiftRight_mod","line":686,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt16.ofFin_shiftRight_mod","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt16.ofFin_shiftRight_mod\"><span class=\"name\">UInt16</span>.<span class=\"name\">ofFin_shiftRight_mod</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <a href=\"./Init/Prelude.html#UInt16.size\">size</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#UInt16.ofFin\">ofFin</a> (<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftRight.hShiftRight\">&gt;&gt;&gt;</a> (<span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">16</span>))</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#UInt16.ofFin\">ofFin</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#HShiftRight.hShiftRight\">&gt;&gt;&gt;</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#UInt16.ofFin\">ofFin</a> <span class=\"fn\">b</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L684-L685","name":"UInt8.ofFin_shiftRight_mod","line":684,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt8.ofFin_shiftRight_mod","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt8.ofFin_shiftRight_mod\"><span class=\"name\">UInt8</span>.<span class=\"name\">ofFin_shiftRight_mod</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <a href=\"./Init/Prelude.html#UInt8.size\">size</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#UInt8.ofFin\">ofFin</a> (<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftRight.hShiftRight\">&gt;&gt;&gt;</a> (<span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">8</span>))</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#UInt8.ofFin\">ofFin</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#HShiftRight.hShiftRight\">&gt;&gt;&gt;</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#UInt8.ofFin\">ofFin</a> <span class=\"fn\">b</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L681-L682","name":"USize.ofFin_shiftRight","line":681,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#USize.ofFin_shiftRight","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#USize.ofFin_shiftRight\"><span class=\"name\">USize</span>.<span class=\"name\">ofFin_shiftRight</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <a href=\"./Init/Prelude.html#USize.size\">size</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hb</span> : <span class=\"fn\">↑<span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <a href=\"./Init/Prelude.html#System.Platform.numBits\">System.Platform.numBits</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#USize.ofFin\">ofFin</a> (<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftRight.hShiftRight\">&gt;&gt;&gt;</a> <span class=\"fn\">b</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#USize.ofFin\">ofFin</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#HShiftRight.hShiftRight\">&gt;&gt;&gt;</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#USize.ofFin\">ofFin</a> <span class=\"fn\">b</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L679-L680","name":"UInt64.ofFin_shiftRight","line":679,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt64.ofFin_shiftRight","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt64.ofFin_shiftRight\"><span class=\"name\">UInt64</span>.<span class=\"name\">ofFin_shiftRight</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <a href=\"./Init/Prelude.html#UInt64.size\">size</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hb</span> : <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">64</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#UInt64.ofFin\">ofFin</a> (<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftRight.hShiftRight\">&gt;&gt;&gt;</a> <span class=\"fn\">b</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#UInt64.ofFin\">ofFin</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#HShiftRight.hShiftRight\">&gt;&gt;&gt;</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#UInt64.ofFin\">ofFin</a> <span class=\"fn\">b</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L677-L678","name":"UInt32.ofFin_shiftRight","line":677,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt32.ofFin_shiftRight","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt32.ofFin_shiftRight\"><span class=\"name\">UInt32</span>.<span class=\"name\">ofFin_shiftRight</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <a href=\"./Init/Prelude.html#UInt32.size\">size</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hb</span> : <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">32</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#UInt32.ofFin\">ofFin</a> (<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftRight.hShiftRight\">&gt;&gt;&gt;</a> <span class=\"fn\">b</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#UInt32.ofFin\">ofFin</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#HShiftRight.hShiftRight\">&gt;&gt;&gt;</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#UInt32.ofFin\">ofFin</a> <span class=\"fn\">b</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L675-L676","name":"UInt16.ofFin_shiftRight","line":675,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt16.ofFin_shiftRight","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt16.ofFin_shiftRight\"><span class=\"name\">UInt16</span>.<span class=\"name\">ofFin_shiftRight</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <a href=\"./Init/Prelude.html#UInt16.size\">size</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hb</span> : <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">16</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#UInt16.ofFin\">ofFin</a> (<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftRight.hShiftRight\">&gt;&gt;&gt;</a> <span class=\"fn\">b</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#UInt16.ofFin\">ofFin</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#HShiftRight.hShiftRight\">&gt;&gt;&gt;</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#UInt16.ofFin\">ofFin</a> <span class=\"fn\">b</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L673-L674","name":"UInt8.ofFin_shiftRight","line":673,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt8.ofFin_shiftRight","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt8.ofFin_shiftRight\"><span class=\"name\">UInt8</span>.<span class=\"name\">ofFin_shiftRight</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <a href=\"./Init/Prelude.html#UInt8.size\">size</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hb</span> : <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">8</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#UInt8.ofFin\">ofFin</a> (<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftRight.hShiftRight\">&gt;&gt;&gt;</a> <span class=\"fn\">b</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#UInt8.ofFin\">ofFin</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#HShiftRight.hShiftRight\">&gt;&gt;&gt;</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#UInt8.ofFin\">ofFin</a> <span class=\"fn\">b</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L666-L671","name":"USize.ofBitVec_shiftRight_mod","line":666,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#USize.ofBitVec_shiftRight_mod","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#USize.ofBitVec_shiftRight_mod\"><span class=\"name\">USize</span>.<span class=\"name\">ofBitVec_shiftRight_mod</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#BitVec\">BitVec</a> <a href=\"./Init/Prelude.html#System.Platform.numBits\">System.Platform.numBits</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#USize.ofBitVec\">{</a> <span class=\"fn\">toBitVec</span> := <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftRight.hShiftRight\">&gt;&gt;&gt;</a> (<span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <a href=\"./Init/Prelude.html#System.Platform.numBits\">System.Platform.numBits</a>) <a href=\"./Init/Prelude.html#USize.ofBitVec\">}</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#USize.ofBitVec\">{</a> <span class=\"fn\">toBitVec</span> := <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#USize.ofBitVec\">}</a> <a href=\"./Init/Prelude.html#HShiftRight.hShiftRight\">&gt;&gt;&gt;</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#USize.ofNat\">ofNat</a> <span class=\"fn\">b</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L664-L665","name":"UInt64.ofBitVec_shiftRight_mod","line":664,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt64.ofBitVec_shiftRight_mod","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt64.ofBitVec_shiftRight_mod\"><span class=\"name\">UInt64</span>.<span class=\"name\">ofBitVec_shiftRight_mod</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#BitVec\">BitVec</a> <span class=\"fn\">64</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#UInt64.ofBitVec\">{</a> <span class=\"fn\">toBitVec</span> := <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftRight.hShiftRight\">&gt;&gt;&gt;</a> (<span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">64</span>) <a href=\"./Init/Prelude.html#UInt64.ofBitVec\">}</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#UInt64.ofBitVec\">{</a> <span class=\"fn\">toBitVec</span> := <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#UInt64.ofBitVec\">}</a> <a href=\"./Init/Prelude.html#HShiftRight.hShiftRight\">&gt;&gt;&gt;</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#UInt64.ofNat\">ofNat</a> <span class=\"fn\">b</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L662-L663","name":"UInt32.ofBitVec_shiftRight_mod","line":662,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt32.ofBitVec_shiftRight_mod","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt32.ofBitVec_shiftRight_mod\"><span class=\"name\">UInt32</span>.<span class=\"name\">ofBitVec_shiftRight_mod</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#BitVec\">BitVec</a> <span class=\"fn\">32</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#UInt32.ofBitVec\">{</a> <span class=\"fn\">toBitVec</span> := <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftRight.hShiftRight\">&gt;&gt;&gt;</a> (<span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">32</span>) <a href=\"./Init/Prelude.html#UInt32.ofBitVec\">}</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#UInt32.ofBitVec\">{</a> <span class=\"fn\">toBitVec</span> := <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#UInt32.ofBitVec\">}</a> <a href=\"./Init/Prelude.html#HShiftRight.hShiftRight\">&gt;&gt;&gt;</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#UInt32.ofNat\">ofNat</a> <span class=\"fn\">b</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L660-L661","name":"UInt16.ofBitVec_shiftRight_mod","line":660,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt16.ofBitVec_shiftRight_mod","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt16.ofBitVec_shiftRight_mod\"><span class=\"name\">UInt16</span>.<span class=\"name\">ofBitVec_shiftRight_mod</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#BitVec\">BitVec</a> <span class=\"fn\">16</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#UInt16.ofBitVec\">{</a> <span class=\"fn\">toBitVec</span> := <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftRight.hShiftRight\">&gt;&gt;&gt;</a> (<span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">16</span>) <a href=\"./Init/Prelude.html#UInt16.ofBitVec\">}</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#UInt16.ofBitVec\">{</a> <span class=\"fn\">toBitVec</span> := <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#UInt16.ofBitVec\">}</a> <a href=\"./Init/Prelude.html#HShiftRight.hShiftRight\">&gt;&gt;&gt;</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#UInt16.ofNat\">ofNat</a> <span class=\"fn\">b</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L658-L659","name":"UInt8.ofBitVec_shiftRight_mod","line":658,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt8.ofBitVec_shiftRight_mod","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt8.ofBitVec_shiftRight_mod\"><span class=\"name\">UInt8</span>.<span class=\"name\">ofBitVec_shiftRight_mod</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#BitVec\">BitVec</a> <span class=\"fn\">8</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#UInt8.ofBitVec\">{</a> <span class=\"fn\">toBitVec</span> := <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftRight.hShiftRight\">&gt;&gt;&gt;</a> (<span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">8</span>) <a href=\"./Init/Prelude.html#UInt8.ofBitVec\">}</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#UInt8.ofBitVec\">{</a> <span class=\"fn\">toBitVec</span> := <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#UInt8.ofBitVec\">}</a> <a href=\"./Init/Prelude.html#HShiftRight.hShiftRight\">&gt;&gt;&gt;</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#UInt8.ofNat\">ofNat</a> <span class=\"fn\">b</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L651-L656","name":"USize.ofBitVec_shiftRight","line":651,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#USize.ofBitVec_shiftRight","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#USize.ofBitVec_shiftRight\"><span class=\"name\">USize</span>.<span class=\"name\">ofBitVec_shiftRight</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#BitVec\">BitVec</a> <a href=\"./Init/Prelude.html#System.Platform.numBits\">System.Platform.numBits</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hb</span> : <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <a href=\"./Init/Prelude.html#System.Platform.numBits\">System.Platform.numBits</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#USize.ofBitVec\">{</a> <span class=\"fn\">toBitVec</span> := <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftRight.hShiftRight\">&gt;&gt;&gt;</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#USize.ofBitVec\">}</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#USize.ofBitVec\">{</a> <span class=\"fn\">toBitVec</span> := <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#USize.ofBitVec\">}</a> <a href=\"./Init/Prelude.html#HShiftRight.hShiftRight\">&gt;&gt;&gt;</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#USize.ofNat\">ofNat</a> <span class=\"fn\">b</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L649-L650","name":"UInt64.ofBitVec_shiftRight","line":649,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt64.ofBitVec_shiftRight","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt64.ofBitVec_shiftRight\"><span class=\"name\">UInt64</span>.<span class=\"name\">ofBitVec_shiftRight</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#BitVec\">BitVec</a> <span class=\"fn\">64</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hb</span> : <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">64</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#UInt64.ofBitVec\">{</a> <span class=\"fn\">toBitVec</span> := <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftRight.hShiftRight\">&gt;&gt;&gt;</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#UInt64.ofBitVec\">}</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#UInt64.ofBitVec\">{</a> <span class=\"fn\">toBitVec</span> := <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#UInt64.ofBitVec\">}</a> <a href=\"./Init/Prelude.html#HShiftRight.hShiftRight\">&gt;&gt;&gt;</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#UInt64.ofNat\">ofNat</a> <span class=\"fn\">b</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L647-L648","name":"UInt32.ofBitVec_shiftRight","line":647,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt32.ofBitVec_shiftRight","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt32.ofBitVec_shiftRight\"><span class=\"name\">UInt32</span>.<span class=\"name\">ofBitVec_shiftRight</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#BitVec\">BitVec</a> <span class=\"fn\">32</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hb</span> : <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">32</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#UInt32.ofBitVec\">{</a> <span class=\"fn\">toBitVec</span> := <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftRight.hShiftRight\">&gt;&gt;&gt;</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#UInt32.ofBitVec\">}</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#UInt32.ofBitVec\">{</a> <span class=\"fn\">toBitVec</span> := <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#UInt32.ofBitVec\">}</a> <a href=\"./Init/Prelude.html#HShiftRight.hShiftRight\">&gt;&gt;&gt;</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#UInt32.ofNat\">ofNat</a> <span class=\"fn\">b</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L645-L646","name":"UInt16.ofBitVec_shiftRight","line":645,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt16.ofBitVec_shiftRight","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt16.ofBitVec_shiftRight\"><span class=\"name\">UInt16</span>.<span class=\"name\">ofBitVec_shiftRight</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#BitVec\">BitVec</a> <span class=\"fn\">16</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hb</span> : <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">16</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#UInt16.ofBitVec\">{</a> <span class=\"fn\">toBitVec</span> := <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftRight.hShiftRight\">&gt;&gt;&gt;</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#UInt16.ofBitVec\">}</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#UInt16.ofBitVec\">{</a> <span class=\"fn\">toBitVec</span> := <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#UInt16.ofBitVec\">}</a> <a href=\"./Init/Prelude.html#HShiftRight.hShiftRight\">&gt;&gt;&gt;</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#UInt16.ofNat\">ofNat</a> <span class=\"fn\">b</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L643-L644","name":"UInt8.ofBitVec_shiftRight","line":643,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt8.ofBitVec_shiftRight","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt8.ofBitVec_shiftRight\"><span class=\"name\">UInt8</span>.<span class=\"name\">ofBitVec_shiftRight</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#BitVec\">BitVec</a> <span class=\"fn\">8</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hb</span> : <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">8</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#UInt8.ofBitVec\">{</a> <span class=\"fn\">toBitVec</span> := <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftRight.hShiftRight\">&gt;&gt;&gt;</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#UInt8.ofBitVec\">}</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#UInt8.ofBitVec\">{</a> <span class=\"fn\">toBitVec</span> := <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#UInt8.ofBitVec\">}</a> <a href=\"./Init/Prelude.html#HShiftRight.hShiftRight\">&gt;&gt;&gt;</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#UInt8.ofNat\">ofNat</a> <span class=\"fn\">b</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L639-L641","name":"USize.ofNatLT_shiftLeft","line":639,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#USize.ofNatLT_shiftLeft","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#USize.ofNatLT_shiftLeft\"><span class=\"name\">USize</span>.<span class=\"name\">ofNatLT_shiftLeft</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ha</span> : <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <a href=\"./Init/Prelude.html#USize.size\">size</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hb</span> : <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <a href=\"./Init/Prelude.html#System.Platform.numBits\">System.Platform.numBits</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#USize.ofNatLT\">ofNatLT</a> (<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">b</span>) <span class=\"fn\">ha</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#USize.ofNatLT\">ofNatLT</a> <span class=\"fn\">a</span> <span class=\"fn\">⋯</span></span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#USize.ofNatLT\">ofNatLT</a> <span class=\"fn\">b</span> <span class=\"fn\">⋯</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L636-L638","name":"UInt64.ofNatLT_shiftLeft","line":636,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt64.ofNatLT_shiftLeft","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt64.ofNatLT_shiftLeft\"><span class=\"name\">UInt64</span>.<span class=\"name\">ofNatLT_shiftLeft</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ha</span> : <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <a href=\"./Init/Prelude.html#UInt64.size\">size</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hb</span> : <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">64</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#UInt64.ofNatLT\">ofNatLT</a> (<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">b</span>) <span class=\"fn\">ha</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#UInt64.ofNatLT\">ofNatLT</a> <span class=\"fn\">a</span> <span class=\"fn\">⋯</span></span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#UInt64.ofNatLT\">ofNatLT</a> <span class=\"fn\">b</span> <span class=\"fn\">⋯</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L633-L635","name":"UInt32.ofNatLT_shiftLeft","line":633,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt32.ofNatLT_shiftLeft","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt32.ofNatLT_shiftLeft\"><span class=\"name\">UInt32</span>.<span class=\"name\">ofNatLT_shiftLeft</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ha</span> : <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <a href=\"./Init/Prelude.html#UInt32.size\">size</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hb</span> : <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">32</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#UInt32.ofNatLT\">ofNatLT</a> (<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">b</span>) <span class=\"fn\">ha</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#UInt32.ofNatLT\">ofNatLT</a> <span class=\"fn\">a</span> <span class=\"fn\">⋯</span></span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#UInt32.ofNatLT\">ofNatLT</a> <span class=\"fn\">b</span> <span class=\"fn\">⋯</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L630-L632","name":"UInt16.ofNatLT_shiftLeft","line":630,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt16.ofNatLT_shiftLeft","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt16.ofNatLT_shiftLeft\"><span class=\"name\">UInt16</span>.<span class=\"name\">ofNatLT_shiftLeft</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ha</span> : <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <a href=\"./Init/Prelude.html#UInt16.size\">size</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hb</span> : <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">16</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#UInt16.ofNatLT\">ofNatLT</a> (<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">b</span>) <span class=\"fn\">ha</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#UInt16.ofNatLT\">ofNatLT</a> <span class=\"fn\">a</span> <span class=\"fn\">⋯</span></span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#UInt16.ofNatLT\">ofNatLT</a> <span class=\"fn\">b</span> <span class=\"fn\">⋯</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L627-L629","name":"UInt8.ofNatLT_shiftLeft","line":627,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt8.ofNatLT_shiftLeft","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt8.ofNatLT_shiftLeft\"><span class=\"name\">UInt8</span>.<span class=\"name\">ofNatLT_shiftLeft</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ha</span> : <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <a href=\"./Init/Prelude.html#UInt8.size\">size</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hb</span> : <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">8</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#UInt8.ofNatLT\">ofNatLT</a> (<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">b</span>) <span class=\"fn\">ha</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#UInt8.ofNatLT\">ofNatLT</a> <span class=\"fn\">a</span> <span class=\"fn\">⋯</span></span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#UInt8.ofNatLT\">ofNatLT</a> <span class=\"fn\">b</span> <span class=\"fn\">⋯</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L621-L625","name":"USize.ofNat_shiftLeft","line":621,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#USize.ofNat_shiftLeft","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#USize.ofNat_shiftLeft\"><span class=\"name\">USize</span>.<span class=\"name\">ofNat_shiftLeft</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hb</span> : <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <a href=\"./Init/Prelude.html#System.Platform.numBits\">System.Platform.numBits</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#USize.ofNat\">ofNat</a> (<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">b</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#USize.ofNat\">ofNat</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#USize.ofNat\">ofNat</a> <span class=\"fn\">b</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L617-L620","name":"UInt64.ofNat_shiftLeft","line":617,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt64.ofNat_shiftLeft","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt64.ofNat_shiftLeft\"><span class=\"name\">UInt64</span>.<span class=\"name\">ofNat_shiftLeft</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hb</span> : <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">64</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#UInt64.ofNat\">ofNat</a> (<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">b</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#UInt64.ofNat\">ofNat</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#UInt64.ofNat\">ofNat</a> <span class=\"fn\">b</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L613-L616","name":"UInt32.ofNat_shiftLeft","line":613,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt32.ofNat_shiftLeft","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt32.ofNat_shiftLeft\"><span class=\"name\">UInt32</span>.<span class=\"name\">ofNat_shiftLeft</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hb</span> : <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">32</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#UInt32.ofNat\">ofNat</a> (<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">b</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#UInt32.ofNat\">ofNat</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#UInt32.ofNat\">ofNat</a> <span class=\"fn\">b</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L609-L612","name":"UInt16.ofNat_shiftLeft","line":609,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt16.ofNat_shiftLeft","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt16.ofNat_shiftLeft\"><span class=\"name\">UInt16</span>.<span class=\"name\">ofNat_shiftLeft</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hb</span> : <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">16</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#UInt16.ofNat\">ofNat</a> (<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">b</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#UInt16.ofNat\">ofNat</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#UInt16.ofNat\">ofNat</a> <span class=\"fn\">b</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L605-L608","name":"UInt8.ofNat_shiftLeft","line":605,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt8.ofNat_shiftLeft","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt8.ofNat_shiftLeft\"><span class=\"name\">UInt8</span>.<span class=\"name\">ofNat_shiftLeft</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hb</span> : <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">8</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#UInt8.ofNat\">ofNat</a> (<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">b</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#UInt8.ofNat\">ofNat</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#UInt8.ofNat\">ofNat</a> <span class=\"fn\">b</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L597-L603","name":"USize.ofFin_shiftLeft_mod","line":597,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#USize.ofFin_shiftLeft_mod","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#USize.ofFin_shiftLeft_mod\"><span class=\"name\">USize</span>.<span class=\"name\">ofFin_shiftLeft_mod</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <a href=\"./Init/Prelude.html#USize.size\">size</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#USize.ofFin\">ofFin</a> (<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> (<span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <a href=\"./Init/Prelude.html#Fin.mk\">⟨</a><a href=\"./Init/Prelude.html#System.Platform.numBits\">System.Platform.numBits</a>, <span class=\"fn\">⋯</span><a href=\"./Init/Prelude.html#Fin.mk\">⟩</a>))</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#USize.ofFin\">ofFin</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#USize.ofFin\">ofFin</a> <span class=\"fn\">b</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L595-L596","name":"UInt64.ofFin_shiftLeft_mod","line":595,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt64.ofFin_shiftLeft_mod","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt64.ofFin_shiftLeft_mod\"><span class=\"name\">UInt64</span>.<span class=\"name\">ofFin_shiftLeft_mod</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <a href=\"./Init/Prelude.html#UInt64.size\">size</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#UInt64.ofFin\">ofFin</a> (<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> (<span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">64</span>))</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#UInt64.ofFin\">ofFin</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#UInt64.ofFin\">ofFin</a> <span class=\"fn\">b</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L593-L594","name":"UInt32.ofFin_shiftLeft_mod","line":593,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt32.ofFin_shiftLeft_mod","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt32.ofFin_shiftLeft_mod\"><span class=\"name\">UInt32</span>.<span class=\"name\">ofFin_shiftLeft_mod</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <a href=\"./Init/Prelude.html#UInt32.size\">size</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#UInt32.ofFin\">ofFin</a> (<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> (<span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">32</span>))</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#UInt32.ofFin\">ofFin</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#UInt32.ofFin\">ofFin</a> <span class=\"fn\">b</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L591-L592","name":"UInt16.ofFin_shiftLeft_mod","line":591,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt16.ofFin_shiftLeft_mod","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt16.ofFin_shiftLeft_mod\"><span class=\"name\">UInt16</span>.<span class=\"name\">ofFin_shiftLeft_mod</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <a href=\"./Init/Prelude.html#UInt16.size\">size</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#UInt16.ofFin\">ofFin</a> (<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> (<span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">16</span>))</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#UInt16.ofFin\">ofFin</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#UInt16.ofFin\">ofFin</a> <span class=\"fn\">b</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L589-L590","name":"UInt8.ofFin_shiftLeft_mod","line":589,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt8.ofFin_shiftLeft_mod","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt8.ofFin_shiftLeft_mod\"><span class=\"name\">UInt8</span>.<span class=\"name\">ofFin_shiftLeft_mod</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <a href=\"./Init/Prelude.html#UInt8.size\">size</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#UInt8.ofFin\">ofFin</a> (<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> (<span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">8</span>))</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#UInt8.ofFin\">ofFin</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#UInt8.ofFin\">ofFin</a> <span class=\"fn\">b</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L586-L587","name":"USize.ofFin_shiftLeft","line":586,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#USize.ofFin_shiftLeft","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#USize.ofFin_shiftLeft\"><span class=\"name\">USize</span>.<span class=\"name\">ofFin_shiftLeft</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <a href=\"./Init/Prelude.html#USize.size\">size</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hb</span> : <span class=\"fn\">↑<span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <a href=\"./Init/Prelude.html#System.Platform.numBits\">System.Platform.numBits</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#USize.ofFin\">ofFin</a> (<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">b</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#USize.ofFin\">ofFin</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#USize.ofFin\">ofFin</a> <span class=\"fn\">b</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L584-L585","name":"UInt64.ofFin_shiftLeft","line":584,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt64.ofFin_shiftLeft","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt64.ofFin_shiftLeft\"><span class=\"name\">UInt64</span>.<span class=\"name\">ofFin_shiftLeft</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <a href=\"./Init/Prelude.html#UInt64.size\">size</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hb</span> : <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">64</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#UInt64.ofFin\">ofFin</a> (<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">b</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#UInt64.ofFin\">ofFin</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#UInt64.ofFin\">ofFin</a> <span class=\"fn\">b</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L582-L583","name":"UInt32.ofFin_shiftLeft","line":582,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt32.ofFin_shiftLeft","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt32.ofFin_shiftLeft\"><span class=\"name\">UInt32</span>.<span class=\"name\">ofFin_shiftLeft</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <a href=\"./Init/Prelude.html#UInt32.size\">size</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hb</span> : <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">32</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#UInt32.ofFin\">ofFin</a> (<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">b</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#UInt32.ofFin\">ofFin</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#UInt32.ofFin\">ofFin</a> <span class=\"fn\">b</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L580-L581","name":"UInt16.ofFin_shiftLeft","line":580,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt16.ofFin_shiftLeft","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt16.ofFin_shiftLeft\"><span class=\"name\">UInt16</span>.<span class=\"name\">ofFin_shiftLeft</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <a href=\"./Init/Prelude.html#UInt16.size\">size</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hb</span> : <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">16</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#UInt16.ofFin\">ofFin</a> (<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">b</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#UInt16.ofFin\">ofFin</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#UInt16.ofFin\">ofFin</a> <span class=\"fn\">b</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L578-L579","name":"UInt8.ofFin_shiftLeft","line":578,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt8.ofFin_shiftLeft","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt8.ofFin_shiftLeft\"><span class=\"name\">UInt8</span>.<span class=\"name\">ofFin_shiftLeft</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <a href=\"./Init/Prelude.html#UInt8.size\">size</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hb</span> : <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">8</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#UInt8.ofFin\">ofFin</a> (<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">b</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#UInt8.ofFin\">ofFin</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#UInt8.ofFin\">ofFin</a> <span class=\"fn\">b</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L571-L576","name":"USize.ofBitVec_shiftLeft_mod","line":571,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#USize.ofBitVec_shiftLeft_mod","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#USize.ofBitVec_shiftLeft_mod\"><span class=\"name\">USize</span>.<span class=\"name\">ofBitVec_shiftLeft_mod</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#BitVec\">BitVec</a> <a href=\"./Init/Prelude.html#System.Platform.numBits\">System.Platform.numBits</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#USize.ofBitVec\">{</a> <span class=\"fn\">toBitVec</span> := <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> (<span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <a href=\"./Init/Prelude.html#System.Platform.numBits\">System.Platform.numBits</a>) <a href=\"./Init/Prelude.html#USize.ofBitVec\">}</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#USize.ofBitVec\">{</a> <span class=\"fn\">toBitVec</span> := <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#USize.ofBitVec\">}</a> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#USize.ofNat\">ofNat</a> <span class=\"fn\">b</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L569-L570","name":"UInt64.ofBitVec_shiftLeft_mod","line":569,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt64.ofBitVec_shiftLeft_mod","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt64.ofBitVec_shiftLeft_mod\"><span class=\"name\">UInt64</span>.<span class=\"name\">ofBitVec_shiftLeft_mod</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#BitVec\">BitVec</a> <span class=\"fn\">64</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#UInt64.ofBitVec\">{</a> <span class=\"fn\">toBitVec</span> := <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> (<span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">64</span>) <a href=\"./Init/Prelude.html#UInt64.ofBitVec\">}</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#UInt64.ofBitVec\">{</a> <span class=\"fn\">toBitVec</span> := <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#UInt64.ofBitVec\">}</a> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#UInt64.ofNat\">ofNat</a> <span class=\"fn\">b</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L567-L568","name":"UInt32.ofBitVec_shiftLeft_mod","line":567,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt32.ofBitVec_shiftLeft_mod","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt32.ofBitVec_shiftLeft_mod\"><span class=\"name\">UInt32</span>.<span class=\"name\">ofBitVec_shiftLeft_mod</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#BitVec\">BitVec</a> <span class=\"fn\">32</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#UInt32.ofBitVec\">{</a> <span class=\"fn\">toBitVec</span> := <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> (<span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">32</span>) <a href=\"./Init/Prelude.html#UInt32.ofBitVec\">}</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#UInt32.ofBitVec\">{</a> <span class=\"fn\">toBitVec</span> := <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#UInt32.ofBitVec\">}</a> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#UInt32.ofNat\">ofNat</a> <span class=\"fn\">b</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L565-L566","name":"UInt16.ofBitVec_shiftLeft_mod","line":565,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt16.ofBitVec_shiftLeft_mod","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt16.ofBitVec_shiftLeft_mod\"><span class=\"name\">UInt16</span>.<span class=\"name\">ofBitVec_shiftLeft_mod</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#BitVec\">BitVec</a> <span class=\"fn\">16</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#UInt16.ofBitVec\">{</a> <span class=\"fn\">toBitVec</span> := <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> (<span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">16</span>) <a href=\"./Init/Prelude.html#UInt16.ofBitVec\">}</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#UInt16.ofBitVec\">{</a> <span class=\"fn\">toBitVec</span> := <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#UInt16.ofBitVec\">}</a> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#UInt16.ofNat\">ofNat</a> <span class=\"fn\">b</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L563-L564","name":"UInt8.ofBitVec_shiftLeft_mod","line":563,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt8.ofBitVec_shiftLeft_mod","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt8.ofBitVec_shiftLeft_mod\"><span class=\"name\">UInt8</span>.<span class=\"name\">ofBitVec_shiftLeft_mod</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#BitVec\">BitVec</a> <span class=\"fn\">8</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#UInt8.ofBitVec\">{</a> <span class=\"fn\">toBitVec</span> := <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> (<span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">8</span>) <a href=\"./Init/Prelude.html#UInt8.ofBitVec\">}</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#UInt8.ofBitVec\">{</a> <span class=\"fn\">toBitVec</span> := <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#UInt8.ofBitVec\">}</a> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#UInt8.ofNat\">ofNat</a> <span class=\"fn\">b</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L556-L561","name":"USize.ofBitVec_shiftLeft","line":556,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#USize.ofBitVec_shiftLeft","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#USize.ofBitVec_shiftLeft\"><span class=\"name\">USize</span>.<span class=\"name\">ofBitVec_shiftLeft</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#BitVec\">BitVec</a> <a href=\"./Init/Prelude.html#System.Platform.numBits\">System.Platform.numBits</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hb</span> : <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <a href=\"./Init/Prelude.html#System.Platform.numBits\">System.Platform.numBits</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#USize.ofBitVec\">{</a> <span class=\"fn\">toBitVec</span> := <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#USize.ofBitVec\">}</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#USize.ofBitVec\">{</a> <span class=\"fn\">toBitVec</span> := <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#USize.ofBitVec\">}</a> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#USize.ofNat\">ofNat</a> <span class=\"fn\">b</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L554-L555","name":"UInt64.ofBitVec_shiftLeft","line":554,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt64.ofBitVec_shiftLeft","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt64.ofBitVec_shiftLeft\"><span class=\"name\">UInt64</span>.<span class=\"name\">ofBitVec_shiftLeft</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#BitVec\">BitVec</a> <span class=\"fn\">64</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hb</span> : <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">64</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#UInt64.ofBitVec\">{</a> <span class=\"fn\">toBitVec</span> := <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#UInt64.ofBitVec\">}</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#UInt64.ofBitVec\">{</a> <span class=\"fn\">toBitVec</span> := <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#UInt64.ofBitVec\">}</a> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#UInt64.ofNat\">ofNat</a> <span class=\"fn\">b</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L552-L553","name":"UInt32.ofBitVec_shiftLeft","line":552,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt32.ofBitVec_shiftLeft","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt32.ofBitVec_shiftLeft\"><span class=\"name\">UInt32</span>.<span class=\"name\">ofBitVec_shiftLeft</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#BitVec\">BitVec</a> <span class=\"fn\">32</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hb</span> : <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">32</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#UInt32.ofBitVec\">{</a> <span class=\"fn\">toBitVec</span> := <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#UInt32.ofBitVec\">}</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#UInt32.ofBitVec\">{</a> <span class=\"fn\">toBitVec</span> := <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#UInt32.ofBitVec\">}</a> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#UInt32.ofNat\">ofNat</a> <span class=\"fn\">b</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L550-L551","name":"UInt16.ofBitVec_shiftLeft","line":550,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt16.ofBitVec_shiftLeft","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt16.ofBitVec_shiftLeft\"><span class=\"name\">UInt16</span>.<span class=\"name\">ofBitVec_shiftLeft</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#BitVec\">BitVec</a> <span class=\"fn\">16</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hb</span> : <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">16</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#UInt16.ofBitVec\">{</a> <span class=\"fn\">toBitVec</span> := <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#UInt16.ofBitVec\">}</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#UInt16.ofBitVec\">{</a> <span class=\"fn\">toBitVec</span> := <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#UInt16.ofBitVec\">}</a> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#UInt16.ofNat\">ofNat</a> <span class=\"fn\">b</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L548-L549","name":"UInt8.ofBitVec_shiftLeft","line":548,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt8.ofBitVec_shiftLeft","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt8.ofBitVec_shiftLeft\"><span class=\"name\">UInt8</span>.<span class=\"name\">ofBitVec_shiftLeft</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#BitVec\">BitVec</a> <span class=\"fn\">8</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hb</span> : <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">8</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#UInt8.ofBitVec\">{</a> <span class=\"fn\">toBitVec</span> := <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#UInt8.ofBitVec\">}</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#UInt8.ofBitVec\">{</a> <span class=\"fn\">toBitVec</span> := <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#UInt8.ofBitVec\">}</a> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#UInt8.ofNat\">ofNat</a> <span class=\"fn\">b</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L546-L546","name":"USize.ofFin_rev","line":546,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#USize.ofFin_rev","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#USize.ofFin_rev\"><span class=\"name\">USize</span>.<span class=\"name\">ofFin_rev</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <a href=\"./Init/Prelude.html#USize.size\">size</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#USize.ofFin\">ofFin</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/Fin/Basic.html#Fin.rev\">rev</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#USize.ofFin\">ofFin</a> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L545-L545","name":"UInt64.ofFin_rev","line":545,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt64.ofFin_rev","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt64.ofFin_rev\"><span class=\"name\">UInt64</span>.<span class=\"name\">ofFin_rev</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <a href=\"./Init/Prelude.html#UInt64.size\">size</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#UInt64.ofFin\">ofFin</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/Fin/Basic.html#Fin.rev\">rev</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#UInt64.ofFin\">ofFin</a> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L544-L544","name":"UInt32.ofFin_rev","line":544,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt32.ofFin_rev","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt32.ofFin_rev\"><span class=\"name\">UInt32</span>.<span class=\"name\">ofFin_rev</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <a href=\"./Init/Prelude.html#UInt32.size\">size</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#UInt32.ofFin\">ofFin</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/Fin/Basic.html#Fin.rev\">rev</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#UInt32.ofFin\">ofFin</a> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L543-L543","name":"UInt16.ofFin_rev","line":543,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt16.ofFin_rev","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt16.ofFin_rev\"><span class=\"name\">UInt16</span>.<span class=\"name\">ofFin_rev</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <a href=\"./Init/Prelude.html#UInt16.size\">size</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#UInt16.ofFin\">ofFin</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/Fin/Basic.html#Fin.rev\">rev</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#UInt16.ofFin\">ofFin</a> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L542-L542","name":"UInt8.ofFin_rev","line":542,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt8.ofFin_rev","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt8.ofFin_rev\"><span class=\"name\">UInt8</span>.<span class=\"name\">ofFin_rev</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <a href=\"./Init/Prelude.html#UInt8.size\">size</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#UInt8.ofFin\">ofFin</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/Fin/Basic.html#Fin.rev\">rev</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#UInt8.ofFin\">ofFin</a> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L540-L540","name":"USize.ofBitVec_not","line":540,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#USize.ofBitVec_not","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#USize.ofBitVec_not\"><span class=\"name\">USize</span>.<span class=\"name\">ofBitVec_not</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#BitVec\">BitVec</a> <a href=\"./Init/Prelude.html#System.Platform.numBits\">System.Platform.numBits</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#USize.ofBitVec\">{</a> <span class=\"fn\">toBitVec</span> := <a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#USize.ofBitVec\">}</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><a href=\"./Init/Prelude.html#USize.ofBitVec\">{</a> <span class=\"fn\">toBitVec</span> := <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#USize.ofBitVec\">}</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L539-L539","name":"UInt64.ofBitVec_not","line":539,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt64.ofBitVec_not","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt64.ofBitVec_not\"><span class=\"name\">UInt64</span>.<span class=\"name\">ofBitVec_not</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#BitVec\">BitVec</a> <span class=\"fn\">64</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#UInt64.ofBitVec\">{</a> <span class=\"fn\">toBitVec</span> := <a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#UInt64.ofBitVec\">}</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><a href=\"./Init/Prelude.html#UInt64.ofBitVec\">{</a> <span class=\"fn\">toBitVec</span> := <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#UInt64.ofBitVec\">}</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L538-L538","name":"UInt32.ofBitVec_not","line":538,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt32.ofBitVec_not","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt32.ofBitVec_not\"><span class=\"name\">UInt32</span>.<span class=\"name\">ofBitVec_not</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#BitVec\">BitVec</a> <span class=\"fn\">32</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#UInt32.ofBitVec\">{</a> <span class=\"fn\">toBitVec</span> := <a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#UInt32.ofBitVec\">}</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><a href=\"./Init/Prelude.html#UInt32.ofBitVec\">{</a> <span class=\"fn\">toBitVec</span> := <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#UInt32.ofBitVec\">}</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L537-L537","name":"UInt16.ofBitVec_not","line":537,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt16.ofBitVec_not","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt16.ofBitVec_not\"><span class=\"name\">UInt16</span>.<span class=\"name\">ofBitVec_not</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#BitVec\">BitVec</a> <span class=\"fn\">16</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#UInt16.ofBitVec\">{</a> <span class=\"fn\">toBitVec</span> := <a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#UInt16.ofBitVec\">}</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><a href=\"./Init/Prelude.html#UInt16.ofBitVec\">{</a> <span class=\"fn\">toBitVec</span> := <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#UInt16.ofBitVec\">}</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L536-L536","name":"UInt8.ofBitVec_not","line":536,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt8.ofBitVec_not","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt8.ofBitVec_not\"><span class=\"name\">UInt8</span>.<span class=\"name\">ofBitVec_not</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#BitVec\">BitVec</a> <span class=\"fn\">8</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#UInt8.ofBitVec\">{</a> <span class=\"fn\">toBitVec</span> := <a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#UInt8.ofBitVec\">}</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><a href=\"./Init/Prelude.html#UInt8.ofBitVec\">{</a> <span class=\"fn\">toBitVec</span> := <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#UInt8.ofBitVec\">}</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L532-L534","name":"UInt64.ofNatLT_xor","line":532,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt64.ofNatLT_xor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt64.ofNatLT_xor\"><span class=\"name\">UInt64</span>.<span class=\"name\">ofNatLT_xor</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ha</span> : <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">64</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hb</span> : <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">64</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#UInt64.ofNatLT\">ofNatLT</a> (<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">b</span>) <span class=\"fn\">⋯</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#UInt64.ofNatLT\">ofNatLT</a> <span class=\"fn\">a</span> <span class=\"fn\">ha</span></span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#UInt64.ofNatLT\">ofNatLT</a> <span class=\"fn\">b</span> <span class=\"fn\">hb</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L529-L531","name":"UInt32.ofNatLT_xor","line":529,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt32.ofNatLT_xor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt32.ofNatLT_xor\"><span class=\"name\">UInt32</span>.<span class=\"name\">ofNatLT_xor</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ha</span> : <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">32</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hb</span> : <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">32</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#UInt32.ofNatLT\">ofNatLT</a> (<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">b</span>) <span class=\"fn\">⋯</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#UInt32.ofNatLT\">ofNatLT</a> <span class=\"fn\">a</span> <span class=\"fn\">ha</span></span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#UInt32.ofNatLT\">ofNatLT</a> <span class=\"fn\">b</span> <span class=\"fn\">hb</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L526-L528","name":"UInt16.ofNatLT_xor","line":526,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt16.ofNatLT_xor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt16.ofNatLT_xor\"><span class=\"name\">UInt16</span>.<span class=\"name\">ofNatLT_xor</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ha</span> : <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">16</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hb</span> : <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">16</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#UInt16.ofNatLT\">ofNatLT</a> (<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">b</span>) <span class=\"fn\">⋯</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#UInt16.ofNatLT\">ofNatLT</a> <span class=\"fn\">a</span> <span class=\"fn\">ha</span></span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#UInt16.ofNatLT\">ofNatLT</a> <span class=\"fn\">b</span> <span class=\"fn\">hb</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L523-L525","name":"UInt8.ofNatLT_xor","line":523,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt8.ofNatLT_xor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt8.ofNatLT_xor\"><span class=\"name\">UInt8</span>.<span class=\"name\">ofNatLT_xor</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ha</span> : <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">8</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hb</span> : <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">8</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#UInt8.ofNatLT\">ofNatLT</a> (<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">b</span>) <span class=\"fn\">⋯</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#UInt8.ofNatLT\">ofNatLT</a> <span class=\"fn\">a</span> <span class=\"fn\">ha</span></span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#UInt8.ofNatLT\">ofNatLT</a> <span class=\"fn\">b</span> <span class=\"fn\">hb</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L520-L521","name":"USize.ofNat_xor","line":520,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#USize.ofNat_xor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#USize.ofNat_xor\"><span class=\"name\">USize</span>.<span class=\"name\">ofNat_xor</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#USize.ofNat\">ofNat</a> (<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">b</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#USize.ofNat\">ofNat</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#USize.ofNat\">ofNat</a> <span class=\"fn\">b</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L518-L519","name":"UInt64.ofNat_xor","line":518,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt64.ofNat_xor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt64.ofNat_xor\"><span class=\"name\">UInt64</span>.<span class=\"name\">ofNat_xor</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#UInt64.ofNat\">ofNat</a> (<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">b</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#UInt64.ofNat\">ofNat</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#UInt64.ofNat\">ofNat</a> <span class=\"fn\">b</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L516-L517","name":"UInt32.ofNat_xor","line":516,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt32.ofNat_xor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt32.ofNat_xor\"><span class=\"name\">UInt32</span>.<span class=\"name\">ofNat_xor</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#UInt32.ofNat\">ofNat</a> (<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">b</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#UInt32.ofNat\">ofNat</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#UInt32.ofNat\">ofNat</a> <span class=\"fn\">b</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L514-L515","name":"UInt16.ofNat_xor","line":514,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt16.ofNat_xor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt16.ofNat_xor\"><span class=\"name\">UInt16</span>.<span class=\"name\">ofNat_xor</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#UInt16.ofNat\">ofNat</a> (<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">b</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#UInt16.ofNat\">ofNat</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#UInt16.ofNat\">ofNat</a> <span class=\"fn\">b</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L512-L513","name":"UInt8.ofNat_xor","line":512,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt8.ofNat_xor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt8.ofNat_xor\"><span class=\"name\">UInt8</span>.<span class=\"name\">ofNat_xor</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#UInt8.ofNat\">ofNat</a> (<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">b</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#UInt8.ofNat\">ofNat</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#UInt8.ofNat\">ofNat</a> <span class=\"fn\">b</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L510-L510","name":"USize.ofBitVec_xor","line":510,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#USize.ofBitVec_xor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#USize.ofBitVec_xor\"><span class=\"name\">USize</span>.<span class=\"name\">ofBitVec_xor</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#BitVec\">BitVec</a> <a href=\"./Init/Prelude.html#System.Platform.numBits\">System.Platform.numBits</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#USize.ofBitVec\">{</a> <span class=\"fn\">toBitVec</span> := <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#USize.ofBitVec\">}</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#USize.ofBitVec\">{</a> <span class=\"fn\">toBitVec</span> := <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#USize.ofBitVec\">}</a> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <a href=\"./Init/Prelude.html#USize.ofBitVec\">{</a> <span class=\"fn\">toBitVec</span> := <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#USize.ofBitVec\">}</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L509-L509","name":"UInt64.ofBitVec_xor","line":509,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt64.ofBitVec_xor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt64.ofBitVec_xor\"><span class=\"name\">UInt64</span>.<span class=\"name\">ofBitVec_xor</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#BitVec\">BitVec</a> <span class=\"fn\">64</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#UInt64.ofBitVec\">{</a> <span class=\"fn\">toBitVec</span> := <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#UInt64.ofBitVec\">}</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#UInt64.ofBitVec\">{</a> <span class=\"fn\">toBitVec</span> := <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#UInt64.ofBitVec\">}</a> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <a href=\"./Init/Prelude.html#UInt64.ofBitVec\">{</a> <span class=\"fn\">toBitVec</span> := <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#UInt64.ofBitVec\">}</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L508-L508","name":"UInt32.ofBitVec_xor","line":508,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt32.ofBitVec_xor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt32.ofBitVec_xor\"><span class=\"name\">UInt32</span>.<span class=\"name\">ofBitVec_xor</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#BitVec\">BitVec</a> <span class=\"fn\">32</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#UInt32.ofBitVec\">{</a> <span class=\"fn\">toBitVec</span> := <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#UInt32.ofBitVec\">}</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#UInt32.ofBitVec\">{</a> <span class=\"fn\">toBitVec</span> := <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#UInt32.ofBitVec\">}</a> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <a href=\"./Init/Prelude.html#UInt32.ofBitVec\">{</a> <span class=\"fn\">toBitVec</span> := <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#UInt32.ofBitVec\">}</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L507-L507","name":"UInt16.ofBitVec_xor","line":507,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt16.ofBitVec_xor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt16.ofBitVec_xor\"><span class=\"name\">UInt16</span>.<span class=\"name\">ofBitVec_xor</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#BitVec\">BitVec</a> <span class=\"fn\">16</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#UInt16.ofBitVec\">{</a> <span class=\"fn\">toBitVec</span> := <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#UInt16.ofBitVec\">}</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#UInt16.ofBitVec\">{</a> <span class=\"fn\">toBitVec</span> := <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#UInt16.ofBitVec\">}</a> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <a href=\"./Init/Prelude.html#UInt16.ofBitVec\">{</a> <span class=\"fn\">toBitVec</span> := <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#UInt16.ofBitVec\">}</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L506-L506","name":"UInt8.ofBitVec_xor","line":506,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt8.ofBitVec_xor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt8.ofBitVec_xor\"><span class=\"name\">UInt8</span>.<span class=\"name\">ofBitVec_xor</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#BitVec\">BitVec</a> <span class=\"fn\">8</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#UInt8.ofBitVec\">{</a> <span class=\"fn\">toBitVec</span> := <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#UInt8.ofBitVec\">}</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#UInt8.ofBitVec\">{</a> <span class=\"fn\">toBitVec</span> := <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#UInt8.ofBitVec\">}</a> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <a href=\"./Init/Prelude.html#UInt8.ofBitVec\">{</a> <span class=\"fn\">toBitVec</span> := <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#UInt8.ofBitVec\">}</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L504-L504","name":"USize.ofFin_xor","line":504,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#USize.ofFin_xor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#USize.ofFin_xor\"><span class=\"name\">USize</span>.<span class=\"name\">ofFin_xor</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <a href=\"./Init/Prelude.html#USize.size\">size</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#USize.ofFin\">ofFin</a> (<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">b</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#USize.ofFin\">ofFin</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#USize.ofFin\">ofFin</a> <span class=\"fn\">b</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L503-L503","name":"UInt64.ofFin_xor","line":503,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt64.ofFin_xor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt64.ofFin_xor\"><span class=\"name\">UInt64</span>.<span class=\"name\">ofFin_xor</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <a href=\"./Init/Prelude.html#UInt64.size\">size</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#UInt64.ofFin\">ofFin</a> (<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">b</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#UInt64.ofFin\">ofFin</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#UInt64.ofFin\">ofFin</a> <span class=\"fn\">b</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L502-L502","name":"UInt32.ofFin_xor","line":502,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt32.ofFin_xor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt32.ofFin_xor\"><span class=\"name\">UInt32</span>.<span class=\"name\">ofFin_xor</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <a href=\"./Init/Prelude.html#UInt32.size\">size</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#UInt32.ofFin\">ofFin</a> (<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">b</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#UInt32.ofFin\">ofFin</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#UInt32.ofFin\">ofFin</a> <span class=\"fn\">b</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L501-L501","name":"UInt16.ofFin_xor","line":501,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt16.ofFin_xor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt16.ofFin_xor\"><span class=\"name\">UInt16</span>.<span class=\"name\">ofFin_xor</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <a href=\"./Init/Prelude.html#UInt16.size\">size</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#UInt16.ofFin\">ofFin</a> (<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">b</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#UInt16.ofFin\">ofFin</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#UInt16.ofFin\">ofFin</a> <span class=\"fn\">b</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L500-L500","name":"UInt8.ofFin_xor","line":500,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt8.ofFin_xor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt8.ofFin_xor\"><span class=\"name\">UInt8</span>.<span class=\"name\">ofFin_xor</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <a href=\"./Init/Prelude.html#UInt8.size\">size</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#UInt8.ofFin\">ofFin</a> (<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">b</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#UInt8.ofFin\">ofFin</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#UInt8.ofFin\">ofFin</a> <span class=\"fn\">b</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L496-L498","name":"UInt64.ofNatLT_or","line":496,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt64.ofNatLT_or","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt64.ofNatLT_or\"><span class=\"name\">UInt64</span>.<span class=\"name\">ofNatLT_or</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ha</span> : <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">64</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hb</span> : <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">64</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#UInt64.ofNatLT\">ofNatLT</a> (<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">b</span>) <span class=\"fn\">⋯</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#UInt64.ofNatLT\">ofNatLT</a> <span class=\"fn\">a</span> <span class=\"fn\">ha</span></span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#UInt64.ofNatLT\">ofNatLT</a> <span class=\"fn\">b</span> <span class=\"fn\">hb</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L493-L495","name":"UInt32.ofNatLT_or","line":493,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt32.ofNatLT_or","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt32.ofNatLT_or\"><span class=\"name\">UInt32</span>.<span class=\"name\">ofNatLT_or</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ha</span> : <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">32</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hb</span> : <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">32</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#UInt32.ofNatLT\">ofNatLT</a> (<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">b</span>) <span class=\"fn\">⋯</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#UInt32.ofNatLT\">ofNatLT</a> <span class=\"fn\">a</span> <span class=\"fn\">ha</span></span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#UInt32.ofNatLT\">ofNatLT</a> <span class=\"fn\">b</span> <span class=\"fn\">hb</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L490-L492","name":"UInt16.ofNatLT_or","line":490,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt16.ofNatLT_or","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt16.ofNatLT_or\"><span class=\"name\">UInt16</span>.<span class=\"name\">ofNatLT_or</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ha</span> : <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">16</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hb</span> : <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">16</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#UInt16.ofNatLT\">ofNatLT</a> (<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">b</span>) <span class=\"fn\">⋯</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#UInt16.ofNatLT\">ofNatLT</a> <span class=\"fn\">a</span> <span class=\"fn\">ha</span></span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#UInt16.ofNatLT\">ofNatLT</a> <span class=\"fn\">b</span> <span class=\"fn\">hb</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L487-L489","name":"UInt8.ofNatLT_or","line":487,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt8.ofNatLT_or","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt8.ofNatLT_or\"><span class=\"name\">UInt8</span>.<span class=\"name\">ofNatLT_or</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ha</span> : <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">8</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hb</span> : <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">8</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#UInt8.ofNatLT\">ofNatLT</a> (<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">b</span>) <span class=\"fn\">⋯</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#UInt8.ofNatLT\">ofNatLT</a> <span class=\"fn\">a</span> <span class=\"fn\">ha</span></span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#UInt8.ofNatLT\">ofNatLT</a> <span class=\"fn\">b</span> <span class=\"fn\">hb</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L484-L485","name":"USize.ofNat_or","line":484,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#USize.ofNat_or","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#USize.ofNat_or\"><span class=\"name\">USize</span>.<span class=\"name\">ofNat_or</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#USize.ofNat\">ofNat</a> (<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">b</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#USize.ofNat\">ofNat</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#USize.ofNat\">ofNat</a> <span class=\"fn\">b</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L482-L483","name":"UInt64.ofNat_or","line":482,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt64.ofNat_or","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt64.ofNat_or\"><span class=\"name\">UInt64</span>.<span class=\"name\">ofNat_or</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#UInt64.ofNat\">ofNat</a> (<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">b</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#UInt64.ofNat\">ofNat</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#UInt64.ofNat\">ofNat</a> <span class=\"fn\">b</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L480-L481","name":"UInt32.ofNat_or","line":480,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt32.ofNat_or","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt32.ofNat_or\"><span class=\"name\">UInt32</span>.<span class=\"name\">ofNat_or</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#UInt32.ofNat\">ofNat</a> (<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">b</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#UInt32.ofNat\">ofNat</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#UInt32.ofNat\">ofNat</a> <span class=\"fn\">b</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L478-L479","name":"UInt16.ofNat_or","line":478,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt16.ofNat_or","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt16.ofNat_or\"><span class=\"name\">UInt16</span>.<span class=\"name\">ofNat_or</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#UInt16.ofNat\">ofNat</a> (<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">b</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#UInt16.ofNat\">ofNat</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#UInt16.ofNat\">ofNat</a> <span class=\"fn\">b</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L476-L477","name":"UInt8.ofNat_or","line":476,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt8.ofNat_or","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt8.ofNat_or\"><span class=\"name\">UInt8</span>.<span class=\"name\">ofNat_or</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#UInt8.ofNat\">ofNat</a> (<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">b</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#UInt8.ofNat\">ofNat</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#UInt8.ofNat\">ofNat</a> <span class=\"fn\">b</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L474-L474","name":"USize.ofBitVec_or","line":474,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#USize.ofBitVec_or","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#USize.ofBitVec_or\"><span class=\"name\">USize</span>.<span class=\"name\">ofBitVec_or</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#BitVec\">BitVec</a> <a href=\"./Init/Prelude.html#System.Platform.numBits\">System.Platform.numBits</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#USize.ofBitVec\">{</a> <span class=\"fn\">toBitVec</span> := <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#USize.ofBitVec\">}</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#USize.ofBitVec\">{</a> <span class=\"fn\">toBitVec</span> := <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#USize.ofBitVec\">}</a> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <a href=\"./Init/Prelude.html#USize.ofBitVec\">{</a> <span class=\"fn\">toBitVec</span> := <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#USize.ofBitVec\">}</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L473-L473","name":"UInt64.ofBitVec_or","line":473,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt64.ofBitVec_or","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt64.ofBitVec_or\"><span class=\"name\">UInt64</span>.<span class=\"name\">ofBitVec_or</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#BitVec\">BitVec</a> <span class=\"fn\">64</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#UInt64.ofBitVec\">{</a> <span class=\"fn\">toBitVec</span> := <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#UInt64.ofBitVec\">}</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#UInt64.ofBitVec\">{</a> <span class=\"fn\">toBitVec</span> := <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#UInt64.ofBitVec\">}</a> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <a href=\"./Init/Prelude.html#UInt64.ofBitVec\">{</a> <span class=\"fn\">toBitVec</span> := <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#UInt64.ofBitVec\">}</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L472-L472","name":"UInt32.ofBitVec_or","line":472,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt32.ofBitVec_or","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt32.ofBitVec_or\"><span class=\"name\">UInt32</span>.<span class=\"name\">ofBitVec_or</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#BitVec\">BitVec</a> <span class=\"fn\">32</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#UInt32.ofBitVec\">{</a> <span class=\"fn\">toBitVec</span> := <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#UInt32.ofBitVec\">}</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#UInt32.ofBitVec\">{</a> <span class=\"fn\">toBitVec</span> := <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#UInt32.ofBitVec\">}</a> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <a href=\"./Init/Prelude.html#UInt32.ofBitVec\">{</a> <span class=\"fn\">toBitVec</span> := <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#UInt32.ofBitVec\">}</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L471-L471","name":"UInt16.ofBitVec_or","line":471,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt16.ofBitVec_or","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt16.ofBitVec_or\"><span class=\"name\">UInt16</span>.<span class=\"name\">ofBitVec_or</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#BitVec\">BitVec</a> <span class=\"fn\">16</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#UInt16.ofBitVec\">{</a> <span class=\"fn\">toBitVec</span> := <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#UInt16.ofBitVec\">}</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#UInt16.ofBitVec\">{</a> <span class=\"fn\">toBitVec</span> := <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#UInt16.ofBitVec\">}</a> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <a href=\"./Init/Prelude.html#UInt16.ofBitVec\">{</a> <span class=\"fn\">toBitVec</span> := <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#UInt16.ofBitVec\">}</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L470-L470","name":"UInt8.ofBitVec_or","line":470,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt8.ofBitVec_or","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt8.ofBitVec_or\"><span class=\"name\">UInt8</span>.<span class=\"name\">ofBitVec_or</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#BitVec\">BitVec</a> <span class=\"fn\">8</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#UInt8.ofBitVec\">{</a> <span class=\"fn\">toBitVec</span> := <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#UInt8.ofBitVec\">}</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#UInt8.ofBitVec\">{</a> <span class=\"fn\">toBitVec</span> := <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#UInt8.ofBitVec\">}</a> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <a href=\"./Init/Prelude.html#UInt8.ofBitVec\">{</a> <span class=\"fn\">toBitVec</span> := <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#UInt8.ofBitVec\">}</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L468-L468","name":"USize.ofFin_or","line":468,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#USize.ofFin_or","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#USize.ofFin_or\"><span class=\"name\">USize</span>.<span class=\"name\">ofFin_or</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <a href=\"./Init/Prelude.html#USize.size\">size</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#USize.ofFin\">ofFin</a> (<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">b</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#USize.ofFin\">ofFin</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#USize.ofFin\">ofFin</a> <span class=\"fn\">b</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L467-L467","name":"UInt64.ofFin_or","line":467,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt64.ofFin_or","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt64.ofFin_or\"><span class=\"name\">UInt64</span>.<span class=\"name\">ofFin_or</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <a href=\"./Init/Prelude.html#UInt64.size\">size</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#UInt64.ofFin\">ofFin</a> (<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">b</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#UInt64.ofFin\">ofFin</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#UInt64.ofFin\">ofFin</a> <span class=\"fn\">b</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L466-L466","name":"UInt32.ofFin_or","line":466,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt32.ofFin_or","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt32.ofFin_or\"><span class=\"name\">UInt32</span>.<span class=\"name\">ofFin_or</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <a href=\"./Init/Prelude.html#UInt32.size\">size</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#UInt32.ofFin\">ofFin</a> (<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">b</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#UInt32.ofFin\">ofFin</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#UInt32.ofFin\">ofFin</a> <span class=\"fn\">b</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L465-L465","name":"UInt16.ofFin_or","line":465,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt16.ofFin_or","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt16.ofFin_or\"><span class=\"name\">UInt16</span>.<span class=\"name\">ofFin_or</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <a href=\"./Init/Prelude.html#UInt16.size\">size</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#UInt16.ofFin\">ofFin</a> (<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">b</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#UInt16.ofFin\">ofFin</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#UInt16.ofFin\">ofFin</a> <span class=\"fn\">b</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L464-L464","name":"UInt8.ofFin_or","line":464,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt8.ofFin_or","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt8.ofFin_or\"><span class=\"name\">UInt8</span>.<span class=\"name\">ofFin_or</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <a href=\"./Init/Prelude.html#UInt8.size\">size</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#UInt8.ofFin\">ofFin</a> (<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">b</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#UInt8.ofFin\">ofFin</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#UInt8.ofFin\">ofFin</a> <span class=\"fn\">b</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L460-L462","name":"UInt64.ofNatLT_and","line":460,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt64.ofNatLT_and","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt64.ofNatLT_and\"><span class=\"name\">UInt64</span>.<span class=\"name\">ofNatLT_and</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ha</span> : <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">64</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hb</span> : <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">64</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#UInt64.ofNatLT\">ofNatLT</a> (<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\">b</span>) <span class=\"fn\">⋯</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#UInt64.ofNatLT\">ofNatLT</a> <span class=\"fn\">a</span> <span class=\"fn\">ha</span></span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#UInt64.ofNatLT\">ofNatLT</a> <span class=\"fn\">b</span> <span class=\"fn\">hb</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L457-L459","name":"UInt32.ofNatLT_and","line":457,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt32.ofNatLT_and","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt32.ofNatLT_and\"><span class=\"name\">UInt32</span>.<span class=\"name\">ofNatLT_and</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ha</span> : <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">32</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hb</span> : <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">32</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#UInt32.ofNatLT\">ofNatLT</a> (<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\">b</span>) <span class=\"fn\">⋯</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#UInt32.ofNatLT\">ofNatLT</a> <span class=\"fn\">a</span> <span class=\"fn\">ha</span></span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#UInt32.ofNatLT\">ofNatLT</a> <span class=\"fn\">b</span> <span class=\"fn\">hb</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L454-L456","name":"UInt16.ofNatLT_and","line":454,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt16.ofNatLT_and","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt16.ofNatLT_and\"><span class=\"name\">UInt16</span>.<span class=\"name\">ofNatLT_and</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ha</span> : <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">16</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hb</span> : <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">16</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#UInt16.ofNatLT\">ofNatLT</a> (<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\">b</span>) <span class=\"fn\">⋯</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#UInt16.ofNatLT\">ofNatLT</a> <span class=\"fn\">a</span> <span class=\"fn\">ha</span></span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#UInt16.ofNatLT\">ofNatLT</a> <span class=\"fn\">b</span> <span class=\"fn\">hb</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L451-L453","name":"UInt8.ofNatLT_and","line":451,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt8.ofNatLT_and","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt8.ofNatLT_and\"><span class=\"name\">UInt8</span>.<span class=\"name\">ofNatLT_and</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ha</span> : <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">8</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hb</span> : <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">8</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#UInt8.ofNatLT\">ofNatLT</a> (<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\">b</span>) <span class=\"fn\">⋯</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#UInt8.ofNatLT\">ofNatLT</a> <span class=\"fn\">a</span> <span class=\"fn\">ha</span></span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#UInt8.ofNatLT\">ofNatLT</a> <span class=\"fn\">b</span> <span class=\"fn\">hb</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L448-L449","name":"USize.ofNat_and","line":448,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#USize.ofNat_and","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#USize.ofNat_and\"><span class=\"name\">USize</span>.<span class=\"name\">ofNat_and</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#USize.ofNat\">ofNat</a> (<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\">b</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#USize.ofNat\">ofNat</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#USize.ofNat\">ofNat</a> <span class=\"fn\">b</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L446-L447","name":"UInt64.ofNat_and","line":446,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt64.ofNat_and","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt64.ofNat_and\"><span class=\"name\">UInt64</span>.<span class=\"name\">ofNat_and</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#UInt64.ofNat\">ofNat</a> (<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\">b</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#UInt64.ofNat\">ofNat</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#UInt64.ofNat\">ofNat</a> <span class=\"fn\">b</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L444-L445","name":"UInt32.ofNat_and","line":444,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt32.ofNat_and","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt32.ofNat_and\"><span class=\"name\">UInt32</span>.<span class=\"name\">ofNat_and</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#UInt32.ofNat\">ofNat</a> (<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\">b</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#UInt32.ofNat\">ofNat</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#UInt32.ofNat\">ofNat</a> <span class=\"fn\">b</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L442-L443","name":"UInt16.ofNat_and","line":442,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt16.ofNat_and","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt16.ofNat_and\"><span class=\"name\">UInt16</span>.<span class=\"name\">ofNat_and</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#UInt16.ofNat\">ofNat</a> (<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\">b</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#UInt16.ofNat\">ofNat</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#UInt16.ofNat\">ofNat</a> <span class=\"fn\">b</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L440-L441","name":"UInt8.ofNat_and","line":440,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt8.ofNat_and","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt8.ofNat_and\"><span class=\"name\">UInt8</span>.<span class=\"name\">ofNat_and</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#UInt8.ofNat\">ofNat</a> (<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\">b</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#UInt8.ofNat\">ofNat</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#UInt8.ofNat\">ofNat</a> <span class=\"fn\">b</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L438-L438","name":"USize.ofBitVec_and","line":438,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#USize.ofBitVec_and","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#USize.ofBitVec_and\"><span class=\"name\">USize</span>.<span class=\"name\">ofBitVec_and</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#BitVec\">BitVec</a> <a href=\"./Init/Prelude.html#System.Platform.numBits\">System.Platform.numBits</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#USize.ofBitVec\">{</a> <span class=\"fn\">toBitVec</span> := <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#USize.ofBitVec\">}</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#USize.ofBitVec\">{</a> <span class=\"fn\">toBitVec</span> := <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#USize.ofBitVec\">}</a> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <a href=\"./Init/Prelude.html#USize.ofBitVec\">{</a> <span class=\"fn\">toBitVec</span> := <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#USize.ofBitVec\">}</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L437-L437","name":"UInt64.ofBitVec_and","line":437,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt64.ofBitVec_and","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt64.ofBitVec_and\"><span class=\"name\">UInt64</span>.<span class=\"name\">ofBitVec_and</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#BitVec\">BitVec</a> <span class=\"fn\">64</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#UInt64.ofBitVec\">{</a> <span class=\"fn\">toBitVec</span> := <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#UInt64.ofBitVec\">}</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#UInt64.ofBitVec\">{</a> <span class=\"fn\">toBitVec</span> := <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#UInt64.ofBitVec\">}</a> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <a href=\"./Init/Prelude.html#UInt64.ofBitVec\">{</a> <span class=\"fn\">toBitVec</span> := <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#UInt64.ofBitVec\">}</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L436-L436","name":"UInt32.ofBitVec_and","line":436,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt32.ofBitVec_and","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt32.ofBitVec_and\"><span class=\"name\">UInt32</span>.<span class=\"name\">ofBitVec_and</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#BitVec\">BitVec</a> <span class=\"fn\">32</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#UInt32.ofBitVec\">{</a> <span class=\"fn\">toBitVec</span> := <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#UInt32.ofBitVec\">}</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#UInt32.ofBitVec\">{</a> <span class=\"fn\">toBitVec</span> := <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#UInt32.ofBitVec\">}</a> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <a href=\"./Init/Prelude.html#UInt32.ofBitVec\">{</a> <span class=\"fn\">toBitVec</span> := <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#UInt32.ofBitVec\">}</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L435-L435","name":"UInt16.ofBitVec_and","line":435,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt16.ofBitVec_and","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt16.ofBitVec_and\"><span class=\"name\">UInt16</span>.<span class=\"name\">ofBitVec_and</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#BitVec\">BitVec</a> <span class=\"fn\">16</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#UInt16.ofBitVec\">{</a> <span class=\"fn\">toBitVec</span> := <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#UInt16.ofBitVec\">}</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#UInt16.ofBitVec\">{</a> <span class=\"fn\">toBitVec</span> := <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#UInt16.ofBitVec\">}</a> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <a href=\"./Init/Prelude.html#UInt16.ofBitVec\">{</a> <span class=\"fn\">toBitVec</span> := <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#UInt16.ofBitVec\">}</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L434-L434","name":"UInt8.ofBitVec_and","line":434,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt8.ofBitVec_and","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt8.ofBitVec_and\"><span class=\"name\">UInt8</span>.<span class=\"name\">ofBitVec_and</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#BitVec\">BitVec</a> <span class=\"fn\">8</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#UInt8.ofBitVec\">{</a> <span class=\"fn\">toBitVec</span> := <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#UInt8.ofBitVec\">}</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#UInt8.ofBitVec\">{</a> <span class=\"fn\">toBitVec</span> := <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#UInt8.ofBitVec\">}</a> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <a href=\"./Init/Prelude.html#UInt8.ofBitVec\">{</a> <span class=\"fn\">toBitVec</span> := <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#UInt8.ofBitVec\">}</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L432-L432","name":"USize.ofFin_and","line":432,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#USize.ofFin_and","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#USize.ofFin_and\"><span class=\"name\">USize</span>.<span class=\"name\">ofFin_and</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <a href=\"./Init/Prelude.html#USize.size\">size</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#USize.ofFin\">ofFin</a> (<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\">b</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#USize.ofFin\">ofFin</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#USize.ofFin\">ofFin</a> <span class=\"fn\">b</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L431-L431","name":"UInt64.ofFin_and","line":431,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt64.ofFin_and","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt64.ofFin_and\"><span class=\"name\">UInt64</span>.<span class=\"name\">ofFin_and</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <a href=\"./Init/Prelude.html#UInt64.size\">size</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#UInt64.ofFin\">ofFin</a> (<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\">b</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#UInt64.ofFin\">ofFin</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#UInt64.ofFin\">ofFin</a> <span class=\"fn\">b</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L430-L430","name":"UInt32.ofFin_and","line":430,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt32.ofFin_and","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt32.ofFin_and\"><span class=\"name\">UInt32</span>.<span class=\"name\">ofFin_and</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <a href=\"./Init/Prelude.html#UInt32.size\">size</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#UInt32.ofFin\">ofFin</a> (<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\">b</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#UInt32.ofFin\">ofFin</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#UInt32.ofFin\">ofFin</a> <span class=\"fn\">b</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L429-L429","name":"UInt16.ofFin_and","line":429,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt16.ofFin_and","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt16.ofFin_and\"><span class=\"name\">UInt16</span>.<span class=\"name\">ofFin_and</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <a href=\"./Init/Prelude.html#UInt16.size\">size</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#UInt16.ofFin\">ofFin</a> (<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\">b</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#UInt16.ofFin\">ofFin</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#UInt16.ofFin\">ofFin</a> <span class=\"fn\">b</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L428-L428","name":"UInt8.ofFin_and","line":428,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt8.ofFin_and","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt8.ofFin_and\"><span class=\"name\">UInt8</span>.<span class=\"name\">ofFin_and</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <a href=\"./Init/Prelude.html#UInt8.size\">size</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#UInt8.ofFin\">ofFin</a> (<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\">b</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#UInt8.ofFin\">ofFin</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#UInt8.ofFin\">ofFin</a> <span class=\"fn\">b</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L420-L421","name":"USize.toUInt64_shiftRight","line":420,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#USize.toUInt64_shiftRight","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#USize.toUInt64_shiftRight\"><span class=\"name\">USize</span>.<span class=\"name\">toUInt64_shiftRight</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftRight.hShiftRight\">&gt;&gt;&gt;</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/UInt/Basic.html#USize.toUInt64\">toUInt64</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/Basic.html#USize.toUInt64\">toUInt64</a></span> <a href=\"./Init/Prelude.html#HShiftRight.hShiftRight\">&gt;&gt;&gt;</a> (<span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/Basic.html#USize.toUInt64\">toUInt64</a></span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#UInt64.ofNat\">UInt64.ofNat</a> <a href=\"./Init/Prelude.html#System.Platform.numBits\">System.Platform.numBits</a></span>)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L416-L418","name":"UInt32.toUSize_shiftRight","line":416,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt32.toUSize_shiftRight","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt32.toUSize_shiftRight\"><span class=\"name\">UInt32</span>.<span class=\"name\">toUSize_shiftRight</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftRight.hShiftRight\">&gt;&gt;&gt;</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/UInt/Basic.html#UInt32.toUSize\">toUSize</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/Basic.html#UInt32.toUSize\">toUSize</a></span> <a href=\"./Init/Prelude.html#HShiftRight.hShiftRight\">&gt;&gt;&gt;</a> (<span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/Basic.html#UInt32.toUSize\">toUSize</a></span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">32</span>)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L414-L415","name":"UInt32.toUInt64_shiftRight","line":414,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt32.toUInt64_shiftRight","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt32.toUInt64_shiftRight\"><span class=\"name\">UInt32</span>.<span class=\"name\">toUInt64_shiftRight</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftRight.hShiftRight\">&gt;&gt;&gt;</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/UInt/BasicAux.html#UInt32.toUInt64\">toUInt64</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt32.toUInt64\">toUInt64</a></span> <a href=\"./Init/Prelude.html#HShiftRight.hShiftRight\">&gt;&gt;&gt;</a> (<span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt32.toUInt64\">toUInt64</a></span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">32</span>)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L410-L412","name":"UInt16.toUSize_shiftRight","line":410,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt16.toUSize_shiftRight","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt16.toUSize_shiftRight\"><span class=\"name\">UInt16</span>.<span class=\"name\">toUSize_shiftRight</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftRight.hShiftRight\">&gt;&gt;&gt;</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/UInt/Basic.html#UInt16.toUSize\">toUSize</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/Basic.html#UInt16.toUSize\">toUSize</a></span> <a href=\"./Init/Prelude.html#HShiftRight.hShiftRight\">&gt;&gt;&gt;</a> (<span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/Basic.html#UInt16.toUSize\">toUSize</a></span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">16</span>)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L408-L409","name":"UInt16.toUInt64_shiftRight","line":408,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt16.toUInt64_shiftRight","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt16.toUInt64_shiftRight\"><span class=\"name\">UInt16</span>.<span class=\"name\">toUInt64_shiftRight</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftRight.hShiftRight\">&gt;&gt;&gt;</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toUInt64\">toUInt64</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toUInt64\">toUInt64</a></span> <a href=\"./Init/Prelude.html#HShiftRight.hShiftRight\">&gt;&gt;&gt;</a> (<span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toUInt64\">toUInt64</a></span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">16</span>)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L406-L407","name":"UInt16.toUInt32_shiftRight","line":406,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt16.toUInt32_shiftRight","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt16.toUInt32_shiftRight\"><span class=\"name\">UInt16</span>.<span class=\"name\">toUInt32_shiftRight</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftRight.hShiftRight\">&gt;&gt;&gt;</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toUInt32\">toUInt32</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toUInt32\">toUInt32</a></span> <a href=\"./Init/Prelude.html#HShiftRight.hShiftRight\">&gt;&gt;&gt;</a> (<span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toUInt32\">toUInt32</a></span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">16</span>)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L402-L404","name":"UInt8.toUSize_shiftRight","line":402,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt8.toUSize_shiftRight","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt8.toUSize_shiftRight\"><span class=\"name\">UInt8</span>.<span class=\"name\">toUSize_shiftRight</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftRight.hShiftRight\">&gt;&gt;&gt;</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/UInt/Basic.html#UInt8.toUSize\">toUSize</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/Basic.html#UInt8.toUSize\">toUSize</a></span> <a href=\"./Init/Prelude.html#HShiftRight.hShiftRight\">&gt;&gt;&gt;</a> (<span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/Basic.html#UInt8.toUSize\">toUSize</a></span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">8</span>)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L400-L401","name":"UInt8.toUInt64_shiftRight","line":400,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt8.toUInt64_shiftRight","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt8.toUInt64_shiftRight\"><span class=\"name\">UInt8</span>.<span class=\"name\">toUInt64_shiftRight</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftRight.hShiftRight\">&gt;&gt;&gt;</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toUInt64\">toUInt64</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toUInt64\">toUInt64</a></span> <a href=\"./Init/Prelude.html#HShiftRight.hShiftRight\">&gt;&gt;&gt;</a> (<span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toUInt64\">toUInt64</a></span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">8</span>)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L398-L399","name":"UInt8.toUInt32_shiftRight","line":398,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt8.toUInt32_shiftRight","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt8.toUInt32_shiftRight\"><span class=\"name\">UInt8</span>.<span class=\"name\">toUInt32_shiftRight</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftRight.hShiftRight\">&gt;&gt;&gt;</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toUInt32\">toUInt32</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toUInt32\">toUInt32</a></span> <a href=\"./Init/Prelude.html#HShiftRight.hShiftRight\">&gt;&gt;&gt;</a> (<span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toUInt32\">toUInt32</a></span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">8</span>)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L396-L397","name":"UInt8.toUInt16_shiftRight","line":396,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt8.toUInt16_shiftRight","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt8.toUInt16_shiftRight\"><span class=\"name\">UInt8</span>.<span class=\"name\">toUInt16_shiftRight</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftRight.hShiftRight\">&gt;&gt;&gt;</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toUInt16\">toUInt16</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toUInt16\">toUInt16</a></span> <a href=\"./Init/Prelude.html#HShiftRight.hShiftRight\">&gt;&gt;&gt;</a> (<span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toUInt16\">toUInt16</a></span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">8</span>)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L393-L394","name":"USize.toFin_shiftRight","line":393,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#USize.toFin_shiftRight","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#USize.toFin_shiftRight\"><span class=\"name\">USize</span>.<span class=\"name\">toFin_shiftRight</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hb</span> : <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#USize.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <a href=\"./Init/Prelude.html#System.Platform.numBits\">System.Platform.numBits</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftRight.hShiftRight\">&gt;&gt;&gt;</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/UInt/BasicAux.html#USize.toFin\">toFin</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#USize.toFin\">toFin</a></span> <a href=\"./Init/Prelude.html#HShiftRight.hShiftRight\">&gt;&gt;&gt;</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#USize.toFin\">toFin</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L391-L392","name":"UInt64.toFin_shiftRight","line":391,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt64.toFin_shiftRight","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt64.toFin_shiftRight\"><span class=\"name\">UInt64</span>.<span class=\"name\">toFin_shiftRight</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hb</span> : <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">64</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftRight.hShiftRight\">&gt;&gt;&gt;</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toFin\">toFin</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toFin\">toFin</a></span> <a href=\"./Init/Prelude.html#HShiftRight.hShiftRight\">&gt;&gt;&gt;</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toFin\">toFin</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L389-L390","name":"UInt32.toFin_shiftRight","line":389,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt32.toFin_shiftRight","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt32.toFin_shiftRight\"><span class=\"name\">UInt32</span>.<span class=\"name\">toFin_shiftRight</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hb</span> : <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">32</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftRight.hShiftRight\">&gt;&gt;&gt;</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/UInt/BasicAux.html#UInt32.toFin\">toFin</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt32.toFin\">toFin</a></span> <a href=\"./Init/Prelude.html#HShiftRight.hShiftRight\">&gt;&gt;&gt;</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt32.toFin\">toFin</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L387-L388","name":"UInt16.toFin_shiftRight","line":387,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt16.toFin_shiftRight","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt16.toFin_shiftRight\"><span class=\"name\">UInt16</span>.<span class=\"name\">toFin_shiftRight</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hb</span> : <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">16</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftRight.hShiftRight\">&gt;&gt;&gt;</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toFin\">toFin</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toFin\">toFin</a></span> <a href=\"./Init/Prelude.html#HShiftRight.hShiftRight\">&gt;&gt;&gt;</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toFin\">toFin</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L385-L386","name":"UInt8.toFin_shiftRight","line":385,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt8.toFin_shiftRight","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt8.toFin_shiftRight\"><span class=\"name\">UInt8</span>.<span class=\"name\">toFin_shiftRight</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hb</span> : <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">8</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftRight.hShiftRight\">&gt;&gt;&gt;</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toFin\">toFin</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toFin\">toFin</a></span> <a href=\"./Init/Prelude.html#HShiftRight.hShiftRight\">&gt;&gt;&gt;</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toFin\">toFin</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L380-L383","name":"USize.toUInt64_shiftLeft","line":380,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#USize.toUInt64_shiftLeft","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#USize.toUInt64_shiftLeft\"><span class=\"name\">USize</span>.<span class=\"name\">toUInt64_shiftLeft</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/UInt/Basic.html#USize.toUInt64\">toUInt64</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/Basic.html#USize.toUInt64\">toUInt64</a></span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">(<span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#USize.ofNat\">ofNat</a> <a href=\"./Init/Prelude.html#System.Platform.numBits\">System.Platform.numBits</a></span>).<a href=\"./Init/Data/UInt/Basic.html#USize.toUInt64\">toUInt64</a></span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#UInt64.ofNat\">UInt64.ofNat</a> <a href=\"./Init/Prelude.html#USize.size\">size</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L377-L378","name":"UInt32.toUSize_shiftLeft","line":377,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt32.toUSize_shiftLeft","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt32.toUSize_shiftLeft\"><span class=\"name\">UInt32</span>.<span class=\"name\">toUSize_shiftLeft</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/UInt/Basic.html#UInt32.toUSize\">toUSize</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/Basic.html#UInt32.toUSize\">toUSize</a></span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">(<span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">32</span>).<a href=\"./Init/Data/UInt/Basic.html#UInt32.toUSize\">toUSize</a></span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">4294967296</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L375-L376","name":"UInt32.toUInt64_shiftLeft","line":375,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt32.toUInt64_shiftLeft","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt32.toUInt64_shiftLeft\"><span class=\"name\">UInt32</span>.<span class=\"name\">toUInt64_shiftLeft</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/UInt/BasicAux.html#UInt32.toUInt64\">toUInt64</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt32.toUInt64\">toUInt64</a></span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">(<span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">32</span>).<a href=\"./Init/Data/UInt/BasicAux.html#UInt32.toUInt64\">toUInt64</a></span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">4294967296</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L372-L373","name":"UInt16.toUSize_shiftLeft","line":372,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt16.toUSize_shiftLeft","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt16.toUSize_shiftLeft\"><span class=\"name\">UInt16</span>.<span class=\"name\">toUSize_shiftLeft</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/UInt/Basic.html#UInt16.toUSize\">toUSize</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/Basic.html#UInt16.toUSize\">toUSize</a></span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">(<span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">16</span>).<a href=\"./Init/Data/UInt/Basic.html#UInt16.toUSize\">toUSize</a></span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">65536</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L370-L371","name":"UInt16.toUInt64_shiftLeft","line":370,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt16.toUInt64_shiftLeft","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt16.toUInt64_shiftLeft\"><span class=\"name\">UInt16</span>.<span class=\"name\">toUInt64_shiftLeft</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toUInt64\">toUInt64</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toUInt64\">toUInt64</a></span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">(<span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">16</span>).<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toUInt64\">toUInt64</a></span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">65536</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L368-L369","name":"UInt16.toUInt32_shiftLeft","line":368,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt16.toUInt32_shiftLeft","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt16.toUInt32_shiftLeft\"><span class=\"name\">UInt16</span>.<span class=\"name\">toUInt32_shiftLeft</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toUInt32\">toUInt32</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toUInt32\">toUInt32</a></span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">(<span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">16</span>).<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toUInt32\">toUInt32</a></span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">65536</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L365-L366","name":"UInt8.toUSize_shiftLeft","line":365,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt8.toUSize_shiftLeft","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt8.toUSize_shiftLeft\"><span class=\"name\">UInt8</span>.<span class=\"name\">toUSize_shiftLeft</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/UInt/Basic.html#UInt8.toUSize\">toUSize</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/Basic.html#UInt8.toUSize\">toUSize</a></span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">(<span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">8</span>).<a href=\"./Init/Data/UInt/Basic.html#UInt8.toUSize\">toUSize</a></span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">256</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L363-L364","name":"UInt8.toUInt64_shiftLeft","line":363,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt8.toUInt64_shiftLeft","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt8.toUInt64_shiftLeft\"><span class=\"name\">UInt8</span>.<span class=\"name\">toUInt64_shiftLeft</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toUInt64\">toUInt64</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toUInt64\">toUInt64</a></span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">(<span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">8</span>).<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toUInt64\">toUInt64</a></span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">256</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L361-L362","name":"UInt8.toUInt32_shiftLeft","line":361,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt8.toUInt32_shiftLeft","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt8.toUInt32_shiftLeft\"><span class=\"name\">UInt8</span>.<span class=\"name\">toUInt32_shiftLeft</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toUInt32\">toUInt32</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toUInt32\">toUInt32</a></span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">(<span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">8</span>).<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toUInt32\">toUInt32</a></span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">256</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L359-L360","name":"UInt8.toUInt16_shiftLeft","line":359,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt8.toUInt16_shiftLeft","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt8.toUInt16_shiftLeft\"><span class=\"name\">UInt8</span>.<span class=\"name\">toUInt16_shiftLeft</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toUInt16\">toUInt16</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toUInt16\">toUInt16</a></span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">(<span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">8</span>).<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toUInt16\">toUInt16</a></span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">256</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L356-L357","name":"USize.toUInt64_shiftLeft_of_lt","line":356,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#USize.toUInt64_shiftLeft_of_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#USize.toUInt64_shiftLeft_of_lt\"><span class=\"name\">USize</span>.<span class=\"name\">toUInt64_shiftLeft_of_lt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hb</span> : <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#USize.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <a href=\"./Init/Prelude.html#System.Platform.numBits\">System.Platform.numBits</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/UInt/Basic.html#USize.toUInt64\">toUInt64</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/Basic.html#USize.toUInt64\">toUInt64</a></span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/Basic.html#USize.toUInt64\">toUInt64</a></span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#UInt64.ofNat\">UInt64.ofNat</a> <a href=\"./Init/Prelude.html#USize.size\">size</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L352-L354","name":"UInt32.toUSize_shiftLeft_of_lt","line":352,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt32.toUSize_shiftLeft_of_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt32.toUSize_shiftLeft_of_lt\"><span class=\"name\">UInt32</span>.<span class=\"name\">toUSize_shiftLeft_of_lt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hb</span> : <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">32</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/UInt/Basic.html#UInt32.toUSize\">toUSize</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/Basic.html#UInt32.toUSize\">toUSize</a></span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/Basic.html#UInt32.toUSize\">toUSize</a></span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">4294967296</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L350-L351","name":"UInt32.toUInt64_shiftLeft_of_lt","line":350,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt32.toUInt64_shiftLeft_of_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt32.toUInt64_shiftLeft_of_lt\"><span class=\"name\">UInt32</span>.<span class=\"name\">toUInt64_shiftLeft_of_lt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hb</span> : <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">32</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/UInt/BasicAux.html#UInt32.toUInt64\">toUInt64</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt32.toUInt64\">toUInt64</a></span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt32.toUInt64\">toUInt64</a></span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">4294967296</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L346-L348","name":"UInt16.toUSize_shiftLeft_of_lt","line":346,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt16.toUSize_shiftLeft_of_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt16.toUSize_shiftLeft_of_lt\"><span class=\"name\">UInt16</span>.<span class=\"name\">toUSize_shiftLeft_of_lt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hb</span> : <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">16</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/UInt/Basic.html#UInt16.toUSize\">toUSize</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/Basic.html#UInt16.toUSize\">toUSize</a></span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/Basic.html#UInt16.toUSize\">toUSize</a></span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">65536</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L344-L345","name":"UInt16.toUInt64_shiftLeft_of_lt","line":344,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt16.toUInt64_shiftLeft_of_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt16.toUInt64_shiftLeft_of_lt\"><span class=\"name\">UInt16</span>.<span class=\"name\">toUInt64_shiftLeft_of_lt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hb</span> : <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">16</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toUInt64\">toUInt64</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toUInt64\">toUInt64</a></span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toUInt64\">toUInt64</a></span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">65536</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L342-L343","name":"UInt16.toUInt32_shiftLeft_of_lt","line":342,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt16.toUInt32_shiftLeft_of_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt16.toUInt32_shiftLeft_of_lt\"><span class=\"name\">UInt16</span>.<span class=\"name\">toUInt32_shiftLeft_of_lt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hb</span> : <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">16</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toUInt32\">toUInt32</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toUInt32\">toUInt32</a></span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toUInt32\">toUInt32</a></span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">65536</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L338-L340","name":"UInt8.toUSize_shiftLeft_of_lt","line":338,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt8.toUSize_shiftLeft_of_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt8.toUSize_shiftLeft_of_lt\"><span class=\"name\">UInt8</span>.<span class=\"name\">toUSize_shiftLeft_of_lt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hb</span> : <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">8</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/UInt/Basic.html#UInt8.toUSize\">toUSize</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/Basic.html#UInt8.toUSize\">toUSize</a></span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/Basic.html#UInt8.toUSize\">toUSize</a></span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">256</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L336-L337","name":"UInt8.toUInt64_shiftLeft_of_lt","line":336,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt8.toUInt64_shiftLeft_of_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt8.toUInt64_shiftLeft_of_lt\"><span class=\"name\">UInt8</span>.<span class=\"name\">toUInt64_shiftLeft_of_lt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hb</span> : <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">8</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toUInt64\">toUInt64</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toUInt64\">toUInt64</a></span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toUInt64\">toUInt64</a></span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">256</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L334-L335","name":"UInt8.toUInt32_shiftLeft_of_lt","line":334,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt8.toUInt32_shiftLeft_of_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt8.toUInt32_shiftLeft_of_lt\"><span class=\"name\">UInt8</span>.<span class=\"name\">toUInt32_shiftLeft_of_lt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hb</span> : <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">8</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toUInt32\">toUInt32</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toUInt32\">toUInt32</a></span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toUInt32\">toUInt32</a></span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">256</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L332-L333","name":"UInt8.toUInt16_shiftLeft_of_lt","line":332,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt8.toUInt16_shiftLeft_of_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt8.toUInt16_shiftLeft_of_lt\"><span class=\"name\">UInt8</span>.<span class=\"name\">toUInt16_shiftLeft_of_lt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hb</span> : <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">8</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toUInt16\">toUInt16</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toUInt16\">toUInt16</a></span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toUInt16\">toUInt16</a></span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">256</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L326-L330","name":"UInt64.toUSize_shiftLeft_mod","line":326,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt64.toUSize_shiftLeft_mod","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt64.toUSize_shiftLeft_mod\"><span class=\"name\">UInt64</span>.<span class=\"name\">toUSize_shiftLeft_mod</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> (<span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#UInt64.ofNat\">ofNat</a> <a href=\"./Init/Prelude.html#System.Platform.numBits\">System.Platform.numBits</a></span>)).<a href=\"./Init/Data/UInt/Basic.html#UInt64.toUSize\">toUSize</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/Basic.html#UInt64.toUSize\">toUSize</a></span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/Basic.html#UInt64.toUSize\">toUSize</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L323-L325","name":"UInt64.toUInt32_shiftLeft_mod","line":323,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt64.toUInt32_shiftLeft_mod","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt64.toUInt32_shiftLeft_mod\"><span class=\"name\">UInt64</span>.<span class=\"name\">toUInt32_shiftLeft_mod</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> (<span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">32</span>)).<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toUInt32\">toUInt32</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toUInt32\">toUInt32</a></span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toUInt32\">toUInt32</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L320-L322","name":"UInt64.toUInt16_shiftLeft_mod","line":320,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt64.toUInt16_shiftLeft_mod","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt64.toUInt16_shiftLeft_mod\"><span class=\"name\">UInt64</span>.<span class=\"name\">toUInt16_shiftLeft_mod</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> (<span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">16</span>)).<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toUInt16\">toUInt16</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toUInt16\">toUInt16</a></span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toUInt16\">toUInt16</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L317-L319","name":"UInt64.toUInt8_shiftLeft_mod","line":317,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt64.toUInt8_shiftLeft_mod","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt64.toUInt8_shiftLeft_mod\"><span class=\"name\">UInt64</span>.<span class=\"name\">toUInt8_shiftLeft_mod</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> (<span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">8</span>)).<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toUInt8\">toUInt8</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toUInt8\">toUInt8</a></span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toUInt8\">toUInt8</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L313-L315","name":"USize.toUInt32_shiftLeft_mod","line":313,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#USize.toUInt32_shiftLeft_mod","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#USize.toUInt32_shiftLeft_mod\"><span class=\"name\">USize</span>.<span class=\"name\">toUInt32_shiftLeft_mod</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> (<span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">32</span>)).<a href=\"./Init/Data/UInt/Basic.html#USize.toUInt32\">toUInt32</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/Basic.html#USize.toUInt32\">toUInt32</a></span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/Basic.html#USize.toUInt32\">toUInt32</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L310-L312","name":"USize.toUInt16_shiftLeft_mod","line":310,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#USize.toUInt16_shiftLeft_mod","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#USize.toUInt16_shiftLeft_mod\"><span class=\"name\">USize</span>.<span class=\"name\">toUInt16_shiftLeft_mod</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> (<span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">16</span>)).<a href=\"./Init/Data/UInt/Basic.html#USize.toUInt16\">toUInt16</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/Basic.html#USize.toUInt16\">toUInt16</a></span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/Basic.html#USize.toUInt16\">toUInt16</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L307-L309","name":"USize.toUInt8_shiftLeft_mod","line":307,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#USize.toUInt8_shiftLeft_mod","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#USize.toUInt8_shiftLeft_mod\"><span class=\"name\">USize</span>.<span class=\"name\">toUInt8_shiftLeft_mod</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> (<span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">8</span>)).<a href=\"./Init/Data/UInt/Basic.html#USize.toUInt8\">toUInt8</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/Basic.html#USize.toUInt8\">toUInt8</a></span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/Basic.html#USize.toUInt8\">toUInt8</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L303-L305","name":"UInt32.toUInt16_shiftLeft_mod","line":303,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt32.toUInt16_shiftLeft_mod","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt32.toUInt16_shiftLeft_mod\"><span class=\"name\">UInt32</span>.<span class=\"name\">toUInt16_shiftLeft_mod</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> (<span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">16</span>)).<a href=\"./Init/Data/UInt/BasicAux.html#UInt32.toUInt16\">toUInt16</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt32.toUInt16\">toUInt16</a></span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt32.toUInt16\">toUInt16</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L300-L302","name":"UInt32.toUInt8_shiftLeft_mod","line":300,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt32.toUInt8_shiftLeft_mod","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt32.toUInt8_shiftLeft_mod\"><span class=\"name\">UInt32</span>.<span class=\"name\">toUInt8_shiftLeft_mod</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> (<span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">8</span>)).<a href=\"./Init/Data/UInt/BasicAux.html#UInt32.toUInt8\">toUInt8</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt32.toUInt8\">toUInt8</a></span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt32.toUInt8\">toUInt8</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L296-L298","name":"UInt16.toUInt8_shiftLeft_mod","line":296,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt16.toUInt8_shiftLeft_mod","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt16.toUInt8_shiftLeft_mod\"><span class=\"name\">UInt16</span>.<span class=\"name\">toUInt8_shiftLeft_mod</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> (<span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">8</span>)).<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toUInt8\">toUInt8</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toUInt8\">toUInt8</a></span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toUInt8\">toUInt8</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L287-L294","name":"UInt64.toUSize_shiftLeft","line":287,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt64.toUSize_shiftLeft","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt64.toUSize_shiftLeft\"><span class=\"name\">UInt64</span>.<span class=\"name\">toUSize_shiftLeft</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hb</span> : <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <a href=\"./Init/Prelude.html#System.Platform.numBits\">System.Platform.numBits</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/UInt/Basic.html#UInt64.toUSize\">toUSize</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/Basic.html#UInt64.toUSize\">toUSize</a></span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/Basic.html#UInt64.toUSize\">toUSize</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L283-L286","name":"UInt64.toUInt32_shiftLeft","line":283,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt64.toUInt32_shiftLeft","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt64.toUInt32_shiftLeft\"><span class=\"name\">UInt64</span>.<span class=\"name\">toUInt32_shiftLeft</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hb</span> : <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">32</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toUInt32\">toUInt32</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toUInt32\">toUInt32</a></span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toUInt32\">toUInt32</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L279-L282","name":"UInt64.toUInt16_shiftLeft","line":279,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt64.toUInt16_shiftLeft","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt64.toUInt16_shiftLeft\"><span class=\"name\">UInt64</span>.<span class=\"name\">toUInt16_shiftLeft</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hb</span> : <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">16</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toUInt16\">toUInt16</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toUInt16\">toUInt16</a></span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toUInt16\">toUInt16</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L275-L278","name":"UInt64.toUInt8_shiftLeft","line":275,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt64.toUInt8_shiftLeft","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt64.toUInt8_shiftLeft\"><span class=\"name\">UInt64</span>.<span class=\"name\">toUInt8_shiftLeft</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hb</span> : <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">8</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toUInt8\">toUInt8</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toUInt8\">toUInt8</a></span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toUInt8\">toUInt8</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L270-L273","name":"USize.toUInt32_shiftLeft","line":270,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#USize.toUInt32_shiftLeft","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#USize.toUInt32_shiftLeft\"><span class=\"name\">USize</span>.<span class=\"name\">toUInt32_shiftLeft</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hb</span> : <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">32</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/UInt/Basic.html#USize.toUInt32\">toUInt32</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/Basic.html#USize.toUInt32\">toUInt32</a></span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/Basic.html#USize.toUInt32\">toUInt32</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L266-L269","name":"USize.toUInt16_shiftLeft","line":266,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#USize.toUInt16_shiftLeft","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#USize.toUInt16_shiftLeft\"><span class=\"name\">USize</span>.<span class=\"name\">toUInt16_shiftLeft</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hb</span> : <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">16</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/UInt/Basic.html#USize.toUInt16\">toUInt16</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/Basic.html#USize.toUInt16\">toUInt16</a></span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/Basic.html#USize.toUInt16\">toUInt16</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L262-L265","name":"USize.toUInt8_shiftLeft","line":262,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#USize.toUInt8_shiftLeft","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#USize.toUInt8_shiftLeft\"><span class=\"name\">USize</span>.<span class=\"name\">toUInt8_shiftLeft</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hb</span> : <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">8</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/UInt/Basic.html#USize.toUInt8\">toUInt8</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/Basic.html#USize.toUInt8\">toUInt8</a></span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/Basic.html#USize.toUInt8\">toUInt8</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L257-L260","name":"UInt32.toUInt16_shiftLeft","line":257,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt32.toUInt16_shiftLeft","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt32.toUInt16_shiftLeft\"><span class=\"name\">UInt32</span>.<span class=\"name\">toUInt16_shiftLeft</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hb</span> : <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">16</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/UInt/BasicAux.html#UInt32.toUInt16\">toUInt16</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt32.toUInt16\">toUInt16</a></span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt32.toUInt16\">toUInt16</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L253-L256","name":"UInt32.toUInt8_shiftLeft","line":253,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt32.toUInt8_shiftLeft","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt32.toUInt8_shiftLeft\"><span class=\"name\">UInt32</span>.<span class=\"name\">toUInt8_shiftLeft</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hb</span> : <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">8</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/UInt/BasicAux.html#UInt32.toUInt8\">toUInt8</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt32.toUInt8\">toUInt8</a></span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt32.toUInt8\">toUInt8</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L248-L251","name":"UInt16.toUInt8_shiftLeft","line":248,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt16.toUInt8_shiftLeft","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt16.toUInt8_shiftLeft\"><span class=\"name\">UInt16</span>.<span class=\"name\">toUInt8_shiftLeft</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hb</span> : <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">8</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toUInt8\">toUInt8</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toUInt8\">toUInt8</a></span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toUInt8\">toUInt8</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L245-L246","name":"USize.shiftRight_eq_shiftRight_mod","line":245,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#USize.shiftRight_eq_shiftRight_mod","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#USize.shiftRight_eq_shiftRight_mod\"><span class=\"name\">USize</span>.<span class=\"name\">shiftRight_eq_shiftRight_mod</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftRight.hShiftRight\">&gt;&gt;&gt;</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftRight.hShiftRight\">&gt;&gt;&gt;</a> (<span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#USize.ofNat\">ofNat</a> <a href=\"./Init/Prelude.html#System.Platform.numBits\">System.Platform.numBits</a></span>)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L244-L244","name":"UInt64.shiftRight_eq_shiftRight_mod","line":244,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt64.shiftRight_eq_shiftRight_mod","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt64.shiftRight_eq_shiftRight_mod\"><span class=\"name\">UInt64</span>.<span class=\"name\">shiftRight_eq_shiftRight_mod</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftRight.hShiftRight\">&gt;&gt;&gt;</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftRight.hShiftRight\">&gt;&gt;&gt;</a> (<span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">64</span>)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L243-L243","name":"UInt32.shiftRight_eq_shiftRight_mod","line":243,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt32.shiftRight_eq_shiftRight_mod","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt32.shiftRight_eq_shiftRight_mod\"><span class=\"name\">UInt32</span>.<span class=\"name\">shiftRight_eq_shiftRight_mod</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftRight.hShiftRight\">&gt;&gt;&gt;</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftRight.hShiftRight\">&gt;&gt;&gt;</a> (<span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">32</span>)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L242-L242","name":"UInt16.shiftRight_eq_shiftRight_mod","line":242,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt16.shiftRight_eq_shiftRight_mod","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt16.shiftRight_eq_shiftRight_mod\"><span class=\"name\">UInt16</span>.<span class=\"name\">shiftRight_eq_shiftRight_mod</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftRight.hShiftRight\">&gt;&gt;&gt;</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftRight.hShiftRight\">&gt;&gt;&gt;</a> (<span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">16</span>)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L241-L241","name":"UInt8.shiftRight_eq_shiftRight_mod","line":241,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt8.shiftRight_eq_shiftRight_mod","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt8.shiftRight_eq_shiftRight_mod\"><span class=\"name\">UInt8</span>.<span class=\"name\">shiftRight_eq_shiftRight_mod</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftRight.hShiftRight\">&gt;&gt;&gt;</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftRight.hShiftRight\">&gt;&gt;&gt;</a> (<span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">8</span>)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L238-L239","name":"USize.shiftLeft_eq_shiftLeft_mod","line":238,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#USize.shiftLeft_eq_shiftLeft_mod","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#USize.shiftLeft_eq_shiftLeft_mod\"><span class=\"name\">USize</span>.<span class=\"name\">shiftLeft_eq_shiftLeft_mod</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> (<span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#USize.ofNat\">ofNat</a> <a href=\"./Init/Prelude.html#System.Platform.numBits\">System.Platform.numBits</a></span>)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L237-L237","name":"UInt64.shiftLeft_eq_shiftLeft_mod","line":237,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt64.shiftLeft_eq_shiftLeft_mod","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt64.shiftLeft_eq_shiftLeft_mod\"><span class=\"name\">UInt64</span>.<span class=\"name\">shiftLeft_eq_shiftLeft_mod</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> (<span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">64</span>)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L236-L236","name":"UInt32.shiftLeft_eq_shiftLeft_mod","line":236,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt32.shiftLeft_eq_shiftLeft_mod","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt32.shiftLeft_eq_shiftLeft_mod\"><span class=\"name\">UInt32</span>.<span class=\"name\">shiftLeft_eq_shiftLeft_mod</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> (<span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">32</span>)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L235-L235","name":"UInt16.shiftLeft_eq_shiftLeft_mod","line":235,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt16.shiftLeft_eq_shiftLeft_mod","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt16.shiftLeft_eq_shiftLeft_mod\"><span class=\"name\">UInt16</span>.<span class=\"name\">shiftLeft_eq_shiftLeft_mod</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> (<span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">16</span>)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L234-L234","name":"UInt8.shiftLeft_eq_shiftLeft_mod","line":234,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt8.shiftLeft_eq_shiftLeft_mod","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt8.shiftLeft_eq_shiftLeft_mod\"><span class=\"name\">UInt8</span>.<span class=\"name\">shiftLeft_eq_shiftLeft_mod</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> (<span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">8</span>)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L231-L232","name":"USize.toFin_shiftLeft","line":231,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#USize.toFin_shiftLeft","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#USize.toFin_shiftLeft\"><span class=\"name\">USize</span>.<span class=\"name\">toFin_shiftLeft</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hb</span> : <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#USize.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <a href=\"./Init/Prelude.html#System.Platform.numBits\">System.Platform.numBits</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/UInt/BasicAux.html#USize.toFin\">toFin</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#USize.toFin\">toFin</a></span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#USize.toFin\">toFin</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L229-L230","name":"UInt64.toFin_shiftLeft","line":229,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt64.toFin_shiftLeft","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt64.toFin_shiftLeft\"><span class=\"name\">UInt64</span>.<span class=\"name\">toFin_shiftLeft</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hb</span> : <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">64</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toFin\">toFin</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toFin\">toFin</a></span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toFin\">toFin</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L227-L228","name":"UInt32.toFin_shiftLeft","line":227,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt32.toFin_shiftLeft","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt32.toFin_shiftLeft\"><span class=\"name\">UInt32</span>.<span class=\"name\">toFin_shiftLeft</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hb</span> : <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">32</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/UInt/BasicAux.html#UInt32.toFin\">toFin</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt32.toFin\">toFin</a></span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt32.toFin\">toFin</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L225-L226","name":"UInt16.toFin_shiftLeft","line":225,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt16.toFin_shiftLeft","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt16.toFin_shiftLeft\"><span class=\"name\">UInt16</span>.<span class=\"name\">toFin_shiftLeft</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hb</span> : <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">16</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toFin\">toFin</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toFin\">toFin</a></span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toFin\">toFin</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L223-L224","name":"UInt8.toFin_shiftLeft","line":223,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt8.toFin_shiftLeft","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt8.toFin_shiftLeft\"><span class=\"name\">UInt8</span>.<span class=\"name\">toFin_shiftLeft</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hb</span> : <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">8</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toFin\">toFin</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toFin\">toFin</a></span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toFin\">toFin</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L220-L221","name":"USize.toUInt64_not","line":220,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#USize.toUInt64_not","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#USize.toUInt64_not\"><span class=\"name\">USize</span>.<span class=\"name\">toUInt64_not</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><span class=\"fn\">a</span>).<a href=\"./Init/Data/UInt/Basic.html#USize.toUInt64\">toUInt64</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/Basic.html#USize.toUInt64\">toUInt64</a></span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#UInt64.ofNat\">UInt64.ofNat</a> <a href=\"./Init/Prelude.html#USize.size\">size</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L217-L218","name":"UInt32.toUSize_not","line":217,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt32.toUSize_not","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt32.toUSize_not\"><span class=\"name\">UInt32</span>.<span class=\"name\">toUSize_not</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><span class=\"fn\">a</span>).<a href=\"./Init/Data/UInt/Basic.html#UInt32.toUSize\">toUSize</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/Basic.html#UInt32.toUSize\">toUSize</a></span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">4294967296</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L215-L216","name":"UInt32.toUInt64_not","line":215,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt32.toUInt64_not","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt32.toUInt64_not\"><span class=\"name\">UInt32</span>.<span class=\"name\">toUInt64_not</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><span class=\"fn\">a</span>).<a href=\"./Init/Data/UInt/BasicAux.html#UInt32.toUInt64\">toUInt64</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt32.toUInt64\">toUInt64</a></span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">4294967296</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L212-L213","name":"UInt16.toUSize_not","line":212,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt16.toUSize_not","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt16.toUSize_not\"><span class=\"name\">UInt16</span>.<span class=\"name\">toUSize_not</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><span class=\"fn\">a</span>).<a href=\"./Init/Data/UInt/Basic.html#UInt16.toUSize\">toUSize</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/Basic.html#UInt16.toUSize\">toUSize</a></span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">65536</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L210-L211","name":"UInt16.toUInt64_not","line":210,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt16.toUInt64_not","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt16.toUInt64_not\"><span class=\"name\">UInt16</span>.<span class=\"name\">toUInt64_not</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><span class=\"fn\">a</span>).<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toUInt64\">toUInt64</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toUInt64\">toUInt64</a></span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">65536</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L208-L209","name":"UInt16.toUInt32_not","line":208,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt16.toUInt32_not","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt16.toUInt32_not\"><span class=\"name\">UInt16</span>.<span class=\"name\">toUInt32_not</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><span class=\"fn\">a</span>).<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toUInt32\">toUInt32</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toUInt32\">toUInt32</a></span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">65536</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L205-L206","name":"UInt8.toUSize_not","line":205,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt8.toUSize_not","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt8.toUSize_not\"><span class=\"name\">UInt8</span>.<span class=\"name\">toUSize_not</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><span class=\"fn\">a</span>).<a href=\"./Init/Data/UInt/Basic.html#UInt8.toUSize\">toUSize</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/Basic.html#UInt8.toUSize\">toUSize</a></span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">256</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L203-L204","name":"UInt8.toUInt64_not","line":203,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt8.toUInt64_not","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt8.toUInt64_not\"><span class=\"name\">UInt8</span>.<span class=\"name\">toUInt64_not</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><span class=\"fn\">a</span>).<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toUInt64\">toUInt64</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toUInt64\">toUInt64</a></span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">256</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L201-L202","name":"UInt8.toUInt32_not","line":201,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt8.toUInt32_not","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt8.toUInt32_not\"><span class=\"name\">UInt8</span>.<span class=\"name\">toUInt32_not</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><span class=\"fn\">a</span>).<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toUInt32\">toUInt32</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toUInt32\">toUInt32</a></span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">256</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L199-L200","name":"UInt8.toUInt16_not","line":199,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt8.toUInt16_not","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt8.toUInt16_not\"><span class=\"name\">UInt8</span>.<span class=\"name\">toUInt16_not</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><span class=\"fn\">a</span>).<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toUInt16\">toUInt16</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toUInt16\">toUInt16</a></span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">256</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L197-L197","name":"UInt64.toUSize_not","line":197,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt64.toUSize_not","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt64.toUSize_not\"><span class=\"name\">UInt64</span>.<span class=\"name\">toUSize_not</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><span class=\"fn\">a</span>).<a href=\"./Init/Data/UInt/Basic.html#UInt64.toUSize\">toUSize</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/Basic.html#UInt64.toUSize\">toUSize</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L195-L195","name":"USize.toUInt32_not","line":195,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#USize.toUInt32_not","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#USize.toUInt32_not\"><span class=\"name\">USize</span>.<span class=\"name\">toUInt32_not</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><span class=\"fn\">a</span>).<a href=\"./Init/Data/UInt/Basic.html#USize.toUInt32\">toUInt32</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/Basic.html#USize.toUInt32\">toUInt32</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L194-L194","name":"UInt64.toUInt32_not","line":194,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt64.toUInt32_not","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt64.toUInt32_not\"><span class=\"name\">UInt64</span>.<span class=\"name\">toUInt32_not</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><span class=\"fn\">a</span>).<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toUInt32\">toUInt32</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toUInt32\">toUInt32</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L192-L192","name":"USize.toUInt16_not","line":192,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#USize.toUInt16_not","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#USize.toUInt16_not\"><span class=\"name\">USize</span>.<span class=\"name\">toUInt16_not</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><span class=\"fn\">a</span>).<a href=\"./Init/Data/UInt/Basic.html#USize.toUInt16\">toUInt16</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/Basic.html#USize.toUInt16\">toUInt16</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L191-L191","name":"UInt64.toUInt16_not","line":191,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt64.toUInt16_not","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt64.toUInt16_not\"><span class=\"name\">UInt64</span>.<span class=\"name\">toUInt16_not</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><span class=\"fn\">a</span>).<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toUInt16\">toUInt16</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toUInt16\">toUInt16</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L190-L190","name":"UInt32.toUInt16_not","line":190,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt32.toUInt16_not","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt32.toUInt16_not\"><span class=\"name\">UInt32</span>.<span class=\"name\">toUInt16_not</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><span class=\"fn\">a</span>).<a href=\"./Init/Data/UInt/BasicAux.html#UInt32.toUInt16\">toUInt16</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt32.toUInt16\">toUInt16</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L188-L188","name":"USize.toUInt8_not","line":188,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#USize.toUInt8_not","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#USize.toUInt8_not\"><span class=\"name\">USize</span>.<span class=\"name\">toUInt8_not</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><span class=\"fn\">a</span>).<a href=\"./Init/Data/UInt/Basic.html#USize.toUInt8\">toUInt8</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/Basic.html#USize.toUInt8\">toUInt8</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L187-L187","name":"UInt64.toUInt8_not","line":187,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt64.toUInt8_not","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt64.toUInt8_not\"><span class=\"name\">UInt64</span>.<span class=\"name\">toUInt8_not</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><span class=\"fn\">a</span>).<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toUInt8\">toUInt8</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toUInt8\">toUInt8</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L186-L186","name":"UInt32.toUInt8_not","line":186,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt32.toUInt8_not","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt32.toUInt8_not\"><span class=\"name\">UInt32</span>.<span class=\"name\">toUInt8_not</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><span class=\"fn\">a</span>).<a href=\"./Init/Data/UInt/BasicAux.html#UInt32.toUInt8\">toUInt8</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt32.toUInt8\">toUInt8</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L185-L185","name":"UInt16.toUInt8_not","line":185,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt16.toUInt8_not","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt16.toUInt8_not\"><span class=\"name\">UInt16</span>.<span class=\"name\">toUInt8_not</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><span class=\"fn\">a</span>).<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toUInt8\">toUInt8</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toUInt8\">toUInt8</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L182-L183","name":"USize.toFin_not","line":182,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#USize.toFin_not","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#USize.toFin_not\"><span class=\"name\">USize</span>.<span class=\"name\">toFin_not</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><span class=\"fn\">a</span>).<a href=\"./Init/Data/UInt/BasicAux.html#USize.toFin\">toFin</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#USize.toFin\">toFin</a></span>.<a href=\"./Init/Data/Fin/Basic.html#Fin.rev\">rev</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L180-L181","name":"UInt64.toFin_not","line":180,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt64.toFin_not","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt64.toFin_not\"><span class=\"name\">UInt64</span>.<span class=\"name\">toFin_not</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><span class=\"fn\">a</span>).<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toFin\">toFin</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toFin\">toFin</a></span>.<a href=\"./Init/Data/Fin/Basic.html#Fin.rev\">rev</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L178-L179","name":"UInt32.toFin_not","line":178,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt32.toFin_not","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt32.toFin_not\"><span class=\"name\">UInt32</span>.<span class=\"name\">toFin_not</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><span class=\"fn\">a</span>).<a href=\"./Init/Data/UInt/BasicAux.html#UInt32.toFin\">toFin</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt32.toFin\">toFin</a></span>.<a href=\"./Init/Data/Fin/Basic.html#Fin.rev\">rev</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L176-L177","name":"UInt16.toFin_not","line":176,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt16.toFin_not","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt16.toFin_not\"><span class=\"name\">UInt16</span>.<span class=\"name\">toFin_not</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><span class=\"fn\">a</span>).<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toFin\">toFin</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toFin\">toFin</a></span>.<a href=\"./Init/Data/Fin/Basic.html#Fin.rev\">rev</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L174-L175","name":"UInt8.toFin_not","line":174,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt8.toFin_not","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt8.toFin_not\"><span class=\"name\">UInt8</span>.<span class=\"name\">toFin_not</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><span class=\"fn\">a</span>).<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toFin\">toFin</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toFin\">toFin</a></span>.<a href=\"./Init/Data/Fin/Basic.html#Fin.rev\">rev</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L171-L172","name":"USize.toNat_not","line":171,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#USize.toNat_not","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#USize.toNat_not\"><span class=\"name\">USize</span>.<span class=\"name\">toNat_not</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><span class=\"fn\">a</span>).<a href=\"./Init/Data/UInt/BasicAux.html#USize.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#USize.size\">size</a> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#USize.toNat\">toNat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L169-L170","name":"UInt64.toNat_not","line":169,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt64.toNat_not","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt64.toNat_not\"><span class=\"name\">UInt64</span>.<span class=\"name\">toNat_not</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><span class=\"fn\">a</span>).<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#UInt64.size\">size</a> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toNat\">toNat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L167-L168","name":"UInt32.toNat_not","line":167,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt32.toNat_not","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt32.toNat_not\"><span class=\"name\">UInt32</span>.<span class=\"name\">toNat_not</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><span class=\"fn\">a</span>).<a href=\"./Init/Prelude.html#UInt32.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#UInt32.size\">size</a> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Prelude.html#UInt32.toNat\">toNat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L165-L166","name":"UInt16.toNat_not","line":165,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt16.toNat_not","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt16.toNat_not\"><span class=\"name\">UInt16</span>.<span class=\"name\">toNat_not</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><span class=\"fn\">a</span>).<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#UInt16.size\">size</a> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toNat\">toNat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L163-L164","name":"UInt8.toNat_not","line":163,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt8.toNat_not","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt8.toNat_not\"><span class=\"name\">UInt8</span>.<span class=\"name\">toNat_not</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><span class=\"fn\">a</span>).<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#UInt8.size\">size</a> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toNat\">toNat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L161-L161","name":"UInt64.toUSize_xor","line":161,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt64.toUSize_xor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt64.toUSize_xor\"><span class=\"name\">UInt64</span>.<span class=\"name\">toUSize_xor</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/UInt/Basic.html#UInt64.toUSize\">toUSize</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/Basic.html#UInt64.toUSize\">toUSize</a></span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/Basic.html#UInt64.toUSize\">toUSize</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L160-L160","name":"UInt64.toUInt32_xor","line":160,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt64.toUInt32_xor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt64.toUInt32_xor\"><span class=\"name\">UInt64</span>.<span class=\"name\">toUInt32_xor</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toUInt32\">toUInt32</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toUInt32\">toUInt32</a></span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toUInt32\">toUInt32</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L159-L159","name":"UInt64.toUInt16_xor","line":159,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt64.toUInt16_xor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt64.toUInt16_xor\"><span class=\"name\">UInt64</span>.<span class=\"name\">toUInt16_xor</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toUInt16\">toUInt16</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toUInt16\">toUInt16</a></span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toUInt16\">toUInt16</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L158-L158","name":"UInt64.toUInt8_xor","line":158,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt64.toUInt8_xor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt64.toUInt8_xor\"><span class=\"name\">UInt64</span>.<span class=\"name\">toUInt8_xor</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toUInt8\">toUInt8</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toUInt8\">toUInt8</a></span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toUInt8\">toUInt8</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L156-L156","name":"USize.toUInt64_xor","line":156,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#USize.toUInt64_xor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#USize.toUInt64_xor\"><span class=\"name\">USize</span>.<span class=\"name\">toUInt64_xor</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/UInt/Basic.html#USize.toUInt64\">toUInt64</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/Basic.html#USize.toUInt64\">toUInt64</a></span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/Basic.html#USize.toUInt64\">toUInt64</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L155-L155","name":"USize.toUInt32_xor","line":155,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#USize.toUInt32_xor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#USize.toUInt32_xor\"><span class=\"name\">USize</span>.<span class=\"name\">toUInt32_xor</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/UInt/Basic.html#USize.toUInt32\">toUInt32</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/Basic.html#USize.toUInt32\">toUInt32</a></span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/Basic.html#USize.toUInt32\">toUInt32</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L154-L154","name":"USize.toUInt16_xor","line":154,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#USize.toUInt16_xor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#USize.toUInt16_xor\"><span class=\"name\">USize</span>.<span class=\"name\">toUInt16_xor</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/UInt/Basic.html#USize.toUInt16\">toUInt16</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/Basic.html#USize.toUInt16\">toUInt16</a></span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/Basic.html#USize.toUInt16\">toUInt16</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L153-L153","name":"USize.toUInt8_xor","line":153,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#USize.toUInt8_xor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#USize.toUInt8_xor\"><span class=\"name\">USize</span>.<span class=\"name\">toUInt8_xor</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/UInt/Basic.html#USize.toUInt8\">toUInt8</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/Basic.html#USize.toUInt8\">toUInt8</a></span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/Basic.html#USize.toUInt8\">toUInt8</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L151-L151","name":"UInt32.toUSize_xor","line":151,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt32.toUSize_xor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt32.toUSize_xor\"><span class=\"name\">UInt32</span>.<span class=\"name\">toUSize_xor</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/UInt/Basic.html#UInt32.toUSize\">toUSize</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/Basic.html#UInt32.toUSize\">toUSize</a></span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/Basic.html#UInt32.toUSize\">toUSize</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L150-L150","name":"UInt32.toUInt64_xor","line":150,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt32.toUInt64_xor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt32.toUInt64_xor\"><span class=\"name\">UInt32</span>.<span class=\"name\">toUInt64_xor</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/UInt/BasicAux.html#UInt32.toUInt64\">toUInt64</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt32.toUInt64\">toUInt64</a></span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt32.toUInt64\">toUInt64</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L149-L149","name":"UInt32.toUInt16_xor","line":149,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt32.toUInt16_xor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt32.toUInt16_xor\"><span class=\"name\">UInt32</span>.<span class=\"name\">toUInt16_xor</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/UInt/BasicAux.html#UInt32.toUInt16\">toUInt16</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt32.toUInt16\">toUInt16</a></span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt32.toUInt16\">toUInt16</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L148-L148","name":"UInt32.toUInt8_xor","line":148,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt32.toUInt8_xor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt32.toUInt8_xor\"><span class=\"name\">UInt32</span>.<span class=\"name\">toUInt8_xor</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/UInt/BasicAux.html#UInt32.toUInt8\">toUInt8</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt32.toUInt8\">toUInt8</a></span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt32.toUInt8\">toUInt8</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L146-L146","name":"UInt16.toUSize_xor","line":146,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt16.toUSize_xor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt16.toUSize_xor\"><span class=\"name\">UInt16</span>.<span class=\"name\">toUSize_xor</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/UInt/Basic.html#UInt16.toUSize\">toUSize</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/Basic.html#UInt16.toUSize\">toUSize</a></span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/Basic.html#UInt16.toUSize\">toUSize</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L145-L145","name":"UInt16.toUInt64_xor","line":145,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt16.toUInt64_xor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt16.toUInt64_xor\"><span class=\"name\">UInt16</span>.<span class=\"name\">toUInt64_xor</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toUInt64\">toUInt64</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toUInt64\">toUInt64</a></span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toUInt64\">toUInt64</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L144-L144","name":"UInt16.toUInt32_xor","line":144,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt16.toUInt32_xor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt16.toUInt32_xor\"><span class=\"name\">UInt16</span>.<span class=\"name\">toUInt32_xor</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toUInt32\">toUInt32</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toUInt32\">toUInt32</a></span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toUInt32\">toUInt32</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L143-L143","name":"UInt16.toUInt8_xor","line":143,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt16.toUInt8_xor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt16.toUInt8_xor\"><span class=\"name\">UInt16</span>.<span class=\"name\">toUInt8_xor</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toUInt8\">toUInt8</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toUInt8\">toUInt8</a></span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toUInt8\">toUInt8</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L141-L141","name":"UInt8.toUSize_xor","line":141,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt8.toUSize_xor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt8.toUSize_xor\"><span class=\"name\">UInt8</span>.<span class=\"name\">toUSize_xor</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/UInt/Basic.html#UInt8.toUSize\">toUSize</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/Basic.html#UInt8.toUSize\">toUSize</a></span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/Basic.html#UInt8.toUSize\">toUSize</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L140-L140","name":"UInt8.toUInt64_xor","line":140,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt8.toUInt64_xor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt8.toUInt64_xor\"><span class=\"name\">UInt8</span>.<span class=\"name\">toUInt64_xor</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toUInt64\">toUInt64</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toUInt64\">toUInt64</a></span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toUInt64\">toUInt64</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L139-L139","name":"UInt8.toUInt32_xor","line":139,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt8.toUInt32_xor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt8.toUInt32_xor\"><span class=\"name\">UInt8</span>.<span class=\"name\">toUInt32_xor</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toUInt32\">toUInt32</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toUInt32\">toUInt32</a></span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toUInt32\">toUInt32</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L138-L138","name":"UInt8.toUInt16_xor","line":138,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt8.toUInt16_xor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt8.toUInt16_xor\"><span class=\"name\">UInt8</span>.<span class=\"name\">toUInt16_xor</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toUInt16\">toUInt16</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toUInt16\">toUInt16</a></span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toUInt16\">toUInt16</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L136-L136","name":"USize.toFin_xor","line":136,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#USize.toFin_xor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#USize.toFin_xor\"><span class=\"name\">USize</span>.<span class=\"name\">toFin_xor</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/UInt/BasicAux.html#USize.toFin\">toFin</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#USize.toFin\">toFin</a></span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#USize.toFin\">toFin</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L135-L135","name":"UInt64.toFin_xor","line":135,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt64.toFin_xor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt64.toFin_xor\"><span class=\"name\">UInt64</span>.<span class=\"name\">toFin_xor</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toFin\">toFin</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toFin\">toFin</a></span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toFin\">toFin</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L134-L134","name":"UInt32.toFin_xor","line":134,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt32.toFin_xor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt32.toFin_xor\"><span class=\"name\">UInt32</span>.<span class=\"name\">toFin_xor</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/UInt/BasicAux.html#UInt32.toFin\">toFin</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt32.toFin\">toFin</a></span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt32.toFin\">toFin</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L133-L133","name":"UInt16.toFin_xor","line":133,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt16.toFin_xor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt16.toFin_xor\"><span class=\"name\">UInt16</span>.<span class=\"name\">toFin_xor</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toFin\">toFin</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toFin\">toFin</a></span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toFin\">toFin</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L132-L132","name":"UInt8.toFin_xor","line":132,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt8.toFin_xor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt8.toFin_xor\"><span class=\"name\">UInt8</span>.<span class=\"name\">toFin_xor</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toFin\">toFin</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toFin\">toFin</a></span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toFin\">toFin</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L130-L130","name":"UInt64.toUSize_or","line":130,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt64.toUSize_or","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt64.toUSize_or\"><span class=\"name\">UInt64</span>.<span class=\"name\">toUSize_or</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/UInt/Basic.html#UInt64.toUSize\">toUSize</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/Basic.html#UInt64.toUSize\">toUSize</a></span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/Basic.html#UInt64.toUSize\">toUSize</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L129-L129","name":"UInt64.toUInt32_or","line":129,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt64.toUInt32_or","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt64.toUInt32_or\"><span class=\"name\">UInt64</span>.<span class=\"name\">toUInt32_or</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toUInt32\">toUInt32</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toUInt32\">toUInt32</a></span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toUInt32\">toUInt32</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L128-L128","name":"UInt64.toUInt16_or","line":128,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt64.toUInt16_or","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt64.toUInt16_or\"><span class=\"name\">UInt64</span>.<span class=\"name\">toUInt16_or</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toUInt16\">toUInt16</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toUInt16\">toUInt16</a></span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toUInt16\">toUInt16</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L127-L127","name":"UInt64.toUInt8_or","line":127,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt64.toUInt8_or","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt64.toUInt8_or\"><span class=\"name\">UInt64</span>.<span class=\"name\">toUInt8_or</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toUInt8\">toUInt8</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toUInt8\">toUInt8</a></span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toUInt8\">toUInt8</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L125-L125","name":"USize.toUInt64_or","line":125,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#USize.toUInt64_or","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#USize.toUInt64_or\"><span class=\"name\">USize</span>.<span class=\"name\">toUInt64_or</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/UInt/Basic.html#USize.toUInt64\">toUInt64</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/Basic.html#USize.toUInt64\">toUInt64</a></span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/Basic.html#USize.toUInt64\">toUInt64</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L124-L124","name":"USize.toUInt32_or","line":124,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#USize.toUInt32_or","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#USize.toUInt32_or\"><span class=\"name\">USize</span>.<span class=\"name\">toUInt32_or</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/UInt/Basic.html#USize.toUInt32\">toUInt32</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/Basic.html#USize.toUInt32\">toUInt32</a></span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/Basic.html#USize.toUInt32\">toUInt32</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L123-L123","name":"USize.toUInt16_or","line":123,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#USize.toUInt16_or","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#USize.toUInt16_or\"><span class=\"name\">USize</span>.<span class=\"name\">toUInt16_or</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/UInt/Basic.html#USize.toUInt16\">toUInt16</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/Basic.html#USize.toUInt16\">toUInt16</a></span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/Basic.html#USize.toUInt16\">toUInt16</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L122-L122","name":"USize.toUInt8_or","line":122,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#USize.toUInt8_or","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#USize.toUInt8_or\"><span class=\"name\">USize</span>.<span class=\"name\">toUInt8_or</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/UInt/Basic.html#USize.toUInt8\">toUInt8</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/Basic.html#USize.toUInt8\">toUInt8</a></span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/Basic.html#USize.toUInt8\">toUInt8</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L120-L120","name":"UInt32.toUSize_or","line":120,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt32.toUSize_or","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt32.toUSize_or\"><span class=\"name\">UInt32</span>.<span class=\"name\">toUSize_or</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/UInt/Basic.html#UInt32.toUSize\">toUSize</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/Basic.html#UInt32.toUSize\">toUSize</a></span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/Basic.html#UInt32.toUSize\">toUSize</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L119-L119","name":"UInt32.toUInt64_or","line":119,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt32.toUInt64_or","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt32.toUInt64_or\"><span class=\"name\">UInt32</span>.<span class=\"name\">toUInt64_or</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/UInt/BasicAux.html#UInt32.toUInt64\">toUInt64</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt32.toUInt64\">toUInt64</a></span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt32.toUInt64\">toUInt64</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L118-L118","name":"UInt32.toUInt16_or","line":118,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt32.toUInt16_or","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt32.toUInt16_or\"><span class=\"name\">UInt32</span>.<span class=\"name\">toUInt16_or</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/UInt/BasicAux.html#UInt32.toUInt16\">toUInt16</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt32.toUInt16\">toUInt16</a></span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt32.toUInt16\">toUInt16</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L117-L117","name":"UInt32.toUInt8_or","line":117,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt32.toUInt8_or","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt32.toUInt8_or\"><span class=\"name\">UInt32</span>.<span class=\"name\">toUInt8_or</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/UInt/BasicAux.html#UInt32.toUInt8\">toUInt8</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt32.toUInt8\">toUInt8</a></span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt32.toUInt8\">toUInt8</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L115-L115","name":"UInt16.toUSize_or","line":115,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt16.toUSize_or","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt16.toUSize_or\"><span class=\"name\">UInt16</span>.<span class=\"name\">toUSize_or</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/UInt/Basic.html#UInt16.toUSize\">toUSize</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/Basic.html#UInt16.toUSize\">toUSize</a></span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/Basic.html#UInt16.toUSize\">toUSize</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L114-L114","name":"UInt16.toUInt64_or","line":114,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt16.toUInt64_or","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt16.toUInt64_or\"><span class=\"name\">UInt16</span>.<span class=\"name\">toUInt64_or</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toUInt64\">toUInt64</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toUInt64\">toUInt64</a></span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toUInt64\">toUInt64</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L113-L113","name":"UInt16.toUInt32_or","line":113,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt16.toUInt32_or","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt16.toUInt32_or\"><span class=\"name\">UInt16</span>.<span class=\"name\">toUInt32_or</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toUInt32\">toUInt32</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toUInt32\">toUInt32</a></span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toUInt32\">toUInt32</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L112-L112","name":"UInt16.toUInt8_or","line":112,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt16.toUInt8_or","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt16.toUInt8_or\"><span class=\"name\">UInt16</span>.<span class=\"name\">toUInt8_or</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toUInt8\">toUInt8</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toUInt8\">toUInt8</a></span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toUInt8\">toUInt8</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L110-L110","name":"UInt8.toUSize_or","line":110,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt8.toUSize_or","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt8.toUSize_or\"><span class=\"name\">UInt8</span>.<span class=\"name\">toUSize_or</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/UInt/Basic.html#UInt8.toUSize\">toUSize</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/Basic.html#UInt8.toUSize\">toUSize</a></span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/Basic.html#UInt8.toUSize\">toUSize</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L109-L109","name":"UInt8.toUInt64_or","line":109,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt8.toUInt64_or","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt8.toUInt64_or\"><span class=\"name\">UInt8</span>.<span class=\"name\">toUInt64_or</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toUInt64\">toUInt64</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toUInt64\">toUInt64</a></span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toUInt64\">toUInt64</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L108-L108","name":"UInt8.toUInt32_or","line":108,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt8.toUInt32_or","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt8.toUInt32_or\"><span class=\"name\">UInt8</span>.<span class=\"name\">toUInt32_or</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toUInt32\">toUInt32</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toUInt32\">toUInt32</a></span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toUInt32\">toUInt32</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L107-L107","name":"UInt8.toUInt16_or","line":107,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt8.toUInt16_or","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt8.toUInt16_or\"><span class=\"name\">UInt8</span>.<span class=\"name\">toUInt16_or</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toUInt16\">toUInt16</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toUInt16\">toUInt16</a></span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toUInt16\">toUInt16</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L105-L105","name":"USize.toFin_or","line":105,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#USize.toFin_or","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#USize.toFin_or\"><span class=\"name\">USize</span>.<span class=\"name\">toFin_or</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/UInt/BasicAux.html#USize.toFin\">toFin</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#USize.toFin\">toFin</a></span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#USize.toFin\">toFin</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L104-L104","name":"UInt64.toFin_or","line":104,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt64.toFin_or","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt64.toFin_or\"><span class=\"name\">UInt64</span>.<span class=\"name\">toFin_or</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toFin\">toFin</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toFin\">toFin</a></span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toFin\">toFin</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L103-L103","name":"UInt32.toFin_or","line":103,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt32.toFin_or","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt32.toFin_or\"><span class=\"name\">UInt32</span>.<span class=\"name\">toFin_or</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/UInt/BasicAux.html#UInt32.toFin\">toFin</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt32.toFin\">toFin</a></span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt32.toFin\">toFin</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L102-L102","name":"UInt16.toFin_or","line":102,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt16.toFin_or","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt16.toFin_or\"><span class=\"name\">UInt16</span>.<span class=\"name\">toFin_or</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toFin\">toFin</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toFin\">toFin</a></span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toFin\">toFin</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L101-L101","name":"UInt8.toFin_or","line":101,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt8.toFin_or","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt8.toFin_or\"><span class=\"name\">UInt8</span>.<span class=\"name\">toFin_or</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toFin\">toFin</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toFin\">toFin</a></span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toFin\">toFin</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L99-L99","name":"UInt64.toUSize_and","line":99,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt64.toUSize_and","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt64.toUSize_and\"><span class=\"name\">UInt64</span>.<span class=\"name\">toUSize_and</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/UInt/Basic.html#UInt64.toUSize\">toUSize</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/Basic.html#UInt64.toUSize\">toUSize</a></span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/Basic.html#UInt64.toUSize\">toUSize</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L98-L98","name":"UInt64.toUInt32_and","line":98,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt64.toUInt32_and","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt64.toUInt32_and\"><span class=\"name\">UInt64</span>.<span class=\"name\">toUInt32_and</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toUInt32\">toUInt32</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toUInt32\">toUInt32</a></span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toUInt32\">toUInt32</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L97-L97","name":"UInt64.toUInt16_and","line":97,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt64.toUInt16_and","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt64.toUInt16_and\"><span class=\"name\">UInt64</span>.<span class=\"name\">toUInt16_and</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toUInt16\">toUInt16</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toUInt16\">toUInt16</a></span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toUInt16\">toUInt16</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L96-L96","name":"UInt64.toUInt8_and","line":96,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt64.toUInt8_and","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt64.toUInt8_and\"><span class=\"name\">UInt64</span>.<span class=\"name\">toUInt8_and</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toUInt8\">toUInt8</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toUInt8\">toUInt8</a></span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toUInt8\">toUInt8</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L94-L94","name":"USize.toUInt64_and","line":94,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#USize.toUInt64_and","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#USize.toUInt64_and\"><span class=\"name\">USize</span>.<span class=\"name\">toUInt64_and</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/UInt/Basic.html#USize.toUInt64\">toUInt64</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/Basic.html#USize.toUInt64\">toUInt64</a></span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/Basic.html#USize.toUInt64\">toUInt64</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L93-L93","name":"USize.toUInt32_and","line":93,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#USize.toUInt32_and","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#USize.toUInt32_and\"><span class=\"name\">USize</span>.<span class=\"name\">toUInt32_and</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/UInt/Basic.html#USize.toUInt32\">toUInt32</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/Basic.html#USize.toUInt32\">toUInt32</a></span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/Basic.html#USize.toUInt32\">toUInt32</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L92-L92","name":"USize.toUInt16_and","line":92,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#USize.toUInt16_and","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#USize.toUInt16_and\"><span class=\"name\">USize</span>.<span class=\"name\">toUInt16_and</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/UInt/Basic.html#USize.toUInt16\">toUInt16</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/Basic.html#USize.toUInt16\">toUInt16</a></span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/Basic.html#USize.toUInt16\">toUInt16</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L91-L91","name":"USize.toUInt8_and","line":91,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#USize.toUInt8_and","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#USize.toUInt8_and\"><span class=\"name\">USize</span>.<span class=\"name\">toUInt8_and</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/UInt/Basic.html#USize.toUInt8\">toUInt8</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/Basic.html#USize.toUInt8\">toUInt8</a></span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/Basic.html#USize.toUInt8\">toUInt8</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L89-L89","name":"UInt32.toUSize_and","line":89,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt32.toUSize_and","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt32.toUSize_and\"><span class=\"name\">UInt32</span>.<span class=\"name\">toUSize_and</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/UInt/Basic.html#UInt32.toUSize\">toUSize</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/Basic.html#UInt32.toUSize\">toUSize</a></span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/Basic.html#UInt32.toUSize\">toUSize</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L88-L88","name":"UInt32.toUInt64_and","line":88,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt32.toUInt64_and","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt32.toUInt64_and\"><span class=\"name\">UInt32</span>.<span class=\"name\">toUInt64_and</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/UInt/BasicAux.html#UInt32.toUInt64\">toUInt64</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt32.toUInt64\">toUInt64</a></span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt32.toUInt64\">toUInt64</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L87-L87","name":"UInt32.toUInt16_and","line":87,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt32.toUInt16_and","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt32.toUInt16_and\"><span class=\"name\">UInt32</span>.<span class=\"name\">toUInt16_and</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/UInt/BasicAux.html#UInt32.toUInt16\">toUInt16</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt32.toUInt16\">toUInt16</a></span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt32.toUInt16\">toUInt16</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L86-L86","name":"UInt32.toUInt8_and","line":86,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt32.toUInt8_and","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt32.toUInt8_and\"><span class=\"name\">UInt32</span>.<span class=\"name\">toUInt8_and</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/UInt/BasicAux.html#UInt32.toUInt8\">toUInt8</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt32.toUInt8\">toUInt8</a></span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt32.toUInt8\">toUInt8</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L84-L84","name":"UInt16.toUSize_and","line":84,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt16.toUSize_and","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt16.toUSize_and\"><span class=\"name\">UInt16</span>.<span class=\"name\">toUSize_and</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/UInt/Basic.html#UInt16.toUSize\">toUSize</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/Basic.html#UInt16.toUSize\">toUSize</a></span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/Basic.html#UInt16.toUSize\">toUSize</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L83-L83","name":"UInt16.toUInt64_and","line":83,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt16.toUInt64_and","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt16.toUInt64_and\"><span class=\"name\">UInt16</span>.<span class=\"name\">toUInt64_and</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toUInt64\">toUInt64</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toUInt64\">toUInt64</a></span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toUInt64\">toUInt64</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L82-L82","name":"UInt16.toUInt32_and","line":82,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt16.toUInt32_and","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt16.toUInt32_and\"><span class=\"name\">UInt16</span>.<span class=\"name\">toUInt32_and</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toUInt32\">toUInt32</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toUInt32\">toUInt32</a></span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toUInt32\">toUInt32</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L81-L81","name":"UInt16.toUInt8_and","line":81,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt16.toUInt8_and","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt16.toUInt8_and\"><span class=\"name\">UInt16</span>.<span class=\"name\">toUInt8_and</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toUInt8\">toUInt8</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toUInt8\">toUInt8</a></span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toUInt8\">toUInt8</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L79-L79","name":"UInt8.toUSize_and","line":79,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt8.toUSize_and","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt8.toUSize_and\"><span class=\"name\">UInt8</span>.<span class=\"name\">toUSize_and</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/UInt/Basic.html#UInt8.toUSize\">toUSize</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/Basic.html#UInt8.toUSize\">toUSize</a></span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/Basic.html#UInt8.toUSize\">toUSize</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L78-L78","name":"UInt8.toUInt64_and","line":78,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt8.toUInt64_and","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt8.toUInt64_and\"><span class=\"name\">UInt8</span>.<span class=\"name\">toUInt64_and</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toUInt64\">toUInt64</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toUInt64\">toUInt64</a></span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toUInt64\">toUInt64</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L77-L77","name":"UInt8.toUInt32_and","line":77,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt8.toUInt32_and","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt8.toUInt32_and\"><span class=\"name\">UInt8</span>.<span class=\"name\">toUInt32_and</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toUInt32\">toUInt32</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toUInt32\">toUInt32</a></span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toUInt32\">toUInt32</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L76-L76","name":"UInt8.toUInt16_and","line":76,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt8.toUInt16_and","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt8.toUInt16_and\"><span class=\"name\">UInt8</span>.<span class=\"name\">toUInt16_and</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toUInt16\">toUInt16</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toUInt16\">toUInt16</a></span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toUInt16\">toUInt16</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L74-L74","name":"USize.toFin_and","line":74,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#USize.toFin_and","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#USize.toFin_and\"><span class=\"name\">USize</span>.<span class=\"name\">toFin_and</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/UInt/BasicAux.html#USize.toFin\">toFin</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#USize.toFin\">toFin</a></span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#USize.toFin\">toFin</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L73-L73","name":"UInt64.toFin_and","line":73,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt64.toFin_and","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt64.toFin_and\"><span class=\"name\">UInt64</span>.<span class=\"name\">toFin_and</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toFin\">toFin</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toFin\">toFin</a></span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toFin\">toFin</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L72-L72","name":"UInt32.toFin_and","line":72,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt32.toFin_and","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt32.toFin_and\"><span class=\"name\">UInt32</span>.<span class=\"name\">toFin_and</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/UInt/BasicAux.html#UInt32.toFin\">toFin</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt32.toFin\">toFin</a></span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt32.toFin\">toFin</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L71-L71","name":"UInt16.toFin_and","line":71,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt16.toFin_and","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt16.toFin_and\"><span class=\"name\">UInt16</span>.<span class=\"name\">toFin_and</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toFin\">toFin</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toFin\">toFin</a></span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toFin\">toFin</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L70-L70","name":"UInt8.toFin_and","line":70,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt8.toFin_and","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt8.toFin_and\"><span class=\"name\">UInt8</span>.<span class=\"name\">toFin_and</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toFin\">toFin</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toFin\">toFin</a></span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toFin\">toFin</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L62-L68","name":"Bool.toBitVec_toUSize","line":62,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#Bool.toBitVec_toUSize","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#Bool.toBitVec_toUSize\"><span class=\"name\">Bool</span>.<span class=\"name\">toBitVec_toUSize</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/Basic.html#Bool.toUSize\">toUSize</a></span>.<a href=\"./Init/Prelude.html#USize.toBitVec\">toBitVec</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/BitVec/Basic.html#BitVec.setWidth\">BitVec.setWidth</a> <a href=\"./Init/Prelude.html#System.Platform.numBits\">System.Platform.numBits</a> <span class=\"fn\">(<a href=\"./Init/Data/BitVec/Basic.html#BitVec.ofBool\">BitVec.ofBool</a> <span class=\"fn\">b</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L57-L60","name":"Bool.toBitVec_toUInt64","line":57,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#Bool.toBitVec_toUInt64","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#Bool.toBitVec_toUInt64\"><span class=\"name\">Bool</span>.<span class=\"name\">toBitVec_toUInt64</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/Basic.html#Bool.toUInt64\">toUInt64</a></span>.<a href=\"./Init/Prelude.html#UInt64.toBitVec\">toBitVec</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/BitVec/Basic.html#BitVec.setWidth\">BitVec.setWidth</a> <span class=\"fn\">64</span> <span class=\"fn\">(<a href=\"./Init/Data/BitVec/Basic.html#BitVec.ofBool\">BitVec.ofBool</a> <span class=\"fn\">b</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L52-L55","name":"Bool.toBitVec_toUInt32","line":52,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#Bool.toBitVec_toUInt32","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#Bool.toBitVec_toUInt32\"><span class=\"name\">Bool</span>.<span class=\"name\">toBitVec_toUInt32</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/Basic.html#Bool.toUInt32\">toUInt32</a></span>.<a href=\"./Init/Prelude.html#UInt32.toBitVec\">toBitVec</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/BitVec/Basic.html#BitVec.setWidth\">BitVec.setWidth</a> <span class=\"fn\">32</span> <span class=\"fn\">(<a href=\"./Init/Data/BitVec/Basic.html#BitVec.ofBool\">BitVec.ofBool</a> <span class=\"fn\">b</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L47-L50","name":"Bool.toBitVec_toUInt16","line":47,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#Bool.toBitVec_toUInt16","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#Bool.toBitVec_toUInt16\"><span class=\"name\">Bool</span>.<span class=\"name\">toBitVec_toUInt16</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/Basic.html#Bool.toUInt16\">toUInt16</a></span>.<a href=\"./Init/Prelude.html#UInt16.toBitVec\">toBitVec</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/BitVec/Basic.html#BitVec.setWidth\">BitVec.setWidth</a> <span class=\"fn\">16</span> <span class=\"fn\">(<a href=\"./Init/Data/BitVec/Basic.html#BitVec.ofBool\">BitVec.ofBool</a> <span class=\"fn\">b</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L42-L45","name":"Bool.toBitVec_toUInt8","line":42,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#Bool.toBitVec_toUInt8","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#Bool.toBitVec_toUInt8\"><span class=\"name\">Bool</span>.<span class=\"name\">toBitVec_toUInt8</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/Basic.html#Bool.toUInt8\">toUInt8</a></span>.<a href=\"./Init/Prelude.html#UInt8.toBitVec\">toBitVec</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/BitVec/Basic.html#BitVec.setWidth\">BitVec.setWidth</a> <span class=\"fn\">8</span> <span class=\"fn\">(<a href=\"./Init/Data/BitVec/Basic.html#BitVec.ofBool\">BitVec.ofBool</a> <span class=\"fn\">b</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L40-L40","name":"USize.toBitVec_shiftLeft","line":40,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#USize.toBitVec_shiftLeft","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#USize.toBitVec_shiftLeft\"><span class=\"name\">USize</span>.<span class=\"name\">toBitVec_shiftLeft</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">b</span>).<a href=\"./Init/Prelude.html#USize.toBitVec\">toBitVec</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Prelude.html#USize.toBitVec\">toBitVec</a></span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> (<span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Prelude.html#USize.toBitVec\">toBitVec</a></span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">↑<a href=\"./Init/Prelude.html#System.Platform.numBits\">System.Platform.numBits</a></span>)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L40-L40","name":"USize.toBitVec_not","line":40,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#USize.toBitVec_not","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#USize.toBitVec_not\"><span class=\"name\">USize</span>.<span class=\"name\">toBitVec_not</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><span class=\"fn\">a</span>).<a href=\"./Init/Prelude.html#USize.toBitVec\">toBitVec</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Prelude.html#USize.toBitVec\">toBitVec</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L40-L40","name":"USize.toNat_shiftLeft","line":40,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#USize.toNat_shiftLeft","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#USize.toNat_shiftLeft\"><span class=\"name\">USize</span>.<span class=\"name\">toNat_shiftLeft</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/UInt/BasicAux.html#USize.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#USize.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> (<span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#USize.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <a href=\"./Init/Prelude.html#System.Platform.numBits\">System.Platform.numBits</a>) <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <a href=\"./Init/Prelude.html#System.Platform.numBits\">System.Platform.numBits</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L40-L40","name":"USize.toNat_xor","line":40,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#USize.toNat_xor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#USize.toNat_xor\"><span class=\"name\">USize</span>.<span class=\"name\">toNat_xor</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/UInt/BasicAux.html#USize.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#USize.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#USize.toNat\">toNat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L40-L40","name":"USize.toBitVec_or","line":40,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#USize.toBitVec_or","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#USize.toBitVec_or\"><span class=\"name\">USize</span>.<span class=\"name\">toBitVec_or</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">b</span>).<a href=\"./Init/Prelude.html#USize.toBitVec\">toBitVec</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Prelude.html#USize.toBitVec\">toBitVec</a></span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Prelude.html#USize.toBitVec\">toBitVec</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L40-L40","name":"USize.toNat_or","line":40,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#USize.toNat_or","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#USize.toNat_or\"><span class=\"name\">USize</span>.<span class=\"name\">toNat_or</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/UInt/BasicAux.html#USize.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#USize.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#USize.toNat\">toNat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L40-L40","name":"USize.toBitVec_shiftRight","line":40,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#USize.toBitVec_shiftRight","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#USize.toBitVec_shiftRight\"><span class=\"name\">USize</span>.<span class=\"name\">toBitVec_shiftRight</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftRight.hShiftRight\">&gt;&gt;&gt;</a> <span class=\"fn\">b</span>).<a href=\"./Init/Prelude.html#USize.toBitVec\">toBitVec</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Prelude.html#USize.toBitVec\">toBitVec</a></span> <a href=\"./Init/Prelude.html#HShiftRight.hShiftRight\">&gt;&gt;&gt;</a> (<span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Prelude.html#USize.toBitVec\">toBitVec</a></span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">↑<a href=\"./Init/Prelude.html#System.Platform.numBits\">System.Platform.numBits</a></span>)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L40-L40","name":"USize.toNat_shiftRight","line":40,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#USize.toNat_shiftRight","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#USize.toNat_shiftRight\"><span class=\"name\">USize</span>.<span class=\"name\">toNat_shiftRight</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftRight.hShiftRight\">&gt;&gt;&gt;</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/UInt/BasicAux.html#USize.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#USize.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#HShiftRight.hShiftRight\">&gt;&gt;&gt;</a> (<span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#USize.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <a href=\"./Init/Prelude.html#System.Platform.numBits\">System.Platform.numBits</a>)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L40-L40","name":"USize.toBitVec_xor","line":40,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#USize.toBitVec_xor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#USize.toBitVec_xor\"><span class=\"name\">USize</span>.<span class=\"name\">toBitVec_xor</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">b</span>).<a href=\"./Init/Prelude.html#USize.toBitVec\">toBitVec</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Prelude.html#USize.toBitVec\">toBitVec</a></span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Prelude.html#USize.toBitVec\">toBitVec</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L40-L40","name":"USize.and_toNat","line":40,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#USize.and_toNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#USize.and_toNat\"><span class=\"name\">USize</span>.<span class=\"name\">and_toNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/UInt/BasicAux.html#USize.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#USize.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#USize.toNat\">toNat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L40-L40","name":"USize.toNat_and","line":40,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#USize.toNat_and","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#USize.toNat_and\"><span class=\"name\">USize</span>.<span class=\"name\">toNat_and</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/UInt/BasicAux.html#USize.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#USize.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#USize.toNat\">toNat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L40-L40","name":"USize.toBitVec_and","line":40,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#USize.toBitVec_and","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#USize.toBitVec_and\"><span class=\"name\">USize</span>.<span class=\"name\">toBitVec_and</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\">b</span>).<a href=\"./Init/Prelude.html#USize.toBitVec\">toBitVec</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Prelude.html#USize.toBitVec\">toBitVec</a></span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Prelude.html#USize.toBitVec\">toBitVec</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L39-L39","name":"UInt64.toNat_shiftLeft","line":39,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt64.toNat_shiftLeft","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt64.toNat_shiftLeft\"><span class=\"name\">UInt64</span>.<span class=\"name\">toNat_shiftLeft</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> (<span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">64</span>) <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">64</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L39-L39","name":"UInt64.toBitVec_xor","line":39,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt64.toBitVec_xor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt64.toBitVec_xor\"><span class=\"name\">UInt64</span>.<span class=\"name\">toBitVec_xor</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">b</span>).<a href=\"./Init/Prelude.html#UInt64.toBitVec\">toBitVec</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Prelude.html#UInt64.toBitVec\">toBitVec</a></span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Prelude.html#UInt64.toBitVec\">toBitVec</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L39-L39","name":"UInt64.toNat_shiftRight","line":39,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt64.toNat_shiftRight","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt64.toNat_shiftRight\"><span class=\"name\">UInt64</span>.<span class=\"name\">toNat_shiftRight</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftRight.hShiftRight\">&gt;&gt;&gt;</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#HShiftRight.hShiftRight\">&gt;&gt;&gt;</a> (<span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">64</span>)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L39-L39","name":"UInt64.and_toNat","line":39,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt64.and_toNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt64.and_toNat\"><span class=\"name\">UInt64</span>.<span class=\"name\">and_toNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toNat\">toNat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L39-L39","name":"UInt64.toBitVec_or","line":39,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt64.toBitVec_or","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt64.toBitVec_or\"><span class=\"name\">UInt64</span>.<span class=\"name\">toBitVec_or</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">b</span>).<a href=\"./Init/Prelude.html#UInt64.toBitVec\">toBitVec</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Prelude.html#UInt64.toBitVec\">toBitVec</a></span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Prelude.html#UInt64.toBitVec\">toBitVec</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L39-L39","name":"UInt64.toBitVec_shiftRight","line":39,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt64.toBitVec_shiftRight","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt64.toBitVec_shiftRight\"><span class=\"name\">UInt64</span>.<span class=\"name\">toBitVec_shiftRight</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftRight.hShiftRight\">&gt;&gt;&gt;</a> <span class=\"fn\">b</span>).<a href=\"./Init/Prelude.html#UInt64.toBitVec\">toBitVec</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Prelude.html#UInt64.toBitVec\">toBitVec</a></span> <a href=\"./Init/Prelude.html#HShiftRight.hShiftRight\">&gt;&gt;&gt;</a> (<span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Prelude.html#UInt64.toBitVec\">toBitVec</a></span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">64</span>)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L39-L39","name":"UInt64.toBitVec_not","line":39,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt64.toBitVec_not","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt64.toBitVec_not\"><span class=\"name\">UInt64</span>.<span class=\"name\">toBitVec_not</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><span class=\"fn\">a</span>).<a href=\"./Init/Prelude.html#UInt64.toBitVec\">toBitVec</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Prelude.html#UInt64.toBitVec\">toBitVec</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L39-L39","name":"UInt64.toNat_and","line":39,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt64.toNat_and","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt64.toNat_and\"><span class=\"name\">UInt64</span>.<span class=\"name\">toNat_and</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toNat\">toNat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L39-L39","name":"UInt64.toBitVec_shiftLeft","line":39,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt64.toBitVec_shiftLeft","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt64.toBitVec_shiftLeft\"><span class=\"name\">UInt64</span>.<span class=\"name\">toBitVec_shiftLeft</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">b</span>).<a href=\"./Init/Prelude.html#UInt64.toBitVec\">toBitVec</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Prelude.html#UInt64.toBitVec\">toBitVec</a></span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> (<span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Prelude.html#UInt64.toBitVec\">toBitVec</a></span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">64</span>)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L39-L39","name":"UInt64.toNat_or","line":39,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt64.toNat_or","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt64.toNat_or\"><span class=\"name\">UInt64</span>.<span class=\"name\">toNat_or</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toNat\">toNat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L39-L39","name":"UInt64.toNat_xor","line":39,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt64.toNat_xor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt64.toNat_xor\"><span class=\"name\">UInt64</span>.<span class=\"name\">toNat_xor</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt64.toNat\">toNat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L39-L39","name":"UInt64.toBitVec_and","line":39,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt64.toBitVec_and","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt64.toBitVec_and\"><span class=\"name\">UInt64</span>.<span class=\"name\">toBitVec_and</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\">b</span>).<a href=\"./Init/Prelude.html#UInt64.toBitVec\">toBitVec</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Prelude.html#UInt64.toBitVec\">toBitVec</a></span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Prelude.html#UInt64.toBitVec\">toBitVec</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L38-L38","name":"UInt32.toNat_and","line":38,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt32.toNat_and","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt32.toNat_and\"><span class=\"name\">UInt32</span>.<span class=\"name\">toNat_and</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\">b</span>).<a href=\"./Init/Prelude.html#UInt32.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Prelude.html#UInt32.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Prelude.html#UInt32.toNat\">toNat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L38-L38","name":"UInt32.and_toNat","line":38,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt32.and_toNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt32.and_toNat\"><span class=\"name\">UInt32</span>.<span class=\"name\">and_toNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\">b</span>).<a href=\"./Init/Prelude.html#UInt32.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Prelude.html#UInt32.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Prelude.html#UInt32.toNat\">toNat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L38-L38","name":"UInt32.toNat_shiftRight","line":38,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt32.toNat_shiftRight","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt32.toNat_shiftRight\"><span class=\"name\">UInt32</span>.<span class=\"name\">toNat_shiftRight</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftRight.hShiftRight\">&gt;&gt;&gt;</a> <span class=\"fn\">b</span>).<a href=\"./Init/Prelude.html#UInt32.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Prelude.html#UInt32.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#HShiftRight.hShiftRight\">&gt;&gt;&gt;</a> (<span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Prelude.html#UInt32.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">32</span>)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L38-L38","name":"UInt32.toBitVec_or","line":38,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt32.toBitVec_or","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt32.toBitVec_or\"><span class=\"name\">UInt32</span>.<span class=\"name\">toBitVec_or</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">b</span>).<a href=\"./Init/Prelude.html#UInt32.toBitVec\">toBitVec</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Prelude.html#UInt32.toBitVec\">toBitVec</a></span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Prelude.html#UInt32.toBitVec\">toBitVec</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L38-L38","name":"UInt32.toBitVec_shiftLeft","line":38,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt32.toBitVec_shiftLeft","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt32.toBitVec_shiftLeft\"><span class=\"name\">UInt32</span>.<span class=\"name\">toBitVec_shiftLeft</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">b</span>).<a href=\"./Init/Prelude.html#UInt32.toBitVec\">toBitVec</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Prelude.html#UInt32.toBitVec\">toBitVec</a></span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> (<span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Prelude.html#UInt32.toBitVec\">toBitVec</a></span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">32</span>)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L38-L38","name":"UInt32.toBitVec_and","line":38,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt32.toBitVec_and","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt32.toBitVec_and\"><span class=\"name\">UInt32</span>.<span class=\"name\">toBitVec_and</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\">b</span>).<a href=\"./Init/Prelude.html#UInt32.toBitVec\">toBitVec</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Prelude.html#UInt32.toBitVec\">toBitVec</a></span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Prelude.html#UInt32.toBitVec\">toBitVec</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L38-L38","name":"UInt32.toBitVec_shiftRight","line":38,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt32.toBitVec_shiftRight","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt32.toBitVec_shiftRight\"><span class=\"name\">UInt32</span>.<span class=\"name\">toBitVec_shiftRight</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftRight.hShiftRight\">&gt;&gt;&gt;</a> <span class=\"fn\">b</span>).<a href=\"./Init/Prelude.html#UInt32.toBitVec\">toBitVec</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Prelude.html#UInt32.toBitVec\">toBitVec</a></span> <a href=\"./Init/Prelude.html#HShiftRight.hShiftRight\">&gt;&gt;&gt;</a> (<span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Prelude.html#UInt32.toBitVec\">toBitVec</a></span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">32</span>)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L38-L38","name":"UInt32.toBitVec_xor","line":38,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt32.toBitVec_xor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt32.toBitVec_xor\"><span class=\"name\">UInt32</span>.<span class=\"name\">toBitVec_xor</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">b</span>).<a href=\"./Init/Prelude.html#UInt32.toBitVec\">toBitVec</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Prelude.html#UInt32.toBitVec\">toBitVec</a></span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Prelude.html#UInt32.toBitVec\">toBitVec</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L38-L38","name":"UInt32.toNat_xor","line":38,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt32.toNat_xor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt32.toNat_xor\"><span class=\"name\">UInt32</span>.<span class=\"name\">toNat_xor</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">b</span>).<a href=\"./Init/Prelude.html#UInt32.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Prelude.html#UInt32.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Prelude.html#UInt32.toNat\">toNat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L38-L38","name":"UInt32.toNat_shiftLeft","line":38,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt32.toNat_shiftLeft","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt32.toNat_shiftLeft\"><span class=\"name\">UInt32</span>.<span class=\"name\">toNat_shiftLeft</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">b</span>).<a href=\"./Init/Prelude.html#UInt32.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Prelude.html#UInt32.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> (<span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Prelude.html#UInt32.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">32</span>) <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">32</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L38-L38","name":"UInt32.toNat_or","line":38,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt32.toNat_or","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt32.toNat_or\"><span class=\"name\">UInt32</span>.<span class=\"name\">toNat_or</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">b</span>).<a href=\"./Init/Prelude.html#UInt32.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Prelude.html#UInt32.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Prelude.html#UInt32.toNat\">toNat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L38-L38","name":"UInt32.toBitVec_not","line":38,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt32.toBitVec_not","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt32.toBitVec_not\"><span class=\"name\">UInt32</span>.<span class=\"name\">toBitVec_not</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><span class=\"fn\">a</span>).<a href=\"./Init/Prelude.html#UInt32.toBitVec\">toBitVec</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Prelude.html#UInt32.toBitVec\">toBitVec</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L37-L37","name":"UInt16.toNat_shiftLeft","line":37,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt16.toNat_shiftLeft","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt16.toNat_shiftLeft\"><span class=\"name\">UInt16</span>.<span class=\"name\">toNat_shiftLeft</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> (<span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">16</span>) <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">16</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L37-L37","name":"UInt16.toNat_and","line":37,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt16.toNat_and","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt16.toNat_and\"><span class=\"name\">UInt16</span>.<span class=\"name\">toNat_and</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toNat\">toNat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L37-L37","name":"UInt16.toBitVec_xor","line":37,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt16.toBitVec_xor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt16.toBitVec_xor\"><span class=\"name\">UInt16</span>.<span class=\"name\">toBitVec_xor</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">b</span>).<a href=\"./Init/Prelude.html#UInt16.toBitVec\">toBitVec</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Prelude.html#UInt16.toBitVec\">toBitVec</a></span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Prelude.html#UInt16.toBitVec\">toBitVec</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L37-L37","name":"UInt16.and_toNat","line":37,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt16.and_toNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt16.and_toNat\"><span class=\"name\">UInt16</span>.<span class=\"name\">and_toNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toNat\">toNat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L37-L37","name":"UInt16.toBitVec_not","line":37,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt16.toBitVec_not","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt16.toBitVec_not\"><span class=\"name\">UInt16</span>.<span class=\"name\">toBitVec_not</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><span class=\"fn\">a</span>).<a href=\"./Init/Prelude.html#UInt16.toBitVec\">toBitVec</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Prelude.html#UInt16.toBitVec\">toBitVec</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L37-L37","name":"UInt16.toBitVec_shiftRight","line":37,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt16.toBitVec_shiftRight","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt16.toBitVec_shiftRight\"><span class=\"name\">UInt16</span>.<span class=\"name\">toBitVec_shiftRight</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftRight.hShiftRight\">&gt;&gt;&gt;</a> <span class=\"fn\">b</span>).<a href=\"./Init/Prelude.html#UInt16.toBitVec\">toBitVec</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Prelude.html#UInt16.toBitVec\">toBitVec</a></span> <a href=\"./Init/Prelude.html#HShiftRight.hShiftRight\">&gt;&gt;&gt;</a> (<span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Prelude.html#UInt16.toBitVec\">toBitVec</a></span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">16</span>)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L37-L37","name":"UInt16.toBitVec_and","line":37,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt16.toBitVec_and","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt16.toBitVec_and\"><span class=\"name\">UInt16</span>.<span class=\"name\">toBitVec_and</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\">b</span>).<a href=\"./Init/Prelude.html#UInt16.toBitVec\">toBitVec</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Prelude.html#UInt16.toBitVec\">toBitVec</a></span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Prelude.html#UInt16.toBitVec\">toBitVec</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L37-L37","name":"UInt16.toBitVec_shiftLeft","line":37,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt16.toBitVec_shiftLeft","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt16.toBitVec_shiftLeft\"><span class=\"name\">UInt16</span>.<span class=\"name\">toBitVec_shiftLeft</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">b</span>).<a href=\"./Init/Prelude.html#UInt16.toBitVec\">toBitVec</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Prelude.html#UInt16.toBitVec\">toBitVec</a></span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> (<span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Prelude.html#UInt16.toBitVec\">toBitVec</a></span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">16</span>)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L37-L37","name":"UInt16.toBitVec_or","line":37,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt16.toBitVec_or","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt16.toBitVec_or\"><span class=\"name\">UInt16</span>.<span class=\"name\">toBitVec_or</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">b</span>).<a href=\"./Init/Prelude.html#UInt16.toBitVec\">toBitVec</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Prelude.html#UInt16.toBitVec\">toBitVec</a></span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Prelude.html#UInt16.toBitVec\">toBitVec</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L37-L37","name":"UInt16.toNat_or","line":37,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt16.toNat_or","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt16.toNat_or\"><span class=\"name\">UInt16</span>.<span class=\"name\">toNat_or</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toNat\">toNat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L37-L37","name":"UInt16.toNat_shiftRight","line":37,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt16.toNat_shiftRight","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt16.toNat_shiftRight\"><span class=\"name\">UInt16</span>.<span class=\"name\">toNat_shiftRight</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftRight.hShiftRight\">&gt;&gt;&gt;</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#HShiftRight.hShiftRight\">&gt;&gt;&gt;</a> (<span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">16</span>)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L37-L37","name":"UInt16.toNat_xor","line":37,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt16.toNat_xor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt16.toNat_xor\"><span class=\"name\">UInt16</span>.<span class=\"name\">toNat_xor</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt16.toNat\">toNat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L36-L36","name":"UInt8.toBitVec_shiftLeft","line":36,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt8.toBitVec_shiftLeft","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt8.toBitVec_shiftLeft\"><span class=\"name\">UInt8</span>.<span class=\"name\">toBitVec_shiftLeft</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">b</span>).<a href=\"./Init/Prelude.html#UInt8.toBitVec\">toBitVec</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Prelude.html#UInt8.toBitVec\">toBitVec</a></span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> (<span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Prelude.html#UInt8.toBitVec\">toBitVec</a></span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">8</span>)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L36-L36","name":"UInt8.toBitVec_shiftRight","line":36,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt8.toBitVec_shiftRight","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt8.toBitVec_shiftRight\"><span class=\"name\">UInt8</span>.<span class=\"name\">toBitVec_shiftRight</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftRight.hShiftRight\">&gt;&gt;&gt;</a> <span class=\"fn\">b</span>).<a href=\"./Init/Prelude.html#UInt8.toBitVec\">toBitVec</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Prelude.html#UInt8.toBitVec\">toBitVec</a></span> <a href=\"./Init/Prelude.html#HShiftRight.hShiftRight\">&gt;&gt;&gt;</a> (<span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Prelude.html#UInt8.toBitVec\">toBitVec</a></span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">8</span>)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L36-L36","name":"UInt8.toBitVec_xor","line":36,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt8.toBitVec_xor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt8.toBitVec_xor\"><span class=\"name\">UInt8</span>.<span class=\"name\">toBitVec_xor</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">b</span>).<a href=\"./Init/Prelude.html#UInt8.toBitVec\">toBitVec</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Prelude.html#UInt8.toBitVec\">toBitVec</a></span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Prelude.html#UInt8.toBitVec\">toBitVec</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L36-L36","name":"UInt8.toNat_shiftLeft","line":36,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt8.toNat_shiftLeft","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt8.toNat_shiftLeft\"><span class=\"name\">UInt8</span>.<span class=\"name\">toNat_shiftLeft</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> (<span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">8</span>) <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">8</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L36-L36","name":"UInt8.toBitVec_not","line":36,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt8.toBitVec_not","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt8.toBitVec_not\"><span class=\"name\">UInt8</span>.<span class=\"name\">toBitVec_not</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><span class=\"fn\">a</span>).<a href=\"./Init/Prelude.html#UInt8.toBitVec\">toBitVec</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Prelude.html#UInt8.toBitVec\">toBitVec</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L36-L36","name":"UInt8.toNat_and","line":36,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt8.toNat_and","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt8.toNat_and\"><span class=\"name\">UInt8</span>.<span class=\"name\">toNat_and</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toNat\">toNat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L36-L36","name":"UInt8.toNat_or","line":36,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt8.toNat_or","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt8.toNat_or\"><span class=\"name\">UInt8</span>.<span class=\"name\">toNat_or</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toNat\">toNat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L36-L36","name":"UInt8.toBitVec_and","line":36,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt8.toBitVec_and","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt8.toBitVec_and\"><span class=\"name\">UInt8</span>.<span class=\"name\">toBitVec_and</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\">b</span>).<a href=\"./Init/Prelude.html#UInt8.toBitVec\">toBitVec</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Prelude.html#UInt8.toBitVec\">toBitVec</a></span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Prelude.html#UInt8.toBitVec\">toBitVec</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L36-L36","name":"UInt8.toNat_xor","line":36,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt8.toNat_xor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt8.toNat_xor\"><span class=\"name\">UInt8</span>.<span class=\"name\">toNat_xor</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toNat\">toNat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L36-L36","name":"UInt8.and_toNat","line":36,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt8.and_toNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt8.and_toNat\"><span class=\"name\">UInt8</span>.<span class=\"name\">and_toNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp;&amp;&amp;</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toNat\">toNat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L36-L36","name":"UInt8.toBitVec_or","line":36,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt8.toBitVec_or","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt8.toBitVec_or\"><span class=\"name\">UInt8</span>.<span class=\"name\">toBitVec_or</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">b</span>).<a href=\"./Init/Prelude.html#UInt8.toBitVec\">toBitVec</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Prelude.html#UInt8.toBitVec\">toBitVec</a></span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Prelude.html#UInt8.toBitVec\">toBitVec</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L36-L36","name":"UInt8.toNat_shiftRight","line":36,"kind":"theorem","docLink":"./Init/Data/UInt/Bitwise.html#UInt8.toNat_shiftRight","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#UInt8.toNat_shiftRight\"><span class=\"name\">UInt8</span>.<span class=\"name\">toNat_shiftRight</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftRight.hShiftRight\">&gt;&gt;&gt;</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#HShiftRight.hShiftRight\">&gt;&gt;&gt;</a> (<span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/UInt/BasicAux.html#UInt8.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">8</span>)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/UInt/Bitwise.lean#L13-L35","name":"commandDeclare_bitwise_uint_theorems__","line":13,"kind":"def","docLink":"./Init/Data/UInt/Bitwise.html#commandDeclare_bitwise_uint_theorems__","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Bitwise.html#commandDeclare_bitwise_uint_theorems__\"><span class=\"name\">commandDeclare_bitwise_uint_theorems__</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"}]}