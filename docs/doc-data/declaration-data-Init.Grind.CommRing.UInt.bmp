{"name":"Init.Grind.CommRing.UInt","instances":[{"typeNames":["UInt8"],"name":"UInt8.instNatCast","className":"NatCast"},{"typeNames":["UInt8"],"name":"UInt8.instIntCast","className":"IntCast"},{"typeNames":["UInt16"],"name":"UInt16.instNatCast","className":"NatCast"},{"typeNames":["UInt16"],"name":"UInt16.instIntCast","className":"IntCast"},{"typeNames":["UInt32"],"name":"UInt32.instNatCast","className":"NatCast"},{"typeNames":["UInt32"],"name":"UInt32.instIntCast","className":"IntCast"},{"typeNames":["UInt64"],"name":"UInt64.instNatCast","className":"NatCast"},{"typeNames":["UInt64"],"name":"UInt64.instIntCast","className":"IntCast"},{"typeNames":["USize"],"name":"USize.instNatCast","className":"NatCast"},{"typeNames":["USize"],"name":"USize.instIntCast","className":"IntCast"},{"typeNames":["UInt8"],"name":"Lean.Grind.instCommRingUInt8","className":"Lean.Grind.CommRing"},{"typeNames":["UInt8","OfNat.ofNat"],"name":"Lean.Grind.instIsCharPUInt8OfNatNat","className":"Lean.Grind.IsCharP"},{"typeNames":["UInt16"],"name":"Lean.Grind.instCommRingUInt16","className":"Lean.Grind.CommRing"},{"typeNames":["UInt16","OfNat.ofNat"],"name":"Lean.Grind.instIsCharPUInt16OfNatNat","className":"Lean.Grind.IsCharP"},{"typeNames":["UInt32"],"name":"Lean.Grind.instCommRingUInt32","className":"Lean.Grind.CommRing"},{"typeNames":["UInt32","OfNat.ofNat"],"name":"Lean.Grind.instIsCharPUInt32OfNatNat","className":"Lean.Grind.IsCharP"},{"typeNames":["UInt64"],"name":"Lean.Grind.instCommRingUInt64","className":"Lean.Grind.CommRing"},{"typeNames":["UInt64","OfNat.ofNat"],"name":"Lean.Grind.instIsCharPUInt64OfNatNat","className":"Lean.Grind.IsCharP"},{"typeNames":["USize"],"name":"Lean.Grind.instCommRingUSize","className":"Lean.Grind.CommRing"},{"typeNames":["USize","HPow.hPow"],"name":"Lean.Grind.instIsCharPUSizeHPowNatOfNatNumBits","className":"Lean.Grind.IsCharP"}],"imports":["Init.Grind.CommRing.Basic","Init.Data.UInt.Lemmas"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Grind/CommRing/UInt.lean#L233-L236","name":"Lean.Grind.instIsCharPUSizeHPowNatOfNatNumBits","line":233,"kind":"instance","docLink":"./Init/Grind/CommRing/UInt.html#Lean.Grind.instIsCharPUSizeHPowNatOfNatNumBits","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/CommRing/UInt.html#Lean.Grind.instIsCharPUSizeHPowNatOfNatNumBits\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">instIsCharPUSizeHPowNatOfNatNumBits</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Grind/CommRing/Basic.html#Lean.Grind.IsCharP\">IsCharP</a> <a href=\"./Init/Prelude.html#USize\">USize</a> (<span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <a href=\"./Init/Prelude.html#System.Platform.numBits\">System.Platform.numBits</a>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Grind/CommRing/UInt.lean#L214-L229","name":"Lean.Grind.instCommRingUSize","line":214,"kind":"instance","docLink":"./Init/Grind/CommRing/UInt.html#Lean.Grind.instCommRingUSize","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/CommRing/UInt.html#Lean.Grind.instCommRingUSize\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">instCommRingUSize</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Grind/CommRing/Basic.html#Lean.Grind.CommRing\">CommRing</a> <a href=\"./Init/Prelude.html#USize\">USize</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Grind/CommRing/UInt.lean#L209-L212","name":"Lean.Grind.instIsCharPUInt64OfNatNat","line":209,"kind":"instance","docLink":"./Init/Grind/CommRing/UInt.html#Lean.Grind.instIsCharPUInt64OfNatNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/CommRing/UInt.html#Lean.Grind.instIsCharPUInt64OfNatNat\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">instIsCharPUInt64OfNatNat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Grind/CommRing/Basic.html#Lean.Grind.IsCharP\">IsCharP</a> <a href=\"./Init/Prelude.html#UInt64\">UInt64</a> <span class=\"fn\">18446744073709551616</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Grind/CommRing/UInt.lean#L192-L207","name":"Lean.Grind.instCommRingUInt64","line":192,"kind":"instance","docLink":"./Init/Grind/CommRing/UInt.html#Lean.Grind.instCommRingUInt64","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/CommRing/UInt.html#Lean.Grind.instCommRingUInt64\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">instCommRingUInt64</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Grind/CommRing/Basic.html#Lean.Grind.CommRing\">CommRing</a> <a href=\"./Init/Prelude.html#UInt64\">UInt64</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Grind/CommRing/UInt.lean#L187-L190","name":"Lean.Grind.instIsCharPUInt32OfNatNat","line":187,"kind":"instance","docLink":"./Init/Grind/CommRing/UInt.html#Lean.Grind.instIsCharPUInt32OfNatNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/CommRing/UInt.html#Lean.Grind.instIsCharPUInt32OfNatNat\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">instIsCharPUInt32OfNatNat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Grind/CommRing/Basic.html#Lean.Grind.IsCharP\">IsCharP</a> <a href=\"./Init/Prelude.html#UInt32\">UInt32</a> <span class=\"fn\">4294967296</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Grind/CommRing/UInt.lean#L170-L185","name":"Lean.Grind.instCommRingUInt32","line":170,"kind":"instance","docLink":"./Init/Grind/CommRing/UInt.html#Lean.Grind.instCommRingUInt32","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/CommRing/UInt.html#Lean.Grind.instCommRingUInt32\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">instCommRingUInt32</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Grind/CommRing/Basic.html#Lean.Grind.CommRing\">CommRing</a> <a href=\"./Init/Prelude.html#UInt32\">UInt32</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Grind/CommRing/UInt.lean#L165-L168","name":"Lean.Grind.instIsCharPUInt16OfNatNat","line":165,"kind":"instance","docLink":"./Init/Grind/CommRing/UInt.html#Lean.Grind.instIsCharPUInt16OfNatNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/CommRing/UInt.html#Lean.Grind.instIsCharPUInt16OfNatNat\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">instIsCharPUInt16OfNatNat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Grind/CommRing/Basic.html#Lean.Grind.IsCharP\">IsCharP</a> <a href=\"./Init/Prelude.html#UInt16\">UInt16</a> <span class=\"fn\">65536</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Grind/CommRing/UInt.lean#L148-L163","name":"Lean.Grind.instCommRingUInt16","line":148,"kind":"instance","docLink":"./Init/Grind/CommRing/UInt.html#Lean.Grind.instCommRingUInt16","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/CommRing/UInt.html#Lean.Grind.instCommRingUInt16\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">instCommRingUInt16</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Grind/CommRing/Basic.html#Lean.Grind.CommRing\">CommRing</a> <a href=\"./Init/Prelude.html#UInt16\">UInt16</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Grind/CommRing/UInt.lean#L143-L146","name":"Lean.Grind.instIsCharPUInt8OfNatNat","line":143,"kind":"instance","docLink":"./Init/Grind/CommRing/UInt.html#Lean.Grind.instIsCharPUInt8OfNatNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/CommRing/UInt.html#Lean.Grind.instIsCharPUInt8OfNatNat\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">instIsCharPUInt8OfNatNat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Grind/CommRing/Basic.html#Lean.Grind.IsCharP\">IsCharP</a> <a href=\"./Init/Prelude.html#UInt8\">UInt8</a> <span class=\"fn\">256</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Grind/CommRing/UInt.lean#L126-L141","name":"Lean.Grind.instCommRingUInt8","line":126,"kind":"instance","docLink":"./Init/Grind/CommRing/UInt.html#Lean.Grind.instCommRingUInt8","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/CommRing/UInt.html#Lean.Grind.instCommRingUInt8\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">instCommRingUInt8</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Grind/CommRing/Basic.html#Lean.Grind.CommRing\">CommRing</a> <a href=\"./Init/Prelude.html#UInt8\">UInt8</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Grind/CommRing/UInt.lean#L112-L121","name":"USize.intCast_ofNat","line":112,"kind":"theorem","docLink":"./Init/Grind/CommRing/UInt.html#USize.intCast_ofNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/CommRing/UInt.html#USize.intCast_ofNat\"><span class=\"name\">USize</span>.<span class=\"name\">intCast_ofNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Init/Prelude.html#OfNat.ofNat\">OfNat.ofNat</a> <span class=\"fn\">x</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#OfNat.ofNat\">OfNat.ofNat</a> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Grind/CommRing/UInt.lean#L109-L110","name":"USize.instIntCast","line":109,"kind":"instance","docLink":"./Init/Grind/CommRing/UInt.html#USize.instIntCast","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/CommRing/UInt.html#USize.instIntCast\"><span class=\"name\">USize</span>.<span class=\"name\">instIntCast</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Int/Basic.html#IntCast\">IntCast</a> <a href=\"./Init/Prelude.html#USize\">USize</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Grind/CommRing/UInt.lean#L106-L107","name":"USize.instNatCast","line":106,"kind":"instance","docLink":"./Init/Grind/CommRing/UInt.html#USize.instNatCast","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/CommRing/UInt.html#USize.instNatCast\"><span class=\"name\">USize</span>.<span class=\"name\">instNatCast</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Cast.html#NatCast\">NatCast</a> <a href=\"./Init/Prelude.html#USize\">USize</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Grind/CommRing/UInt.lean#L92-L100","name":"UInt64.intCast_ofNat","line":92,"kind":"theorem","docLink":"./Init/Grind/CommRing/UInt.html#UInt64.intCast_ofNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/CommRing/UInt.html#UInt64.intCast_ofNat\"><span class=\"name\">UInt64</span>.<span class=\"name\">intCast_ofNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Init/Prelude.html#OfNat.ofNat\">OfNat.ofNat</a> <span class=\"fn\">x</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#OfNat.ofNat\">OfNat.ofNat</a> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Grind/CommRing/UInt.lean#L89-L90","name":"UInt64.instIntCast","line":89,"kind":"instance","docLink":"./Init/Grind/CommRing/UInt.html#UInt64.instIntCast","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/CommRing/UInt.html#UInt64.instIntCast\"><span class=\"name\">UInt64</span>.<span class=\"name\">instIntCast</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Int/Basic.html#IntCast\">IntCast</a> <a href=\"./Init/Prelude.html#UInt64\">UInt64</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Grind/CommRing/UInt.lean#L86-L87","name":"UInt64.instNatCast","line":86,"kind":"instance","docLink":"./Init/Grind/CommRing/UInt.html#UInt64.instNatCast","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/CommRing/UInt.html#UInt64.instNatCast\"><span class=\"name\">UInt64</span>.<span class=\"name\">instNatCast</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Cast.html#NatCast\">NatCast</a> <a href=\"./Init/Prelude.html#UInt64\">UInt64</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Grind/CommRing/UInt.lean#L83-L84","name":"UInt64.ofNat_mod_size'","line":83,"kind":"theorem","docLink":"./Init/Grind/CommRing/UInt.html#UInt64.ofNat_mod_size'","doc":"Variant of `UInt64.ofNat_mod_size` replacing `2 ^ 64` with `18446744073709551616`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/CommRing/UInt.html#UInt64.ofNat_mod_size'\"><span class=\"name\">UInt64</span>.<span class=\"name\">ofNat_mod_size'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#UInt64.ofNat\">ofNat</a> (<span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">18446744073709551616</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#UInt64.ofNat\">ofNat</a> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Grind/CommRing/UInt.lean#L69-L77","name":"UInt32.intCast_ofNat","line":69,"kind":"theorem","docLink":"./Init/Grind/CommRing/UInt.html#UInt32.intCast_ofNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/CommRing/UInt.html#UInt32.intCast_ofNat\"><span class=\"name\">UInt32</span>.<span class=\"name\">intCast_ofNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Init/Prelude.html#OfNat.ofNat\">OfNat.ofNat</a> <span class=\"fn\">x</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#OfNat.ofNat\">OfNat.ofNat</a> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Grind/CommRing/UInt.lean#L66-L67","name":"UInt32.instIntCast","line":66,"kind":"instance","docLink":"./Init/Grind/CommRing/UInt.html#UInt32.instIntCast","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/CommRing/UInt.html#UInt32.instIntCast\"><span class=\"name\">UInt32</span>.<span class=\"name\">instIntCast</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Int/Basic.html#IntCast\">IntCast</a> <a href=\"./Init/Prelude.html#UInt32\">UInt32</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Grind/CommRing/UInt.lean#L63-L64","name":"UInt32.instNatCast","line":63,"kind":"instance","docLink":"./Init/Grind/CommRing/UInt.html#UInt32.instNatCast","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/CommRing/UInt.html#UInt32.instNatCast\"><span class=\"name\">UInt32</span>.<span class=\"name\">instNatCast</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Cast.html#NatCast\">NatCast</a> <a href=\"./Init/Prelude.html#UInt32\">UInt32</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Grind/CommRing/UInt.lean#L60-L61","name":"UInt32.ofNat_mod_size'","line":60,"kind":"theorem","docLink":"./Init/Grind/CommRing/UInt.html#UInt32.ofNat_mod_size'","doc":"Variant of `UInt32.ofNat_mod_size` replacing `2 ^ 32` with `4294967296`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/CommRing/UInt.html#UInt32.ofNat_mod_size'\"><span class=\"name\">UInt32</span>.<span class=\"name\">ofNat_mod_size'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#UInt32.ofNat\">ofNat</a> (<span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">4294967296</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#UInt32.ofNat\">ofNat</a> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Grind/CommRing/UInt.lean#L46-L54","name":"UInt16.intCast_ofNat","line":46,"kind":"theorem","docLink":"./Init/Grind/CommRing/UInt.html#UInt16.intCast_ofNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/CommRing/UInt.html#UInt16.intCast_ofNat\"><span class=\"name\">UInt16</span>.<span class=\"name\">intCast_ofNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Init/Prelude.html#OfNat.ofNat\">OfNat.ofNat</a> <span class=\"fn\">x</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#OfNat.ofNat\">OfNat.ofNat</a> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Grind/CommRing/UInt.lean#L43-L44","name":"UInt16.instIntCast","line":43,"kind":"instance","docLink":"./Init/Grind/CommRing/UInt.html#UInt16.instIntCast","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/CommRing/UInt.html#UInt16.instIntCast\"><span class=\"name\">UInt16</span>.<span class=\"name\">instIntCast</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Int/Basic.html#IntCast\">IntCast</a> <a href=\"./Init/Prelude.html#UInt16\">UInt16</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Grind/CommRing/UInt.lean#L40-L41","name":"UInt16.instNatCast","line":40,"kind":"instance","docLink":"./Init/Grind/CommRing/UInt.html#UInt16.instNatCast","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/CommRing/UInt.html#UInt16.instNatCast\"><span class=\"name\">UInt16</span>.<span class=\"name\">instNatCast</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Cast.html#NatCast\">NatCast</a> <a href=\"./Init/Prelude.html#UInt16\">UInt16</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Grind/CommRing/UInt.lean#L37-L38","name":"UInt16.ofNat_mod_size'","line":37,"kind":"theorem","docLink":"./Init/Grind/CommRing/UInt.html#UInt16.ofNat_mod_size'","doc":"Variant of `UInt16.ofNat_mod_size` replacing `2 ^ 16` with `65536`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/CommRing/UInt.html#UInt16.ofNat_mod_size'\"><span class=\"name\">UInt16</span>.<span class=\"name\">ofNat_mod_size'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#UInt16.ofNat\">ofNat</a> (<span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">65536</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#UInt16.ofNat\">ofNat</a> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Grind/CommRing/UInt.lean#L23-L31","name":"UInt8.intCast_ofNat","line":23,"kind":"theorem","docLink":"./Init/Grind/CommRing/UInt.html#UInt8.intCast_ofNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/CommRing/UInt.html#UInt8.intCast_ofNat\"><span class=\"name\">UInt8</span>.<span class=\"name\">intCast_ofNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Init/Prelude.html#OfNat.ofNat\">OfNat.ofNat</a> <span class=\"fn\">x</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#OfNat.ofNat\">OfNat.ofNat</a> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Grind/CommRing/UInt.lean#L20-L21","name":"UInt8.instIntCast","line":20,"kind":"instance","docLink":"./Init/Grind/CommRing/UInt.html#UInt8.instIntCast","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/CommRing/UInt.html#UInt8.instIntCast\"><span class=\"name\">UInt8</span>.<span class=\"name\">instIntCast</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Int/Basic.html#IntCast\">IntCast</a> <a href=\"./Init/Prelude.html#UInt8\">UInt8</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Grind/CommRing/UInt.lean#L17-L18","name":"UInt8.instNatCast","line":17,"kind":"instance","docLink":"./Init/Grind/CommRing/UInt.html#UInt8.instNatCast","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/CommRing/UInt.html#UInt8.instNatCast\"><span class=\"name\">UInt8</span>.<span class=\"name\">instNatCast</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Cast.html#NatCast\">NatCast</a> <a href=\"./Init/Prelude.html#UInt8\">UInt8</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Grind/CommRing/UInt.lean#L14-L15","name":"UInt8.ofNat_mod_size'","line":14,"kind":"theorem","docLink":"./Init/Grind/CommRing/UInt.html#UInt8.ofNat_mod_size'","doc":"Variant of `UInt8.ofNat_mod_size` replacing `2 ^ 8` with `256`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/CommRing/UInt.html#UInt8.ofNat_mod_size'\"><span class=\"name\">UInt8</span>.<span class=\"name\">ofNat_mod_size'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#UInt8.ofNat\">ofNat</a> (<span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">256</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#UInt8.ofNat\">ofNat</a> <span class=\"fn\">x</span></span></div></div>"}]}