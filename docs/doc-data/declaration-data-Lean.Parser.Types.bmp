{"name":"Lean.Parser.Types","instances":[{"typeNames":["Lean.Parser.InputContext"],"name":"Lean.Parser.instInhabitedInputContext","className":"Inhabited"},{"typeNames":["Lean.Parser.CacheableParserContext"],"name":"Lean.Parser.instBEqCacheableParserContext","className":"BEq"},{"typeNames":["Lean.Parser.Error"],"name":"Lean.Parser.instInhabitedError","className":"Inhabited"},{"typeNames":["Lean.Parser.Error"],"name":"Lean.Parser.instBEqError","className":"BEq"},{"typeNames":["Lean.Parser.Error"],"name":"Lean.Parser.Error.instToString","className":"ToString"},{"typeNames":["Lean.Parser.ParserCacheKey"],"name":"Lean.Parser.instBEqParserCacheKey","className":"BEq"},{"typeNames":["Lean.Parser.ParserCacheKey"],"name":"Lean.Parser.instHashableParserCacheKey","className":"Hashable"},{"typeNames":["Lean.Parser.SyntaxStack","Array","Lean.Parser.SyntaxStack"],"name":"Lean.Parser.SyntaxStack.instHAppendArraySyntax","className":"HAppend"},{"typeNames":["Lean.Parser.ParserFn"],"name":"Lean.Parser.instInhabitedParserFn","className":"Inhabited"},{"typeNames":["Lean.Parser.FirstTokens"],"name":"Lean.Parser.instInhabitedFirstTokens","className":"Inhabited"},{"typeNames":["Lean.Parser.FirstTokens"],"name":"Lean.Parser.FirstTokens.instToString","className":"ToString"},{"typeNames":["Lean.Parser.ParserInfo"],"name":"Lean.Parser.instInhabitedParserInfo","className":"Inhabited"},{"typeNames":["Lean.Parser.Parser"],"name":"Lean.Parser.instInhabitedParser","className":"Inhabited"}],"imports":["Lean.Data.Trie","Lean.Syntax","Lean.Message","Lean.DocString.Extension"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Parser/Types.lean#L435-L440","name":"Lean.Parser.ParserFn.run","line":435,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserFn.run","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn.run\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserFn</span>.<span class=\"name\">run</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">ParserFn</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ictx</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.InputContext\">InputContext</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pmctx</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserModuleContext\">ParserModuleContext</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">tokens</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.TokenTable\">TokenTable</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">ParserState</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">ParserState</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Parser/Types.lean#L432-L433","name":"Lean.Parser.withCache","line":432,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.withCache","doc":"Run `p` and record result in parser cache for any further invocation with this `parserName`, parser context, and parser state.\n`p` cannot access syntax stack elements pushed before the invocation in order to make caching independent of parser history.\nAs this excludes trailing parsers from being cached, we also reset `lhsPrec`, which is not read but set by leading parsers, to 0\nin order to increase cache hits. Finally, `errorMsg` is also reset to `none` as a leading parser should not be called in the first\nplace if there was an error.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.withCache\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">withCache</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">parserName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Parser</a> → <a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Parser</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Parser/Types.lean#L413-L430","name":"Lean.Parser.withCacheFn","line":413,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.withCacheFn","doc":"Run `p` and record result in parser cache for any further invocation with this `parserName`, parser context, and parser state.\n`p` cannot access syntax stack elements pushed before the invocation in order to make caching independent of parser history.\nAs this excludes trailing parsers from being cached, we also reset `lhsPrec`, which is not read but set by leading parsers, to 0\nin order to increase cache hits. Finally, `errorMsg` is also reset to `none` as a leading parser should not be called in the first\nplace if there was an error.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.withCacheFn\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">withCacheFn</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">parserName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">ParserFn</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">ParserFn</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Parser/Types.lean#L409-L411","name":"Lean.Parser.adaptUncacheableContextFn","line":409,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.adaptUncacheableContextFn","doc":"Run `p` under the given context transformation with a fresh cache (see also `withResetCacheFn`). "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.adaptUncacheableContextFn\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">adaptUncacheableContextFn</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserContextCore\">ParserContextCore</a> → <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserContextCore\">ParserContextCore</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">ParserFn</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">ParserFn</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Parser/Types.lean#L406-L407","name":"Lean.Parser.withResetCache","line":406,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.withResetCache","doc":"Run `p` with a fresh cache, restore outer cache afterwards.\n`p` may access the entire syntax stack.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.withResetCache\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">withResetCache</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Parser</a> → <a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Parser</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Parser/Types.lean#L397-L404","name":"Lean.Parser.withResetCacheFn","line":397,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.withResetCacheFn","doc":"Run `p` with a fresh cache, restore outer cache afterwards.\n`p` may access the entire syntax stack.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.withResetCacheFn\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">withResetCacheFn</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">ParserFn</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">ParserFn</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Parser/Types.lean#L389-L390","name":"Lean.Parser.adaptCacheableContext","line":389,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.adaptCacheableContext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.adaptCacheableContext\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">adaptCacheableContext</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.CacheableParserContext\">CacheableParserContext</a> → <a href=\"./Lean/Parser/Types.html#Lean.Parser.CacheableParserContext\">CacheableParserContext</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Parser</a> → <a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Parser</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Parser/Types.lean#L386-L387","name":"Lean.Parser.adaptCacheableContextFn","line":386,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.adaptCacheableContextFn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.adaptCacheableContextFn\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">adaptCacheableContextFn</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.CacheableParserContext\">CacheableParserContext</a> → <a href=\"./Lean/Parser/Types.html#Lean.Parser.CacheableParserContext\">CacheableParserContext</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">ParserFn</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">ParserFn</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Parser/Types.lean#L382-L384","name":"Lean.Parser.withFn","line":382,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.withFn","doc":"Create a simple parser combinator that inherits the `info` of the nested parser. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.withFn\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">withFn</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">ParserFn</a> → <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">ParserFn</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Parser</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Parser/Types.lean#L380-L380","name":"Lean.Parser.TrailingParser","line":380,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.TrailingParser","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.TrailingParser\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">TrailingParser</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Parser/Types.lean#L378-L378","name":"Lean.Parser.instInhabitedParser","line":378,"kind":"instance","docLink":"./Lean/Parser/Types.html#Lean.Parser.instInhabitedParser","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.instInhabitedParser\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">instInhabitedParser</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Parser</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Parser/Types.lean#L377-L377","name":"Lean.Parser.Parser.fn","line":377,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.Parser.fn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.Parser.fn\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Parser</span>.<span class=\"name\">fn</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Parser</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">ParserFn</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Parser/Types.lean#L376-L376","name":"Lean.Parser.Parser.info","line":376,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.Parser.info","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.Parser.info\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Parser</span>.<span class=\"name\">info</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Parser</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserInfo\">ParserInfo</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Parser/Types.lean#L375-L375","name":"Lean.Parser.Parser.mk","line":375,"kind":"ctor","docLink":"./Lean/Parser/Types.html#Lean.Parser.Parser.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.Parser.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Parser</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">info</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserInfo\">ParserInfo</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fn</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">ParserFn</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Parser/Types.lean#L375-L378","name":"Lean.Parser.Parser","line":375,"kind":"structure","docLink":"./Lean/Parser/Types.html#Lean.Parser.Parser","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Parser</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Parser/Types.lean#L373-L373","name":"Lean.Parser.instInhabitedParserInfo","line":373,"kind":"instance","docLink":"./Lean/Parser/Types.html#Lean.Parser.instInhabitedParserInfo","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.instInhabitedParserInfo\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">instInhabitedParserInfo</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserInfo\">ParserInfo</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Parser/Types.lean#L372-L372","name":"Lean.Parser.ParserInfo.firstTokens","line":372,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserInfo.firstTokens","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserInfo.firstTokens\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserInfo</span>.<span class=\"name\">firstTokens</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserInfo\">ParserInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.FirstTokens\">FirstTokens</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Parser/Types.lean#L371-L371","name":"Lean.Parser.ParserInfo.collectKinds","line":371,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserInfo.collectKinds","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserInfo.collectKinds\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserInfo</span>.<span class=\"name\">collectKinds</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserInfo\">ParserInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.SyntaxNodeKindSet\">SyntaxNodeKindSet</a> → <a href=\"./Lean/Parser/Types.html#Lean.Parser.SyntaxNodeKindSet\">SyntaxNodeKindSet</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Parser/Types.lean#L370-L370","name":"Lean.Parser.ParserInfo.collectTokens","line":370,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserInfo.collectTokens","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserInfo.collectTokens\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserInfo</span>.<span class=\"name\">collectTokens</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserInfo\">ParserInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Lean/Parser/Types.html#Lean.Parser.Token\">Token</a></span> → <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Lean/Parser/Types.html#Lean.Parser.Token\">Token</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Parser/Types.lean#L369-L369","name":"Lean.Parser.ParserInfo.mk","line":369,"kind":"ctor","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserInfo.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserInfo.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserInfo</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">collectTokens</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Lean/Parser/Types.html#Lean.Parser.Token\">Token</a></span> → <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Lean/Parser/Types.html#Lean.Parser.Token\">Token</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">collectKinds</span> : <span class=\"fn\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.SyntaxNodeKindSet\">SyntaxNodeKindSet</a> → <a href=\"./Lean/Parser/Types.html#Lean.Parser.SyntaxNodeKindSet\">SyntaxNodeKindSet</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">firstTokens</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.FirstTokens\">FirstTokens</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserInfo\">ParserInfo</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Parser/Types.lean#L369-L373","name":"Lean.Parser.ParserInfo","line":369,"kind":"structure","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserInfo","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserInfo\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserInfo</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Parser/Types.lean#L364-L365","name":"Lean.Parser.FirstTokens.instToString","line":364,"kind":"instance","docLink":"./Lean/Parser/Types.html#Lean.Parser.FirstTokens.instToString","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.FirstTokens.instToString\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">FirstTokens</span>.<span class=\"name\">instToString</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/ToString/Basic.html#ToString\">ToString</a> <a href=\"./Lean/Parser/Types.html#Lean.Parser.FirstTokens\">FirstTokens</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Parser/Types.lean#L358-L362","name":"Lean.Parser.FirstTokens.toStr","line":358,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.FirstTokens.toStr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.FirstTokens.toStr\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">FirstTokens</span>.<span class=\"name\">toStr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.FirstTokens\">FirstTokens</a> → <a href=\"./Init/Prelude.html#String\">String</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Parser/Types.lean#L349-L356","name":"Lean.Parser.FirstTokens.merge","line":349,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.FirstTokens.merge","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.FirstTokens.merge\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">FirstTokens</span>.<span class=\"name\">merge</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.FirstTokens\">FirstTokens</a> → <a href=\"./Lean/Parser/Types.html#Lean.Parser.FirstTokens\">FirstTokens</a> → <a href=\"./Lean/Parser/Types.html#Lean.Parser.FirstTokens\">FirstTokens</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Parser/Types.lean#L345-L347","name":"Lean.Parser.FirstTokens.toOptional","line":345,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.FirstTokens.toOptional","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.FirstTokens.toOptional\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">FirstTokens</span>.<span class=\"name\">toOptional</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.FirstTokens\">FirstTokens</a> → <a href=\"./Lean/Parser/Types.html#Lean.Parser.FirstTokens\">FirstTokens</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Parser/Types.lean#L339-L343","name":"Lean.Parser.FirstTokens.seq","line":339,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.FirstTokens.seq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.FirstTokens.seq\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">FirstTokens</span>.<span class=\"name\">seq</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.FirstTokens\">FirstTokens</a> → <a href=\"./Lean/Parser/Types.html#Lean.Parser.FirstTokens\">FirstTokens</a> → <a href=\"./Lean/Parser/Types.html#Lean.Parser.FirstTokens\">FirstTokens</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Parser/Types.lean#L335-L335","name":"Lean.Parser.instInhabitedFirstTokens","line":335,"kind":"instance","docLink":"./Lean/Parser/Types.html#Lean.Parser.instInhabitedFirstTokens","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.instInhabitedFirstTokens\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">instInhabitedFirstTokens</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Parser/Types.html#Lean.Parser.FirstTokens\">FirstTokens</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Parser/Types.lean#L334-L334","name":"Lean.Parser.FirstTokens.optTokens","line":334,"kind":"ctor","docLink":"./Lean/Parser/Types.html#Lean.Parser.FirstTokens.optTokens","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.FirstTokens.optTokens\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">FirstTokens</span>.<span class=\"name\">optTokens</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Lean/Parser/Types.html#Lean.Parser.Token\">Token</a></span> → <a href=\"./Lean/Parser/Types.html#Lean.Parser.FirstTokens\">FirstTokens</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Parser/Types.lean#L333-L333","name":"Lean.Parser.FirstTokens.tokens","line":333,"kind":"ctor","docLink":"./Lean/Parser/Types.html#Lean.Parser.FirstTokens.tokens","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.FirstTokens.tokens\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">FirstTokens</span>.<span class=\"name\">tokens</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Lean/Parser/Types.html#Lean.Parser.Token\">Token</a></span> → <a href=\"./Lean/Parser/Types.html#Lean.Parser.FirstTokens\">FirstTokens</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Parser/Types.lean#L332-L332","name":"Lean.Parser.FirstTokens.unknown","line":332,"kind":"ctor","docLink":"./Lean/Parser/Types.html#Lean.Parser.FirstTokens.unknown","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.FirstTokens.unknown\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">FirstTokens</span>.<span class=\"name\">unknown</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.FirstTokens\">FirstTokens</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Parser/Types.lean#L331-L331","name":"Lean.Parser.FirstTokens.epsilon","line":331,"kind":"ctor","docLink":"./Lean/Parser/Types.html#Lean.Parser.FirstTokens.epsilon","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.FirstTokens.epsilon\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">FirstTokens</span>.<span class=\"name\">epsilon</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.FirstTokens\">FirstTokens</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Parser/Types.lean#L330-L335","name":"Lean.Parser.FirstTokens","line":330,"kind":"inductive","docLink":"./Lean/Parser/Types.html#Lean.Parser.FirstTokens","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.FirstTokens\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">FirstTokens</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Parser/Types.lean#L327-L328","name":"Lean.Parser.instInhabitedParserFn","line":327,"kind":"instance","docLink":"./Lean/Parser/Types.html#Lean.Parser.instInhabitedParserFn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.instInhabitedParserFn\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">instInhabitedParserFn</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">ParserFn</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Parser/Types.lean#L325-L325","name":"Lean.Parser.ParserFn","line":325,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserFn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserFn</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Parser/Types.lean#L315-L321","name":"Lean.Parser.ParserState.toErrorMsg","line":315,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserState.toErrorMsg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState.toErrorMsg\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserState</span>.<span class=\"name\">toErrorMsg</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.InputContext\">InputContext</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">ParserState</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#String\">String</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Parser/Types.lean#L312-L313","name":"Lean.Parser.ParserState.mkUnexpectedErrorAt","line":312,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserState.mkUnexpectedErrorAt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState.mkUnexpectedErrorAt\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserState</span>.<span class=\"name\">mkUnexpectedErrorAt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">ParserState</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">msg</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pos</span> : <a href=\"./Init/Prelude.html#String.Pos\">String.Pos</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">ParserState</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Parser/Types.lean#L305-L310","name":"Lean.Parser.ParserState.mkUnexpectedTokenError","line":305,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserState.mkUnexpectedTokenError","doc":"Reports given 'expected' message at range of top stack element (assumed to be a single token).\nReplaces the element with `missing` and resets position to the token position.\n`iniPos` can be specified to avoid this position lookup but still must be identical to the token position. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState.mkUnexpectedTokenError\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserState</span>.<span class=\"name\">mkUnexpectedTokenError</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">ParserState</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">msg</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">iniPos</span> : <a href=\"./Init/Prelude.html#String.Pos\">String.Pos</a> := <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">ParserState</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Parser/Types.lean#L293-L303","name":"Lean.Parser.ParserState.mkUnexpectedTokenErrors","line":293,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserState.mkUnexpectedTokenErrors","doc":"Reports given 'expected' messages at range of top stack element (assumed to be a single token).\nReplaces the element with `missing` and resets position to the token position.\n`iniPos` can be specified to avoid this position lookup but still must be identical to the token position. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState.mkUnexpectedTokenErrors\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserState</span>.<span class=\"name\">mkUnexpectedTokenErrors</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">ParserState</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ex</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Prelude.html#String\">String</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">iniPos</span> : <a href=\"./Init/Prelude.html#String.Pos\">String.Pos</a> := <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">ParserState</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Parser/Types.lean#L290-L291","name":"Lean.Parser.ParserState.mkErrorAt","line":290,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserState.mkErrorAt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState.mkErrorAt\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserState</span>.<span class=\"name\">mkErrorAt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">ParserState</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">msg</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pos</span> : <a href=\"./Init/Prelude.html#String.Pos\">String.Pos</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">initStackSz?</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span> := <a href=\"./Init/Prelude.html#Option.none\">none</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">ParserState</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Parser/Types.lean#L283-L288","name":"Lean.Parser.ParserState.mkErrorsAt","line":283,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserState.mkErrorsAt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState.mkErrorsAt\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserState</span>.<span class=\"name\">mkErrorsAt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">ParserState</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ex</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Prelude.html#String\">String</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pos</span> : <a href=\"./Init/Prelude.html#String.Pos\">String.Pos</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">initStackSz?</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span> := <a href=\"./Init/Prelude.html#Option.none\">none</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">ParserState</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Parser/Types.lean#L280-L281","name":"Lean.Parser.ParserState.mkEOIError","line":280,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserState.mkEOIError","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState.mkEOIError\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserState</span>.<span class=\"name\">mkEOIError</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">ParserState</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">expected</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Prelude.html#String\">String</a></span> := <a href=\"./Init/Prelude.html#List.nil\">[</a><a href=\"./Init/Prelude.html#List.nil\">]</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">ParserState</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Parser/Types.lean#L276-L278","name":"Lean.Parser.ParserState.mkUnexpectedError","line":276,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserState.mkUnexpectedError","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState.mkUnexpectedError\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserState</span>.<span class=\"name\">mkUnexpectedError</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">ParserState</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">msg</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">expected</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Prelude.html#String\">String</a></span> := <a href=\"./Init/Prelude.html#List.nil\">[</a><a href=\"./Init/Prelude.html#List.nil\">]</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pushMissing</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/Prelude.html#Bool.true\">true</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">ParserState</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Parser/Types.lean#L273-L274","name":"Lean.Parser.ParserState.mkError","line":273,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserState.mkError","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState.mkError\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserState</span>.<span class=\"name\">mkError</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">ParserState</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">msg</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">ParserState</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Parser/Types.lean#L268-L271","name":"Lean.Parser.ParserState.setError","line":268,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserState.setError","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState.setError\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserState</span>.<span class=\"name\">setError</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">ParserState</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.Error\">Error</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">ParserState</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Parser/Types.lean#L265-L266","name":"Lean.Parser.ParserState.allErrors","line":265,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserState.allErrors","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState.allErrors\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserState</span>.<span class=\"name\">allErrors</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">ParserState</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> (<a href=\"./Init/Prelude.html#String.Pos\">String.Pos</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/Parser/Types.html#Lean.Parser.SyntaxStack\">SyntaxStack</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/Parser/Types.html#Lean.Parser.Error\">Error</a>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Parser/Types.lean#L257-L263","name":"Lean.Parser.ParserState.mkTrailingNode","line":257,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserState.mkTrailingNode","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState.mkTrailingNode\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserState</span>.<span class=\"name\">mkTrailingNode</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">ParserState</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Lean.SyntaxNodeKind\">SyntaxNodeKind</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">iniStackSz</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">ParserState</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Parser/Types.lean#L238-L255","name":"Lean.Parser.ParserState.mkNode","line":238,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserState.mkNode","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState.mkNode\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserState</span>.<span class=\"name\">mkNode</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">ParserState</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Lean.SyntaxNodeKind\">SyntaxNodeKind</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">iniStackSz</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">ParserState</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Parser/Types.lean#L235-L236","name":"Lean.Parser.ParserState.next'","line":235,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserState.next'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState.next'\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserState</span>.<span class=\"name\">next'</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">ParserState</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">input</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pos</span> : <a href=\"./Init/Prelude.html#String.Pos\">String.Pos</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">input</span>.<a href=\"./Init/Data/String/Basic.html#String.atEnd\">atEnd</a></span> <span class=\"fn\">pos</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Bool.true\">true</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">ParserState</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Parser/Types.lean#L232-L233","name":"Lean.Parser.ParserState.next","line":232,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserState.next","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState.next\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserState</span>.<span class=\"name\">next</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">ParserState</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">input</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pos</span> : <a href=\"./Init/Prelude.html#String.Pos\">String.Pos</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">ParserState</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Parser/Types.lean#L229-L230","name":"Lean.Parser.ParserState.shrinkStack","line":229,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserState.shrinkStack","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState.shrinkStack\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserState</span>.<span class=\"name\">shrinkStack</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">ParserState</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">iniStackSz</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">ParserState</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Parser/Types.lean#L226-L227","name":"Lean.Parser.ParserState.popSyntax","line":226,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserState.popSyntax","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState.popSyntax\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserState</span>.<span class=\"name\">popSyntax</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">ParserState</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">ParserState</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Parser/Types.lean#L223-L224","name":"Lean.Parser.ParserState.pushSyntax","line":223,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserState.pushSyntax","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState.pushSyntax\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserState</span>.<span class=\"name\">pushSyntax</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">ParserState</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">ParserState</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Parser/Types.lean#L220-L221","name":"Lean.Parser.ParserState.setCache","line":220,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserState.setCache","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState.setCache\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserState</span>.<span class=\"name\">setCache</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">ParserState</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">cache</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserCache\">ParserCache</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">ParserState</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Parser/Types.lean#L217-L218","name":"Lean.Parser.ParserState.setPos","line":217,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserState.setPos","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState.setPos\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserState</span>.<span class=\"name\">setPos</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">ParserState</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pos</span> : <a href=\"./Init/Prelude.html#String.Pos\">String.Pos</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">ParserState</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Parser/Types.lean#L214-L215","name":"Lean.Parser.ParserState.restore","line":214,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserState.restore","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState.restore\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserState</span>.<span class=\"name\">restore</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">ParserState</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">iniStackSz</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">iniPos</span> : <a href=\"./Init/Prelude.html#String.Pos\">String.Pos</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">ParserState</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Parser/Types.lean#L211-L212","name":"Lean.Parser.ParserState.stackSize","line":211,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserState.stackSize","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState.stackSize\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserState</span>.<span class=\"name\">stackSize</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">ParserState</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Parser/Types.lean#L207-L209","name":"Lean.Parser.ParserState.hasError","line":207,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserState.hasError","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState.hasError\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserState</span>.<span class=\"name\">hasError</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">ParserState</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Parser/Types.lean#L203-L203","name":"Lean.Parser.ParserState.recoveredErrors","line":203,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserState.recoveredErrors","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState.recoveredErrors\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserState</span>.<span class=\"name\">recoveredErrors</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">ParserState</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> (<a href=\"./Init/Prelude.html#String.Pos\">String.Pos</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/Parser/Types.html#Lean.Parser.SyntaxStack\">SyntaxStack</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/Parser/Types.html#Lean.Parser.Error\">Error</a>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Parser/Types.lean#L202-L202","name":"Lean.Parser.ParserState.errorMsg","line":202,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserState.errorMsg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState.errorMsg\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserState</span>.<span class=\"name\">errorMsg</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">ParserState</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Parser/Types.html#Lean.Parser.Error\">Error</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Parser/Types.lean#L201-L201","name":"Lean.Parser.ParserState.cache","line":201,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserState.cache","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState.cache\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserState</span>.<span class=\"name\">cache</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">ParserState</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserCache\">ParserCache</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Parser/Types.lean#L200-L200","name":"Lean.Parser.ParserState.pos","line":200,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserState.pos","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState.pos\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserState</span>.<span class=\"name\">pos</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">ParserState</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#String.Pos\">String.Pos</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Parser/Types.lean#L199-L199","name":"Lean.Parser.ParserState.lhsPrec","line":199,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserState.lhsPrec","doc":"Set to the precedence of the preceding (not surrounding) parser by `runLongestMatchParser`\nfor the use of `checkLhsPrec` in trailing parsers.\nNote that with chaining, the preceding parser can be another trailing parser:\nin `1 * 2 + 3`, the preceding parser is '*' when '+' is executed. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState.lhsPrec\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserState</span>.<span class=\"name\">lhsPrec</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">ParserState</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Parser/Types.lean#L193-L193","name":"Lean.Parser.ParserState.stxStack","line":193,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserState.stxStack","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState.stxStack\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserState</span>.<span class=\"name\">stxStack</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">ParserState</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.SyntaxStack\">SyntaxStack</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Parser/Types.lean#L192-L192","name":"Lean.Parser.ParserState.mk","line":192,"kind":"ctor","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserState.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserState</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">stxStack</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.SyntaxStack\">SyntaxStack</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">lhsPrec</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pos</span> : <a href=\"./Init/Prelude.html#String.Pos\">String.Pos</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">cache</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserCache\">ParserCache</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">errorMsg</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Parser/Types.html#Lean.Parser.Error\">Error</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">recoveredErrors</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> (<a href=\"./Init/Prelude.html#String.Pos\">String.Pos</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/Parser/Types.html#Lean.Parser.SyntaxStack\">SyntaxStack</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/Parser/Types.html#Lean.Parser.Error\">Error</a>)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">ParserState</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Parser/Types.lean#L192-L203","name":"Lean.Parser.ParserState","line":192,"kind":"structure","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserState","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserState</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Parser/Types.lean#L187-L188","name":"Lean.Parser.SyntaxStack.instHAppendArraySyntax","line":187,"kind":"instance","docLink":"./Lean/Parser/Types.html#Lean.Parser.SyntaxStack.instHAppendArraySyntax","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.SyntaxStack.instHAppendArraySyntax\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">SyntaxStack</span>.<span class=\"name\">instHAppendArraySyntax</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#HAppend\">HAppend</a> <a href=\"./Lean/Parser/Types.html#Lean.Parser.SyntaxStack\">SyntaxStack</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a>)</span> <a href=\"./Lean/Parser/Types.html#Lean.Parser.SyntaxStack\">SyntaxStack</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Parser/Types.lean#L184-L185","name":"Lean.Parser.SyntaxStack.extract","line":184,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.SyntaxStack.extract","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.SyntaxStack.extract\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">SyntaxStack</span>.<span class=\"name\">extract</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">stack</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.SyntaxStack\">SyntaxStack</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">start </span><span class=\"fn\">stop</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Parser/Types.lean#L178-L182","name":"Lean.Parser.SyntaxStack.get!","line":178,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.SyntaxStack.get!","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.SyntaxStack.get!\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">SyntaxStack</span>.<span class=\"name\">get!</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">stack</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.SyntaxStack\">SyntaxStack</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Parser/Types.lean#L172-L176","name":"Lean.Parser.SyntaxStack.back","line":172,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.SyntaxStack.back","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.SyntaxStack.back\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">SyntaxStack</span>.<span class=\"name\">back</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">stack</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.SyntaxStack\">SyntaxStack</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Parser/Types.lean#L167-L170","name":"Lean.Parser.SyntaxStack.pop","line":167,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.SyntaxStack.pop","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.SyntaxStack.pop\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">SyntaxStack</span>.<span class=\"name\">pop</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">stack</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.SyntaxStack\">SyntaxStack</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.SyntaxStack\">SyntaxStack</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Parser/Types.lean#L164-L165","name":"Lean.Parser.SyntaxStack.push","line":164,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.SyntaxStack.push","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.SyntaxStack.push\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">SyntaxStack</span>.<span class=\"name\">push</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">stack</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.SyntaxStack\">SyntaxStack</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.SyntaxStack\">SyntaxStack</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Parser/Types.lean#L161-L162","name":"Lean.Parser.SyntaxStack.shrink","line":161,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.SyntaxStack.shrink","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.SyntaxStack.shrink\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">SyntaxStack</span>.<span class=\"name\">shrink</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">stack</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.SyntaxStack\">SyntaxStack</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.SyntaxStack\">SyntaxStack</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Parser/Types.lean#L158-L159","name":"Lean.Parser.SyntaxStack.isEmpty","line":158,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.SyntaxStack.isEmpty","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.SyntaxStack.isEmpty\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">SyntaxStack</span>.<span class=\"name\">isEmpty</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">stack</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.SyntaxStack\">SyntaxStack</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Parser/Types.lean#L155-L156","name":"Lean.Parser.SyntaxStack.size","line":155,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.SyntaxStack.size","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.SyntaxStack.size\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">SyntaxStack</span>.<span class=\"name\">size</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">stack</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.SyntaxStack\">SyntaxStack</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Parser/Types.lean#L151-L153","name":"Lean.Parser.SyntaxStack.empty","line":151,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.SyntaxStack.empty","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.SyntaxStack.empty\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">SyntaxStack</span>.<span class=\"name\">empty</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.SyntaxStack\">SyntaxStack</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Parser/Types.lean#L148-L149","name":"Lean.Parser.SyntaxStack.toSubarray","line":148,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.SyntaxStack.toSubarray","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.SyntaxStack.toSubarray\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">SyntaxStack</span>.<span class=\"name\">toSubarray</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">stack</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.SyntaxStack\">SyntaxStack</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Array/Subarray.html#Subarray\">Subarray</a> <a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Parser/Types.lean#L142-L142","name":"Lean.Parser.SyntaxStack.mk","line":142,"kind":"ctor","docLink":"./Lean/Parser/Types.html#Lean.Parser.SyntaxStack.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.SyntaxStack.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">SyntaxStack</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">raw</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">drop</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.SyntaxStack\">SyntaxStack</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Parser/Types.lean#L141-L144","name":"Lean.Parser.SyntaxStack","line":141,"kind":"structure","docLink":"./Lean/Parser/Types.html#Lean.Parser.SyntaxStack","doc":"A syntax array with an inaccessible prefix, used for sound caching. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.SyntaxStack\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">SyntaxStack</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Parser/Types.lean#L137-L139","name":"Lean.Parser.initCacheForInput","line":137,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.initCacheForInput","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.initCacheForInput\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">initCacheForInput</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">input</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserCache\">ParserCache</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Parser/Types.lean#L135-L135","name":"Lean.Parser.ParserCache.parserCache","line":135,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserCache.parserCache","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserCache.parserCache\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserCache</span>.<span class=\"name\">parserCache</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserCache\">ParserCache</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Data/HashMap/Basic.html#Std.HashMap\">Std.HashMap</a> <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserCacheKey\">ParserCacheKey</a> <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserCacheEntry\">ParserCacheEntry</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Parser/Types.lean#L134-L134","name":"Lean.Parser.ParserCache.tokenCache","line":134,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserCache.tokenCache","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserCache.tokenCache\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserCache</span>.<span class=\"name\">tokenCache</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserCache\">ParserCache</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.TokenCacheEntry\">TokenCacheEntry</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Parser/Types.lean#L133-L133","name":"Lean.Parser.ParserCache.mk","line":133,"kind":"ctor","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserCache.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserCache.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserCache</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">tokenCache</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.TokenCacheEntry\">TokenCacheEntry</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">parserCache</span> : <span class=\"fn\"><a href=\"./Std/Data/HashMap/Basic.html#Std.HashMap\">Std.HashMap</a> <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserCacheKey\">ParserCacheKey</a> <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserCacheEntry\">ParserCacheEntry</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserCache\">ParserCache</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Parser/Types.lean#L133-L135","name":"Lean.Parser.ParserCache","line":133,"kind":"structure","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserCache","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserCache\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserCache</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Parser/Types.lean#L131-L131","name":"Lean.Parser.ParserCacheEntry.errorMsg","line":131,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserCacheEntry.errorMsg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserCacheEntry.errorMsg\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserCacheEntry</span>.<span class=\"name\">errorMsg</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserCacheEntry\">ParserCacheEntry</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Parser/Types.html#Lean.Parser.Error\">Error</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Parser/Types.lean#L130-L130","name":"Lean.Parser.ParserCacheEntry.newPos","line":130,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserCacheEntry.newPos","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserCacheEntry.newPos\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserCacheEntry</span>.<span class=\"name\">newPos</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserCacheEntry\">ParserCacheEntry</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#String.Pos\">String.Pos</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Parser/Types.lean#L129-L129","name":"Lean.Parser.ParserCacheEntry.lhsPrec","line":129,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserCacheEntry.lhsPrec","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserCacheEntry.lhsPrec\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserCacheEntry</span>.<span class=\"name\">lhsPrec</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserCacheEntry\">ParserCacheEntry</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Parser/Types.lean#L128-L128","name":"Lean.Parser.ParserCacheEntry.stx","line":128,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserCacheEntry.stx","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserCacheEntry.stx\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserCacheEntry</span>.<span class=\"name\">stx</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserCacheEntry\">ParserCacheEntry</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Parser/Types.lean#L127-L127","name":"Lean.Parser.ParserCacheEntry.mk","line":127,"kind":"ctor","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserCacheEntry.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserCacheEntry.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserCacheEntry</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">stx</span> : <a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">lhsPrec</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">newPos</span> : <a href=\"./Init/Prelude.html#String.Pos\">String.Pos</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">errorMsg</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Parser/Types.html#Lean.Parser.Error\">Error</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserCacheEntry\">ParserCacheEntry</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Parser/Types.lean#L127-L131","name":"Lean.Parser.ParserCacheEntry","line":127,"kind":"structure","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserCacheEntry","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserCacheEntry\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserCacheEntry</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Parser/Types.lean#L123-L125","name":"Lean.Parser.instHashableParserCacheKey","line":123,"kind":"instance","docLink":"./Lean/Parser/Types.html#Lean.Parser.instHashableParserCacheKey","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.instHashableParserCacheKey\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">instHashableParserCacheKey</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserCacheKey\">ParserCacheKey</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Parser/Types.lean#L121-L121","name":"Lean.Parser.instBEqParserCacheKey","line":121,"kind":"instance","docLink":"./Lean/Parser/Types.html#Lean.Parser.instBEqParserCacheKey","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.instBEqParserCacheKey\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">instBEqParserCacheKey</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserCacheKey\">ParserCacheKey</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Parser/Types.lean#L120-L120","name":"Lean.Parser.ParserCacheKey.pos","line":120,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserCacheKey.pos","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserCacheKey.pos\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserCacheKey</span>.<span class=\"name\">pos</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserCacheKey\">ParserCacheKey</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#String.Pos\">String.Pos</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Parser/Types.lean#L119-L119","name":"Lean.Parser.ParserCacheKey.parserName","line":119,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserCacheKey.parserName","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserCacheKey.parserName\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserCacheKey</span>.<span class=\"name\">parserName</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserCacheKey\">ParserCacheKey</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Name\">Name</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Parser/Types.lean#L118-L118","name":"Lean.Parser.ParserCacheKey.mk","line":118,"kind":"ctor","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserCacheKey.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserCacheKey.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserCacheKey</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">toCacheableParserContext</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.CacheableParserContext\">CacheableParserContext</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">parserName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pos</span> : <a href=\"./Init/Prelude.html#String.Pos\">String.Pos</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserCacheKey\">ParserCacheKey</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Parser/Types.lean#L118-L121","name":"Lean.Parser.ParserCacheKey.toCacheableParserContext","line":118,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserCacheKey.toCacheableParserContext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserCacheKey.toCacheableParserContext\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserCacheKey</span>.<span class=\"name\">toCacheableParserContext</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserCacheKey\">ParserCacheKey</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.CacheableParserContext\">CacheableParserContext</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Parser/Types.lean#L118-L121","name":"Lean.Parser.ParserCacheKey","line":118,"kind":"structure","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserCacheKey","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserCacheKey\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserCacheKey</span></a></span><span class=\"decl_extends\">extends</span> <a href=\"./Lean/Parser/Types.html#Lean.Parser.CacheableParserContext\">Lean.Parser.CacheableParserContext</a><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Parser/Types.lean#L116-L116","name":"Lean.Parser.TokenCacheEntry.token","line":116,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.TokenCacheEntry.token","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.TokenCacheEntry.token\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">TokenCacheEntry</span>.<span class=\"name\">token</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.TokenCacheEntry\">TokenCacheEntry</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Parser/Types.lean#L115-L115","name":"Lean.Parser.TokenCacheEntry.stopPos","line":115,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.TokenCacheEntry.stopPos","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.TokenCacheEntry.stopPos\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">TokenCacheEntry</span>.<span class=\"name\">stopPos</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.TokenCacheEntry\">TokenCacheEntry</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#String.Pos\">String.Pos</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Parser/Types.lean#L114-L114","name":"Lean.Parser.TokenCacheEntry.startPos","line":114,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.TokenCacheEntry.startPos","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.TokenCacheEntry.startPos\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">TokenCacheEntry</span>.<span class=\"name\">startPos</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.TokenCacheEntry\">TokenCacheEntry</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#String.Pos\">String.Pos</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Parser/Types.lean#L113-L113","name":"Lean.Parser.TokenCacheEntry.mk","line":113,"kind":"ctor","docLink":"./Lean/Parser/Types.html#Lean.Parser.TokenCacheEntry.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.TokenCacheEntry.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">TokenCacheEntry</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">startPos </span><span class=\"fn\">stopPos</span> : <a href=\"./Init/Prelude.html#String.Pos\">String.Pos</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">token</span> : <a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.TokenCacheEntry\">TokenCacheEntry</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Parser/Types.lean#L113-L116","name":"Lean.Parser.TokenCacheEntry","line":113,"kind":"structure","docLink":"./Lean/Parser/Types.html#Lean.Parser.TokenCacheEntry","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.TokenCacheEntry\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">TokenCacheEntry</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Parser/Types.lean#L105-L109","name":"Lean.Parser.Error.merge","line":105,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.Error.merge","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.Error.merge\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Error</span>.<span class=\"name\">merge</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e₁ </span><span class=\"fn\">e₂</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.Error\">Error</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Error\">Error</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Parser/Types.lean#L102-L103","name":"Lean.Parser.Error.instToString","line":102,"kind":"instance","docLink":"./Lean/Parser/Types.html#Lean.Parser.Error.instToString","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.Error.instToString\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Error</span>.<span class=\"name\">instToString</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/ToString/Basic.html#ToString\">ToString</a> <a href=\"./Lean/Parser/Types.html#Lean.Parser.Error\">Error</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Parser/Types.lean#L94-L100","name":"Lean.Parser.Error.toString","line":94,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.Error.toString","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.Error.toString\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Error</span>.<span class=\"name\">toString</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.Error\">Error</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#String\">String</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Parser/Types.lean#L84-L84","name":"Lean.Parser.instBEqError","line":84,"kind":"instance","docLink":"./Lean/Parser/Types.html#Lean.Parser.instBEqError","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.instBEqError\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">instBEqError</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <a href=\"./Lean/Parser/Types.html#Lean.Parser.Error\">Error</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Parser/Types.lean#L84-L84","name":"Lean.Parser.instInhabitedError","line":84,"kind":"instance","docLink":"./Lean/Parser/Types.html#Lean.Parser.instInhabitedError","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.instInhabitedError\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">instInhabitedError</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Parser/Types.html#Lean.Parser.Error\">Error</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Parser/Types.lean#L83-L83","name":"Lean.Parser.Error.expected","line":83,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.Error.expected","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.Error.expected\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Error</span>.<span class=\"name\">expected</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.Error\">Error</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Prelude.html#String\">String</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Parser/Types.lean#L82-L82","name":"Lean.Parser.Error.unexpected","line":82,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.Error.unexpected","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.Error.unexpected\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Error</span>.<span class=\"name\">unexpected</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.Error\">Error</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#String\">String</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Parser/Types.lean#L81-L81","name":"Lean.Parser.Error.unexpectedTk","line":81,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.Error.unexpectedTk","doc":"If not `missing`, used for lazily calculating `unexpected` message and range in `mkErrorMessage`.\nOtherwise, `ParserState.pos` is used as an empty range. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.Error.unexpectedTk\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Error</span>.<span class=\"name\">unexpectedTk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.Error\">Error</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Parser/Types.lean#L77-L77","name":"Lean.Parser.Error.mk","line":77,"kind":"ctor","docLink":"./Lean/Parser/Types.html#Lean.Parser.Error.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.Error.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Error</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">unexpectedTk</span> : <a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">unexpected</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">expected</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Prelude.html#String\">String</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Error\">Error</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Parser/Types.lean#L77-L84","name":"Lean.Parser.Error","line":77,"kind":"structure","docLink":"./Lean/Parser/Types.html#Lean.Parser.Error","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.Error\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Error</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Parser/Types.lean#L75-L75","name":"Lean.Parser.ParserContext.toParserContextCore","line":75,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserContext.toParserContextCore","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserContext.toParserContextCore\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserContext</span>.<span class=\"name\">toParserContextCore</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserContext\">ParserContext</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserContextCore\">ParserContextCore</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Parser/Types.lean#L74-L75","name":"Lean.Parser.ParserContext","line":74,"kind":"structure","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserContext","doc":"Opaque parser context updateable using `adaptCacheableContextFn` and `adaptUncacheableContextFn`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserContext\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserContext</span></a></span><span class=\"decl_extends\">extends</span> <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserContextCore\">Lean.Parser.ParserContextCore</a><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Parser/Types.lean#L72-L72","name":"Lean.Parser.ParserContextCore.tokens","line":72,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserContextCore.tokens","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserContextCore.tokens\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserContextCore</span>.<span class=\"name\">tokens</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserContextCore\">ParserContextCore</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.TokenTable\">TokenTable</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Parser/Types.lean#L71-L71","name":"Lean.Parser.ParserContextCore.mk","line":71,"kind":"ctor","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserContextCore.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserContextCore.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserContextCore</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">toInputContext</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.InputContext\">InputContext</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">toParserModuleContext</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserModuleContext\">ParserModuleContext</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">toCacheableParserContext</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.CacheableParserContext\">CacheableParserContext</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">tokens</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.TokenTable\">TokenTable</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserContextCore\">ParserContextCore</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Parser/Types.lean#L71-L72","name":"Lean.Parser.ParserContextCore.toParserModuleContext","line":71,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserContextCore.toParserModuleContext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserContextCore.toParserModuleContext\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserContextCore</span>.<span class=\"name\">toParserModuleContext</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserContextCore\">ParserContextCore</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserModuleContext\">ParserModuleContext</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Parser/Types.lean#L71-L72","name":"Lean.Parser.ParserContextCore.toInputContext","line":71,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserContextCore.toInputContext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserContextCore.toInputContext\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserContextCore</span>.<span class=\"name\">toInputContext</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserContextCore\">ParserContextCore</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.InputContext\">InputContext</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Parser/Types.lean#L71-L72","name":"Lean.Parser.ParserContextCore.toCacheableParserContext","line":71,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserContextCore.toCacheableParserContext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserContextCore.toCacheableParserContext\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserContextCore</span>.<span class=\"name\">toCacheableParserContext</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserContextCore\">ParserContextCore</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.CacheableParserContext\">CacheableParserContext</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Parser/Types.lean#L70-L72","name":"Lean.Parser.ParserContextCore","line":70,"kind":"structure","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserContextCore","doc":"Parser context updateable in `adaptUncacheableContextFn`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserContextCore\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserContextCore</span></a></span><span class=\"decl_extends\">extends</span> <a href=\"./Lean/Parser/Types.html#Lean.Parser.InputContext\">Lean.Parser.InputContext</a>, <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserModuleContext\">Lean.Parser.ParserModuleContext</a>, <a href=\"./Lean/Parser/Types.html#Lean.Parser.CacheableParserContext\">Lean.Parser.CacheableParserContext</a><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Parser/Types.lean#L68-L68","name":"Lean.Parser.instBEqCacheableParserContext","line":68,"kind":"instance","docLink":"./Lean/Parser/Types.html#Lean.Parser.instBEqCacheableParserContext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.instBEqCacheableParserContext\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">instBEqCacheableParserContext</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <a href=\"./Lean/Parser/Types.html#Lean.Parser.CacheableParserContext\">CacheableParserContext</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Parser/Types.lean#L67-L67","name":"Lean.Parser.CacheableParserContext.forbiddenTk?","line":67,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.CacheableParserContext.forbiddenTk?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.CacheableParserContext.forbiddenTk?\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">CacheableParserContext</span>.<span class=\"name\">forbiddenTk?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.CacheableParserContext\">CacheableParserContext</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Parser/Types.html#Lean.Parser.Token\">Token</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Parser/Types.lean#L66-L66","name":"Lean.Parser.CacheableParserContext.savedPos?","line":66,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.CacheableParserContext.savedPos?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.CacheableParserContext.savedPos?\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">CacheableParserContext</span>.<span class=\"name\">savedPos?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.CacheableParserContext\">CacheableParserContext</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#String.Pos\">String.Pos</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Parser/Types.lean#L65-L65","name":"Lean.Parser.CacheableParserContext.suppressInsideQuot","line":65,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.CacheableParserContext.suppressInsideQuot","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.CacheableParserContext.suppressInsideQuot\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">CacheableParserContext</span>.<span class=\"name\">suppressInsideQuot</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.CacheableParserContext\">CacheableParserContext</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Parser/Types.lean#L64-L64","name":"Lean.Parser.CacheableParserContext.quotDepth","line":64,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.CacheableParserContext.quotDepth","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.CacheableParserContext.quotDepth\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">CacheableParserContext</span>.<span class=\"name\">quotDepth</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.CacheableParserContext\">CacheableParserContext</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Parser/Types.lean#L62-L62","name":"Lean.Parser.CacheableParserContext.prec","line":62,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.CacheableParserContext.prec","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.CacheableParserContext.prec\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">CacheableParserContext</span>.<span class=\"name\">prec</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.CacheableParserContext\">CacheableParserContext</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Parser/Types.lean#L61-L61","name":"Lean.Parser.CacheableParserContext.mk","line":61,"kind":"ctor","docLink":"./Lean/Parser/Types.html#Lean.Parser.CacheableParserContext.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.CacheableParserContext.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">CacheableParserContext</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">prec </span><span class=\"fn\">quotDepth</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">suppressInsideQuot</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">savedPos?</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#String.Pos\">String.Pos</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">forbiddenTk?</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Parser/Types.html#Lean.Parser.Token\">Token</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.CacheableParserContext\">CacheableParserContext</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Parser/Types.lean#L60-L68","name":"Lean.Parser.CacheableParserContext","line":60,"kind":"structure","docLink":"./Lean/Parser/Types.html#Lean.Parser.CacheableParserContext","doc":"Parser context parts that can be updated without invalidating the parser cache. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.CacheableParserContext\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">CacheableParserContext</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Parser/Types.lean#L58-L58","name":"Lean.Parser.ParserModuleContext.openDecls","line":58,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserModuleContext.openDecls","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserModuleContext.openDecls\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserModuleContext</span>.<span class=\"name\">openDecls</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserModuleContext\">ParserModuleContext</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Lean/Data/OpenDecl.html#Lean.OpenDecl\">OpenDecl</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Parser/Types.lean#L57-L57","name":"Lean.Parser.ParserModuleContext.currNamespace","line":57,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserModuleContext.currNamespace","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserModuleContext.currNamespace\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserModuleContext</span>.<span class=\"name\">currNamespace</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserModuleContext\">ParserModuleContext</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Name\">Name</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Parser/Types.lean#L55-L55","name":"Lean.Parser.ParserModuleContext.options","line":55,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserModuleContext.options","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserModuleContext.options\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserModuleContext</span>.<span class=\"name\">options</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserModuleContext\">ParserModuleContext</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Data/Options.html#Lean.Options\">Options</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Parser/Types.lean#L54-L54","name":"Lean.Parser.ParserModuleContext.env","line":54,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserModuleContext.env","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserModuleContext.env\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserModuleContext</span>.<span class=\"name\">env</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserModuleContext\">ParserModuleContext</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Environment.html#Lean.Environment\">Environment</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Parser/Types.lean#L53-L53","name":"Lean.Parser.ParserModuleContext.mk","line":53,"kind":"ctor","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserModuleContext.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserModuleContext.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserModuleContext</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">env</span> : <a href=\"./Lean/Environment.html#Lean.Environment\">Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">options</span> : <a href=\"./Lean/Data/Options.html#Lean.Options\">Options</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">currNamespace</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">openDecls</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Lean/Data/OpenDecl.html#Lean.OpenDecl\">OpenDecl</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserModuleContext\">ParserModuleContext</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Parser/Types.lean#L52-L58","name":"Lean.Parser.ParserModuleContext","line":52,"kind":"structure","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserModuleContext","doc":"Input context derived from elaboration of previous commands. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserModuleContext\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserModuleContext</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Parser/Types.lean#L50-L50","name":"Lean.Parser.instInhabitedInputContext","line":50,"kind":"instance","docLink":"./Lean/Parser/Types.html#Lean.Parser.instInhabitedInputContext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.instInhabitedInputContext\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">instInhabitedInputContext</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Parser/Types.html#Lean.Parser.InputContext\">InputContext</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Parser/Types.lean#L49-L49","name":"Lean.Parser.InputContext.fileMap","line":49,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.InputContext.fileMap","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.InputContext.fileMap\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">InputContext</span>.<span class=\"name\">fileMap</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.InputContext\">InputContext</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Data/Position.html#Lean.FileMap\">FileMap</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Parser/Types.lean#L48-L48","name":"Lean.Parser.InputContext.fileName","line":48,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.InputContext.fileName","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.InputContext.fileName\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">InputContext</span>.<span class=\"name\">fileName</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.InputContext\">InputContext</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#String\">String</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Parser/Types.lean#L47-L47","name":"Lean.Parser.InputContext.input","line":47,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.InputContext.input","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.InputContext.input\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">InputContext</span>.<span class=\"name\">input</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.InputContext\">InputContext</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#String\">String</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Parser/Types.lean#L46-L46","name":"Lean.Parser.InputContext.mk","line":46,"kind":"ctor","docLink":"./Lean/Parser/Types.html#Lean.Parser.InputContext.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.InputContext.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">InputContext</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">input </span><span class=\"fn\">fileName</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fileMap</span> : <a href=\"./Lean/Data/Position.html#Lean.FileMap\">FileMap</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.InputContext\">InputContext</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Parser/Types.lean#L43-L50","name":"Lean.Parser.InputContext","line":43,"kind":"structure","docLink":"./Lean/Parser/Types.html#Lean.Parser.InputContext","doc":"Input string and related data. Recall that the `FileMap` is a helper structure for mapping\n`String.Pos` in the input string to line/column information.  "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.InputContext\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">InputContext</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Parser/Types.lean#L40-L41","name":"Lean.Parser.SyntaxNodeKindSet.insert","line":40,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.SyntaxNodeKindSet.insert","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.SyntaxNodeKindSet.insert\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">SyntaxNodeKindSet</span>.<span class=\"name\">insert</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.SyntaxNodeKindSet\">SyntaxNodeKindSet</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Lean.SyntaxNodeKind\">SyntaxNodeKind</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.SyntaxNodeKindSet\">SyntaxNodeKindSet</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Parser/Types.lean#L38-L38","name":"Lean.Parser.SyntaxNodeKindSet","line":38,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.SyntaxNodeKindSet","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.SyntaxNodeKindSet\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">SyntaxNodeKindSet</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Parser/Types.lean#L36-L36","name":"Lean.Parser.TokenTable","line":36,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.TokenTable","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.TokenTable\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">TokenTable</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Parser/Types.lean#L34-L34","name":"Lean.Parser.Token","line":34,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.Token","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.Token\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Token</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Parser/Types.lean#L32-L32","name":"Lean.Parser.minPrec","line":32,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.minPrec","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.minPrec\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">minPrec</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Parser/Types.lean#L31-L31","name":"Lean.Parser.leadPrec","line":31,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.leadPrec","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.leadPrec\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">leadPrec</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Parser/Types.lean#L30-L30","name":"Lean.Parser.argPrec","line":30,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.argPrec","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.argPrec\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">argPrec</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Parser/Types.lean#L24-L29","name":"Lean.Parser.maxPrec","line":24,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.maxPrec","doc":"Maximal (and function application) precedence.\nIn the standard lean language, no parser has precedence higher than `maxPrec`.\n\nNote that nothing prevents users from using a higher precedence, but we strongly\ndiscourage them from doing it. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.maxPrec\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">maxPrec</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Parser/Types.lean#L20-L22","name":"Lean.Parser.getNext","line":20,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.getNext","doc":"Return character after position `pos` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.getNext\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">getNext</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">input</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pos</span> : <a href=\"./Init/Prelude.html#String.Pos\">String.Pos</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Char\">Char</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Parser/Types.lean#L17-L18","name":"Lean.Parser.mkIdent","line":17,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.mkIdent","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.mkIdent\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">mkIdent</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">info</span> : <a href=\"./Init/Prelude.html#Lean.SourceInfo\">SourceInfo</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">rawVal</span> : <a href=\"./Init/Prelude.html#Substring\">Substring</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">val</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Parser/Types.lean#L14-L15","name":"Lean.Parser.mkAtom","line":14,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.mkAtom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.mkAtom\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">mkAtom</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">info</span> : <a href=\"./Init/Prelude.html#Lean.SourceInfo\">SourceInfo</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">val</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a></div></div>"}]}