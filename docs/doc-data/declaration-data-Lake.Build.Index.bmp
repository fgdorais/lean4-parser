{"name":"Lake.Build.Index","instances":[],"imports":["Lake.Config.Monad","Lake.Build.Topological"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/lake/Lake/Build/Index.lean#L50-L55","name":"Lake.FetchT.run","line":50,"kind":"def","docLink":"./Lake/Build/Index.html#Lake.FetchT.run","doc":"Run a recursive Lake build using the Lake build index\nand a topological / suspending scheduler.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Index.html#Lake.FetchT.run\"><span class=\"name\">Lake</span>.<span class=\"name\">FetchT</span>.<span class=\"name\">run</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Lake/Build/Fetch.html#Lake.FetchT\">FetchT</a> <span class=\"fn\">m</span> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Fetch.html#Lake.RecBuildT\">RecBuildT</a> <span class=\"fn\">m</span> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/lake/Lake/Build/Index.lean#L46-L48","name":"Lake.recFetchWithIndex","line":46,"kind":"def","docLink":"./Lake/Build/Index.html#Lake.recFetchWithIndex","doc":"Recursive build function with memoization. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Index.html#Lake.recFetchWithIndex\"><span class=\"name\">Lake</span>.<span class=\"name\">recFetchWithIndex</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">info</span> : <a href=\"./Lake/Build/Info.html#Lake.BuildInfo\">BuildInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Fetch.html#Lake.RecBuildM\">RecBuildM</a> <span class=\"fn\">(<a href=\"./Lake/Build/Job/Basic.html#Lake.Job\">Job</a> <span class=\"fn\">(<a href=\"./Lake/Build/Data.html#Lake.BuildData\">BuildData</a> <span class=\"fn\"><span class=\"fn\">info</span>.<a href=\"./Lake/Build/Info.html#Lake.BuildInfo.key\">key</a></span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/lake/Lake/Build/Index.lean#L24-L44","name":"Lake.recBuildWithIndex","line":24,"kind":"def","docLink":"./Lake/Build/Index.html#Lake.recBuildWithIndex","doc":"Recursive build function for anything in the Lake build index. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Index.html#Lake.recBuildWithIndex\"><span class=\"name\">Lake</span>.<span class=\"name\">recBuildWithIndex</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">info</span> : <a href=\"./Lake/Build/Info.html#Lake.BuildInfo\">BuildInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Fetch.html#Lake.FetchM\">FetchM</a> <span class=\"fn\">(<a href=\"./Lake/Build/Job/Basic.html#Lake.Job\">Job</a> <span class=\"fn\">(<a href=\"./Lake/Build/Data.html#Lake.BuildData\">BuildData</a> <span class=\"fn\"><span class=\"fn\">info</span>.<a href=\"./Lake/Build/Info.html#Lake.BuildInfo.key\">key</a></span>)</span>)</span></span></div></div>"}]}