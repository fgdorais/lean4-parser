{"name":"Lean.Compiler.IR.ElimDeadBranches","instances":[{"typeNames":["Lean.IR.UnreachableBranches.Value"],"name":"Lean.IR.UnreachableBranches.instInhabitedValue","className":"Inhabited"},{"typeNames":["Lean.IR.UnreachableBranches.Value"],"name":"Lean.IR.UnreachableBranches.instReprValue","className":"Repr"},{"typeNames":["Lean.IR.UnreachableBranches.Value"],"name":"Lean.IR.UnreachableBranches.instToFormatValue","className":"Std.ToFormat"},{"typeNames":["Lean.IR.UnreachableBranches.Value"],"name":"Lean.IR.UnreachableBranches.instToStringValue","className":"ToString"},{"typeNames":["Lean.IR.UnreachableBranches.Value"],"name":"Lean.IR.UnreachableBranches.Value.instBEq","className":"BEq"},{"typeNames":["Lean.IR.UnreachableBranches.Value"],"name":"Lean.IR.UnreachableBranches.Value.instToFormat","className":"Std.ToFormat"},{"typeNames":["Lean.IR.UnreachableBranches.Value"],"name":"Lean.IR.UnreachableBranches.Value.instToString","className":"ToString"}],"imports":["Lean.Compiler.IR.Format","Lean.Compiler.IR.Basic","Lean.Compiler.IR.CompilerM"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/ElimDeadBranches.lean#L343-L358","name":"Lean.IR.elimDeadBranches","line":343,"kind":"def","docLink":"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.elimDeadBranches","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.elimDeadBranches\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">elimDeadBranches</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">decls</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Decl\">Decl</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/CompilerM.html#Lean.IR.CompilerM\">CompilerM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Decl\">Decl</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/ElimDeadBranches.lean#L334-L337","name":"Lean.IR.UnreachableBranches.elimDead","line":334,"kind":"def","docLink":"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.elimDead","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.elimDead\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">UnreachableBranches</span>.<span class=\"name\">elimDead</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">assignment</span> : <a href=\"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.Assignment\">Assignment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">d</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Decl\">Decl</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Decl\">Decl</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/ElimDeadBranches.lean#L317-L332","name":"Lean.IR.UnreachableBranches.elimDeadAux","line":317,"kind":"opaque","docLink":"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.elimDeadAux","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.elimDeadAux\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">UnreachableBranches</span>.<span class=\"name\">elimDeadAux</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">assignment</span> : <a href=\"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.Assignment\">Assignment</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.FnBody\">FnBody</a> → <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.FnBody\">FnBody</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/ElimDeadBranches.lean#L313-L315","name":"Lean.IR.UnreachableBranches.inferMain","line":313,"kind":"opaque","docLink":"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.inferMain","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.inferMain\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">UnreachableBranches</span>.<span class=\"name\">inferMain</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.M\">M</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/ElimDeadBranches.lean#L292-L311","name":"Lean.IR.UnreachableBranches.inferStep","line":292,"kind":"def","docLink":"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.inferStep","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.inferStep\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">UnreachableBranches</span>.<span class=\"name\">inferStep</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.M\">M</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/ElimDeadBranches.lean#L262-L290","name":"Lean.IR.UnreachableBranches.interpFnBody","line":262,"kind":"opaque","docLink":"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.interpFnBody","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.interpFnBody\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">UnreachableBranches</span>.<span class=\"name\">interpFnBody</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.FnBody\">FnBody</a> → <span class=\"fn\"><a href=\"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.M\">M</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/ElimDeadBranches.lean#L233-L248","name":"Lean.IR.UnreachableBranches.updateJPParamsAssignment","line":233,"kind":"def","docLink":"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.updateJPParamsAssignment","doc":"Return true if the assignment of at least one parameter has been updated. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.updateJPParamsAssignment\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">UnreachableBranches</span>.<span class=\"name\">updateJPParamsAssignment</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">j</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.JoinPointId\">JoinPointId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ys</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Param\">Param</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">xs</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Arg\">Arg</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.M\">M</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/ElimDeadBranches.lean#L227-L231","name":"Lean.IR.UnreachableBranches.markJPVisited","line":227,"kind":"def","docLink":"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.markJPVisited","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.markJPVisited\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">UnreachableBranches</span>.<span class=\"name\">markJPVisited</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">j</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.JoinPointId\">JoinPointId</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.M\">M</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/ElimDeadBranches.lean#L222-L225","name":"Lean.IR.UnreachableBranches.updateCurrFnSummary","line":222,"kind":"def","docLink":"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.updateCurrFnSummary","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.updateCurrFnSummary\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">UnreachableBranches</span>.<span class=\"name\">updateCurrFnSummary</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">v</span> : <a href=\"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.Value\">Value</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.M\">M</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/ElimDeadBranches.lean#L216-L220","name":"Lean.IR.UnreachableBranches.containsCtor","line":216,"kind":"opaque","docLink":"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.containsCtor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.containsCtor\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">UnreachableBranches</span>.<span class=\"name\">containsCtor</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.Value\">Value</a> → <span class=\"fn\"><a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.CtorInfo\">CtorInfo</a> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/ElimDeadBranches.lean#L202-L214","name":"Lean.IR.UnreachableBranches.interpExpr","line":202,"kind":"def","docLink":"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.interpExpr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.interpExpr\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">UnreachableBranches</span>.<span class=\"name\">interpExpr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Expr\">Expr</a> → <span class=\"fn\"><a href=\"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.M\">M</a> <a href=\"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.Value\">Value</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/ElimDeadBranches.lean#L197-L200","name":"Lean.IR.UnreachableBranches.projValue","line":197,"kind":"opaque","docLink":"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.projValue","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.projValue\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">UnreachableBranches</span>.<span class=\"name\">projValue</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.Value\">Value</a> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">Nat</a> → <a href=\"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.Value\">Value</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/ElimDeadBranches.lean#L194-L195","name":"Lean.IR.UnreachableBranches.resetParamAssignment","line":194,"kind":"def","docLink":"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.resetParamAssignment","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.resetParamAssignment\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">UnreachableBranches</span>.<span class=\"name\">resetParamAssignment</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">y</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Param\">Param</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.M\">M</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/ElimDeadBranches.lean#L190-L192","name":"Lean.IR.UnreachableBranches.resetVarAssignment","line":190,"kind":"def","docLink":"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.resetVarAssignment","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.resetVarAssignment\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">UnreachableBranches</span>.<span class=\"name\">resetVarAssignment</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.VarId\">VarId</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.M\">M</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/ElimDeadBranches.lean#L185-L188","name":"Lean.IR.UnreachableBranches.updateVarAssignment","line":185,"kind":"def","docLink":"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.updateVarAssignment","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.updateVarAssignment\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">UnreachableBranches</span>.<span class=\"name\">updateVarAssignment</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.VarId\">VarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">v</span> : <a href=\"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.Value\">Value</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.M\">M</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/ElimDeadBranches.lean#L180-L183","name":"Lean.IR.UnreachableBranches.findArgValue","line":180,"kind":"def","docLink":"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.findArgValue","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.findArgValue\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">UnreachableBranches</span>.<span class=\"name\">findArgValue</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">arg</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Arg\">Arg</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.M\">M</a> <a href=\"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.Value\">Value</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/ElimDeadBranches.lean#L174-L178","name":"Lean.IR.UnreachableBranches.findVarValue","line":174,"kind":"def","docLink":"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.findVarValue","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.findVarValue\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">UnreachableBranches</span>.<span class=\"name\">findVarValue</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.VarId\">VarId</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.M\">M</a> <a href=\"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.Value\">Value</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/ElimDeadBranches.lean#L170-L170","name":"Lean.IR.UnreachableBranches.M","line":170,"kind":"def","docLink":"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.M","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.M\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">UnreachableBranches</span>.<span class=\"name\">M</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/ElimDeadBranches.lean#L168-L168","name":"Lean.IR.UnreachableBranches.InterpState.visitedJps","line":168,"kind":"def","docLink":"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.InterpState.visitedJps","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.InterpState.visitedJps\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">UnreachableBranches</span>.<span class=\"name\">InterpState</span>.<span class=\"name\">visitedJps</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.InterpState\">InterpState</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Std/Data/HashSet/Basic.html#Std.HashSet\">Std.HashSet</a> <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.JoinPointId\">JoinPointId</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/ElimDeadBranches.lean#L167-L167","name":"Lean.IR.UnreachableBranches.InterpState.funVals","line":167,"kind":"def","docLink":"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.InterpState.funVals","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.InterpState.funVals\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">UnreachableBranches</span>.<span class=\"name\">InterpState</span>.<span class=\"name\">funVals</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.InterpState\">InterpState</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/PersistentArray.html#Lean.PArray\">PArray</a> <a href=\"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.Value\">Value</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/ElimDeadBranches.lean#L166-L166","name":"Lean.IR.UnreachableBranches.InterpState.assignments","line":166,"kind":"def","docLink":"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.InterpState.assignments","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.InterpState.assignments\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">UnreachableBranches</span>.<span class=\"name\">InterpState</span>.<span class=\"name\">assignments</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.InterpState\">InterpState</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.Assignment\">Assignment</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/ElimDeadBranches.lean#L165-L165","name":"Lean.IR.UnreachableBranches.InterpState.mk","line":165,"kind":"ctor","docLink":"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.InterpState.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.InterpState.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">UnreachableBranches</span>.<span class=\"name\">InterpState</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">assignments</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.Assignment\">Assignment</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">funVals</span> : <span class=\"fn\"><a href=\"./Lean/Data/PersistentArray.html#Lean.PArray\">PArray</a> <a href=\"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.Value\">Value</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">visitedJps</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Std/Data/HashSet/Basic.html#Std.HashSet\">Std.HashSet</a> <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.JoinPointId\">JoinPointId</a>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.InterpState\">InterpState</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/ElimDeadBranches.lean#L165-L168","name":"Lean.IR.UnreachableBranches.InterpState","line":165,"kind":"structure","docLink":"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.InterpState","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.InterpState\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">UnreachableBranches</span>.<span class=\"name\">InterpState</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/ElimDeadBranches.lean#L163-L163","name":"Lean.IR.UnreachableBranches.InterpContext.lctx","line":163,"kind":"def","docLink":"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.InterpContext.lctx","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.InterpContext.lctx\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">UnreachableBranches</span>.<span class=\"name\">InterpContext</span>.<span class=\"name\">lctx</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.InterpContext\">InterpContext</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.LocalContext\">LocalContext</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/ElimDeadBranches.lean#L162-L162","name":"Lean.IR.UnreachableBranches.InterpContext.env","line":162,"kind":"def","docLink":"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.InterpContext.env","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.InterpContext.env\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">UnreachableBranches</span>.<span class=\"name\">InterpContext</span>.<span class=\"name\">env</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.InterpContext\">InterpContext</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Environment.html#Lean.Environment\">Environment</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/ElimDeadBranches.lean#L161-L161","name":"Lean.IR.UnreachableBranches.InterpContext.decls","line":161,"kind":"def","docLink":"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.InterpContext.decls","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.InterpContext.decls\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">UnreachableBranches</span>.<span class=\"name\">InterpContext</span>.<span class=\"name\">decls</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.InterpContext\">InterpContext</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Decl\">Decl</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/ElimDeadBranches.lean#L160-L160","name":"Lean.IR.UnreachableBranches.InterpContext.currFnIdx","line":160,"kind":"def","docLink":"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.InterpContext.currFnIdx","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.InterpContext.currFnIdx\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">UnreachableBranches</span>.<span class=\"name\">InterpContext</span>.<span class=\"name\">currFnIdx</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.InterpContext\">InterpContext</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/ElimDeadBranches.lean#L159-L159","name":"Lean.IR.UnreachableBranches.InterpContext.mk","line":159,"kind":"ctor","docLink":"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.InterpContext.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.InterpContext.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">UnreachableBranches</span>.<span class=\"name\">InterpContext</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">currFnIdx</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">decls</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Decl\">Decl</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">env</span> : <a href=\"./Lean/Environment.html#Lean.Environment\">Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">lctx</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.LocalContext\">LocalContext</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.InterpContext\">InterpContext</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/ElimDeadBranches.lean#L159-L163","name":"Lean.IR.UnreachableBranches.InterpContext","line":159,"kind":"structure","docLink":"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.InterpContext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.InterpContext\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">UnreachableBranches</span>.<span class=\"name\">InterpContext</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/ElimDeadBranches.lean#L157-L157","name":"Lean.IR.UnreachableBranches.Assignment","line":157,"kind":"def","docLink":"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.Assignment","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.Assignment\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">UnreachableBranches</span>.<span class=\"name\">Assignment</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/ElimDeadBranches.lean#L152-L155","name":"Lean.IR.UnreachableBranches.getFunctionSummary?","line":152,"kind":"def","docLink":"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.getFunctionSummary?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.getFunctionSummary?\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">UnreachableBranches</span>.<span class=\"name\">getFunctionSummary?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">env</span> : <a href=\"./Lean/Environment.html#Lean.Environment\">Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fid</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.FunId\">FunId</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.Value\">Value</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/ElimDeadBranches.lean#L149-L150","name":"Lean.IR.UnreachableBranches.addFunctionSummary","line":149,"kind":"def","docLink":"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.addFunctionSummary","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.addFunctionSummary\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">UnreachableBranches</span>.<span class=\"name\">addFunctionSummary</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">env</span> : <a href=\"./Lean/Environment.html#Lean.Environment\">Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fid</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.FunId\">FunId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">v</span> : <a href=\"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.Value\">Value</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Environment.html#Lean.Environment\">Environment</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/ElimDeadBranches.lean#L140-L147","name":"Lean.IR.UnreachableBranches.functionSummariesExt","line":140,"kind":"opaque","docLink":"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.functionSummariesExt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.functionSummariesExt\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">UnreachableBranches</span>.<span class=\"name\">functionSummariesExt</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/EnvExtension.html#Lean.SimplePersistentEnvExtension\">SimplePersistentEnvExtension</a> (<a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.FunId\">FunId</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.Value\">Value</a>) <a href=\"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.FunctionSummaries\">FunctionSummaries</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/ElimDeadBranches.lean#L126-L126","name":"Lean.IR.UnreachableBranches.FunctionSummaries","line":126,"kind":"def","docLink":"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.FunctionSummaries","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.FunctionSummaries\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">UnreachableBranches</span>.<span class=\"name\">FunctionSummaries</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/ElimDeadBranches.lean#L120-L122","name":"Lean.IR.UnreachableBranches.Value.widening","line":120,"kind":"def","docLink":"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.Value.widening","doc":"Widening operator that guarantees termination in our abstract interpreter. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.Value.widening\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">UnreachableBranches</span>.<span class=\"name\">Value</span>.<span class=\"name\">widening</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">env</span> : <a href=\"./Lean/Environment.html#Lean.Environment\">Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">v₁ </span><span class=\"fn\">v₂</span> : <a href=\"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.Value\">Value</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.Value\">Value</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/ElimDeadBranches.lean#L97-L118","name":"Lean.IR.UnreachableBranches.Value.truncate.go","line":97,"kind":"opaque","docLink":"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.Value.truncate.go","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.Value.truncate.go\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">UnreachableBranches</span>.<span class=\"name\">Value</span>.<span class=\"name\">truncate</span>.<span class=\"name\">go</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">env</span> : <a href=\"./Lean/Environment.html#Lean.Environment\">Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">v</span> : <a href=\"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.Value\">Value</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Lean/Data/NameMap.html#Lean.NameSet\">NameSet</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">depth</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.Value\">Value</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/ElimDeadBranches.lean#L87-L118","name":"Lean.IR.UnreachableBranches.Value.truncate","line":87,"kind":"def","docLink":"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.Value.truncate","doc":"Make sure constructors of recursive inductive datatypes can only occur once in each path.\nValues at depth > truncateMaxDepth are also approximated at `top`.\nWe use this function this function to implement a simple widening operation for our abstract\ninterpreter.\nRecall the widening functions is used to ensure termination in abstract interpreters.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.Value.truncate\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">UnreachableBranches</span>.<span class=\"name\">Value</span>.<span class=\"name\">truncate</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">env</span> : <a href=\"./Lean/Environment.html#Lean.Environment\">Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">v</span> : <a href=\"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.Value\">Value</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Lean/Data/NameMap.html#Lean.NameSet\">NameSet</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.Value\">Value</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/ElimDeadBranches.lean#L81-L85","name":"Lean.IR.UnreachableBranches.Value.truncateMaxDepth","line":81,"kind":"def","docLink":"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.Value.truncateMaxDepth","doc":"In `truncate`, we approximate a value as `top` if depth > `truncateMaxDepth`.\nTODO: add option to control this parameter.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.Value.truncateMaxDepth\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">UnreachableBranches</span>.<span class=\"name\">Value</span>.<span class=\"name\">truncateMaxDepth</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/ElimDeadBranches.lean#L79-L79","name":"Lean.IR.UnreachableBranches.Value.instToString","line":79,"kind":"instance","docLink":"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.Value.instToString","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.Value.instToString\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">UnreachableBranches</span>.<span class=\"name\">Value</span>.<span class=\"name\">instToString</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/ToString/Basic.html#ToString\">ToString</a> <a href=\"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.Value\">Value</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/ElimDeadBranches.lean#L78-L78","name":"Lean.IR.UnreachableBranches.Value.instToFormat","line":78,"kind":"instance","docLink":"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.Value.instToFormat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.Value.instToFormat\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">UnreachableBranches</span>.<span class=\"name\">Value</span>.<span class=\"name\">instToFormat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Format/Basic.html#Std.ToFormat\">ToFormat</a> <a href=\"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.Value\">Value</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/ElimDeadBranches.lean#L72-L76","name":"Lean.IR.UnreachableBranches.Value.format","line":72,"kind":"opaque","docLink":"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.Value.format","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.Value.format\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">UnreachableBranches</span>.<span class=\"name\">Value</span>.<span class=\"name\">format</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.Value\">Value</a> → <a href=\"./Init/Data/Format/Basic.html#Std.Format\">Format</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/ElimDeadBranches.lean#L59-L70","name":"Lean.IR.UnreachableBranches.Value.merge","line":59,"kind":"opaque","docLink":"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.Value.merge","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.Value.merge\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">UnreachableBranches</span>.<span class=\"name\">Value</span>.<span class=\"name\">merge</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">v₁ </span><span class=\"fn\">v₂</span> : <a href=\"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.Value\">Value</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.Value\">Value</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/ElimDeadBranches.lean#L52-L57","name":"Lean.IR.UnreachableBranches.Value.addChoice","line":52,"kind":"opaque","docLink":"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.Value.addChoice","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.Value.addChoice\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">UnreachableBranches</span>.<span class=\"name\">Value</span>.<span class=\"name\">addChoice</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">merge</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.Value\">Value</a> → <a href=\"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.Value\">Value</a> → <a href=\"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.Value\">Value</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.Value\">Value</a></span> → <span class=\"fn\"><a href=\"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.Value\">Value</a> → <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.Value\">Value</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/ElimDeadBranches.lean#L50-L50","name":"Lean.IR.UnreachableBranches.Value.instBEq","line":50,"kind":"instance","docLink":"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.Value.instBEq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.Value.instBEq\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">UnreachableBranches</span>.<span class=\"name\">Value</span>.<span class=\"name\">instBEq</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <a href=\"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.Value\">Value</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/ElimDeadBranches.lean#L40-L48","name":"Lean.IR.UnreachableBranches.Value.beq","line":40,"kind":"opaque","docLink":"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.Value.beq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.Value.beq\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">UnreachableBranches</span>.<span class=\"name\">Value</span>.<span class=\"name\">beq</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.Value\">Value</a> → <a href=\"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.Value\">Value</a> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/ElimDeadBranches.lean#L35-L36","name":"Lean.IR.UnreachableBranches.instToStringValue","line":35,"kind":"instance","docLink":"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.instToStringValue","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.instToStringValue\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">UnreachableBranches</span>.<span class=\"name\">instToStringValue</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/ToString/Basic.html#ToString\">ToString</a> <a href=\"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.Value\">Value</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/ElimDeadBranches.lean#L32-L33","name":"Lean.IR.UnreachableBranches.instToFormatValue","line":32,"kind":"instance","docLink":"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.instToFormatValue","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.instToFormatValue\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">UnreachableBranches</span>.<span class=\"name\">instToFormatValue</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Format/Basic.html#Std.ToFormat\">ToFormat</a> <a href=\"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.Value\">Value</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/ElimDeadBranches.lean#L21-L30","name":"Lean.IR.UnreachableBranches.Value.toFormat","line":21,"kind":"opaque","docLink":"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.Value.toFormat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.Value.toFormat\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">UnreachableBranches</span>.<span class=\"name\">Value</span>.<span class=\"name\">toFormat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.Value\">Value</a> → <a href=\"./Init/Data/Format/Basic.html#Std.Format\">Format</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/ElimDeadBranches.lean#L19-L19","name":"Lean.IR.UnreachableBranches.instReprValue","line":19,"kind":"instance","docLink":"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.instReprValue","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.instReprValue\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">UnreachableBranches</span>.<span class=\"name\">instReprValue</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <a href=\"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.Value\">Value</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/ElimDeadBranches.lean#L19-L19","name":"Lean.IR.UnreachableBranches.instInhabitedValue","line":19,"kind":"instance","docLink":"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.instInhabitedValue","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.instInhabitedValue\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">UnreachableBranches</span>.<span class=\"name\">instInhabitedValue</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.Value\">Value</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/ElimDeadBranches.lean#L18-L18","name":"Lean.IR.UnreachableBranches.Value.choice","line":18,"kind":"ctor","docLink":"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.Value.choice","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.Value.choice\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">UnreachableBranches</span>.<span class=\"name\">Value</span>.<span class=\"name\">choice</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">vs</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.Value\">Value</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.Value\">Value</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/ElimDeadBranches.lean#L17-L17","name":"Lean.IR.UnreachableBranches.Value.ctor","line":17,"kind":"ctor","docLink":"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.Value.ctor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.Value.ctor\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">UnreachableBranches</span>.<span class=\"name\">Value</span>.<span class=\"name\">ctor</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.CtorInfo\">CtorInfo</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">vs</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.Value\">Value</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.Value\">Value</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/ElimDeadBranches.lean#L16-L16","name":"Lean.IR.UnreachableBranches.Value.top","line":16,"kind":"ctor","docLink":"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.Value.top","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.Value.top\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">UnreachableBranches</span>.<span class=\"name\">Value</span>.<span class=\"name\">top</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.Value\">Value</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/ElimDeadBranches.lean#L15-L15","name":"Lean.IR.UnreachableBranches.Value.bot","line":15,"kind":"ctor","docLink":"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.Value.bot","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.Value.bot\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">UnreachableBranches</span>.<span class=\"name\">Value</span>.<span class=\"name\">bot</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.Value\">Value</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/ElimDeadBranches.lean#L13-L19","name":"Lean.IR.UnreachableBranches.Value","line":13,"kind":"inductive","docLink":"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.Value","doc":"Value used in the abstract interpreter "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.Value\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">UnreachableBranches</span>.<span class=\"name\">Value</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"}]}