{"name":"Lean.Elab.PreDefinition.WF.Rel","instances":[],"imports":["Lean.Meta.Tactic.Apply","Lean.Meta.Tactic.Cases","Lean.Meta.Tactic.Rename","Lean.Elab.SyntheticMVars","Lean.Elab.PreDefinition.Basic","Lean.Elab.PreDefinition.TerminationMeasure","Lean.Elab.PreDefinition.FixedParams","Lean.Meta.ArgsPacker"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/PreDefinition/WF/Rel.lean#L52-L69","name":"Lean.Elab.WF.elabWFRel","line":52,"kind":"def","docLink":"./Lean/Elab/PreDefinition/WF/Rel.html#Lean.Elab.WF.elabWFRel","doc":"If the `termMeasures` map the packed argument `argType` to `β`, then this function passes to the\ncontinuation a value of type `WellFoundedRelation argType` that is derived from the instance\nfor `WellFoundedRelation β` using `invImage`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/WF/Rel.html#Lean.Elab.WF.elabWFRel\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">WF</span>.<span class=\"name\">elabWFRel</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">declNames</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Lean.Name\">Name</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">unaryPreDefName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fixedParamPerms</span> : <a href=\"./Lean/Elab/PreDefinition/FixedParams.html#Lean.Elab.FixedParamPerms\">FixedParamPerms</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fixedArgs</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">argsPacker</span> : <a href=\"./Lean/Meta/ArgsPacker/Basic.html#Lean.Meta.ArgsPacker\">Meta.ArgsPacker</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">argType</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">termMeasures</span> : <a href=\"./Lean/Elab/PreDefinition/TerminationMeasure.html#Lean.Elab.TerminationMeasures\">TerminationMeasures</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <span class=\"fn\"><a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a> → <span class=\"fn\"><a href=\"./Lean/Elab/Term.html#Lean.Elab.Term.TermElabM\">TermElabM</a> <span class=\"fn\">α</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Term.html#Lean.Elab.Term.TermElabM\">TermElabM</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/PreDefinition/WF/Rel.lean#L20-L50","name":"Lean.Elab.WF.checkCodomains","line":20,"kind":"def","docLink":"./Lean/Elab/PreDefinition/WF/Rel.html#Lean.Elab.WF.checkCodomains","doc":"The termination measures must not depend on the varying parameters of the function, and in\na mutual clique, they must be the same for all functions.\n\nThis ensures the preconditions for `ArgsPacker.uncurryND`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/WF/Rel.html#Lean.Elab.WF.checkCodomains\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">WF</span>.<span class=\"name\">checkCodomains</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">names</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Lean.Name\">Name</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fixedParamPerms</span> : <a href=\"./Lean/Elab/PreDefinition/FixedParams.html#Lean.Elab.FixedParamPerms\">FixedParamPerms</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fixedArgs</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">arities</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">termMeasures</span> : <a href=\"./Lean/Elab/PreDefinition/TerminationMeasure.html#Lean.Elab.TerminationMeasures\">TerminationMeasures</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Term.html#Lean.Elab.Term.TermElabM\">TermElabM</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span></div></div>"}]}