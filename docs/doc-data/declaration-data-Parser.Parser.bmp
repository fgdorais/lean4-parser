{"name":"Parser.Parser","instances":[{"typeNames":["Parser.Result"],"name":"Parser.instInhabitedResult","className":"Inhabited"},{"typeNames":["Parser.Result"],"name":"Parser.instReprResult","className":"Repr"},{"typeNames":["ParserT"],"name":"instMonadParserT","className":"Monad"},{"typeNames":["ParserT"],"name":"instMonadExceptOfParserTOfMonad","className":"MonadExceptOf"},{"typeNames":["ParserT"],"name":"instOrElseParserTOfMonad","className":"OrElse"},{"typeNames":["ParserT"],"name":"instMonadLiftParserTOfMonad","className":"MonadLift"}],"imports":["Init","Parser.Prelude","Parser.Error","Parser.Stream"],"declarations":[{"info":{"sourceLink":"https://github.com/fgdorais/lean4-parser/blob/9cfe6f912bbb5ce5ad1e06d1b58a30bddae82e63/Parser/Parser.lean#L355-L361","name":"Parser.first.go","line":355,"kind":"def","docLink":"./Parser/Parser.html#Parser.first.go","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Parser/Parser.html#Parser.first.go\"><span class=\"name\">Parser</span>.<span class=\"name\">first</span>.<span class=\"name\">go</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">τ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> u → <a href=\"./foundational_types.html\">Type</a> u_2</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ε </span><span class=\"fn\">σ </span><span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Parser/Stream.html#Parser.Stream\">Parser.Stream</a> <span class=\"fn\">σ</span> <span class=\"fn\">τ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Parser/Error.html#Parser.Error\">Parser.Error</a> <span class=\"fn\">ε</span> <span class=\"fn\">σ</span> <span class=\"fn\">τ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">combine</span> : <span class=\"fn\"><span class=\"fn\">ε</span> → <span class=\"fn\">ε</span> → <span class=\"fn\">ε</span></span> := <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">ε</span>) =&gt; <a href=\"./Init/Prelude.html#id\">id</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<a href=\"./Parser/Parser.html#ParserT\">ParserT</a> <span class=\"fn\">ε</span> <span class=\"fn\">σ</span> <span class=\"fn\">τ</span> <span class=\"fn\">m</span> <span class=\"fn\">α</span>)</span></span> → <span class=\"fn\"><span class=\"fn\">ε</span> → <span class=\"fn\"><span class=\"fn\">σ</span> → <span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">(<a href=\"./Parser/Parser.html#Parser.Result\">Parser.Result</a> <span class=\"fn\">ε</span> <span class=\"fn\">σ</span> <span class=\"fn\">α</span>)</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/fgdorais/lean4-parser/blob/9cfe6f912bbb5ce5ad1e06d1b58a30bddae82e63/Parser/Parser.lean#L344-L361","name":"Parser.first","line":344,"kind":"def","docLink":"./Parser/Parser.html#Parser.first","doc":"`first ps` tries parsers from the list `ps` in order (with backtracking) until one succeeds and\nreturns the result of that parser.\n\nThe optional parameter `combine` can be used to control the error reported when all parsers fail.\nThe default is to only report the error from the last parser.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Parser/Parser.html#Parser.first\"><span class=\"name\">Parser</span>.<span class=\"name\">first</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">τ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> u → <a href=\"./foundational_types.html\">Type</a> u_2</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ε </span><span class=\"fn\">σ </span><span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Parser/Stream.html#Parser.Stream\">Parser.Stream</a> <span class=\"fn\">σ</span> <span class=\"fn\">τ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Parser/Error.html#Parser.Error\">Parser.Error</a> <span class=\"fn\">ε</span> <span class=\"fn\">σ</span> <span class=\"fn\">τ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ps</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<a href=\"./Parser/Parser.html#ParserT\">ParserT</a> <span class=\"fn\">ε</span> <span class=\"fn\">σ</span> <span class=\"fn\">τ</span> <span class=\"fn\">m</span> <span class=\"fn\">α</span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">combine</span> : <span class=\"fn\"><span class=\"fn\">ε</span> → <span class=\"fn\">ε</span> → <span class=\"fn\">ε</span></span> := <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">ε</span>) =&gt; <a href=\"./Init/Prelude.html#id\">id</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Parser/Parser.html#ParserT\">ParserT</a> <span class=\"fn\">ε</span> <span class=\"fn\">σ</span> <span class=\"fn\">τ</span> <span class=\"fn\">m</span> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/fgdorais/lean4-parser/blob/9cfe6f912bbb5ce5ad1e06d1b58a30bddae82e63/Parser/Parser.lean#L337-L342","name":"Parser.efirst.go","line":337,"kind":"def","docLink":"./Parser/Parser.html#Parser.efirst.go","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Parser/Parser.html#Parser.efirst.go\"><span class=\"name\">Parser</span>.<span class=\"name\">efirst</span>.<span class=\"name\">go</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">τ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> u → <a href=\"./foundational_types.html\">Type</a> u_2</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ε </span><span class=\"fn\">σ </span><span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Parser/Stream.html#Parser.Stream\">Parser.Stream</a> <span class=\"fn\">σ</span> <span class=\"fn\">τ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Parser/Error.html#Parser.Error\">Parser.Error</a> <span class=\"fn\">ε</span> <span class=\"fn\">σ</span> <span class=\"fn\">τ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<a href=\"./Parser/Parser.html#ParserT\">ParserT</a> <span class=\"fn\">ε</span> <span class=\"fn\">σ</span> <span class=\"fn\">τ</span> <span class=\"fn\">m</span> <span class=\"fn\">α</span>)</span></span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">ε</span></span> → <span class=\"fn\"><a href=\"./Parser/Parser.html#ParserT\">ParserT</a> <span class=\"fn\">ε</span> <span class=\"fn\">σ</span> <span class=\"fn\">τ</span> <span class=\"fn\">m</span> (<span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">α</span></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">ε</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/fgdorais/lean4-parser/blob/9cfe6f912bbb5ce5ad1e06d1b58a30bddae82e63/Parser/Parser.lean#L325-L342","name":"Parser.efirst","line":325,"kind":"def","docLink":"./Parser/Parser.html#Parser.efirst","doc":"`efirst ps` tries parsers from the list `ps` in order (with backtracking) until one succeeds:\n\n- Once a parser `p` succeeds with value `x` then `some x` is returne along with the list of errors\n  from all previous parsers.\n- If none succeed then `none` is returned along with the list of errors of all parsers.\n\nThis parser never fails.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Parser/Parser.html#Parser.efirst\"><span class=\"name\">Parser</span>.<span class=\"name\">efirst</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">τ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> u → <a href=\"./foundational_types.html\">Type</a> u_2</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ε </span><span class=\"fn\">σ </span><span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Parser/Stream.html#Parser.Stream\">Parser.Stream</a> <span class=\"fn\">σ</span> <span class=\"fn\">τ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Parser/Error.html#Parser.Error\">Parser.Error</a> <span class=\"fn\">ε</span> <span class=\"fn\">σ</span> <span class=\"fn\">τ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ps</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<a href=\"./Parser/Parser.html#ParserT\">ParserT</a> <span class=\"fn\">ε</span> <span class=\"fn\">σ</span> <span class=\"fn\">τ</span> <span class=\"fn\">m</span> <span class=\"fn\">α</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Parser/Parser.html#ParserT\">ParserT</a> <span class=\"fn\">ε</span> <span class=\"fn\">σ</span> <span class=\"fn\">τ</span> <span class=\"fn\">m</span> (<span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">α</span></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">ε</span></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/fgdorais/lean4-parser/blob/9cfe6f912bbb5ce5ad1e06d1b58a30bddae82e63/Parser/Parser.lean#L315-L321","name":"Parser.optional","line":315,"kind":"def","docLink":"./Parser/Parser.html#Parser.optional","doc":"`optional p` tries to parse `p` (with backtracking) ignoring output or errors. This parser never\nfails.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Parser/Parser.html#Parser.optional\"><span class=\"name\">Parser</span>.<span class=\"name\">optional</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">τ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> u → <a href=\"./foundational_types.html\">Type</a> u_2</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ε </span><span class=\"fn\">σ </span><span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Parser/Stream.html#Parser.Stream\">Parser.Stream</a> <span class=\"fn\">σ</span> <span class=\"fn\">τ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Parser/Error.html#Parser.Error\">Parser.Error</a> <span class=\"fn\">ε</span> <span class=\"fn\">σ</span> <span class=\"fn\">τ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <span class=\"fn\"><a href=\"./Parser/Parser.html#ParserT\">ParserT</a> <span class=\"fn\">ε</span> <span class=\"fn\">σ</span> <span class=\"fn\">τ</span> <span class=\"fn\">m</span> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Parser/Parser.html#ParserT\">ParserT</a> <span class=\"fn\">ε</span> <span class=\"fn\">σ</span> <span class=\"fn\">τ</span> <span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#PUnit\">PUnit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/fgdorais/lean4-parser/blob/9cfe6f912bbb5ce5ad1e06d1b58a30bddae82e63/Parser/Parser.lean#L307-L313","name":"Parser.option?","line":307,"kind":"def","docLink":"./Parser/Parser.html#Parser.option?","doc":"`option? p` tries to parse `p` and returns `some x` if `p` returns `x`, returns `none` if `p`\nfails. This parser never fails.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Parser/Parser.html#Parser.option?\"><span class=\"name\">Parser</span>.<span class=\"name\">option?</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">τ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> u → <a href=\"./foundational_types.html\">Type</a> u_2</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ε </span><span class=\"fn\">σ </span><span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Parser/Stream.html#Parser.Stream\">Parser.Stream</a> <span class=\"fn\">σ</span> <span class=\"fn\">τ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Parser/Error.html#Parser.Error\">Parser.Error</a> <span class=\"fn\">ε</span> <span class=\"fn\">σ</span> <span class=\"fn\">τ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <span class=\"fn\"><a href=\"./Parser/Parser.html#ParserT\">ParserT</a> <span class=\"fn\">ε</span> <span class=\"fn\">σ</span> <span class=\"fn\">τ</span> <span class=\"fn\">m</span> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Parser/Parser.html#ParserT\">ParserT</a> <span class=\"fn\">ε</span> <span class=\"fn\">σ</span> <span class=\"fn\">τ</span> <span class=\"fn\">m</span> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">α</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/fgdorais/lean4-parser/blob/9cfe6f912bbb5ce5ad1e06d1b58a30bddae82e63/Parser/Parser.lean#L299-L305","name":"Parser.option!","line":299,"kind":"def","docLink":"./Parser/Parser.html#Parser.option!","doc":"`option! p` tries to parse `p` (with backtracking) and returns `x` if `p` returns `x`, returns\n`Inhabited.default` if `p` fails. This parser never fails.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Parser/Parser.html#Parser.option!\"><span class=\"name\">Parser</span>.<span class=\"name\">option!</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">τ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> u → <a href=\"./foundational_types.html\">Type</a> u_2</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ε </span><span class=\"fn\">σ </span><span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Parser/Stream.html#Parser.Stream\">Parser.Stream</a> <span class=\"fn\">σ</span> <span class=\"fn\">τ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Parser/Error.html#Parser.Error\">Parser.Error</a> <span class=\"fn\">ε</span> <span class=\"fn\">σ</span> <span class=\"fn\">τ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <span class=\"fn\"><a href=\"./Parser/Parser.html#ParserT\">ParserT</a> <span class=\"fn\">ε</span> <span class=\"fn\">σ</span> <span class=\"fn\">τ</span> <span class=\"fn\">m</span> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Parser/Parser.html#ParserT\">ParserT</a> <span class=\"fn\">ε</span> <span class=\"fn\">σ</span> <span class=\"fn\">τ</span> <span class=\"fn\">m</span> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/fgdorais/lean4-parser/blob/9cfe6f912bbb5ce5ad1e06d1b58a30bddae82e63/Parser/Parser.lean#L291-L297","name":"Parser.optionD","line":291,"kind":"def","docLink":"./Parser/Parser.html#Parser.optionD","doc":"`optionD p` tries to parse `p` (with backtracking) and returns `x` if `p` returns `x`, returns\n`default` if `p` fails. This parser never fails.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Parser/Parser.html#Parser.optionD\"><span class=\"name\">Parser</span>.<span class=\"name\">optionD</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">τ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> u → <a href=\"./foundational_types.html\">Type</a> u_2</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ε </span><span class=\"fn\">σ </span><span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Parser/Stream.html#Parser.Stream\">Parser.Stream</a> <span class=\"fn\">σ</span> <span class=\"fn\">τ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Parser/Error.html#Parser.Error\">Parser.Error</a> <span class=\"fn\">ε</span> <span class=\"fn\">σ</span> <span class=\"fn\">τ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <span class=\"fn\"><a href=\"./Parser/Parser.html#ParserT\">ParserT</a> <span class=\"fn\">ε</span> <span class=\"fn\">σ</span> <span class=\"fn\">τ</span> <span class=\"fn\">m</span> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">default</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Parser/Parser.html#ParserT\">ParserT</a> <span class=\"fn\">ε</span> <span class=\"fn\">σ</span> <span class=\"fn\">τ</span> <span class=\"fn\">m</span> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/fgdorais/lean4-parser/blob/9cfe6f912bbb5ce5ad1e06d1b58a30bddae82e63/Parser/Parser.lean#L281-L289","name":"Parser.optionM","line":281,"kind":"def","docLink":"./Parser/Parser.html#Parser.optionM","doc":"`optionM p` tries to parse `p` (with backtracking) and returns `x` if `p` returns `x`, returns the\nmonadic value `default` if `p` fails. This parser never fails.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Parser/Parser.html#Parser.optionM\"><span class=\"name\">Parser</span>.<span class=\"name\">optionM</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">τ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> u → <a href=\"./foundational_types.html\">Type</a> u_2</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ε </span><span class=\"fn\">σ </span><span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Parser/Stream.html#Parser.Stream\">Parser.Stream</a> <span class=\"fn\">σ</span> <span class=\"fn\">τ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Parser/Error.html#Parser.Error\">Parser.Error</a> <span class=\"fn\">ε</span> <span class=\"fn\">σ</span> <span class=\"fn\">τ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <span class=\"fn\"><a href=\"./Parser/Parser.html#ParserT\">ParserT</a> <span class=\"fn\">ε</span> <span class=\"fn\">σ</span> <span class=\"fn\">τ</span> <span class=\"fn\">m</span> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">default</span> : <span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Parser/Parser.html#ParserT\">ParserT</a> <span class=\"fn\">ε</span> <span class=\"fn\">σ</span> <span class=\"fn\">τ</span> <span class=\"fn\">m</span> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/fgdorais/lean4-parser/blob/9cfe6f912bbb5ce5ad1e06d1b58a30bddae82e63/Parser/Parser.lean#L265-L279","name":"Parser.eoption","line":265,"kind":"def","docLink":"./Parser/Parser.html#Parser.eoption","doc":"`eoption p` tries to parse `p` (with backtracking) and returns:\n\n- `Sum.inl x` if `p` returns `x`,\n- `Sum.inr e` if `p`fails with error `e`.\n\nThis parser never fails.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Parser/Parser.html#Parser.eoption\"><span class=\"name\">Parser</span>.<span class=\"name\">eoption</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">τ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> u → <a href=\"./foundational_types.html\">Type</a> u_2</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ε </span><span class=\"fn\">σ </span><span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Parser/Stream.html#Parser.Stream\">Parser.Stream</a> <span class=\"fn\">σ</span> <span class=\"fn\">τ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Parser/Error.html#Parser.Error\">Parser.Error</a> <span class=\"fn\">ε</span> <span class=\"fn\">σ</span> <span class=\"fn\">τ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <span class=\"fn\"><a href=\"./Parser/Parser.html#ParserT\">ParserT</a> <span class=\"fn\">ε</span> <span class=\"fn\">σ</span> <span class=\"fn\">τ</span> <span class=\"fn\">m</span> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Parser/Parser.html#ParserT\">ParserT</a> <span class=\"fn\">ε</span> <span class=\"fn\">σ</span> <span class=\"fn\">τ</span> <span class=\"fn\">m</span> (<span class=\"fn\">α</span> <a href=\"./Init/Core.html#Sum\">⊕</a> <span class=\"fn\">ε</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/fgdorais/lean4-parser/blob/9cfe6f912bbb5ce5ad1e06d1b58a30bddae82e63/Parser/Parser.lean#L254-L261","name":"Parser.foldl","line":254,"kind":"def","docLink":"./Parser/Parser.html#Parser.foldl","doc":"`foldl f init p` folds the function `f` from left to right using `init` as an intitial value and\nthe parser `p` to generate inputs of type `α`. The folding ends as soon as `p` fails.\nThis parser never fails.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Parser/Parser.html#Parser.foldl\"><span class=\"name\">Parser</span>.<span class=\"name\">foldl</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">τ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> u → <a href=\"./foundational_types.html\">Type</a> u_2</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ε </span><span class=\"fn\">σ </span><span class=\"fn\">α </span><span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Parser/Stream.html#Parser.Stream\">Parser.Stream</a> <span class=\"fn\">σ</span> <span class=\"fn\">τ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Parser/Error.html#Parser.Error\">Parser.Error</a> <span class=\"fn\">ε</span> <span class=\"fn\">σ</span> <span class=\"fn\">τ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">β</span> → <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">β</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">init</span> : <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <span class=\"fn\"><a href=\"./Parser/Parser.html#ParserT\">ParserT</a> <span class=\"fn\">ε</span> <span class=\"fn\">σ</span> <span class=\"fn\">τ</span> <span class=\"fn\">m</span> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Parser/Parser.html#ParserT\">ParserT</a> <span class=\"fn\">ε</span> <span class=\"fn\">σ</span> <span class=\"fn\">τ</span> <span class=\"fn\">m</span> <span class=\"fn\">β</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/fgdorais/lean4-parser/blob/9cfe6f912bbb5ce5ad1e06d1b58a30bddae82e63/Parser/Parser.lean#L245-L252","name":"Parser.foldlM","line":245,"kind":"def","docLink":"./Parser/Parser.html#Parser.foldlM","doc":"`foldlM f init p` folds the monadic function `f` from left to right using `init` as an intitial\nvalue and the parser `p` to generate inputs of type `α`. The folding ends as soon as `p` fails.\nThis parser never fails.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Parser/Parser.html#Parser.foldlM\"><span class=\"name\">Parser</span>.<span class=\"name\">foldlM</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">τ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> u → <a href=\"./foundational_types.html\">Type</a> u_2</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ε </span><span class=\"fn\">σ </span><span class=\"fn\">α </span><span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Parser/Stream.html#Parser.Stream\">Parser.Stream</a> <span class=\"fn\">σ</span> <span class=\"fn\">τ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Parser/Error.html#Parser.Error\">Parser.Error</a> <span class=\"fn\">ε</span> <span class=\"fn\">σ</span> <span class=\"fn\">τ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">β</span> → <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">β</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">init</span> : <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <span class=\"fn\"><a href=\"./Parser/Parser.html#ParserT\">ParserT</a> <span class=\"fn\">ε</span> <span class=\"fn\">σ</span> <span class=\"fn\">τ</span> <span class=\"fn\">m</span> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Parser/Parser.html#ParserT\">ParserT</a> <span class=\"fn\">ε</span> <span class=\"fn\">σ</span> <span class=\"fn\">τ</span> <span class=\"fn\">m</span> <span class=\"fn\">β</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/fgdorais/lean4-parser/blob/9cfe6f912bbb5ce5ad1e06d1b58a30bddae82e63/Parser/Parser.lean#L236-L243","name":"Parser.foldlP","line":236,"kind":"def","docLink":"./Parser/Parser.html#Parser.foldlP","doc":"`foldlP f init p` folds the parser function `f` from left to right using `init` as an intitial\nvalue and the parser `p` to generate inputs of type `α`. The folding ends as soon as the update\nfunction `(p >>= f ·)` fails. This parser never fails.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Parser/Parser.html#Parser.foldlP\"><span class=\"name\">Parser</span>.<span class=\"name\">foldlP</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">τ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> u → <a href=\"./foundational_types.html\">Type</a> u_2</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ε </span><span class=\"fn\">σ </span><span class=\"fn\">α </span><span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Parser/Stream.html#Parser.Stream\">Parser.Stream</a> <span class=\"fn\">σ</span> <span class=\"fn\">τ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Parser/Error.html#Parser.Error\">Parser.Error</a> <span class=\"fn\">ε</span> <span class=\"fn\">σ</span> <span class=\"fn\">τ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">β</span> → <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><a href=\"./Parser/Parser.html#ParserT\">ParserT</a> <span class=\"fn\">ε</span> <span class=\"fn\">σ</span> <span class=\"fn\">τ</span> <span class=\"fn\">m</span> <span class=\"fn\">β</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">init</span> : <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <span class=\"fn\"><a href=\"./Parser/Parser.html#ParserT\">ParserT</a> <span class=\"fn\">ε</span> <span class=\"fn\">σ</span> <span class=\"fn\">τ</span> <span class=\"fn\">m</span> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Parser/Parser.html#ParserT\">ParserT</a> <span class=\"fn\">ε</span> <span class=\"fn\">σ</span> <span class=\"fn\">τ</span> <span class=\"fn\">m</span> <span class=\"fn\">β</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/fgdorais/lean4-parser/blob/9cfe6f912bbb5ce5ad1e06d1b58a30bddae82e63/Parser/Parser.lean#L227-L234","name":"Parser.efoldl","line":227,"kind":"def","docLink":"./Parser/Parser.html#Parser.efoldl","doc":"`foldl f init p` folds the function `f` from left to right using `init` as an intitial value\nand the parser `p` to generate inputs of type `α`. The folding ends as soon as `p` fails and the\nerror reported by `p` is returned along with the result of folding. This parser never fails.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Parser/Parser.html#Parser.efoldl\"><span class=\"name\">Parser</span>.<span class=\"name\">efoldl</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">τ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> u → <a href=\"./foundational_types.html\">Type</a> u_2</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ε </span><span class=\"fn\">σ </span><span class=\"fn\">α </span><span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Parser/Stream.html#Parser.Stream\">Parser.Stream</a> <span class=\"fn\">σ</span> <span class=\"fn\">τ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Parser/Error.html#Parser.Error\">Parser.Error</a> <span class=\"fn\">ε</span> <span class=\"fn\">σ</span> <span class=\"fn\">τ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">β</span> → <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">β</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">init</span> : <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <span class=\"fn\"><a href=\"./Parser/Parser.html#ParserT\">ParserT</a> <span class=\"fn\">ε</span> <span class=\"fn\">σ</span> <span class=\"fn\">τ</span> <span class=\"fn\">m</span> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Parser/Parser.html#ParserT\">ParserT</a> <span class=\"fn\">ε</span> <span class=\"fn\">σ</span> <span class=\"fn\">τ</span> <span class=\"fn\">m</span> (<span class=\"fn\">β</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">ε</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/fgdorais/lean4-parser/blob/9cfe6f912bbb5ce5ad1e06d1b58a30bddae82e63/Parser/Parser.lean#L218-L225","name":"Parser.efoldlM","line":218,"kind":"def","docLink":"./Parser/Parser.html#Parser.efoldlM","doc":"`foldlM f init p` folds the monadic function `f` from left to right using `init` as an intitial\nvalue and the parser `p` to generate inputs of type `α`. The folding ends as soon as `p` fails and\nthe error reported by `p` is returned along with the result of folding. This parser never fails.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Parser/Parser.html#Parser.efoldlM\"><span class=\"name\">Parser</span>.<span class=\"name\">efoldlM</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">τ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> u → <a href=\"./foundational_types.html\">Type</a> u_2</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ε </span><span class=\"fn\">σ </span><span class=\"fn\">α </span><span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Parser/Stream.html#Parser.Stream\">Parser.Stream</a> <span class=\"fn\">σ</span> <span class=\"fn\">τ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Parser/Error.html#Parser.Error\">Parser.Error</a> <span class=\"fn\">ε</span> <span class=\"fn\">σ</span> <span class=\"fn\">τ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">β</span> → <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">β</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">init</span> : <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <span class=\"fn\"><a href=\"./Parser/Parser.html#ParserT\">ParserT</a> <span class=\"fn\">ε</span> <span class=\"fn\">σ</span> <span class=\"fn\">τ</span> <span class=\"fn\">m</span> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Parser/Parser.html#ParserT\">ParserT</a> <span class=\"fn\">ε</span> <span class=\"fn\">σ</span> <span class=\"fn\">τ</span> <span class=\"fn\">m</span> (<span class=\"fn\">β</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">ε</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/fgdorais/lean4-parser/blob/9cfe6f912bbb5ce5ad1e06d1b58a30bddae82e63/Parser/Parser.lean#L199-L216","name":"Parser.efoldlP","line":199,"kind":"def","docLink":"./Parser/Parser.html#Parser.efoldlP","doc":"`foldlP f init p` folds the parser function `f` from left to right using `init` as an intitial\nvalue and the parser `p` to generate inputs of type `α`. The folding ends as soon as the update\nparser function `(p >>= f ⬝)` fails. Then the final folding result is returned along with the pair:\n\n- `(e, true)` if the final `p` succeeds but then `f` fails reporting error `e`.\n- `(e, false)` if the final `p` fails reporting error `e`.\n\nIn either case, the final `p` is not consumed. This parser never fails.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Parser/Parser.html#Parser.efoldlP\"><span class=\"name\">Parser</span>.<span class=\"name\">efoldlP</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">τ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> u → <a href=\"./foundational_types.html\">Type</a> u_2</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ε </span><span class=\"fn\">σ </span><span class=\"fn\">α </span><span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Parser/Stream.html#Parser.Stream\">Parser.Stream</a> <span class=\"fn\">σ</span> <span class=\"fn\">τ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Parser/Error.html#Parser.Error\">Parser.Error</a> <span class=\"fn\">ε</span> <span class=\"fn\">σ</span> <span class=\"fn\">τ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">β</span> → <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><a href=\"./Parser/Parser.html#ParserT\">ParserT</a> <span class=\"fn\">ε</span> <span class=\"fn\">σ</span> <span class=\"fn\">τ</span> <span class=\"fn\">m</span> <span class=\"fn\">β</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">init</span> : <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <span class=\"fn\"><a href=\"./Parser/Parser.html#ParserT\">ParserT</a> <span class=\"fn\">ε</span> <span class=\"fn\">σ</span> <span class=\"fn\">τ</span> <span class=\"fn\">m</span> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Parser/Parser.html#ParserT\">ParserT</a> <span class=\"fn\">ε</span> <span class=\"fn\">σ</span> <span class=\"fn\">τ</span> <span class=\"fn\">m</span> (<span class=\"fn\">β</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">ε</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/fgdorais/lean4-parser/blob/9cfe6f912bbb5ce5ad1e06d1b58a30bddae82e63/Parser/Parser.lean#L179-L182","name":"Parser.withErrorMessage","line":179,"kind":"def","docLink":"./Parser/Parser.html#Parser.withErrorMessage","doc":"Add message on parser error. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Parser/Parser.html#Parser.withErrorMessage\"><span class=\"name\">Parser</span>.<span class=\"name\">withErrorMessage</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">τ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> u → <a href=\"./foundational_types.html\">Type</a> u_2</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ε </span><span class=\"fn\">σ </span><span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Parser/Stream.html#Parser.Stream\">Parser.Stream</a> <span class=\"fn\">σ</span> <span class=\"fn\">τ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Parser/Error.html#Parser.Error\">Parser.Error</a> <span class=\"fn\">ε</span> <span class=\"fn\">σ</span> <span class=\"fn\">τ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">msg</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <span class=\"fn\"><a href=\"./Parser/Parser.html#ParserT\">ParserT</a> <span class=\"fn\">ε</span> <span class=\"fn\">σ</span> <span class=\"fn\">τ</span> <span class=\"fn\">m</span> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Parser/Parser.html#ParserT\">ParserT</a> <span class=\"fn\">ε</span> <span class=\"fn\">σ</span> <span class=\"fn\">τ</span> <span class=\"fn\">m</span> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/fgdorais/lean4-parser/blob/9cfe6f912bbb5ce5ad1e06d1b58a30bddae82e63/Parser/Parser.lean#L174-L177","name":"Parser.throwUnexpectedWithMessage","line":174,"kind":"def","docLink":"./Parser/Parser.html#Parser.throwUnexpectedWithMessage","doc":"Throw error on unexpected token with error message. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Parser/Parser.html#Parser.throwUnexpectedWithMessage\"><span class=\"name\">Parser</span>.<span class=\"name\">throwUnexpectedWithMessage</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">τ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> u → <a href=\"./foundational_types.html\">Type</a> u_2</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ε </span><span class=\"fn\">σ </span><span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Parser/Stream.html#Parser.Stream\">Parser.Stream</a> <span class=\"fn\">σ</span> <span class=\"fn\">τ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Parser/Error.html#Parser.Error\">Parser.Error</a> <span class=\"fn\">ε</span> <span class=\"fn\">σ</span> <span class=\"fn\">τ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">input</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">τ</span></span> := <a href=\"./Init/Prelude.html#Option.none\">none</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">msg</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Parser/Parser.html#ParserT\">ParserT</a> <span class=\"fn\">ε</span> <span class=\"fn\">σ</span> <span class=\"fn\">τ</span> <span class=\"fn\">m</span> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/fgdorais/lean4-parser/blob/9cfe6f912bbb5ce5ad1e06d1b58a30bddae82e63/Parser/Parser.lean#L169-L172","name":"Parser.throwErrorWithMessage","line":169,"kind":"def","docLink":"./Parser/Parser.html#Parser.throwErrorWithMessage","doc":"Throw error with additional message. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Parser/Parser.html#Parser.throwErrorWithMessage\"><span class=\"name\">Parser</span>.<span class=\"name\">throwErrorWithMessage</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">τ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> u → <a href=\"./foundational_types.html\">Type</a> u_2</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ε </span><span class=\"fn\">σ </span><span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Parser/Stream.html#Parser.Stream\">Parser.Stream</a> <span class=\"fn\">σ</span> <span class=\"fn\">τ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Parser/Error.html#Parser.Error\">Parser.Error</a> <span class=\"fn\">ε</span> <span class=\"fn\">σ</span> <span class=\"fn\">τ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <span class=\"fn\">ε</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">msg</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Parser/Parser.html#ParserT\">ParserT</a> <span class=\"fn\">ε</span> <span class=\"fn\">σ</span> <span class=\"fn\">τ</span> <span class=\"fn\">m</span> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/fgdorais/lean4-parser/blob/9cfe6f912bbb5ce5ad1e06d1b58a30bddae82e63/Parser/Parser.lean#L164-L167","name":"Parser.throwUnexpected","line":164,"kind":"def","docLink":"./Parser/Parser.html#Parser.throwUnexpected","doc":"Throw error on unexpected token. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Parser/Parser.html#Parser.throwUnexpected\"><span class=\"name\">Parser</span>.<span class=\"name\">throwUnexpected</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">τ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> u → <a href=\"./foundational_types.html\">Type</a> u_2</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ε </span><span class=\"fn\">σ </span><span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Parser/Stream.html#Parser.Stream\">Parser.Stream</a> <span class=\"fn\">σ</span> <span class=\"fn\">τ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Parser/Error.html#Parser.Error\">Parser.Error</a> <span class=\"fn\">ε</span> <span class=\"fn\">σ</span> <span class=\"fn\">τ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">input</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">τ</span></span> := <a href=\"./Init/Prelude.html#Option.none\">none</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Parser/Parser.html#ParserT\">ParserT</a> <span class=\"fn\">ε</span> <span class=\"fn\">σ</span> <span class=\"fn\">τ</span> <span class=\"fn\">m</span> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/fgdorais/lean4-parser/blob/9cfe6f912bbb5ce5ad1e06d1b58a30bddae82e63/Parser/Parser.lean#L152-L160","name":"Parser.withCapture","line":152,"kind":"def","docLink":"./Parser/Parser.html#Parser.withCapture","doc":"`withCapture p` parses `p` and returns the output of `p` with the corresponding stream segment.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Parser/Parser.html#Parser.withCapture\"><span class=\"name\">Parser</span>.<span class=\"name\">withCapture</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">τ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> (max u_2 u_3) → <a href=\"./foundational_types.html\">Type</a> u_4</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ε </span><span class=\"fn\">σ </span><span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> (max u_2 u_3)}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Parser/Stream.html#Parser.Stream\">Parser.Stream</a> <span class=\"fn\">σ</span> <span class=\"fn\">τ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Parser/Error.html#Parser.Error\">Parser.Error</a> <span class=\"fn\">ε</span> <span class=\"fn\">σ</span> <span class=\"fn\">τ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <span class=\"fn\"><a href=\"./Parser/Parser.html#ParserT\">ParserT</a> <span class=\"fn\">ε</span> <span class=\"fn\">σ</span> <span class=\"fn\">τ</span> <span class=\"fn\">m</span> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Parser/Parser.html#ParserT\">ParserT</a> <span class=\"fn\">ε</span> <span class=\"fn\">σ</span> <span class=\"fn\">τ</span> <span class=\"fn\">m</span> (<span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Parser/Stream.html#Parser.Stream.Segment\">Stream.Segment</a> <span class=\"fn\">σ</span></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/fgdorais/lean4-parser/blob/9cfe6f912bbb5ce5ad1e06d1b58a30bddae82e63/Parser/Parser.lean#L143-L150","name":"Parser.withBacktracking","line":143,"kind":"def","docLink":"./Parser/Parser.html#Parser.withBacktracking","doc":"`withBacktracking p` parses `p` but does not consume any input on error. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Parser/Parser.html#Parser.withBacktracking\"><span class=\"name\">Parser</span>.<span class=\"name\">withBacktracking</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">τ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> u → <a href=\"./foundational_types.html\">Type</a> u_2</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ε </span><span class=\"fn\">σ </span><span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Parser/Stream.html#Parser.Stream\">Parser.Stream</a> <span class=\"fn\">σ</span> <span class=\"fn\">τ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Parser/Error.html#Parser.Error\">Parser.Error</a> <span class=\"fn\">ε</span> <span class=\"fn\">σ</span> <span class=\"fn\">τ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <span class=\"fn\"><a href=\"./Parser/Parser.html#ParserT\">ParserT</a> <span class=\"fn\">ε</span> <span class=\"fn\">σ</span> <span class=\"fn\">τ</span> <span class=\"fn\">m</span> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Parser/Parser.html#ParserT\">ParserT</a> <span class=\"fn\">ε</span> <span class=\"fn\">σ</span> <span class=\"fn\">τ</span> <span class=\"fn\">m</span> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/fgdorais/lean4-parser/blob/9cfe6f912bbb5ce5ad1e06d1b58a30bddae82e63/Parser/Parser.lean#L138-L141","name":"Parser.setPosition","line":138,"kind":"def","docLink":"./Parser/Parser.html#Parser.setPosition","doc":"Set stream position from parser. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Parser/Parser.html#Parser.setPosition\"><span class=\"name\">Parser</span>.<span class=\"name\">setPosition</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">τ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> u → <a href=\"./foundational_types.html\">Type</a> u_2</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ε </span><span class=\"fn\">σ</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Parser/Stream.html#Parser.Stream\">Parser.Stream</a> <span class=\"fn\">σ</span> <span class=\"fn\">τ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Parser/Error.html#Parser.Error\">Parser.Error</a> <span class=\"fn\">ε</span> <span class=\"fn\">σ</span> <span class=\"fn\">τ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pos</span> : <span class=\"fn\"><a href=\"./Parser/Stream.html#Parser.Stream.Position\">Stream.Position</a> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Parser/Parser.html#ParserT\">ParserT</a> <span class=\"fn\">ε</span> <span class=\"fn\">σ</span> <span class=\"fn\">τ</span> <span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#PUnit\">PUnit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/fgdorais/lean4-parser/blob/9cfe6f912bbb5ce5ad1e06d1b58a30bddae82e63/Parser/Parser.lean#L133-L136","name":"Parser.getPosition","line":133,"kind":"def","docLink":"./Parser/Parser.html#Parser.getPosition","doc":"Get stream position from parser. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Parser/Parser.html#Parser.getPosition\"><span class=\"name\">Parser</span>.<span class=\"name\">getPosition</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">τ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> u → <a href=\"./foundational_types.html\">Type</a> u_2</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ε </span><span class=\"fn\">σ</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Parser/Stream.html#Parser.Stream\">Parser.Stream</a> <span class=\"fn\">σ</span> <span class=\"fn\">τ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Parser/Error.html#Parser.Error\">Parser.Error</a> <span class=\"fn\">ε</span> <span class=\"fn\">σ</span> <span class=\"fn\">τ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Parser/Parser.html#ParserT\">ParserT</a> <span class=\"fn\">ε</span> <span class=\"fn\">σ</span> <span class=\"fn\">τ</span> <span class=\"fn\">m</span> <span class=\"fn\">(<a href=\"./Parser/Stream.html#Parser.Stream.Position\">Stream.Position</a> <span class=\"fn\">σ</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/fgdorais/lean4-parser/blob/9cfe6f912bbb5ce5ad1e06d1b58a30bddae82e63/Parser/Parser.lean#L128-L131","name":"Parser.setStream","line":128,"kind":"def","docLink":"./Parser/Parser.html#Parser.setStream","doc":"Set parser stream. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Parser/Parser.html#Parser.setStream\"><span class=\"name\">Parser</span>.<span class=\"name\">setStream</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">τ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> u → <a href=\"./foundational_types.html\">Type</a> u_2</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ε </span><span class=\"fn\">σ</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Parser/Stream.html#Parser.Stream\">Parser.Stream</a> <span class=\"fn\">σ</span> <span class=\"fn\">τ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Parser/Error.html#Parser.Error\">Parser.Error</a> <span class=\"fn\">ε</span> <span class=\"fn\">σ</span> <span class=\"fn\">τ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\">σ</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Parser/Parser.html#ParserT\">ParserT</a> <span class=\"fn\">ε</span> <span class=\"fn\">σ</span> <span class=\"fn\">τ</span> <span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#PUnit\">PUnit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/fgdorais/lean4-parser/blob/9cfe6f912bbb5ce5ad1e06d1b58a30bddae82e63/Parser/Parser.lean#L123-L126","name":"Parser.getStream","line":123,"kind":"def","docLink":"./Parser/Parser.html#Parser.getStream","doc":"Get parser stream. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Parser/Parser.html#Parser.getStream\"><span class=\"name\">Parser</span>.<span class=\"name\">getStream</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">τ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> u → <a href=\"./foundational_types.html\">Type</a> u_2</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ε </span><span class=\"fn\">σ</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Parser/Stream.html#Parser.Stream\">Parser.Stream</a> <span class=\"fn\">σ</span> <span class=\"fn\">τ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Parser/Error.html#Parser.Error\">Parser.Error</a> <span class=\"fn\">ε</span> <span class=\"fn\">σ</span> <span class=\"fn\">τ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Parser/Parser.html#ParserT\">ParserT</a> <span class=\"fn\">ε</span> <span class=\"fn\">σ</span> <span class=\"fn\">τ</span> <span class=\"fn\">m</span> <span class=\"fn\">σ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/fgdorais/lean4-parser/blob/9cfe6f912bbb5ce5ad1e06d1b58a30bddae82e63/Parser/Parser.lean#L113-L116","name":"SimpleParser","line":113,"kind":"def","docLink":"./Parser/Parser.html#SimpleParser","doc":"`SimpleParser σ τ` monad to parse tokens of type `τ` from the stream `σ` with simple error handling.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Parser/Parser.html#SimpleParser\"><span class=\"name\">SimpleParser</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">σ</span> : <a href=\"./foundational_types.html\">Type</a> (max u_1 u_2))</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">τ</span> : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Parser/Stream.html#Parser.Stream\">Parser.Stream</a> <span class=\"fn\">σ</span> <span class=\"fn\">τ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> (max u_1 u_2))</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (max u_1 u_2)</div></div>"},{"info":{"sourceLink":"https://github.com/fgdorais/lean4-parser/blob/9cfe6f912bbb5ce5ad1e06d1b58a30bddae82e63/Parser/Parser.lean#L107-L111","name":"SimpleParserT","line":107,"kind":"def","docLink":"./Parser/Parser.html#SimpleParserT","doc":"`SimpleParserT σ τ` monad transformer to parse tokens of type `τ` from the stream `σ` with simple\nerror handling.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Parser/Parser.html#SimpleParserT\"><span class=\"name\">SimpleParserT</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">σ</span> : <a href=\"./foundational_types.html\">Type</a> (max u_1 u_2))</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">τ</span> : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Parser/Stream.html#Parser.Stream\">Parser.Stream</a> <span class=\"fn\">σ</span> <span class=\"fn\">τ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> (max u_1 u_2) → <a href=\"./foundational_types.html\">Type</a> u_3</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> (max u_1 u_2))</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (max u_3 u_1 u_2)</div></div>"},{"info":{"sourceLink":"https://github.com/fgdorais/lean4-parser/blob/9cfe6f912bbb5ce5ad1e06d1b58a30bddae82e63/Parser/Parser.lean#L102-L105","name":"BasicParser","line":102,"kind":"def","docLink":"./Parser/Parser.html#BasicParser","doc":"`BasicParser σ τ` monad to parse tokens of type `τ` from the stream `σ` with basic error handling.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Parser/Parser.html#BasicParser\"><span class=\"name\">BasicParser</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">σ</span> : <a href=\"./foundational_types.html\">Type</a> (max u_1 u_2))</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">τ</span> : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Parser/Stream.html#Parser.Stream\">Parser.Stream</a> <span class=\"fn\">σ</span> <span class=\"fn\">τ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> (max u_1 u_2))</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (max u_1 u_2)</div></div>"},{"info":{"sourceLink":"https://github.com/fgdorais/lean4-parser/blob/9cfe6f912bbb5ce5ad1e06d1b58a30bddae82e63/Parser/Parser.lean#L96-L100","name":"BasicParserT","line":96,"kind":"def","docLink":"./Parser/Parser.html#BasicParserT","doc":"`BasicParserT σ τ` monad transformer to parse tokens of type `τ` from the stream `σ` with basic\nerror handling.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Parser/Parser.html#BasicParserT\"><span class=\"name\">BasicParserT</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">σ</span> : <a href=\"./foundational_types.html\">Type</a> (max u_1 u_2))</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">τ</span> : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Parser/Stream.html#Parser.Stream\">Parser.Stream</a> <span class=\"fn\">σ</span> <span class=\"fn\">τ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> (max u_1 u_2) → <a href=\"./foundational_types.html\">Type</a> u_3</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> (max u_1 u_2))</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (max u_3 u_1 u_2)</div></div>"},{"info":{"sourceLink":"https://github.com/fgdorais/lean4-parser/blob/9cfe6f912bbb5ce5ad1e06d1b58a30bddae82e63/Parser/Parser.lean#L90-L94","name":"TrivialParser","line":90,"kind":"def","docLink":"./Parser/Parser.html#TrivialParser","doc":"`TrivialParser σ τ` monad to parse tokens of type `τ` from the stream `σ` with trivial error\nhandling.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Parser/Parser.html#TrivialParser\"><span class=\"name\">TrivialParser</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">σ</span> : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">τ</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Parser/Stream.html#Parser.Stream\">Parser.Stream</a> <span class=\"fn\">σ</span> <span class=\"fn\">τ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/fgdorais/lean4-parser/blob/9cfe6f912bbb5ce5ad1e06d1b58a30bddae82e63/Parser/Parser.lean#L84-L88","name":"TrivialParserT","line":84,"kind":"def","docLink":"./Parser/Parser.html#TrivialParserT","doc":"`TrivialParserT σ τ` monad transformer to parse tokens of type `τ` from the stream `σ` with trivial\nerror handling.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Parser/Parser.html#TrivialParserT\"><span class=\"name\">TrivialParserT</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">σ</span> : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">τ</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Parser/Stream.html#Parser.Stream\">Parser.Stream</a> <span class=\"fn\">σ</span> <span class=\"fn\">τ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a> u_3</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u_3</div></div>"},{"info":{"sourceLink":"https://github.com/fgdorais/lean4-parser/blob/9cfe6f912bbb5ce5ad1e06d1b58a30bddae82e63/Parser/Parser.lean#L79-L82","name":"Parser.run","line":79,"kind":"def","docLink":"./Parser/Parser.html#Parser.run","doc":"Run parser `p` on input stream `s`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Parser/Parser.html#Parser.run\"><span class=\"name\">Parser</span>.<span class=\"name\">run</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ε </span><span class=\"fn\">σ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">τ</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Parser/Stream.html#Parser.Stream\">Parser.Stream</a> <span class=\"fn\">σ</span> <span class=\"fn\">τ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Parser/Error.html#Parser.Error\">Parser.Error</a> <span class=\"fn\">ε</span> <span class=\"fn\">σ</span> <span class=\"fn\">τ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <span class=\"fn\"><a href=\"./Parser/Parser.html#Parser\">Parser</a> <span class=\"fn\">ε</span> <span class=\"fn\">σ</span> <span class=\"fn\">τ</span> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\">σ</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Parser/Parser.html#Parser.Result\">Parser.Result</a> <span class=\"fn\">ε</span> <span class=\"fn\">σ</span> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/fgdorais/lean4-parser/blob/9cfe6f912bbb5ce5ad1e06d1b58a30bddae82e63/Parser/Parser.lean#L74-L77","name":"Parser","line":74,"kind":"def","docLink":"./Parser/Parser.html#Parser","doc":"`Parser ε σ τ` monad to parse tokens of type `τ` from the stream type `σ` with error type `ε`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Parser/Parser.html#Parser\"><span class=\"name\">Parser</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ε </span><span class=\"fn\">σ</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">τ</span> : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Parser/Stream.html#Parser.Stream\">Parser.Stream</a> <span class=\"fn\">σ</span> <span class=\"fn\">τ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Parser/Error.html#Parser.Error\">Parser.Error</a> <span class=\"fn\">ε</span> <span class=\"fn\">σ</span> <span class=\"fn\">τ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u_1</div></div>"},{"info":{"sourceLink":"https://github.com/fgdorais/lean4-parser/blob/9cfe6f912bbb5ce5ad1e06d1b58a30bddae82e63/Parser/Parser.lean#L70-L72","name":"instMonadLiftParserTOfMonad","line":70,"kind":"instance","docLink":"./Parser/Parser.html#instMonadLiftParserTOfMonad","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Parser/Parser.html#instMonadLiftParserTOfMonad\"><span class=\"name\">instMonadLiftParserTOfMonad</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">σ </span><span class=\"fn\">ε</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">τ</span> : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> u_1 → <a href=\"./foundational_types.html\">Type</a> u_3</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Parser/Stream.html#Parser.Stream\">Parser.Stream</a> <span class=\"fn\">σ</span> <span class=\"fn\">τ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Parser/Error.html#Parser.Error\">Parser.Error</a> <span class=\"fn\">ε</span> <span class=\"fn\">σ</span> <span class=\"fn\">τ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#MonadLift\">MonadLift</a> <span class=\"fn\">m</span> <span class=\"fn\">(<a href=\"./Parser/Parser.html#ParserT\">ParserT</a> <span class=\"fn\">ε</span> <span class=\"fn\">σ</span> <span class=\"fn\">τ</span> <span class=\"fn\">m</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/fgdorais/lean4-parser/blob/9cfe6f912bbb5ce5ad1e06d1b58a30bddae82e63/Parser/Parser.lean#L62-L68","name":"instOrElseParserTOfMonad","line":62,"kind":"instance","docLink":"./Parser/Parser.html#instOrElseParserTOfMonad","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Parser/Parser.html#instOrElseParserTOfMonad\"><span class=\"name\">instOrElseParserTOfMonad</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">σ </span><span class=\"fn\">ε</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">τ</span> : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> u_1 → <a href=\"./foundational_types.html\">Type</a> u_3</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Parser/Stream.html#Parser.Stream\">Parser.Stream</a> <span class=\"fn\">σ</span> <span class=\"fn\">τ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Parser/Error.html#Parser.Error\">Parser.Error</a> <span class=\"fn\">ε</span> <span class=\"fn\">σ</span> <span class=\"fn\">τ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#OrElse\">OrElse</a> <span class=\"fn\">(<a href=\"./Parser/Parser.html#ParserT\">ParserT</a> <span class=\"fn\">ε</span> <span class=\"fn\">σ</span> <span class=\"fn\">τ</span> <span class=\"fn\">m</span> <span class=\"fn\">α</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/fgdorais/lean4-parser/blob/9cfe6f912bbb5ce5ad1e06d1b58a30bddae82e63/Parser/Parser.lean#L55-L60","name":"instMonadExceptOfParserTOfMonad","line":55,"kind":"instance","docLink":"./Parser/Parser.html#instMonadExceptOfParserTOfMonad","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Parser/Parser.html#instMonadExceptOfParserTOfMonad\"><span class=\"name\">instMonadExceptOfParserTOfMonad</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">σ </span><span class=\"fn\">ε</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">τ</span> : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> u_1 → <a href=\"./foundational_types.html\">Type</a> u_3</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Parser/Stream.html#Parser.Stream\">Parser.Stream</a> <span class=\"fn\">σ</span> <span class=\"fn\">τ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Parser/Error.html#Parser.Error\">Parser.Error</a> <span class=\"fn\">ε</span> <span class=\"fn\">σ</span> <span class=\"fn\">τ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#MonadExceptOf\">MonadExceptOf</a> <span class=\"fn\">ε</span> <span class=\"fn\">(<a href=\"./Parser/Parser.html#ParserT\">ParserT</a> <span class=\"fn\">ε</span> <span class=\"fn\">σ</span> <span class=\"fn\">τ</span> <span class=\"fn\">m</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/fgdorais/lean4-parser/blob/9cfe6f912bbb5ce5ad1e06d1b58a30bddae82e63/Parser/Parser.lean#L30-L53","name":"instMonadParserT","line":30,"kind":"instance","docLink":"./Parser/Parser.html#instMonadParserT","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Parser/Parser.html#instMonadParserT\"><span class=\"name\">instMonadParserT</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">σ </span><span class=\"fn\">ε</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">τ</span> : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> u_1 → <a href=\"./foundational_types.html\">Type</a> u_3</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Parser/Stream.html#Parser.Stream\">Parser.Stream</a> <span class=\"fn\">σ</span> <span class=\"fn\">τ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Parser/Error.html#Parser.Error\">Parser.Error</a> <span class=\"fn\">ε</span> <span class=\"fn\">σ</span> <span class=\"fn\">τ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">(<a href=\"./Parser/Parser.html#ParserT\">ParserT</a> <span class=\"fn\">ε</span> <span class=\"fn\">σ</span> <span class=\"fn\">τ</span> <span class=\"fn\">m</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/fgdorais/lean4-parser/blob/9cfe6f912bbb5ce5ad1e06d1b58a30bddae82e63/Parser/Parser.lean#L25-L28","name":"ParserT.run","line":25,"kind":"def","docLink":"./Parser/Parser.html#ParserT.run","doc":"Run the monadic parser `p` on input stream `s`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Parser/Parser.html#ParserT.run\"><span class=\"name\">ParserT</span>.<span class=\"name\">run</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">σ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">τ</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ε</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> u_1 → <a href=\"./foundational_types.html\">Type</a> u_3</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Parser/Stream.html#Parser.Stream\">Parser.Stream</a> <span class=\"fn\">σ</span> <span class=\"fn\">τ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Parser/Error.html#Parser.Error\">Parser.Error</a> <span class=\"fn\">ε</span> <span class=\"fn\">σ</span> <span class=\"fn\">τ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <span class=\"fn\"><a href=\"./Parser/Parser.html#ParserT\">ParserT</a> <span class=\"fn\">ε</span> <span class=\"fn\">σ</span> <span class=\"fn\">τ</span> <span class=\"fn\">m</span> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\">σ</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">(<a href=\"./Parser/Parser.html#Parser.Result\">Parser.Result</a> <span class=\"fn\">ε</span> <span class=\"fn\">σ</span> <span class=\"fn\">α</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/fgdorais/lean4-parser/blob/9cfe6f912bbb5ce5ad1e06d1b58a30bddae82e63/Parser/Parser.lean#L18-L23","name":"ParserT","line":18,"kind":"def","docLink":"./Parser/Parser.html#ParserT","doc":"`ParserT ε σ τ` is a monad transformer to parse tokens of type `τ` from the stream type `σ` with\nerror type `ε`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Parser/Parser.html#ParserT\"><span class=\"name\">ParserT</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ε </span><span class=\"fn\">σ</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">τ</span> : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Parser/Stream.html#Parser.Stream\">Parser.Stream</a> <span class=\"fn\">σ</span> <span class=\"fn\">τ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Parser/Error.html#Parser.Error\">Parser.Error</a> <span class=\"fn\">ε</span> <span class=\"fn\">σ</span> <span class=\"fn\">τ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> u_1 → <a href=\"./foundational_types.html\">Type</a> u_4</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (max u_4 u_1)</div></div>"},{"info":{"sourceLink":"https://github.com/fgdorais/lean4-parser/blob/9cfe6f912bbb5ce5ad1e06d1b58a30bddae82e63/Parser/Parser.lean#L16-L16","name":"Parser.instReprResult","line":16,"kind":"instance","docLink":"./Parser/Parser.html#Parser.instReprResult","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Parser/Parser.html#Parser.instReprResult\"><span class=\"name\">Parser</span>.<span class=\"name\">instReprResult</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ε✝ </span><span class=\"fn\">σ✝ </span><span class=\"fn\">α✝</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <span class=\"fn\">ε✝</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <span class=\"fn\">σ✝</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <span class=\"fn\">α✝</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <span class=\"fn\">(<a href=\"./Parser/Parser.html#Parser.Result\">Parser.Result</a> <span class=\"fn\">ε✝</span> <span class=\"fn\">σ✝</span> <span class=\"fn\">α✝</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/fgdorais/lean4-parser/blob/9cfe6f912bbb5ce5ad1e06d1b58a30bddae82e63/Parser/Parser.lean#L16-L16","name":"Parser.instInhabitedResult","line":16,"kind":"instance","docLink":"./Parser/Parser.html#Parser.instInhabitedResult","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Parser/Parser.html#Parser.instInhabitedResult\"><span class=\"name\">Parser</span>.<span class=\"name\">instInhabitedResult</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a✝ </span><span class=\"fn\">a✝¹</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">a✝¹</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a✝²</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">a✝²</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<a href=\"./Parser/Parser.html#Parser.Result\">Parser.Result</a> <span class=\"fn\">a✝</span> <span class=\"fn\">a✝¹</span> <span class=\"fn\">a✝²</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/fgdorais/lean4-parser/blob/9cfe6f912bbb5ce5ad1e06d1b58a30bddae82e63/Parser/Parser.lean#L14-L15","name":"Parser.Result.error","line":14,"kind":"ctor","docLink":"./Parser/Parser.html#Parser.Result.error","doc":"Result: error! "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Parser/Parser.html#Parser.Result.error\"><span class=\"name\">Parser</span>.<span class=\"name\">Result</span>.<span class=\"name\">error</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ε </span><span class=\"fn\">σ </span><span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">σ</span> → <span class=\"fn\"><span class=\"fn\">ε</span> → <span class=\"fn\"><a href=\"./Parser/Parser.html#Parser.Result\">Parser.Result</a> <span class=\"fn\">ε</span> <span class=\"fn\">σ</span> <span class=\"fn\">α</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/fgdorais/lean4-parser/blob/9cfe6f912bbb5ce5ad1e06d1b58a30bddae82e63/Parser/Parser.lean#L12-L13","name":"Parser.Result.ok","line":12,"kind":"ctor","docLink":"./Parser/Parser.html#Parser.Result.ok","doc":"Result: success! "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Parser/Parser.html#Parser.Result.ok\"><span class=\"name\">Parser</span>.<span class=\"name\">Result</span>.<span class=\"name\">ok</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ε </span><span class=\"fn\">σ </span><span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">σ</span> → <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><a href=\"./Parser/Parser.html#Parser.Result\">Parser.Result</a> <span class=\"fn\">ε</span> <span class=\"fn\">σ</span> <span class=\"fn\">α</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/fgdorais/lean4-parser/blob/9cfe6f912bbb5ce5ad1e06d1b58a30bddae82e63/Parser/Parser.lean#L10-L16","name":"Parser.Result","line":10,"kind":"inductive","docLink":"./Parser/Parser.html#Parser.Result","doc":"Parser result type. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Parser/Parser.html#Parser.Result\"><span class=\"name\">Parser</span>.<span class=\"name\">Result</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ε </span><span class=\"fn\">σ </span><span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u</div></div>"}]}