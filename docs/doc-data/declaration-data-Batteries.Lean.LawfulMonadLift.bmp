{"name":"Batteries.Lean.LawfulMonadLift","instances":[{"typeNames":["BaseIO","EIO"],"name":"instLawfulMonadLiftBaseIOEIO","className":"LawfulMonadLift"},{"typeNames":["ST","EST"],"name":"instLawfulMonadLiftSTEST","className":"LawfulMonadLift"},{"typeNames":["IO","Lean.Core.CoreM"],"name":"instLawfulMonadLiftIOCoreM","className":"LawfulMonadLift"},{"typeNames":["EIO","Lean.Elab.Command.CommandElabM"],"name":"instLawfulMonadLiftTEIOExceptionCommandElabM","className":"LawfulMonadLiftT"},{"typeNames":["EIO","Lean.Core.CoreM"],"name":"instLawfulMonadLiftTEIOExceptionCoreM","className":"LawfulMonadLiftT"},{"typeNames":["Lean.Core.CoreM","Lean.Meta.MetaM"],"name":"instLawfulMonadLiftTCoreMMetaM","className":"LawfulMonadLiftT"},{"typeNames":["Lean.Meta.MetaM","Lean.Elab.Term.TermElabM"],"name":"instLawfulMonadLiftTMetaMTermElabM","className":"LawfulMonadLiftT"},{"typeNames":["Lean.Elab.Term.TermElabM","Lean.Elab.Tactic.TacticM"],"name":"instLawfulMonadLiftTTermElabMTacticM","className":"LawfulMonadLiftT"}],"imports":["Init","Batteries.Control.Lawful.MonadLift","Batteries.Lean.LawfulMonad"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/78e1181c4752c7e10874d2ed5a6a15063f4a35b6/Batteries/Lean/LawfulMonadLift.lean#L55-L55","name":"instLawfulMonadLiftTTermElabMTacticM","line":55,"kind":"instance","docLink":"./Batteries/Lean/LawfulMonadLift.html#instLawfulMonadLiftTTermElabMTacticM","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Lean/LawfulMonadLift.html#instLawfulMonadLiftTTermElabMTacticM\"><span class=\"name\">instLawfulMonadLiftTTermElabMTacticM</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Batteries/Control/Lawful/MonadLift.html#LawfulMonadLiftT\">LawfulMonadLiftT</a> <a href=\"./Lean/Elab/Term.html#Lean.Elab.Term.TermElabM\">Lean.Elab.TermElabM</a> <a href=\"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.TacticM\">Lean.Elab.Tactic.TacticM</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/78e1181c4752c7e10874d2ed5a6a15063f4a35b6/Batteries/Lean/LawfulMonadLift.lean#L54-L54","name":"instLawfulMonadLiftTMetaMTermElabM","line":54,"kind":"instance","docLink":"./Batteries/Lean/LawfulMonadLift.html#instLawfulMonadLiftTMetaMTermElabM","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Lean/LawfulMonadLift.html#instLawfulMonadLiftTMetaMTermElabM\"><span class=\"name\">instLawfulMonadLiftTMetaMTermElabM</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Batteries/Control/Lawful/MonadLift.html#LawfulMonadLiftT\">LawfulMonadLiftT</a> <a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <a href=\"./Lean/Elab/Term.html#Lean.Elab.Term.TermElabM\">Lean.Elab.TermElabM</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/78e1181c4752c7e10874d2ed5a6a15063f4a35b6/Batteries/Lean/LawfulMonadLift.lean#L53-L53","name":"instLawfulMonadLiftTCoreMMetaM","line":53,"kind":"instance","docLink":"./Batteries/Lean/LawfulMonadLift.html#instLawfulMonadLiftTCoreMMetaM","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Lean/LawfulMonadLift.html#instLawfulMonadLiftTCoreMMetaM\"><span class=\"name\">instLawfulMonadLiftTCoreMMetaM</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Batteries/Control/Lawful/MonadLift.html#LawfulMonadLiftT\">LawfulMonadLiftT</a> <a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">Lean.CoreM</a> <a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/78e1181c4752c7e10874d2ed5a6a15063f4a35b6/Batteries/Lean/LawfulMonadLift.lean#L52-L52","name":"instLawfulMonadLiftTEIOExceptionCoreM","line":52,"kind":"instance","docLink":"./Batteries/Lean/LawfulMonadLift.html#instLawfulMonadLiftTEIOExceptionCoreM","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Lean/LawfulMonadLift.html#instLawfulMonadLiftTEIOExceptionCoreM\"><span class=\"name\">instLawfulMonadLiftTEIOExceptionCoreM</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Batteries/Control/Lawful/MonadLift.html#LawfulMonadLiftT\">LawfulMonadLiftT</a> <span class=\"fn\">(<a href=\"./Init/System/IO.html#EIO\">EIO</a> <a href=\"./Lean/Exception.html#Lean.Exception\">Lean.Exception</a>)</span> <a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">Lean.CoreM</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/78e1181c4752c7e10874d2ed5a6a15063f4a35b6/Batteries/Lean/LawfulMonadLift.lean#L51-L51","name":"instLawfulMonadLiftTEIOExceptionCommandElabM","line":51,"kind":"instance","docLink":"./Batteries/Lean/LawfulMonadLift.html#instLawfulMonadLiftTEIOExceptionCommandElabM","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Lean/LawfulMonadLift.html#instLawfulMonadLiftTEIOExceptionCommandElabM\"><span class=\"name\">instLawfulMonadLiftTEIOExceptionCommandElabM</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Batteries/Control/Lawful/MonadLift.html#LawfulMonadLiftT\">LawfulMonadLiftT</a> <span class=\"fn\">(<a href=\"./Init/System/IO.html#EIO\">EIO</a> <a href=\"./Lean/Exception.html#Lean.Exception\">Lean.Exception</a>)</span> <a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.CommandElabM\">Lean.Elab.Command.CommandElabM</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/78e1181c4752c7e10874d2ed5a6a15063f4a35b6/Batteries/Lean/LawfulMonadLift.lean#L37-L49","name":"instLawfulMonadLiftIOCoreM","line":37,"kind":"instance","docLink":"./Batteries/Lean/LawfulMonadLift.html#instLawfulMonadLiftIOCoreM","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Lean/LawfulMonadLift.html#instLawfulMonadLiftIOCoreM\"><span class=\"name\">instLawfulMonadLiftIOCoreM</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Batteries/Control/Lawful/MonadLift.html#LawfulMonadLift\">LawfulMonadLift</a> <a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">Lean.CoreM</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/78e1181c4752c7e10874d2ed5a6a15063f4a35b6/Batteries/Lean/LawfulMonadLift.lean#L26-L35","name":"instLawfulMonadLiftSTEST","line":26,"kind":"instance","docLink":"./Batteries/Lean/LawfulMonadLift.html#instLawfulMonadLiftSTEST","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Lean/LawfulMonadLift.html#instLawfulMonadLiftSTEST\"><span class=\"name\">instLawfulMonadLiftSTEST</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">σ </span><span class=\"fn\">ε</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Batteries/Control/Lawful/MonadLift.html#LawfulMonadLift\">LawfulMonadLift</a> <span class=\"fn\">(<a href=\"./Init/System/ST.html#ST\">ST</a> <span class=\"fn\">σ</span>)</span> <span class=\"fn\">(<a href=\"./Init/System/ST.html#EST\">EST</a> <span class=\"fn\">ε</span> <span class=\"fn\">σ</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/78e1181c4752c7e10874d2ed5a6a15063f4a35b6/Batteries/Lean/LawfulMonadLift.lean#L15-L24","name":"instLawfulMonadLiftBaseIOEIO","line":15,"kind":"instance","docLink":"./Batteries/Lean/LawfulMonadLift.html#instLawfulMonadLiftBaseIOEIO","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Lean/LawfulMonadLift.html#instLawfulMonadLiftBaseIOEIO\"><span class=\"name\">instLawfulMonadLiftBaseIOEIO</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ε</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Batteries/Control/Lawful/MonadLift.html#LawfulMonadLift\">LawfulMonadLift</a> <a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Init/System/IO.html#EIO\">EIO</a> <span class=\"fn\">ε</span>)</span></span></div></div>"}]}