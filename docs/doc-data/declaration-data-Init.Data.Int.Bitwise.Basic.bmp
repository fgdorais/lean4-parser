{"name":"Init.Data.Int.Bitwise.Basic","instances":[{"typeNames":["Int"],"name":"Int.instComplement","className":"Complement"},{"typeNames":["Int","Nat","Int"],"name":"Int.instHShiftRightNat","className":"HShiftRight"}],"imports":["Init.Data.Int.Basic","Init.Data.Nat.Bitwise.Basic"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/Int/Bitwise/Basic.lean#L48-L48","name":"Int.instHShiftRightNat","line":48,"kind":"instance","docLink":"./Init/Data/Int/Bitwise/Basic.html#Int.instHShiftRightNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Bitwise/Basic.html#Int.instHShiftRightNat\"><span class=\"name\">Int</span>.<span class=\"name\">instHShiftRightNat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#HShiftRight\">HShiftRight</a> <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a> <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/Int/Bitwise/Basic.lean#L32-L46","name":"Int.shiftRight","line":32,"kind":"def","docLink":"./Init/Data/Int/Bitwise/Basic.html#Int.shiftRight","doc":"Bitwise right shift, usually accessed via the `>>>` operator.\n\nInterprets the integer as an infinite sequence of bits in two's complement and shifts the value to\nthe right.\n\nExamples:\n* `( 0b0111 : Int) >>> 1 =  0b0011`\n* `( 0b1000 : Int) >>> 1 =  0b0100`\n* `(-0b1000 : Int) >>> 1 = -0b0100`\n* `(-0b0111 : Int) >>> 1 = -0b0100`\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Bitwise/Basic.html#Int.shiftRight\"><span class=\"name\">Int</span>.<span class=\"name\">shiftRight</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Int/Basic.html#Int\">Int</a> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">Nat</a> → <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/Int/Bitwise/Basic.lean#L30-L30","name":"Int.instComplement","line":30,"kind":"instance","docLink":"./Init/Data/Int/Bitwise/Basic.html#Int.instComplement","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Bitwise/Basic.html#Int.instComplement\"><span class=\"name\">Int</span>.<span class=\"name\">instComplement</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Complement\">Complement</a> <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/Int/Bitwise/Basic.lean#L16-L28","name":"Int.not","line":16,"kind":"def","docLink":"./Init/Data/Int/Bitwise/Basic.html#Int.not","doc":"Bitwise not, usually accessed via the `~~~` prefix operator.\n\nInterprets the integer as an infinite sequence of bits in two's complement and complements each bit.\n\nExamples:\n* `~~~(0 : Int) = -1`\n* `~~~(1 : Int) = -2`\n* `~~~(-1 : Int) = 0`\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Bitwise/Basic.html#Int.not\"><span class=\"name\">Int</span>.<span class=\"name\">not</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Int/Basic.html#Int\">Int</a> → <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a></span></div></div>"}]}