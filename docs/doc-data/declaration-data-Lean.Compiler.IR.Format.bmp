{"name":"Lean.Compiler.IR.Format","instances":[{"typeNames":["Lean.IR.Arg"],"name":"Lean.IR.instToFormatArg","className":"Std.ToFormat"},{"typeNames":["Lean.IR.LitVal"],"name":"Lean.IR.instToFormatLitVal","className":"Std.ToFormat"},{"typeNames":["Lean.IR.CtorInfo"],"name":"Lean.IR.instToFormatCtorInfo","className":"Std.ToFormat"},{"typeNames":["Lean.IR.Expr"],"name":"Lean.IR.instToFormatExpr","className":"Std.ToFormat"},{"typeNames":["Lean.IR.Expr"],"name":"Lean.IR.instToStringExpr","className":"ToString"},{"typeNames":["Lean.IR.IRType"],"name":"Lean.IR.instToFormatIRType","className":"Std.ToFormat"},{"typeNames":["Lean.IR.IRType"],"name":"Lean.IR.instToStringIRType","className":"ToString"},{"typeNames":["Lean.IR.Param"],"name":"Lean.IR.instToFormatParam","className":"Std.ToFormat"},{"typeNames":["Lean.IR.FnBody"],"name":"Lean.IR.instToFormatFnBody","className":"Std.ToFormat"},{"typeNames":["Lean.IR.FnBody"],"name":"Lean.IR.instToStringFnBody","className":"ToString"},{"typeNames":["Lean.IR.Decl"],"name":"Lean.IR.instToFormatDecl","className":"Std.ToFormat"},{"typeNames":["Lean.IR.Decl"],"name":"Lean.IR.instToStringDecl","className":"ToString"}],"imports":["Lean.Compiler.IR.Basic"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/Format.lean#L141-L141","name":"Lean.IR.instToStringDecl","line":141,"kind":"instance","docLink":"./Lean/Compiler/IR/Format.html#Lean.IR.instToStringDecl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/Format.html#Lean.IR.instToStringDecl\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">instToStringDecl</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/ToString/Basic.html#ToString\">ToString</a> <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Decl\">Decl</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/Format.lean#L137-L139","name":"Lean.IR.declToString","line":137,"kind":"def","docLink":"./Lean/Compiler/IR/Format.html#Lean.IR.declToString","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/Format.html#Lean.IR.declToString\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">declToString</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">d</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Decl\">Decl</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#String\">String</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/Format.lean#L135-L135","name":"Lean.IR.instToFormatDecl","line":135,"kind":"instance","docLink":"./Lean/Compiler/IR/Format.html#Lean.IR.instToFormatDecl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/Format.html#Lean.IR.instToFormatDecl\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">instToFormatDecl</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Format/Basic.html#Std.ToFormat\">ToFormat</a> <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Decl\">Decl</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/Format.lean#L130-L133","name":"Lean.IR.formatDecl","line":130,"kind":"def","docLink":"./Lean/Compiler/IR/Format.html#Lean.IR.formatDecl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/Format.html#Lean.IR.formatDecl\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">formatDecl</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">decl</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Decl\">Decl</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">indent</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a> := <span class=\"fn\">2</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Format/Basic.html#Std.Format\">Format</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/Format.lean#L128-L128","name":"Lean.IR.instToStringFnBody","line":128,"kind":"instance","docLink":"./Lean/Compiler/IR/Format.html#Lean.IR.instToStringFnBody","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/Format.html#Lean.IR.instToStringFnBody\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">instToStringFnBody</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/ToString/Basic.html#ToString\">ToString</a> <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.FnBody\">FnBody</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/Format.lean#L127-L127","name":"Lean.IR.instToFormatFnBody","line":127,"kind":"instance","docLink":"./Lean/Compiler/IR/Format.html#Lean.IR.instToFormatFnBody","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/Format.html#Lean.IR.instToFormatFnBody\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">instToFormatFnBody</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Format/Basic.html#Std.ToFormat\">ToFormat</a> <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.FnBody\">FnBody</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/Format.lean#L110-L124","name":"Lean.IR.formatFnBody.loop","line":110,"kind":"opaque","docLink":"./Lean/Compiler/IR/Format.html#Lean.IR.formatFnBody.loop","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/Format.html#Lean.IR.formatFnBody.loop\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">formatFnBody</span>.<span class=\"name\">loop</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">indent</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a> := <span class=\"fn\">2</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.FnBody\">FnBody</a> → <a href=\"./Init/Data/Format/Basic.html#Std.Format\">Format</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/Format.lean#L109-L125","name":"Lean.IR.formatFnBody","line":109,"kind":"def","docLink":"./Lean/Compiler/IR/Format.html#Lean.IR.formatFnBody","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/Format.html#Lean.IR.formatFnBody\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">formatFnBody</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fnBody</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.FnBody\">FnBody</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">indent</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a> := <span class=\"fn\">2</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Format/Basic.html#Std.Format\">Format</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/Format.lean#L89-L103","name":"Lean.IR.formatFnBodyHead","line":89,"kind":"def","docLink":"./Lean/Compiler/IR/Format.html#Lean.IR.formatFnBodyHead","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/Format.html#Lean.IR.formatFnBodyHead\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">formatFnBodyHead</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.FnBody\">FnBody</a> → <a href=\"./Init/Data/Format/Basic.html#Std.Format\">Format</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/Format.lean#L86-L87","name":"Lean.IR.formatParams","line":86,"kind":"def","docLink":"./Lean/Compiler/IR/Format.html#Lean.IR.formatParams","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/Format.html#Lean.IR.formatParams\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">formatParams</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ps</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Param\">Param</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Format/Basic.html#Std.Format\">Format</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/Format.lean#L82-L84","name":"Lean.IR.formatAlt","line":82,"kind":"def","docLink":"./Lean/Compiler/IR/Format.html#Lean.IR.formatAlt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/Format.html#Lean.IR.formatAlt\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">formatAlt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fmt</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.FnBody\">FnBody</a> → <a href=\"./Init/Data/Format/Basic.html#Std.Format\">Format</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">indent</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Alt\">Alt</a> → <a href=\"./Init/Data/Format/Basic.html#Std.Format\">Format</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/Format.lean#L80-L80","name":"Lean.IR.instToFormatParam","line":80,"kind":"instance","docLink":"./Lean/Compiler/IR/Format.html#Lean.IR.instToFormatParam","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/Format.html#Lean.IR.instToFormatParam\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">instToFormatParam</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Format/Basic.html#Std.ToFormat\">ToFormat</a> <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Param\">Param</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/Format.lean#L75-L75","name":"Lean.IR.instToStringIRType","line":75,"kind":"instance","docLink":"./Lean/Compiler/IR/Format.html#Lean.IR.instToStringIRType","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/Format.html#Lean.IR.instToStringIRType\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">instToStringIRType</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/ToString/Basic.html#ToString\">ToString</a> <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.IRType\">IRType</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/Format.lean#L74-L74","name":"Lean.IR.instToFormatIRType","line":74,"kind":"instance","docLink":"./Lean/Compiler/IR/Format.html#Lean.IR.instToFormatIRType","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/Format.html#Lean.IR.instToFormatIRType\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">instToFormatIRType</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Format/Basic.html#Std.ToFormat\">ToFormat</a> <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.IRType\">IRType</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/Format.lean#L54-L54","name":"Lean.IR.instToStringExpr","line":54,"kind":"instance","docLink":"./Lean/Compiler/IR/Format.html#Lean.IR.instToStringExpr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/Format.html#Lean.IR.instToStringExpr\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">instToStringExpr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/ToString/Basic.html#ToString\">ToString</a> <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Expr\">Expr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/Format.lean#L53-L53","name":"Lean.IR.instToFormatExpr","line":53,"kind":"instance","docLink":"./Lean/Compiler/IR/Format.html#Lean.IR.instToFormatExpr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/Format.html#Lean.IR.instToFormatExpr\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">instToFormatExpr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Format/Basic.html#Std.ToFormat\">ToFormat</a> <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Expr\">Expr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/Format.lean#L36-L36","name":"Lean.IR.instToFormatCtorInfo","line":36,"kind":"instance","docLink":"./Lean/Compiler/IR/Format.html#Lean.IR.instToFormatCtorInfo","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/Format.html#Lean.IR.instToFormatCtorInfo\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">instToFormatCtorInfo</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Format/Basic.html#Std.ToFormat\">ToFormat</a> <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.CtorInfo\">CtorInfo</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/Format.lean#L25-L25","name":"Lean.IR.instToFormatLitVal","line":25,"kind":"instance","docLink":"./Lean/Compiler/IR/Format.html#Lean.IR.instToFormatLitVal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/Format.html#Lean.IR.instToFormatLitVal\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">instToFormatLitVal</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Format/Basic.html#Std.ToFormat\">ToFormat</a> <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.LitVal\">LitVal</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/Format.lean#L18-L19","name":"Lean.IR.formatArray","line":18,"kind":"def","docLink":"./Lean/Compiler/IR/Format.html#Lean.IR.formatArray","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/Format.html#Lean.IR.formatArray\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">formatArray</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/Format/Basic.html#Std.ToFormat\">ToFormat</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">args</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Format/Basic.html#Std.Format\">Format</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/Format.lean#L16-L16","name":"Lean.IR.instToFormatArg","line":16,"kind":"instance","docLink":"./Lean/Compiler/IR/Format.html#Lean.IR.instToFormatArg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/Format.html#Lean.IR.instToFormatArg\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">instToFormatArg</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Format/Basic.html#Std.ToFormat\">ToFormat</a> <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Arg\">Arg</a></span></div></div>"}]}