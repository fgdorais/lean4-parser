{"name":"Lean.Compiler.IR.ResetReuse","instances":[],"imports":["Lean.Compiler.IR.Basic","Lean.Compiler.IR.LiveVars","Lean.Compiler.IR.Format"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/ResetReuse.lean#L232-L244","name":"Lean.IR.Decl.insertResetReuse","line":232,"kind":"def","docLink":"./Lean/Compiler/IR/ResetReuse.html#Lean.IR.Decl.insertResetReuse","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ResetReuse.html#Lean.IR.Decl.insertResetReuse\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">Decl</span>.<span class=\"name\">insertResetReuse</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">d</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Decl\">Decl</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Decl\">Decl</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/ResetReuse.lean#L222-L230","name":"Lean.IR.Decl.insertResetReuseCore","line":222,"kind":"def","docLink":"./Lean/Compiler/IR/ResetReuse.html#Lean.IR.Decl.insertResetReuseCore","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ResetReuse.html#Lean.IR.Decl.insertResetReuseCore\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">Decl</span>.<span class=\"name\">insertResetReuseCore</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">d</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Decl\">Decl</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">relaxedReuse</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Decl\">Decl</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/ResetReuse.lean#L209-L216","name":"Lean.IR.ResetReuse.collectResets","line":209,"kind":"opaque","docLink":"./Lean/Compiler/IR/ResetReuse.html#Lean.IR.ResetReuse.collectResets","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ResetReuse.html#Lean.IR.ResetReuse.collectResets\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">ResetReuse</span>.<span class=\"name\">collectResets</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.FnBody\">FnBody</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/ResetReuse.html#Lean.IR.ResetReuse.N\">N</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/ResetReuse.lean#L207-L207","name":"Lean.IR.ResetReuse.N","line":207,"kind":"def","docLink":"./Lean/Compiler/IR/ResetReuse.html#Lean.IR.ResetReuse.N","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ResetReuse.html#Lean.IR.ResetReuse.N\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">ResetReuse</span>.<span class=\"name\">N</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/ResetReuse.lean#L178-L205","name":"Lean.IR.ResetReuse.R","line":178,"kind":"opaque","docLink":"./Lean/Compiler/IR/ResetReuse.html#Lean.IR.ResetReuse.R","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ResetReuse.html#Lean.IR.ResetReuse.R\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">ResetReuse</span>.<span class=\"name\">R</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.FnBody\">FnBody</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/ResetReuse.html#Lean.IR.ResetReuse.M\">M</a> <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.FnBody\">FnBody</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/ResetReuse.lean#L97-L98","name":"Lean.IR.ResetReuse.M","line":97,"kind":"def","docLink":"./Lean/Compiler/IR/ResetReuse.html#Lean.IR.ResetReuse.M","doc":"We use `Context` to track join points in scope. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ResetReuse.html#Lean.IR.ResetReuse.M\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">ResetReuse</span>.<span class=\"name\">M</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/ResetReuse.lean#L95-L95","name":"Lean.IR.ResetReuse.Context.relaxedReuse","line":95,"kind":"def","docLink":"./Lean/Compiler/IR/ResetReuse.html#Lean.IR.ResetReuse.Context.relaxedReuse","doc":"If `relaxedReuse := true`, then allow memory cells from different\nconstructors to be reused. For example, we can reuse a `PSigma.mk`\nto allocate a `Prod.mk`. To avoid counterintuitive behavior,\nwe first try `relaxedReuse := false`, and then `relaxedReuse := true`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ResetReuse.html#Lean.IR.ResetReuse.Context.relaxedReuse\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">ResetReuse</span>.<span class=\"name\">Context</span>.<span class=\"name\">relaxedReuse</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Compiler/IR/ResetReuse.html#Lean.IR.ResetReuse.Context\">Context</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/ResetReuse.lean#L88-L88","name":"Lean.IR.ResetReuse.Context.alreadyFound","line":88,"kind":"def","docLink":"./Lean/Compiler/IR/ResetReuse.html#Lean.IR.ResetReuse.Context.alreadyFound","doc":"Contains all variables in `cases` statements in the current path\nand variables that are already in `reset` statements when we\ninvoke `R`.\n\nWe use this information to prevent double-reset in code such as\n```\ncase x_i : obj of\nProd.mk →\n  case x_i : obj of\n  Prod.mk →\n  ...\n```\n\nA variable can already be in a `reset` statement when we\ninvoke `R` because we execute it with and without `relaxedReuse`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ResetReuse.html#Lean.IR.ResetReuse.Context.alreadyFound\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">ResetReuse</span>.<span class=\"name\">Context</span>.<span class=\"name\">alreadyFound</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Compiler/IR/ResetReuse.html#Lean.IR.ResetReuse.Context\">Context</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/PersistentHashSet.html#Lean.PHashSet\">PHashSet</a> <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.VarId\">VarId</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/ResetReuse.lean#L70-L70","name":"Lean.IR.ResetReuse.Context.lctx","line":70,"kind":"def","docLink":"./Lean/Compiler/IR/ResetReuse.html#Lean.IR.ResetReuse.Context.lctx","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ResetReuse.html#Lean.IR.ResetReuse.Context.lctx\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">ResetReuse</span>.<span class=\"name\">Context</span>.<span class=\"name\">lctx</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Compiler/IR/ResetReuse.html#Lean.IR.ResetReuse.Context\">Context</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.LocalContext\">LocalContext</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/ResetReuse.lean#L69-L69","name":"Lean.IR.ResetReuse.Context.mk","line":69,"kind":"ctor","docLink":"./Lean/Compiler/IR/ResetReuse.html#Lean.IR.ResetReuse.Context.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ResetReuse.html#Lean.IR.ResetReuse.Context.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">ResetReuse</span>.<span class=\"name\">Context</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">lctx</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.LocalContext\">LocalContext</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">alreadyFound</span> : <span class=\"fn\"><a href=\"./Lean/Data/PersistentHashSet.html#Lean.PHashSet\">PHashSet</a> <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.VarId\">VarId</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">relaxedReuse</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/IR/ResetReuse.html#Lean.IR.ResetReuse.Context\">Context</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/ResetReuse.lean#L69-L95","name":"Lean.IR.ResetReuse.Context","line":69,"kind":"structure","docLink":"./Lean/Compiler/IR/ResetReuse.html#Lean.IR.ResetReuse.Context","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ResetReuse.html#Lean.IR.ResetReuse.Context\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">ResetReuse</span>.<span class=\"name\">Context</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"}]}