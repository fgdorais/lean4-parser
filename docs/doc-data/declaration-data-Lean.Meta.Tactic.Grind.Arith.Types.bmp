{"name":"Lean.Meta.Tactic.Grind.Arith.Types","instances":[{"typeNames":["Lean.Meta.Grind.Arith.State"],"name":"Lean.Meta.Grind.Arith.instInhabitedState","className":"Inhabited"}],"imports":["Lean.Meta.Tactic.Grind.Arith.Offset.Types","Lean.Meta.Tactic.Grind.Arith.Cutsat.Types","Lean.Meta.Tactic.Grind.Arith.CommRing.Types"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/Grind/Arith/Types.lean#L18-L18","name":"Lean.Meta.Grind.Arith.instInhabitedState","line":18,"kind":"instance","docLink":"./Lean/Meta/Tactic/Grind/Arith/Types.html#Lean.Meta.Grind.Arith.instInhabitedState","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Types.html#Lean.Meta.Grind.Arith.instInhabitedState\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">instInhabitedState</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Meta/Tactic/Grind/Arith/Types.html#Lean.Meta.Grind.Arith.State\">State</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/Grind/Arith/Types.lean#L17-L17","name":"Lean.Meta.Grind.Arith.State.ring","line":17,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Arith/Types.html#Lean.Meta.Grind.Arith.State.ring","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Types.html#Lean.Meta.Grind.Arith.State.ring\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">State</span>.<span class=\"name\">ring</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Meta/Tactic/Grind/Arith/Types.html#Lean.Meta.Grind.Arith.State\">State</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Grind/Arith/CommRing/Types.html#Lean.Meta.Grind.Arith.CommRing.State\">CommRing.State</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/Grind/Arith/Types.lean#L16-L16","name":"Lean.Meta.Grind.Arith.State.cutsat","line":16,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Arith/Types.html#Lean.Meta.Grind.Arith.State.cutsat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Types.html#Lean.Meta.Grind.Arith.State.cutsat\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">State</span>.<span class=\"name\">cutsat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Meta/Tactic/Grind/Arith/Types.html#Lean.Meta.Grind.Arith.State\">State</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Types.html#Lean.Meta.Grind.Arith.Cutsat.State\">Cutsat.State</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/Grind/Arith/Types.lean#L15-L15","name":"Lean.Meta.Grind.Arith.State.offset","line":15,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Arith/Types.html#Lean.Meta.Grind.Arith.State.offset","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Types.html#Lean.Meta.Grind.Arith.State.offset\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">State</span>.<span class=\"name\">offset</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Meta/Tactic/Grind/Arith/Types.html#Lean.Meta.Grind.Arith.State\">State</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Grind/Arith/Offset/Types.html#Lean.Meta.Grind.Arith.Offset.State\">Offset.State</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/Grind/Arith/Types.lean#L14-L14","name":"Lean.Meta.Grind.Arith.State.mk","line":14,"kind":"ctor","docLink":"./Lean/Meta/Tactic/Grind/Arith/Types.html#Lean.Meta.Grind.Arith.State.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Types.html#Lean.Meta.Grind.Arith.State.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">State</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">offset</span> : <a href=\"./Lean/Meta/Tactic/Grind/Arith/Offset/Types.html#Lean.Meta.Grind.Arith.Offset.State\">Offset.State</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">cutsat</span> : <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Types.html#Lean.Meta.Grind.Arith.Cutsat.State\">Cutsat.State</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ring</span> : <a href=\"./Lean/Meta/Tactic/Grind/Arith/CommRing/Types.html#Lean.Meta.Grind.Arith.CommRing.State\">CommRing.State</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Grind/Arith/Types.html#Lean.Meta.Grind.Arith.State\">State</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/Grind/Arith/Types.lean#L13-L18","name":"Lean.Meta.Grind.Arith.State","line":13,"kind":"structure","docLink":"./Lean/Meta/Tactic/Grind/Arith/Types.html#Lean.Meta.Grind.Arith.State","doc":"State for the arithmetic procedures. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Types.html#Lean.Meta.Grind.Arith.State\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">State</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"}]}