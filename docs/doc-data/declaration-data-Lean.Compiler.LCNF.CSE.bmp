{"name":"Lean.Compiler.LCNF.CSE","instances":[{"typeNames":["Lean.Compiler.LCNF.CSE.M","Bool.false"],"name":"Lean.Compiler.LCNF.CSE.instMonadFVarSubstMFalse","className":"Lean.Compiler.LCNF.MonadFVarSubst"},{"typeNames":["Lean.Compiler.LCNF.CSE.M"],"name":"Lean.Compiler.LCNF.CSE.instMonadFVarSubstStateM","className":"Lean.Compiler.LCNF.MonadFVarSubstState"}],"imports":["Lean.Compiler.LCNF.CompilerM","Lean.Compiler.LCNF.ToExpr","Lean.Compiler.LCNF.PassManager"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/LCNF/CSE.lean#L112-L113","name":"Lean.Compiler.LCNF.cse","line":112,"kind":"def","docLink":"./Lean/Compiler/LCNF/CSE.html#Lean.Compiler.LCNF.cse","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/CSE.html#Lean.Compiler.LCNF.cse\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">cse</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">phase</span> : <a href=\"./Lean/Compiler/LCNF/CompilerM.html#Lean.Compiler.LCNF.Phase\">Phase</a> := <a href=\"./Lean/Compiler/LCNF/CompilerM.html#Lean.Compiler.LCNF.Phase.base\">Phase.base</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">shouldElimFunDecls</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/Prelude.html#Bool.false\">false</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">occurrence</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a> := <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/LCNF/PassManager.html#Lean.Compiler.LCNF.Pass\">Pass</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/LCNF/CSE.lean#L105-L110","name":"Lean.Compiler.LCNF.Decl.cse","line":105,"kind":"def","docLink":"./Lean/Compiler/LCNF/CSE.html#Lean.Compiler.LCNF.Decl.cse","doc":"Common sub-expression elimination\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/CSE.html#Lean.Compiler.LCNF.Decl.cse\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">Decl</span>.<span class=\"name\">cse</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">shouldElimFunDecls</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">decl</span> : <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Decl\">Decl</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/LCNF/CompilerM.html#Lean.Compiler.LCNF.CompilerM\">CompilerM</a> <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Decl\">Decl</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/LCNF/CSE.lean#L56-L101","name":"Lean.Compiler.LCNF.Code.cse.go","line":56,"kind":"opaque","docLink":"./Lean/Compiler/LCNF/CSE.html#Lean.Compiler.LCNF.Code.cse.go","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/CSE.html#Lean.Compiler.LCNF.Code.cse.go\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">Code</span>.<span class=\"name\">cse</span>.<span class=\"name\">go</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">shouldElimFunDecls</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">code</span> : <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Code\">Code</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/LCNF/CSE.html#Lean.Compiler.LCNF.CSE.M\">CSE.M</a> <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Code\">Code</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/LCNF/CSE.lean#L50-L54","name":"Lean.Compiler.LCNF.Code.cse.goFunDecl","line":50,"kind":"opaque","docLink":"./Lean/Compiler/LCNF/CSE.html#Lean.Compiler.LCNF.Code.cse.goFunDecl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/CSE.html#Lean.Compiler.LCNF.Code.cse.goFunDecl\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">Code</span>.<span class=\"name\">cse</span>.<span class=\"name\">goFunDecl</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">shouldElimFunDecls</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">decl</span> : <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.FunDecl\">FunDecl</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/LCNF/CSE.html#Lean.Compiler.LCNF.CSE.M\">CSE.M</a> <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.FunDecl\">FunDecl</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/LCNF/CSE.lean#L47-L101","name":"Lean.Compiler.LCNF.Code.cse","line":47,"kind":"def","docLink":"./Lean/Compiler/LCNF/CSE.html#Lean.Compiler.LCNF.Code.cse","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/CSE.html#Lean.Compiler.LCNF.Code.cse\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">Code</span>.<span class=\"name\">cse</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">shouldElimFunDecls</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">code</span> : <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Code\">Code</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/LCNF/CompilerM.html#Lean.Compiler.LCNF.CompilerM\">CompilerM</a> <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Code\">Code</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/LCNF/CSE.lean#L43-L45","name":"Lean.Compiler.LCNF.CSE.replaceFun","line":43,"kind":"def","docLink":"./Lean/Compiler/LCNF/CSE.html#Lean.Compiler.LCNF.CSE.replaceFun","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/CSE.html#Lean.Compiler.LCNF.CSE.replaceFun\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">CSE</span>.<span class=\"name\">replaceFun</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">decl</span> : <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.FunDecl\">FunDecl</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fvarId</span> : <a href=\"./Lean/Expr.html#Lean.FVarId\">FVarId</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/LCNF/CSE.html#Lean.Compiler.LCNF.CSE.M\">M</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/LCNF/CSE.lean#L39-L41","name":"Lean.Compiler.LCNF.CSE.replaceLet","line":39,"kind":"def","docLink":"./Lean/Compiler/LCNF/CSE.html#Lean.Compiler.LCNF.CSE.replaceLet","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/CSE.html#Lean.Compiler.LCNF.CSE.replaceLet\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">CSE</span>.<span class=\"name\">replaceLet</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">decl</span> : <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.LetDecl\">LetDecl</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fvarId</span> : <a href=\"./Lean/Expr.html#Lean.FVarId\">FVarId</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/LCNF/CSE.html#Lean.Compiler.LCNF.CSE.M\">M</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/LCNF/CSE.lean#L35-L37","name":"Lean.Compiler.LCNF.CSE.withNewScope","line":35,"kind":"def","docLink":"./Lean/Compiler/LCNF/CSE.html#Lean.Compiler.LCNF.CSE.withNewScope","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/CSE.html#Lean.Compiler.LCNF.CSE.withNewScope\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">CSE</span>.<span class=\"name\">withNewScope</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/LCNF/CSE.html#Lean.Compiler.LCNF.CSE.M\">M</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/LCNF/CSE.html#Lean.Compiler.LCNF.CSE.M\">M</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/LCNF/CSE.lean#L32-L33","name":"Lean.Compiler.LCNF.CSE.addEntry","line":32,"kind":"def","docLink":"./Lean/Compiler/LCNF/CSE.html#Lean.Compiler.LCNF.CSE.addEntry","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/CSE.html#Lean.Compiler.LCNF.CSE.addEntry\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">CSE</span>.<span class=\"name\">addEntry</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">value</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fvarId</span> : <a href=\"./Lean/Expr.html#Lean.FVarId\">FVarId</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/LCNF/CSE.html#Lean.Compiler.LCNF.CSE.M\">M</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/LCNF/CSE.lean#L29-L30","name":"Lean.Compiler.LCNF.CSE.getSubst","line":29,"kind":"def","docLink":"./Lean/Compiler/LCNF/CSE.html#Lean.Compiler.LCNF.CSE.getSubst","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/CSE.html#Lean.Compiler.LCNF.CSE.getSubst\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">CSE</span>.<span class=\"name\">getSubst</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/LCNF/CSE.html#Lean.Compiler.LCNF.CSE.M\">M</a> <a href=\"./Lean/Compiler/LCNF/CompilerM.html#Lean.Compiler.LCNF.FVarSubst\">FVarSubst</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/LCNF/CSE.lean#L26-L27","name":"Lean.Compiler.LCNF.CSE.instMonadFVarSubstStateM","line":26,"kind":"instance","docLink":"./Lean/Compiler/LCNF/CSE.html#Lean.Compiler.LCNF.CSE.instMonadFVarSubstStateM","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/CSE.html#Lean.Compiler.LCNF.CSE.instMonadFVarSubstStateM\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">CSE</span>.<span class=\"name\">instMonadFVarSubstStateM</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/LCNF/CompilerM.html#Lean.Compiler.LCNF.MonadFVarSubstState\">MonadFVarSubstState</a> <a href=\"./Lean/Compiler/LCNF/CSE.html#Lean.Compiler.LCNF.CSE.M\">M</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/LCNF/CSE.lean#L23-L24","name":"Lean.Compiler.LCNF.CSE.instMonadFVarSubstMFalse","line":23,"kind":"instance","docLink":"./Lean/Compiler/LCNF/CSE.html#Lean.Compiler.LCNF.CSE.instMonadFVarSubstMFalse","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/CSE.html#Lean.Compiler.LCNF.CSE.instMonadFVarSubstMFalse\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">CSE</span>.<span class=\"name\">instMonadFVarSubstMFalse</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/LCNF/CompilerM.html#Lean.Compiler.LCNF.MonadFVarSubst\">MonadFVarSubst</a> <a href=\"./Lean/Compiler/LCNF/CSE.html#Lean.Compiler.LCNF.CSE.M\">M</a> <a href=\"./Init/Prelude.html#Bool.false\">false</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/LCNF/CSE.lean#L21-L21","name":"Lean.Compiler.LCNF.CSE.M","line":21,"kind":"def","docLink":"./Lean/Compiler/LCNF/CSE.html#Lean.Compiler.LCNF.CSE.M","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/CSE.html#Lean.Compiler.LCNF.CSE.M\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">CSE</span>.<span class=\"name\">M</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/LCNF/CSE.lean#L19-L19","name":"Lean.Compiler.LCNF.CSE.State.subst","line":19,"kind":"def","docLink":"./Lean/Compiler/LCNF/CSE.html#Lean.Compiler.LCNF.CSE.State.subst","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/CSE.html#Lean.Compiler.LCNF.CSE.State.subst\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">CSE</span>.<span class=\"name\">State</span>.<span class=\"name\">subst</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Compiler/LCNF/CSE.html#Lean.Compiler.LCNF.CSE.State\">State</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/LCNF/CompilerM.html#Lean.Compiler.LCNF.FVarSubst\">FVarSubst</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/LCNF/CSE.lean#L18-L18","name":"Lean.Compiler.LCNF.CSE.State.map","line":18,"kind":"def","docLink":"./Lean/Compiler/LCNF/CSE.html#Lean.Compiler.LCNF.CSE.State.map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/CSE.html#Lean.Compiler.LCNF.CSE.State.map\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">CSE</span>.<span class=\"name\">State</span>.<span class=\"name\">map</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Compiler/LCNF/CSE.html#Lean.Compiler.LCNF.CSE.State\">State</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/PersistentHashMap.html#Lean.PHashMap\">PHashMap</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a> <a href=\"./Lean/Expr.html#Lean.FVarId\">FVarId</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/LCNF/CSE.lean#L17-L17","name":"Lean.Compiler.LCNF.CSE.State.mk","line":17,"kind":"ctor","docLink":"./Lean/Compiler/LCNF/CSE.html#Lean.Compiler.LCNF.CSE.State.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/CSE.html#Lean.Compiler.LCNF.CSE.State.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">CSE</span>.<span class=\"name\">State</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">map</span> : <span class=\"fn\"><a href=\"./Lean/Data/PersistentHashMap.html#Lean.PHashMap\">PHashMap</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a> <a href=\"./Lean/Expr.html#Lean.FVarId\">FVarId</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">subst</span> : <a href=\"./Lean/Compiler/LCNF/CompilerM.html#Lean.Compiler.LCNF.FVarSubst\">FVarSubst</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/LCNF/CSE.html#Lean.Compiler.LCNF.CSE.State\">State</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/LCNF/CSE.lean#L17-L19","name":"Lean.Compiler.LCNF.CSE.State","line":17,"kind":"structure","docLink":"./Lean/Compiler/LCNF/CSE.html#Lean.Compiler.LCNF.CSE.State","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/CSE.html#Lean.Compiler.LCNF.CSE.State\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">CSE</span>.<span class=\"name\">State</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"}]}