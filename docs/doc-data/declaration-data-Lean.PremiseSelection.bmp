{"name":"Lean.PremiseSelection","instances":[],"imports":["Lean.Elab.Command","Lean.Meta.Eval","Lean.Meta.CompletionName","Init.Data.Random"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/PremiseSelection.lean#L129-L133","name":"Lean.PremiseSelection.evalSuggestPremises","line":129,"kind":"def","docLink":"./Lean/PremiseSelection.html#Lean.PremiseSelection.evalSuggestPremises","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PremiseSelection.html#Lean.PremiseSelection.evalSuggestPremises\"><span class=\"name\">Lean</span>.<span class=\"name\">PremiseSelection</span>.<span class=\"name\">evalSuggestPremises</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.Tactic\">Elab.Tactic.Tactic</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/PremiseSelection.lean#L116-L126","name":"Lean.PremiseSelection.elabSetPremiseSelector","line":116,"kind":"def","docLink":"./Lean/PremiseSelection.html#Lean.PremiseSelection.elabSetPremiseSelector","doc":"Specify a premise selection engine.\nNote that Lean does not ship a default premise selection engine,\nso this is only useful in conjunction with a downstream package which provides one.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PremiseSelection.html#Lean.PremiseSelection.elabSetPremiseSelector\"><span class=\"name\">Lean</span>.<span class=\"name\">PremiseSelection</span>.<span class=\"name\">elabSetPremiseSelector</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.CommandElab\">Elab.Command.CommandElab</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/PremiseSelection.lean#L111-L113","name":"Lean.PremiseSelection.registerPremiseSelector","line":111,"kind":"def","docLink":"./Lean/PremiseSelection.html#Lean.PremiseSelection.registerPremiseSelector","doc":"Set the current premise selector."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PremiseSelection.html#Lean.PremiseSelection.registerPremiseSelector\"><span class=\"name\">Lean</span>.<span class=\"name\">PremiseSelection</span>.<span class=\"name\">registerPremiseSelector</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">selector</span> : <a href=\"./Lean/PremiseSelection.html#Lean.PremiseSelection.Selector\">Selector</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">CoreM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/PremiseSelection.lean#L94-L99","name":"Lean.PremiseSelection.select","line":94,"kind":"def","docLink":"./Lean/PremiseSelection.html#Lean.PremiseSelection.select","doc":"Generate premise suggestions for the given metavariable, using the currently registered premise selector. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PremiseSelection.html#Lean.PremiseSelection.select\"><span class=\"name\">Lean</span>.<span class=\"name\">PremiseSelection</span>.<span class=\"name\">select</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m</span> : <a href=\"./Lean/Expr.html#Lean.MVarId\">MVarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <a href=\"./Lean/PremiseSelection.html#Lean.PremiseSelection.Config\">Config</a> := <a href=\"./Lean/PremiseSelection.html#Lean.PremiseSelection.Config.mk\">{</a> <a href=\"./Lean/PremiseSelection.html#Lean.PremiseSelection.Config.mk\">}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">MetaM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/PremiseSelection.html#Lean.PremiseSelection.Suggestion\">Suggestion</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/PremiseSelection.lean#L91-L92","name":"Lean.PremiseSelection.premiseSelectorExt","line":91,"kind":"opaque","docLink":"./Lean/PremiseSelection.html#Lean.PremiseSelection.premiseSelectorExt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PremiseSelection.html#Lean.PremiseSelection.premiseSelectorExt\"><span class=\"name\">Lean</span>.<span class=\"name\">PremiseSelection</span>.<span class=\"name\">premiseSelectorExt</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.EnvExtension\">EnvExtension</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/PremiseSelection.html#Lean.PremiseSelection.Selector\">Selector</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/PremiseSelection.lean#L77-L89","name":"Lean.PremiseSelection.random","line":77,"kind":"def","docLink":"./Lean/PremiseSelection.html#Lean.PremiseSelection.random","doc":"A random premise selection algorithm, provided solely for testing purposes. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PremiseSelection.html#Lean.PremiseSelection.random\"><span class=\"name\">Lean</span>.<span class=\"name\">PremiseSelection</span>.<span class=\"name\">random</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">gen</span> : <a href=\"./Init/Data/Random.html#StdGen\">StdGen</a> := <a href=\"./Init/Data/Random.html#StdGen.mk\">{</a> <span class=\"fn\">s1</span> := <span class=\"fn\">37</span>, <span class=\"fn\">s2</span> := <span class=\"fn\">59</span> <a href=\"./Init/Data/Random.html#StdGen.mk\">}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/PremiseSelection.html#Lean.PremiseSelection.Selector\">Selector</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/PremiseSelection.lean#L72-L75","name":"Lean.PremiseSelection.empty","line":72,"kind":"def","docLink":"./Lean/PremiseSelection.html#Lean.PremiseSelection.empty","doc":"The trivial premise selector, which returns no suggestions.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PremiseSelection.html#Lean.PremiseSelection.empty\"><span class=\"name\">Lean</span>.<span class=\"name\">PremiseSelection</span>.<span class=\"name\">empty</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/PremiseSelection.html#Lean.PremiseSelection.Selector\">Selector</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/PremiseSelection.lean#L70-L70","name":"Lean.PremiseSelection.Selector","line":70,"kind":"def","docLink":"./Lean/PremiseSelection.html#Lean.PremiseSelection.Selector","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PremiseSelection.html#Lean.PremiseSelection.Selector\"><span class=\"name\">Lean</span>.<span class=\"name\">PremiseSelection</span>.<span class=\"name\">Selector</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/PremiseSelection.lean#L68-L68","name":"Lean.PremiseSelection.Config.hint","line":68,"kind":"def","docLink":"./Lean/PremiseSelection.html#Lean.PremiseSelection.Config.hint","doc":"An optional arbitrary \"hint\" to the premise selection algorithm.\nThere is no guarantee that the algorithm will make any use of the hint.\n\nPotential use cases include a natural language comment provided by the user\n(e.g. allowing use of the premise selector as a search engine)\nor including context from the current proof and/or file.\n\nWe may later split these use cases into separate fields if necessary.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PremiseSelection.html#Lean.PremiseSelection.Config.hint\"><span class=\"name\">Lean</span>.<span class=\"name\">PremiseSelection</span>.<span class=\"name\">Config</span>.<span class=\"name\">hint</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/PremiseSelection.html#Lean.PremiseSelection.Config\">Config</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#String\">String</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/PremiseSelection.lean#L57-L57","name":"Lean.PremiseSelection.Config.filter","line":57,"kind":"def","docLink":"./Lean/PremiseSelection.html#Lean.PremiseSelection.Config.filter","doc":"A filter on suggestions; only suggestions returning `true` should be returned.\n(It can be better to filter on the premise selection side, to ensure that enough suggestions are returned.)\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PremiseSelection.html#Lean.PremiseSelection.Config.filter\"><span class=\"name\">Lean</span>.<span class=\"name\">PremiseSelection</span>.<span class=\"name\">Config</span>.<span class=\"name\">filter</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/PremiseSelection.html#Lean.PremiseSelection.Config\">Config</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.Name\">Name</a> → <span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">MetaM</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/PremiseSelection.lean#L52-L52","name":"Lean.PremiseSelection.Config.caller","line":52,"kind":"def","docLink":"./Lean/PremiseSelection.html#Lean.PremiseSelection.Config.caller","doc":"The tactic that is calling the premise selection, e.g. `simp`, `grind`, or `aesop`.\nThis may be used to adjust the score of the suggestions\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PremiseSelection.html#Lean.PremiseSelection.Config.caller\"><span class=\"name\">Lean</span>.<span class=\"name\">PremiseSelection</span>.<span class=\"name\">Config</span>.<span class=\"name\">caller</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/PremiseSelection.html#Lean.PremiseSelection.Config\">Config</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Lean.Name\">Name</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/PremiseSelection.lean#L47-L47","name":"Lean.PremiseSelection.Config.maxSuggestions","line":47,"kind":"def","docLink":"./Lean/PremiseSelection.html#Lean.PremiseSelection.Config.maxSuggestions","doc":"The maximum number of suggestions to return.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PremiseSelection.html#Lean.PremiseSelection.Config.maxSuggestions\"><span class=\"name\">Lean</span>.<span class=\"name\">PremiseSelection</span>.<span class=\"name\">Config</span>.<span class=\"name\">maxSuggestions</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/PremiseSelection.html#Lean.PremiseSelection.Config\">Config</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/PremiseSelection.lean#L43-L43","name":"Lean.PremiseSelection.Config.mk","line":43,"kind":"ctor","docLink":"./Lean/PremiseSelection.html#Lean.PremiseSelection.Config.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PremiseSelection.html#Lean.PremiseSelection.Config.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">PremiseSelection</span>.<span class=\"name\">Config</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">maxSuggestions</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">caller</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Lean.Name\">Name</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">filter</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.Name\">Name</a> → <span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">MetaM</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hint</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#String\">String</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/PremiseSelection.html#Lean.PremiseSelection.Config\">Config</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/PremiseSelection.lean#L43-L68","name":"Lean.PremiseSelection.Config","line":43,"kind":"structure","docLink":"./Lean/PremiseSelection.html#Lean.PremiseSelection.Config","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PremiseSelection.html#Lean.PremiseSelection.Config\"><span class=\"name\">Lean</span>.<span class=\"name\">PremiseSelection</span>.<span class=\"name\">Config</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/PremiseSelection.lean#L41-L41","name":"Lean.PremiseSelection.Suggestion.score","line":41,"kind":"def","docLink":"./Lean/PremiseSelection.html#Lean.PremiseSelection.Suggestion.score","doc":"The score of the suggestion, as a probability that this suggestion should be used.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PremiseSelection.html#Lean.PremiseSelection.Suggestion.score\"><span class=\"name\">Lean</span>.<span class=\"name\">PremiseSelection</span>.<span class=\"name\">Suggestion</span>.<span class=\"name\">score</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/PremiseSelection.html#Lean.PremiseSelection.Suggestion\">Suggestion</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Float.html#Float\">Float</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/PremiseSelection.lean#L37-L37","name":"Lean.PremiseSelection.Suggestion.name","line":37,"kind":"def","docLink":"./Lean/PremiseSelection.html#Lean.PremiseSelection.Suggestion.name","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PremiseSelection.html#Lean.PremiseSelection.Suggestion.name\"><span class=\"name\">Lean</span>.<span class=\"name\">PremiseSelection</span>.<span class=\"name\">Suggestion</span>.<span class=\"name\">name</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/PremiseSelection.html#Lean.PremiseSelection.Suggestion\">Suggestion</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Name\">Name</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/PremiseSelection.lean#L36-L36","name":"Lean.PremiseSelection.Suggestion.mk","line":36,"kind":"ctor","docLink":"./Lean/PremiseSelection.html#Lean.PremiseSelection.Suggestion.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PremiseSelection.html#Lean.PremiseSelection.Suggestion.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">PremiseSelection</span>.<span class=\"name\">Suggestion</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">name</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">score</span> : <a href=\"./Init/Data/Float.html#Float\">Float</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/PremiseSelection.html#Lean.PremiseSelection.Suggestion\">Suggestion</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/PremiseSelection.lean#L30-L41","name":"Lean.PremiseSelection.Suggestion","line":30,"kind":"structure","docLink":"./Lean/PremiseSelection.html#Lean.PremiseSelection.Suggestion","doc":"A `Suggestion` is essentially just an identifier and a confidence score that the identifier is relevant.\nIf the premise selection request included information about the intended use (e.g. in the simplifier, in `grind`, etc.)\nthe score may be adjusted for that application.\n\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PremiseSelection.html#Lean.PremiseSelection.Suggestion\"><span class=\"name\">Lean</span>.<span class=\"name\">PremiseSelection</span>.<span class=\"name\">Suggestion</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"}]}