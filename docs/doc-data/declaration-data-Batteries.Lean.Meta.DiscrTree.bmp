{"name":"Batteries.Lean.Meta.DiscrTree","instances":[{"typeNames":["Lean.Meta.DiscrTree.Key"],"name":"Lean.Meta.DiscrTree.Key.instOrd_batteries","className":"Ord"}],"imports":["Init","Lean.Meta.DiscrTree","Batteries.Data.Array.Merge","Batteries.Lean.Meta.Expr","Batteries.Lean.PersistentHashMap"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/78e1181c4752c7e10874d2ed5a6a15063f4a35b6/Batteries/Lean/Meta/DiscrTree.lean#L51-L57","name":"Lean.Meta.DiscrTree.mergePreservingDuplicates","line":51,"kind":"def","docLink":"./Batteries/Lean/Meta/DiscrTree.html#Lean.Meta.DiscrTree.mergePreservingDuplicates","doc":"Merge two `DiscrTree`s. Duplicate values are preserved.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Lean/Meta/DiscrTree.html#Lean.Meta.DiscrTree.mergePreservingDuplicates\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">DiscrTree</span>.<span class=\"name\">mergePreservingDuplicates</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">t </span><span class=\"fn\">u</span> : <span class=\"fn\"><a href=\"./Lean/Meta/DiscrTreeTypes.html#Lean.Meta.DiscrTree\">DiscrTree</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/DiscrTreeTypes.html#Lean.Meta.DiscrTree\">DiscrTree</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/78e1181c4752c7e10874d2ed5a6a15063f4a35b6/Batteries/Lean/Meta/DiscrTree.lean#L43-L47","name":"Lean.Meta.DiscrTree.Trie.mergePreservingDuplicates.mergeChildren","line":43,"kind":"opaque","docLink":"./Batteries/Lean/Meta/DiscrTree.html#Lean.Meta.DiscrTree.Trie.mergePreservingDuplicates.mergeChildren","doc":"Auxiliary definition for `mergePreservingDuplicates`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Lean/Meta/DiscrTree.html#Lean.Meta.DiscrTree.Trie.mergePreservingDuplicates.mergeChildren\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">DiscrTree</span>.<span class=\"name\">Trie</span>.<span class=\"name\">mergePreservingDuplicates</span>.<span class=\"name\">mergeChildren</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">cs₁ </span><span class=\"fn\">cs₂</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> (<a href=\"./Lean/Meta/DiscrTreeTypes.html#Lean.Meta.DiscrTree.Key\">Key</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Lean/Meta/DiscrTreeTypes.html#Lean.Meta.DiscrTree.Trie\">Trie</a> <span class=\"fn\">α</span></span>)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> (<a href=\"./Lean/Meta/DiscrTreeTypes.html#Lean.Meta.DiscrTree.Key\">Key</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Lean/Meta/DiscrTreeTypes.html#Lean.Meta.DiscrTree.Trie\">Trie</a> <span class=\"fn\">α</span></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/78e1181c4752c7e10874d2ed5a6a15063f4a35b6/Batteries/Lean/Meta/DiscrTree.lean#L35-L47","name":"Lean.Meta.DiscrTree.Trie.mergePreservingDuplicates","line":35,"kind":"opaque","docLink":"./Batteries/Lean/Meta/DiscrTree.html#Lean.Meta.DiscrTree.Trie.mergePreservingDuplicates","doc":"Merge two `Trie`s. Duplicate values are preserved.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Lean/Meta/DiscrTree.html#Lean.Meta.DiscrTree.Trie.mergePreservingDuplicates\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">DiscrTree</span>.<span class=\"name\">Trie</span>.<span class=\"name\">mergePreservingDuplicates</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Lean/Meta/DiscrTreeTypes.html#Lean.Meta.DiscrTree.Trie\">Trie</a> <span class=\"fn\">α</span></span> → <span class=\"fn\"><a href=\"./Lean/Meta/DiscrTreeTypes.html#Lean.Meta.DiscrTree.Trie\">Trie</a> <span class=\"fn\">α</span></span> → <span class=\"fn\"><a href=\"./Lean/Meta/DiscrTreeTypes.html#Lean.Meta.DiscrTree.Trie\">Trie</a> <span class=\"fn\">α</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/78e1181c4752c7e10874d2ed5a6a15063f4a35b6/Batteries/Lean/Meta/DiscrTree.lean#L28-L28","name":"Lean.Meta.DiscrTree.Key.instOrd_batteries","line":28,"kind":"instance","docLink":"./Batteries/Lean/Meta/DiscrTree.html#Lean.Meta.DiscrTree.Key.instOrd_batteries","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Lean/Meta/DiscrTree.html#Lean.Meta.DiscrTree.Key.instOrd_batteries\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">DiscrTree</span>.<span class=\"name\">Key</span>.<span class=\"name\">instOrd_batteries</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Ord.html#Ord\">Ord</a> <a href=\"./Lean/Meta/DiscrTreeTypes.html#Lean.Meta.DiscrTree.Key\">Key</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/78e1181c4752c7e10874d2ed5a6a15063f4a35b6/Batteries/Lean/Meta/DiscrTree.lean#L16-L26","name":"Lean.Meta.DiscrTree.Key.cmp","line":16,"kind":"def","docLink":"./Batteries/Lean/Meta/DiscrTree.html#Lean.Meta.DiscrTree.Key.cmp","doc":"Compare two `Key`s. The ordering is total but otherwise arbitrary. (It uses\n`Name.quickCmp` internally.)\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Lean/Meta/DiscrTree.html#Lean.Meta.DiscrTree.Key.cmp\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">DiscrTree</span>.<span class=\"name\">Key</span>.<span class=\"name\">cmp</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/DiscrTreeTypes.html#Lean.Meta.DiscrTree.Key\">Key</a> → <a href=\"./Lean/Meta/DiscrTreeTypes.html#Lean.Meta.DiscrTree.Key\">Key</a> → <a href=\"./Init/Data/Ord.html#Ordering\">Ordering</a></span></div></div>"}]}