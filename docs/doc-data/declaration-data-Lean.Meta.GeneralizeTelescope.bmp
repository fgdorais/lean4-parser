{"name":"Lean.Meta.GeneralizeTelescope","instances":[],"imports":["Lean.Meta.KAbstract","Lean.Meta.Check"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/GeneralizeTelescope.lean#L59-L93","name":"Lean.Meta.generalizeTelescope","line":59,"kind":"def","docLink":"./Lean/Meta/GeneralizeTelescope.html#Lean.Meta.generalizeTelescope","doc":"Given expressions `es := #[e_1, e_2, ..., e_n]`, execute `k` with the\nfree variables `(x_1 : A_1) (x_2 : A_2 [x_1]) ... (x_n : A_n [x_1, ... x_{n-1}])`.\nMoreover,\n- type of `e_1` is definitionally equal to `A_1`,\n- type of `e_2` is definitionally equal to `A_2[e_1]`.\n- ...\n- type of `e_n` is definitionally equal to `A_n[e_1, ..., e_{n-1}]`.\n\nThis method tries to avoid the creation of new free variables. For example, if `e_i` is a\nfree variable `x_i` and it is not a let-declaration variable, and its type does not depend on\nprevious `e_j`s, the method will just use `x_i`.\n\nThe telescope `x_1 ... x_n` can be used to create lambda and forall abstractions.\nMoreover, for any type correct lambda abstraction `f` constructed using `mkForall #[x_1, ..., x_n] ...`,\nThe application `f e_1 ... e_n` is also type correct.\n\nThe `kabstract` method is used to \"locate\" and abstract forward dependencies.\nThat is, an occurrence of `e_i` in the of `e_j` for `j > i`.\n\nThe method checks whether the abstract types `A_i` are type correct. Here is an example\nwhere `generalizeTelescope` fails to create the telescope `x_1 ... x_n`.\nAssume the local context contains `(n : Nat := 10) (xs : Vec Nat n) (ys : Vec Nat 10) (h : xs = ys)`.\nThen, assume we invoke `generalizeTelescope` with `es := #[10, xs, ys, h]`\nA type error is detected when processing `h`'s type. At this point, the method had successfully produced\n```\n  (x_1 : Nat) (xs : Vec Nat n) (x_2 : Vec Nat x_1)\n```\nand the type for the new variable abstracting `h` is `xs = x_2` which is not type correct. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/GeneralizeTelescope.html#Lean.Meta.generalizeTelescope\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">generalizeTelescope</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">es</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span> → <span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">MetaM</a> <span class=\"fn\">α</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">MetaM</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/GeneralizeTelescope.lean#L33-L53","name":"Lean.Meta.GeneralizeTelescope.generalizeTelescopeAux","line":33,"kind":"opaque","docLink":"./Lean/Meta/GeneralizeTelescope.html#Lean.Meta.GeneralizeTelescope.generalizeTelescopeAux","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/GeneralizeTelescope.html#Lean.Meta.GeneralizeTelescope.generalizeTelescopeAux\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">GeneralizeTelescope</span>.<span class=\"name\">generalizeTelescopeAux</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span> → <span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">MetaM</a> <span class=\"fn\">α</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">entries</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Meta/GeneralizeTelescope.html#Lean.Meta.GeneralizeTelescope.Entry\">Entry</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fvars</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">MetaM</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/GeneralizeTelescope.lean#L18-L31","name":"Lean.Meta.GeneralizeTelescope.updateTypes","line":18,"kind":"opaque","docLink":"./Lean/Meta/GeneralizeTelescope.html#Lean.Meta.GeneralizeTelescope.updateTypes","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/GeneralizeTelescope.html#Lean.Meta.GeneralizeTelescope.updateTypes\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">GeneralizeTelescope</span>.<span class=\"name\">updateTypes</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e </span><span class=\"fn\">eNew</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">entries</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Meta/GeneralizeTelescope.html#Lean.Meta.GeneralizeTelescope.Entry\">Entry</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">MetaM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Meta/GeneralizeTelescope.html#Lean.Meta.GeneralizeTelescope.Entry\">Entry</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/GeneralizeTelescope.lean#L16-L16","name":"Lean.Meta.GeneralizeTelescope.Entry.modified","line":16,"kind":"def","docLink":"./Lean/Meta/GeneralizeTelescope.html#Lean.Meta.GeneralizeTelescope.Entry.modified","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/GeneralizeTelescope.html#Lean.Meta.GeneralizeTelescope.Entry.modified\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">GeneralizeTelescope</span>.<span class=\"name\">Entry</span>.<span class=\"name\">modified</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Meta/GeneralizeTelescope.html#Lean.Meta.GeneralizeTelescope.Entry\">Entry</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/GeneralizeTelescope.lean#L15-L15","name":"Lean.Meta.GeneralizeTelescope.Entry.type","line":15,"kind":"def","docLink":"./Lean/Meta/GeneralizeTelescope.html#Lean.Meta.GeneralizeTelescope.Entry.type","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/GeneralizeTelescope.html#Lean.Meta.GeneralizeTelescope.Entry.type\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">GeneralizeTelescope</span>.<span class=\"name\">Entry</span>.<span class=\"name\">type</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Meta/GeneralizeTelescope.html#Lean.Meta.GeneralizeTelescope.Entry\">Entry</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/GeneralizeTelescope.lean#L14-L14","name":"Lean.Meta.GeneralizeTelescope.Entry.expr","line":14,"kind":"def","docLink":"./Lean/Meta/GeneralizeTelescope.html#Lean.Meta.GeneralizeTelescope.Entry.expr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/GeneralizeTelescope.html#Lean.Meta.GeneralizeTelescope.Entry.expr\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">GeneralizeTelescope</span>.<span class=\"name\">Entry</span>.<span class=\"name\">expr</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Meta/GeneralizeTelescope.html#Lean.Meta.GeneralizeTelescope.Entry\">Entry</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/GeneralizeTelescope.lean#L13-L13","name":"Lean.Meta.GeneralizeTelescope.Entry.mk","line":13,"kind":"ctor","docLink":"./Lean/Meta/GeneralizeTelescope.html#Lean.Meta.GeneralizeTelescope.Entry.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/GeneralizeTelescope.html#Lean.Meta.GeneralizeTelescope.Entry.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">GeneralizeTelescope</span>.<span class=\"name\">Entry</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">expr </span><span class=\"fn\">type</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">modified</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/GeneralizeTelescope.html#Lean.Meta.GeneralizeTelescope.Entry\">Entry</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/GeneralizeTelescope.lean#L13-L16","name":"Lean.Meta.GeneralizeTelescope.Entry","line":13,"kind":"structure","docLink":"./Lean/Meta/GeneralizeTelescope.html#Lean.Meta.GeneralizeTelescope.Entry","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/GeneralizeTelescope.html#Lean.Meta.GeneralizeTelescope.Entry\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">GeneralizeTelescope</span>.<span class=\"name\">Entry</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"}]}