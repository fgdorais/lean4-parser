{"name":"Lake.Toml.ParserUtil","instances":[],"imports":["Lean.Parser","Lean.PrettyPrinter.Formatter"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/lake/Lake/Toml/ParserUtil.lean#L301-L302","name":"Lake.Toml.skipInsideQuot","line":301,"kind":"def","docLink":"./Lake/Toml/ParserUtil.html#Lake.Toml.skipInsideQuot","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.skipInsideQuot\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">skipInsideQuot</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/lake/Lake/Toml/ParserUtil.lean#L298-L299","name":"Lake.Toml.skipInsideQuotFn","line":298,"kind":"def","docLink":"./Lake/Toml/ParserUtil.html#Lake.Toml.skipInsideQuotFn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.skipInsideQuotFn\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">skipInsideQuotFn</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/lake/Lake/Toml/ParserUtil.lean#L294-L296","name":"Lake.Toml.sepBy1Linebreak","line":294,"kind":"def","docLink":"./Lake/Toml/ParserUtil.html#Lake.Toml.sepBy1Linebreak","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.sepBy1Linebreak\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">sepBy1Linebreak</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">allowTrailingLinebreak</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/Prelude.html#Bool.true\">true</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/lake/Lake/Toml/ParserUtil.lean#L290-L292","name":"Lake.Toml.sepByLinebreak","line":290,"kind":"def","docLink":"./Lake/Toml/ParserUtil.html#Lake.Toml.sepByLinebreak","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.sepByLinebreak\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">sepByLinebreak</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">allowTrailingLinebreak</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/Prelude.html#Bool.true\">true</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/lake/Lake/Toml/ParserUtil.lean#L288-L288","name":"Lake.Toml.recNodeWithAntiquot.go","line":288,"kind":"def","docLink":"./Lake/Toml/ParserUtil.html#Lake.Toml.recNodeWithAntiquot.go","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.recNodeWithAntiquot.go\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">recNodeWithAntiquot</span>.<span class=\"name\">go</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">name</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">kind</span> : <a href=\"./Init/Prelude.html#Lean.SyntaxNodeKind\">Lean.SyntaxNodeKind</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <a href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.ParserMapFn\">ParserMapFn</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">anonymous</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/Prelude.html#Bool.false\">false</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/lake/Lake/Toml/ParserUtil.lean#L285-L288","name":"Lake.Toml.recNodeWithAntiquot","line":285,"kind":"def","docLink":"./Lake/Toml/ParserUtil.html#Lake.Toml.recNodeWithAntiquot","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.recNodeWithAntiquot\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">recNodeWithAntiquot</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">name</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">kind</span> : <a href=\"./Init/Prelude.html#Lean.SyntaxNodeKind\">Lean.SyntaxNodeKind</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <a href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.ParserMapFn\">ParserMapFn</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">anonymous</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/Prelude.html#Bool.false\">false</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/lake/Lake/Toml/ParserUtil.lean#L282-L283","name":"Lake.Toml.recNode","line":282,"kind":"def","docLink":"./Lake/Toml/ParserUtil.html#Lake.Toml.recNode","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.recNode\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">recNode</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <a href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.ParserMapFn\">ParserMapFn</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/lake/Lake/Toml/ParserUtil.lean#L276-L280","name":"Lake.Toml.ParserMapFn","line":276,"kind":"def","docLink":"./Lake/Toml/ParserUtil.html#Lake.Toml.ParserMapFn","doc":"`Parser → Parser` hidden by an `abbrev`.\nPrevents the formatter/parenthesizer generator from transforming it.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.ParserMapFn\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">ParserMapFn</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/lake/Lake/Toml/ParserUtil.lean#L273-L274","name":"Lake.Toml.recNodeFn","line":273,"kind":"opaque","docLink":"./Lake/Toml/ParserUtil.html#Lake.Toml.recNodeFn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.recNodeFn\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">recNodeFn</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a> → <a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/lake/Lake/Toml/ParserUtil.lean#L269-L271","name":"Lake.Toml.dynamicNode.parenthesizer","line":269,"kind":"def","docLink":"./Lake/Toml/ParserUtil.html#Lake.Toml.dynamicNode.parenthesizer","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.dynamicNode.parenthesizer\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">dynamicNode</span>.<span class=\"name\">parenthesizer</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a> → <a href=\"./Lean/PrettyPrinter/Parenthesizer.html#Lean.PrettyPrinter.Parenthesizer\">Lean.PrettyPrinter.Parenthesizer</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/lake/Lake/Toml/ParserUtil.lean#L265-L267","name":"Lake.Toml.dynamicNode.formatter","line":265,"kind":"def","docLink":"./Lake/Toml/ParserUtil.html#Lake.Toml.dynamicNode.formatter","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.dynamicNode.formatter\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">dynamicNode</span>.<span class=\"name\">formatter</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a> → <a href=\"./Lean/PrettyPrinter/Formatter.html#Lean.PrettyPrinter.Formatter\">Lean.PrettyPrinter.Formatter</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/lake/Lake/Toml/ParserUtil.lean#L262-L263","name":"Lake.Toml.dynamicNode","line":262,"kind":"def","docLink":"./Lake/Toml/ParserUtil.html#Lake.Toml.dynamicNode","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.dynamicNode\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">dynamicNode</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/lake/Lake/Toml/ParserUtil.lean#L259-L260","name":"Lake.Toml.trailing","line":259,"kind":"def","docLink":"./Lake/Toml/ParserUtil.html#Lake.Toml.trailing","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.trailing\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">trailing</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/lake/Lake/Toml/ParserUtil.lean#L248-L257","name":"Lake.Toml.extendTrailingFn","line":248,"kind":"def","docLink":"./Lake/Toml/ParserUtil.html#Lake.Toml.extendTrailingFn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.extendTrailingFn\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">extendTrailingFn</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/lake/Lake/Toml/ParserUtil.lean#L241-L246","name":"Lake.Toml.modifyTailInfo","line":241,"kind":"opaque","docLink":"./Lake/Toml/ParserUtil.html#Lake.Toml.modifyTailInfo","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.modifyTailInfo\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">modifyTailInfo</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.SourceInfo\">Lean.SourceInfo</a> → <a href=\"./Init/Prelude.html#Lean.SourceInfo\">Lean.SourceInfo</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">stx</span> : <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/lake/Lake/Toml/ParserUtil.lean#L237-L239","name":"Lake.Toml.SourceInfo.updateTrailing","line":237,"kind":"def","docLink":"./Lake/Toml/ParserUtil.html#Lake.Toml.SourceInfo.updateTrailing","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.SourceInfo.updateTrailing\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">SourceInfo</span>.<span class=\"name\">updateTrailing</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">trailing</span> : <a href=\"./Init/Prelude.html#Substring\">Substring</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.SourceInfo\">Lean.SourceInfo</a> → <a href=\"./Init/Prelude.html#Lean.SourceInfo\">Lean.SourceInfo</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/lake/Lake/Toml/ParserUtil.lean#L234-L235","name":"Lake.Toml.epsilon.parenthesizer","line":234,"kind":"def","docLink":"./Lake/Toml/ParserUtil.html#Lake.Toml.epsilon.parenthesizer","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.epsilon.parenthesizer\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">epsilon</span>.<span class=\"name\">parenthesizer</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a> → <a href=\"./Lean/PrettyPrinter/Parenthesizer.html#Lean.PrettyPrinter.Parenthesizer\">Lean.PrettyPrinter.Parenthesizer</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/lake/Lake/Toml/ParserUtil.lean#L231-L232","name":"Lake.Toml.epsilon.formatter","line":231,"kind":"def","docLink":"./Lake/Toml/ParserUtil.html#Lake.Toml.epsilon.formatter","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.epsilon.formatter\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">epsilon</span>.<span class=\"name\">formatter</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a> → <a href=\"./Lean/PrettyPrinter/Formatter.html#Lean.PrettyPrinter.Formatter\">Lean.PrettyPrinter.Formatter</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/lake/Lake/Toml/ParserUtil.lean#L228-L229","name":"Lake.Toml.epsilon","line":228,"kind":"def","docLink":"./Lake/Toml/ParserUtil.html#Lake.Toml.epsilon","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.epsilon\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">epsilon</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fn</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/lake/Lake/Toml/ParserUtil.lean#L225-L226","name":"Lake.Toml.litWithAntiquot","line":225,"kind":"def","docLink":"./Lake/Toml/ParserUtil.html#Lake.Toml.litWithAntiquot","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.litWithAntiquot\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">litWithAntiquot</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">name</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">kind</span> : <a href=\"./Init/Prelude.html#Lean.SyntaxNodeKind\">Lean.SyntaxNodeKind</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">trailingFn</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a> := <a href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.skipFn\">skipFn</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">anonymous</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/Prelude.html#Bool.false\">false</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/lake/Lake/Toml/ParserUtil.lean#L221-L223","name":"Lake.Toml.lit.parenthesizer","line":221,"kind":"def","docLink":"./Lake/Toml/ParserUtil.html#Lake.Toml.lit.parenthesizer","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.lit.parenthesizer\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">lit</span>.<span class=\"name\">parenthesizer</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.SyntaxNodeKind\">Lean.SyntaxNodeKind</a> → <span class=\"fn\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a> → <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a> → <a href=\"./Lean/PrettyPrinter/Parenthesizer.html#Lean.PrettyPrinter.Parenthesizer\">Lean.PrettyPrinter.Parenthesizer</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/lake/Lake/Toml/ParserUtil.lean#L217-L219","name":"Lake.Toml.lit.formatter","line":217,"kind":"def","docLink":"./Lake/Toml/ParserUtil.html#Lake.Toml.lit.formatter","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.lit.formatter\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">lit</span>.<span class=\"name\">formatter</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">kind</span> : <a href=\"./Init/Prelude.html#Lean.SyntaxNodeKind\">Lean.SyntaxNodeKind</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a> → <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a> → <a href=\"./Lean/PrettyPrinter/Formatter.html#Lean.PrettyPrinter.Formatter\">Lean.PrettyPrinter.Formatter</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/lake/Lake/Toml/ParserUtil.lean#L214-L215","name":"Lake.Toml.lit","line":214,"kind":"def","docLink":"./Lake/Toml/ParserUtil.html#Lake.Toml.lit","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.lit\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">lit</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">kind</span> : <a href=\"./Init/Prelude.html#Lean.SyntaxNodeKind\">Lean.SyntaxNodeKind</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">trailingFn</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a> := <a href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.skipFn\">skipFn</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/lake/Lake/Toml/ParserUtil.lean#L208-L212","name":"Lake.Toml.litFn","line":208,"kind":"def","docLink":"./Lake/Toml/ParserUtil.html#Lake.Toml.litFn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.litFn\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">litFn</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">kind</span> : <a href=\"./Init/Prelude.html#Lean.SyntaxNodeKind\">Lean.SyntaxNodeKind</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">trailingFn</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a> := <a href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.skipFn\">skipFn</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/lake/Lake/Toml/ParserUtil.lean#L196-L206","name":"Lake.Toml.pushLit","line":196,"kind":"def","docLink":"./Lake/Toml/ParserUtil.html#Lake.Toml.pushLit","doc":"Push `(Syntax.node kind <new-atom>)` onto the syntax stack. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.pushLit\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">pushLit</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">kind</span> : <a href=\"./Init/Prelude.html#Lean.SyntaxNodeKind\">Lean.SyntaxNodeKind</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">startPos</span> : <a href=\"./Init/Prelude.html#String.Pos\">String.Pos</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">trailingFn</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a> := <a href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.skipFn\">skipFn</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/lake/Lake/Toml/ParserUtil.lean#L192-L194","name":"Lake.Toml.strAtom.parenthesizer","line":192,"kind":"def","docLink":"./Lake/Toml/ParserUtil.html#Lake.Toml.strAtom.parenthesizer","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.strAtom.parenthesizer\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">strAtom</span>.<span class=\"name\">parenthesizer</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#String\">String</a> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Prelude.html#String\">String</a></span> → <span class=\"fn\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a> → <a href=\"./Lean/PrettyPrinter/Parenthesizer.html#Lean.PrettyPrinter.Parenthesizer\">Lean.PrettyPrinter.Parenthesizer</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/lake/Lake/Toml/ParserUtil.lean#L188-L190","name":"Lake.Toml.strAtom.formatter","line":188,"kind":"def","docLink":"./Lake/Toml/ParserUtil.html#Lake.Toml.strAtom.formatter","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.strAtom.formatter\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">strAtom</span>.<span class=\"name\">formatter</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Prelude.html#String\">String</a></span> → <span class=\"fn\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a> → <a href=\"./Lean/PrettyPrinter/Formatter.html#Lean.PrettyPrinter.Formatter\">Lean.PrettyPrinter.Formatter</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/lake/Lake/Toml/ParserUtil.lean#L184-L186","name":"Lake.Toml.strAtom","line":184,"kind":"def","docLink":"./Lake/Toml/ParserUtil.html#Lake.Toml.strAtom","doc":"Parse the trimmed string as an atom (but use the full string for formatting). "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.strAtom\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">strAtom</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">expected</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Prelude.html#String\">String</a></span> := <a href=\"./Init/Prelude.html#List.cons\">[</a><span class=\"fn\"><a href=\"./Init/Data/ToString/Basic.html#ToString.toString\">toString</a> <span class=\"fn\">&quot;'&quot;</span></span> <a href=\"./Init/Prelude.html#HAppend.hAppend\">++</a> <span class=\"fn\"><a href=\"./Init/Data/ToString/Basic.html#ToString.toString\">toString</a> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#HAppend.hAppend\">++</a> <span class=\"fn\"><a href=\"./Init/Data/ToString/Basic.html#ToString.toString\">toString</a> <span class=\"fn\">&quot;'&quot;</span></span><a href=\"./Init/Prelude.html#List.cons\">]</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">trailingFn</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a> := <a href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.skipFn\">skipFn</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/lake/Lake/Toml/ParserUtil.lean#L180-L182","name":"Lake.Toml.chAtom.parenthesizer","line":180,"kind":"def","docLink":"./Lake/Toml/ParserUtil.html#Lake.Toml.chAtom.parenthesizer","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.chAtom.parenthesizer\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">chAtom</span>.<span class=\"name\">parenthesizer</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Char\">Char</a> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Prelude.html#String\">String</a></span> → <span class=\"fn\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a> → <a href=\"./Lean/PrettyPrinter/Parenthesizer.html#Lean.PrettyPrinter.Parenthesizer\">Lean.PrettyPrinter.Parenthesizer</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/lake/Lake/Toml/ParserUtil.lean#L176-L178","name":"Lake.Toml.chAtom.formatter","line":176,"kind":"def","docLink":"./Lake/Toml/ParserUtil.html#Lake.Toml.chAtom.formatter","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.chAtom.formatter\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">chAtom</span>.<span class=\"name\">formatter</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <a href=\"./Init/Prelude.html#Char\">Char</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Prelude.html#String\">String</a></span> → <span class=\"fn\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a> → <a href=\"./Lean/PrettyPrinter/Formatter.html#Lean.PrettyPrinter.Formatter\">Lean.PrettyPrinter.Formatter</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/lake/Lake/Toml/ParserUtil.lean#L172-L174","name":"Lake.Toml.chAtom","line":172,"kind":"def","docLink":"./Lake/Toml/ParserUtil.html#Lake.Toml.chAtom","doc":"Parse a single character as an atom. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.chAtom\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">chAtom</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <a href=\"./Init/Prelude.html#Char\">Char</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">expected</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Prelude.html#String\">String</a></span> := <a href=\"./Init/Prelude.html#List.cons\">[</a><span class=\"fn\"><a href=\"./Init/Data/ToString/Basic.html#ToString.toString\">toString</a> <span class=\"fn\">&quot;'&quot;</span></span> <a href=\"./Init/Prelude.html#HAppend.hAppend\">++</a> <span class=\"fn\"><a href=\"./Init/Data/ToString/Basic.html#ToString.toString\">toString</a> <span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#HAppend.hAppend\">++</a> <span class=\"fn\"><a href=\"./Init/Data/ToString/Basic.html#ToString.toString\">toString</a> <span class=\"fn\">&quot;'&quot;</span></span><a href=\"./Init/Prelude.html#List.cons\">]</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">trailingFn</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a> := <a href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.skipFn\">skipFn</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/lake/Lake/Toml/ParserUtil.lean#L168-L170","name":"Lake.Toml.atom.parenthesizer","line":168,"kind":"def","docLink":"./Lake/Toml/ParserUtil.html#Lake.Toml.atom.parenthesizer","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.atom.parenthesizer\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">atom</span>.<span class=\"name\">parenthesizer</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a> → <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a> → <a href=\"./Lean/PrettyPrinter/Parenthesizer.html#Lean.PrettyPrinter.Parenthesizer\">Lean.PrettyPrinter.Parenthesizer</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/lake/Lake/Toml/ParserUtil.lean#L160-L166","name":"Lake.Toml.atom.formatter","line":160,"kind":"def","docLink":"./Lake/Toml/ParserUtil.html#Lake.Toml.atom.formatter","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.atom.formatter\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">atom</span>.<span class=\"name\">formatter</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a> → <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a> → <a href=\"./Lean/PrettyPrinter/Formatter.html#Lean.PrettyPrinter.Formatter\">Lean.PrettyPrinter.Formatter</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/lake/Lake/Toml/ParserUtil.lean#L153-L157","name":"Lake.Toml.getSyntaxExprPos?","line":153,"kind":"def","docLink":"./Lake/Toml/ParserUtil.html#Lake.Toml.getSyntaxExprPos?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.getSyntaxExprPos?\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">getSyntaxExprPos?</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#String.Pos\">String.Pos</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/lake/Lake/Toml/ParserUtil.lean#L149-L151","name":"Lake.Toml.getInfoExprPos?","line":149,"kind":"def","docLink":"./Lake/Toml/ParserUtil.html#Lake.Toml.getInfoExprPos?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.getInfoExprPos?\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">getInfoExprPos?</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.SourceInfo\">Lean.SourceInfo</a> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#String.Pos\">String.Pos</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/lake/Lake/Toml/ParserUtil.lean#L146-L147","name":"Lake.Toml.atom","line":146,"kind":"def","docLink":"./Lake/Toml/ParserUtil.html#Lake.Toml.atom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.atom\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">atom</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">trailingFn</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a> := <a href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.skipFn\">skipFn</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/lake/Lake/Toml/ParserUtil.lean#L139-L144","name":"Lake.Toml.atomFn","line":139,"kind":"def","docLink":"./Lake/Toml/ParserUtil.html#Lake.Toml.atomFn","doc":"Match an arbitrary `ParserFn` and return the consumed String in a `Syntax.atom`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.atomFn\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">atomFn</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">trailingFn</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a> := <a href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.skipFn\">skipFn</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/lake/Lake/Toml/ParserUtil.lean#L127-L137","name":"Lake.Toml.pushAtom","line":127,"kind":"def","docLink":"./Lake/Toml/ParserUtil.html#Lake.Toml.pushAtom","doc":"Push a new atom onto the syntax stack. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.pushAtom\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">pushAtom</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">startPos</span> : <a href=\"./Init/Prelude.html#String.Pos\">String.Pos</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">trailingFn</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a> := <a href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.skipFn\">skipFn</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/lake/Lake/Toml/ParserUtil.lean#L110-L123","name":"Lake.Toml.sepByChar1Fn","line":110,"kind":"opaque","docLink":"./Lake/Toml/ParserUtil.html#Lake.Toml.sepByChar1Fn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.sepByChar1Fn\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">sepByChar1Fn</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Char\">Char</a> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">sep</span> : <a href=\"./Init/Prelude.html#Char\">Char</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">expected</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Prelude.html#String\">String</a></span> := <a href=\"./Init/Prelude.html#List.nil\">[</a><a href=\"./Init/Prelude.html#List.nil\">]</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/lake/Lake/Toml/ParserUtil.lean#L96-L108","name":"Lake.Toml.sepByChar1AuxFn","line":96,"kind":"opaque","docLink":"./Lake/Toml/ParserUtil.html#Lake.Toml.sepByChar1AuxFn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.sepByChar1AuxFn\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">sepByChar1AuxFn</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Char\">Char</a> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">sep</span> : <a href=\"./Init/Prelude.html#Char\">Char</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">expected</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Prelude.html#String\">String</a></span> := <a href=\"./Init/Prelude.html#List.nil\">[</a><a href=\"./Init/Prelude.html#List.nil\">]</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/lake/Lake/Toml/ParserUtil.lean#L90-L92","name":"Lake.Toml.strFn","line":90,"kind":"def","docLink":"./Lake/Toml/ParserUtil.html#Lake.Toml.strFn","doc":"Consume a matching string atomically. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.strFn\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">strFn</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">str</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">expected</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Prelude.html#String\">String</a></span> := <a href=\"./Init/Prelude.html#List.cons\">[</a><span class=\"fn\"><a href=\"./Init/Data/ToString/Basic.html#ToString.toString\">toString</a> <span class=\"fn\">&quot;'&quot;</span></span> <a href=\"./Init/Prelude.html#HAppend.hAppend\">++</a> <span class=\"fn\"><a href=\"./Init/Data/ToString/Basic.html#ToString.toString\">toString</a> <span class=\"fn\">str</span></span> <a href=\"./Init/Prelude.html#HAppend.hAppend\">++</a> <span class=\"fn\"><a href=\"./Init/Data/ToString/Basic.html#ToString.toString\">toString</a> <span class=\"fn\">&quot;'&quot;</span></span><a href=\"./Init/Prelude.html#List.cons\">]</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/lake/Lake/Toml/ParserUtil.lean#L83-L88","name":"Lake.Toml.strAuxFn","line":83,"kind":"opaque","docLink":"./Lake/Toml/ParserUtil.html#Lake.Toml.strAuxFn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.strAuxFn\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">strAuxFn</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">str</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">expected</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Prelude.html#String\">String</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">strPos</span> : <a href=\"./Init/Prelude.html#String.Pos\">String.Pos</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/lake/Lake/Toml/ParserUtil.lean#L79-L81","name":"Lake.Toml.chFn","line":79,"kind":"def","docLink":"./Lake/Toml/ParserUtil.html#Lake.Toml.chFn","doc":"Consume a single matching character. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.chFn\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">chFn</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <a href=\"./Init/Prelude.html#Char\">Char</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">expected</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Prelude.html#String\">String</a></span> := <a href=\"./Init/Prelude.html#List.cons\">[</a><span class=\"fn\"><a href=\"./Init/Data/ToString/Basic.html#ToString.toString\">toString</a> <span class=\"fn\">&quot;'&quot;</span></span> <a href=\"./Init/Prelude.html#HAppend.hAppend\">++</a> <span class=\"fn\"><a href=\"./Init/Data/ToString/Basic.html#ToString.toString\">toString</a> <span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#HAppend.hAppend\">++</a> <span class=\"fn\"><a href=\"./Init/Data/ToString/Basic.html#ToString.toString\">toString</a> <span class=\"fn\">&quot;'&quot;</span></span><a href=\"./Init/Prelude.html#List.cons\">]</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/lake/Lake/Toml/ParserUtil.lean#L75-L77","name":"Lake.Toml.digitPairFn","line":75,"kind":"def","docLink":"./Lake/Toml/ParserUtil.html#Lake.Toml.digitPairFn","doc":"Consume a two digits (i.e., `Char.isDigit`). "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.digitPairFn\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">digitPairFn</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">expected</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Prelude.html#String\">String</a></span> := <a href=\"./Init/Prelude.html#List.cons\">[</a><span class=\"fn\">&quot;digit&quot;</span><a href=\"./Init/Prelude.html#List.cons\">]</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/lake/Lake/Toml/ParserUtil.lean#L71-L73","name":"Lake.Toml.digitFn","line":71,"kind":"def","docLink":"./Lake/Toml/ParserUtil.html#Lake.Toml.digitFn","doc":"Consume a single digit (i.e., `Char.isDigit`). "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.digitFn\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">digitFn</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">expected</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Prelude.html#String\">String</a></span> := <a href=\"./Init/Prelude.html#List.cons\">[</a><span class=\"fn\">&quot;digit&quot;</span><a href=\"./Init/Prelude.html#List.cons\">]</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/lake/Lake/Toml/ParserUtil.lean#L68-L69","name":"Lake.Toml.takeWhile1Fn","line":68,"kind":"def","docLink":"./Lake/Toml/ParserUtil.html#Lake.Toml.takeWhile1Fn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.takeWhile1Fn\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">takeWhile1Fn</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Char\">Char</a> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">expected</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Prelude.html#String\">String</a></span> := <a href=\"./Init/Prelude.html#List.nil\">[</a><a href=\"./Init/Prelude.html#List.nil\">]</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/lake/Lake/Toml/ParserUtil.lean#L57-L66","name":"Lake.Toml.satisfyFn","line":57,"kind":"def","docLink":"./Lake/Toml/ParserUtil.html#Lake.Toml.satisfyFn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.satisfyFn\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">satisfyFn</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Char\">Char</a> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">expected</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Prelude.html#String\">String</a></span> := <a href=\"./Init/Prelude.html#List.nil\">[</a><a href=\"./Init/Prelude.html#List.nil\">]</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/lake/Lake/Toml/ParserUtil.lean#L54-L55","name":"Lake.Toml.mkUnexpectedCharError","line":54,"kind":"def","docLink":"./Lake/Toml/ParserUtil.html#Lake.Toml.mkUnexpectedCharError","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.mkUnexpectedCharError\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">mkUnexpectedCharError</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">Lean.Parser.ParserState</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <a href=\"./Init/Prelude.html#Char\">Char</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">expected</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Prelude.html#String\">String</a></span> := <a href=\"./Init/Prelude.html#List.nil\">[</a><a href=\"./Init/Prelude.html#List.nil\">]</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pushMissing</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/Prelude.html#Bool.true\">true</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">Lean.Parser.ParserState</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/lake/Lake/Toml/ParserUtil.lean#L47-L51","name":"Lake.Toml.repeatFn.loop","line":47,"kind":"def","docLink":"./Lake/Toml/ParserUtil.html#Lake.Toml.repeatFn.loop","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.repeatFn.loop\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">repeatFn</span>.<span class=\"name\">loop</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserContext\">Lean.Parser.ParserContext</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">Nat</a> → <span class=\"fn\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">Lean.Parser.ParserState</a> → <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">Lean.Parser.ParserState</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/lake/Lake/Toml/ParserUtil.lean#L45-L52","name":"Lake.Toml.repeatFn","line":45,"kind":"def","docLink":"./Lake/Toml/ParserUtil.html#Lake.Toml.repeatFn","doc":"A sequence of `n` repetitions of a parser function. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.repeatFn\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">repeatFn</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/lake/Lake/Toml/ParserUtil.lean#L38-L43","name":"Lake.Toml.optFn","line":38,"kind":"def","docLink":"./Lake/Toml/ParserUtil.html#Lake.Toml.optFn","doc":"Match an arbitrary parser or do nothing. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.optFn\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">optFn</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/lake/Lake/Toml/ParserUtil.lean#L34-L36","name":"Lake.Toml.usePosFn","line":34,"kind":"def","docLink":"./Lake/Toml/ParserUtil.html#Lake.Toml.usePosFn","doc":"`ParserFn` combinator that runs `f` with the current position. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.usePosFn\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">usePosFn</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#String.Pos\">String.Pos</a> → <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/lake/Lake/Toml/ParserUtil.lean#L31-L32","name":"Lake.Toml.instAndThenParserFn_lake","line":31,"kind":"def","docLink":"./Lake/Toml/ParserUtil.html#Lake.Toml.instAndThenParserFn_lake","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.instAndThenParserFn_lake\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">instAndThenParserFn_lake</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#AndThen\">AndThen</a> <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/lake/Lake/Toml/ParserUtil.lean#L29-L29","name":"Lake.Toml.skipFn","line":29,"kind":"def","docLink":"./Lake/Toml/ParserUtil.html#Lake.Toml.skipFn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.skipFn\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">skipFn</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/lake/Lake/Toml/ParserUtil.lean#L26-L27","name":"Lake.Toml.isHexDigit","line":26,"kind":"def","docLink":"./Lake/Toml/ParserUtil.html#Lake.Toml.isHexDigit","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.isHexDigit\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">isHexDigit</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <a href=\"./Init/Prelude.html#Char\">Char</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/lake/Lake/Toml/ParserUtil.lean#L23-L24","name":"Lake.Toml.isOctDigit","line":23,"kind":"def","docLink":"./Lake/Toml/ParserUtil.html#Lake.Toml.isOctDigit","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.isOctDigit\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">isOctDigit</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <a href=\"./Init/Prelude.html#Char\">Char</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/lake/Lake/Toml/ParserUtil.lean#L20-L21","name":"Lake.Toml.isBinDigit","line":20,"kind":"def","docLink":"./Lake/Toml/ParserUtil.html#Lake.Toml.isBinDigit","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.isBinDigit\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">isBinDigit</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <a href=\"./Init/Prelude.html#Char\">Char</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"}]}