{"name":"Lean.Meta.Tactic.Grind.Arith.Cutsat.Search","instances":[{"typeNames":["Lean.Meta.Grind.Arith.Cutsat.FindIntValResult"],"name":"Lean.Meta.Grind.Arith.Cutsat.instInhabitedFindIntValResult","className":"Inhabited"}],"imports":["Lean.Meta.Tactic.Grind.Arith.Cutsat.Var","Lean.Meta.Tactic.Grind.Arith.Cutsat.Util","Lean.Meta.Tactic.Grind.Arith.Cutsat.DvdCnstr","Lean.Meta.Tactic.Grind.Arith.Cutsat.LeCnstr","Lean.Meta.Tactic.Grind.Arith.Cutsat.EqCnstr","Lean.Meta.Tactic.Grind.Arith.Cutsat.SearchM","Lean.Meta.Tactic.Grind.Arith.Cutsat.Model"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.lean#L558-L571","name":"Lean.Meta.Grind.Arith.Cutsat.check","line":558,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.check","doc":"Returns `true` if work/progress has been done.\nThere are two kinds of progress:\n- An assignment for satisfying constraints was constructed.\n- An inconsistency was detected.\n\nThe result is `false` if module already has a satisfying assignment.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.check\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">check</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.GoalM\">GoalM</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.lean#L545-L556","name":"Lean.Meta.Grind.Arith.Cutsat.searchAssigment","line":545,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.searchAssigment","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.searchAssigment\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">searchAssigment</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.GoalM\">GoalM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.lean#L473-L504","name":"Lean.Meta.Grind.Arith.Cutsat.resolveConflict","line":473,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.resolveConflict","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.resolveConflict\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">resolveConflict</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Types.html#Lean.Meta.Grind.Arith.Cutsat.UnsatProof\">UnsatProof</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/SearchM.html#Lean.Meta.Grind.Arith.Cutsat.SearchM\">SearchM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.lean#L454-L456","name":"Lean.Meta.Grind.Arith.Cutsat.hasAssignment","line":454,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.hasAssignment","doc":"Returns `true` if we already have a complete assignment / model. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.hasAssignment\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">hasAssignment</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.GoalM\">GoalM</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.lean#L385-L452","name":"Lean.Meta.Grind.Arith.Cutsat.processVar","line":385,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.processVar","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.processVar\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">processVar</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Init/Data/Int/Linear.html#Int.Linear.Var\">Var</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/SearchM.html#Lean.Meta.Grind.Arith.Cutsat.SearchM\">SearchM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.lean#L372-L383","name":"Lean.Meta.Grind.Arith.Cutsat.resolveRatDiseq","line":372,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.resolveRatDiseq","doc":"Given `c₁` of the form `-a₁*x + p₁ ≤ 0`, and `c` of the form `b*x + p ≠ 0`,\nsplits `c` and resolve with `c₁`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.resolveRatDiseq\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">resolveRatDiseq</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c₁</span> : <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Types.html#Lean.Meta.Grind.Arith.Cutsat.LeCnstr\">LeCnstr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Types.html#Lean.Meta.Grind.Arith.Cutsat.DiseqCnstr\">DiseqCnstr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/SearchM.html#Lean.Meta.Grind.Arith.Cutsat.SearchM\">SearchM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.lean#L353-L370","name":"Lean.Meta.Grind.Arith.Cutsat.resolveCooperDiseq","line":353,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.resolveCooperDiseq","doc":"Given `c₁` of the form `a₁*x + p₁ ≠ 0`, and `c₂` of the form `b*x + p ≤ 0`\nsplits `c₁` and resolve with `c₂`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.resolveCooperDiseq\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">resolveCooperDiseq</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c₁</span> : <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Types.html#Lean.Meta.Grind.Arith.Cutsat.DiseqCnstr\">DiseqCnstr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c₂</span> : <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Types.html#Lean.Meta.Grind.Arith.Cutsat.LeCnstr\">LeCnstr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c₃?</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Types.html#Lean.Meta.Grind.Arith.Cutsat.DvdCnstr\">DvdCnstr</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/SearchM.html#Lean.Meta.Grind.Arith.Cutsat.SearchM\">SearchM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.lean#L341-L351","name":"Lean.Meta.Grind.Arith.Cutsat.DiseqCnstr.split","line":341,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.DiseqCnstr.split","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.DiseqCnstr.split\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">DiseqCnstr</span>.<span class=\"name\">split</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Types.html#Lean.Meta.Grind.Arith.Cutsat.DiseqCnstr\">DiseqCnstr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/SearchM.html#Lean.Meta.Grind.Arith.Cutsat.SearchM\">SearchM</a> <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Types.html#Lean.Meta.Grind.Arith.Cutsat.LeCnstr\">LeCnstr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.lean#L337-L339","name":"Lean.Meta.Grind.Arith.Cutsat.resolveCooperDvd","line":337,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.resolveCooperDvd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.resolveCooperDvd\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">resolveCooperDvd</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c₁ </span><span class=\"fn\">c₂</span> : <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Types.html#Lean.Meta.Grind.Arith.Cutsat.LeCnstr\">LeCnstr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c₃</span> : <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Types.html#Lean.Meta.Grind.Arith.Cutsat.DvdCnstr\">DvdCnstr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/SearchM.html#Lean.Meta.Grind.Arith.Cutsat.SearchM\">SearchM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.lean#L333-L335","name":"Lean.Meta.Grind.Arith.Cutsat.resolveCooper","line":333,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.resolveCooper","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.resolveCooper\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">resolveCooper</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c₁ </span><span class=\"fn\">c₂</span> : <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Types.html#Lean.Meta.Grind.Arith.Cutsat.LeCnstr\">LeCnstr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/SearchM.html#Lean.Meta.Grind.Arith.Cutsat.SearchM\">SearchM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.lean#L325-L331","name":"Lean.Meta.Grind.Arith.Cutsat.resolveCooperPred","line":325,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.resolveCooperPred","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.resolveCooperPred\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">resolveCooperPred</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pred</span> : <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Types.html#Lean.Meta.Grind.Arith.Cutsat.CooperSplitPred\">CooperSplitPred</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/SearchM.html#Lean.Meta.Grind.Arith.Cutsat.SearchM\">SearchM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.lean#L313-L323","name":"Lean.Meta.Grind.Arith.Cutsat.resolveCooperUnary","line":313,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.resolveCooperUnary","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.resolveCooperUnary\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">resolveCooperUnary</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pred</span> : <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Types.html#Lean.Meta.Grind.Arith.Cutsat.CooperSplitPred\">CooperSplitPred</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/SearchM.html#Lean.Meta.Grind.Arith.Cutsat.SearchM\">SearchM</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.lean#L295-L311","name":"Lean.Meta.Grind.Arith.Cutsat.resolveRealLowerUpperConflict","line":295,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.resolveRealLowerUpperConflict","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.resolveRealLowerUpperConflict\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">resolveRealLowerUpperConflict</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c₁ </span><span class=\"fn\">c₂</span> : <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Types.html#Lean.Meta.Grind.Arith.Cutsat.LeCnstr\">LeCnstr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.GoalM\">GoalM</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.lean#L288-L293","name":"Lean.Meta.Grind.Arith.Cutsat.findRatVal","line":288,"kind":"opaque","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.findRatVal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.findRatVal\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">findRatVal</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">lower </span><span class=\"fn\">upper</span> : <a href=\"./Std/Internal/Rat.html#Std.Internal.Rat\">Rat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">diseqVals</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> (<a href=\"./Std/Internal/Rat.html#Std.Internal.Rat\">Rat</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Types.html#Lean.Meta.Grind.Arith.Cutsat.DiseqCnstr\">DiseqCnstr</a>)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Internal/Rat.html#Std.Internal.Rat\">Rat</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.lean#L281-L286","name":"Lean.Meta.Grind.Arith.Cutsat.findIntVal.go","line":281,"kind":"opaque","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.findIntVal.go","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.findIntVal.go\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">findIntVal</span>.<span class=\"name\">go</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.DvdSolution\">DvdSolution</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">upper</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">dvals</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> (<a href=\"./Std/Internal/Rat.html#Std.Internal.Rat\">Rat</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Types.html#Lean.Meta.Grind.Arith.Cutsat.DiseqCnstr\">DiseqCnstr</a>)</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">v</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.FindIntValResult\">FindIntValResult</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.lean#L269-L286","name":"Lean.Meta.Grind.Arith.Cutsat.findIntVal","line":269,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.findIntVal","doc":"Tries to find an integer `v` s.t. `lower ≤ v ≤ upper`, `v ∉ dvals`, and `v ∈ s`.\nReturns `.found v` if result was found, `.dvd` if it failed because of the divisibility constraint,\nand `.diseq c` because of the disequality constraint `c`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.findIntVal\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">findIntVal</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.DvdSolution\">DvdSolution</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">lower </span><span class=\"fn\">upper</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">dvals</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> (<a href=\"./Std/Internal/Rat.html#Std.Internal.Rat\">Rat</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Types.html#Lean.Meta.Grind.Arith.Cutsat.DiseqCnstr\">DiseqCnstr</a>)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.FindIntValResult\">FindIntValResult</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.lean#L267-L267","name":"Lean.Meta.Grind.Arith.Cutsat.instInhabitedFindIntValResult","line":267,"kind":"instance","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.instInhabitedFindIntValResult","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.instInhabitedFindIntValResult\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">instInhabitedFindIntValResult</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.FindIntValResult\">FindIntValResult</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.lean#L266-L266","name":"Lean.Meta.Grind.Arith.Cutsat.FindIntValResult.dvd","line":266,"kind":"ctor","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.FindIntValResult.dvd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.FindIntValResult.dvd\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">FindIntValResult</span>.<span class=\"name\">dvd</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.FindIntValResult\">FindIntValResult</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.lean#L265-L265","name":"Lean.Meta.Grind.Arith.Cutsat.FindIntValResult.diseq","line":265,"kind":"ctor","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.FindIntValResult.diseq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.FindIntValResult.diseq\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">FindIntValResult</span>.<span class=\"name\">diseq</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Types.html#Lean.Meta.Grind.Arith.Cutsat.DiseqCnstr\">DiseqCnstr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.FindIntValResult\">FindIntValResult</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.lean#L264-L264","name":"Lean.Meta.Grind.Arith.Cutsat.FindIntValResult.found","line":264,"kind":"ctor","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.FindIntValResult.found","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.FindIntValResult.found\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">FindIntValResult</span>.<span class=\"name\">found</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">val</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.FindIntValResult\">FindIntValResult</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.lean#L263-L267","name":"Lean.Meta.Grind.Arith.Cutsat.FindIntValResult","line":263,"kind":"inductive","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.FindIntValResult","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.FindIntValResult\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">FindIntValResult</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.lean#L256-L261","name":"Lean.Meta.Grind.Arith.Cutsat.DvdSolution.leAvoiding","line":256,"kind":"opaque","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.DvdSolution.leAvoiding","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.DvdSolution.leAvoiding\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">DvdSolution</span>.<span class=\"name\">leAvoiding</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.DvdSolution\">DvdSolution</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">v</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">dvals</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> (<a href=\"./Std/Internal/Rat.html#Std.Internal.Rat\">Rat</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Types.html#Lean.Meta.Grind.Arith.Cutsat.DiseqCnstr\">DiseqCnstr</a>)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Int/Basic.html#Int\">Int</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.lean#L249-L254","name":"Lean.Meta.Grind.Arith.Cutsat.DvdSolution.geAvoiding","line":249,"kind":"opaque","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.DvdSolution.geAvoiding","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.DvdSolution.geAvoiding\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">DvdSolution</span>.<span class=\"name\">geAvoiding</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.DvdSolution\">DvdSolution</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">v</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">dvals</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> (<a href=\"./Std/Internal/Rat.html#Std.Internal.Rat\">Rat</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Types.html#Lean.Meta.Grind.Arith.Cutsat.DiseqCnstr\">DiseqCnstr</a>)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Int/Basic.html#Int\">Int</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.lean#L246-L247","name":"Lean.Meta.Grind.Arith.Cutsat.findRatDiseq?","line":246,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.findRatDiseq?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.findRatDiseq?\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">findRatDiseq?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">v</span> : <a href=\"./Std/Internal/Rat.html#Std.Internal.Rat\">Rat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">dvals</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> (<a href=\"./Std/Internal/Rat.html#Std.Internal.Rat\">Rat</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Types.html#Lean.Meta.Grind.Arith.Cutsat.DiseqCnstr\">DiseqCnstr</a>)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Types.html#Lean.Meta.Grind.Arith.Cutsat.DiseqCnstr\">DiseqCnstr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.lean#L243-L244","name":"Lean.Meta.Grind.Arith.Cutsat.inDiseqValues","line":243,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.inDiseqValues","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.inDiseqValues\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">inDiseqValues</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">v</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">dvals</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> (<a href=\"./Std/Internal/Rat.html#Std.Internal.Rat\">Rat</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Types.html#Lean.Meta.Grind.Arith.Cutsat.DiseqCnstr\">DiseqCnstr</a>)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.lean#L239-L241","name":"Lean.Meta.Grind.Arith.Cutsat.findDiseq?","line":239,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.findDiseq?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.findDiseq?\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">findDiseq?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">v</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">dvals</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> (<a href=\"./Std/Internal/Rat.html#Std.Internal.Rat\">Rat</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Types.html#Lean.Meta.Grind.Arith.Cutsat.DiseqCnstr\">DiseqCnstr</a>)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Types.html#Lean.Meta.Grind.Arith.Cutsat.DiseqCnstr\">DiseqCnstr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.lean#L227-L237","name":"Lean.Meta.Grind.Arith.Cutsat.DvdSolution.le","line":227,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.DvdSolution.le","doc":"Given a divisibility constraint solution space `s := { b, d }`,\nand a candidate assignment `v`, we want to find\nan assignment `w` such that `w ≤ v` such that exists `k`, `w = k*d + b`\nThus,\n- `k*d + b ≤ v`\n- `k ≤ (v - b) / d`\nSo, we take `w = ((v - b) / d)*d + b`\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.DvdSolution.le\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">DvdSolution</span>.<span class=\"name\">le</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.DvdSolution\">DvdSolution</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">v</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Int/Basic.html#Int\">Int</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.lean#L215-L225","name":"Lean.Meta.Grind.Arith.Cutsat.DvdSolution.ge","line":215,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.DvdSolution.ge","doc":"Given a divisibility constraint solution space `s := { b, d }`,\nand a candidate assignment `v`, we want to find\nan assignment `w` such that `w ≥ v` such that exists `k`, `w = k*d + b`\nThus,\n- `k*d + b ≥ v`\n- `k ≥ cdiv (v - b) d`\nSo, we take `w = (cdiv (v - b) d)*d + b`\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.DvdSolution.ge\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">DvdSolution</span>.<span class=\"name\">ge</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.DvdSolution\">DvdSolution</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">v</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Int/Basic.html#Int\">Int</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.lean#L209-L213","name":"Lean.Meta.Grind.Arith.Cutsat.resolveDvdConflict","line":209,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.resolveDvdConflict","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.resolveDvdConflict\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">resolveDvdConflict</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Types.html#Lean.Meta.Grind.Arith.Cutsat.DvdCnstr\">DvdCnstr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.GoalM\">GoalM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.lean#L183-L207","name":"Lean.Meta.Grind.Arith.Cutsat.DvdCnstr.getSolutions?","line":183,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.DvdCnstr.getSolutions?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.DvdCnstr.getSolutions?\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">DvdCnstr</span>.<span class=\"name\">getSolutions?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Types.html#Lean.Meta.Grind.Arith.Cutsat.DvdCnstr\">DvdCnstr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/SearchM.html#Lean.Meta.Grind.Arith.Cutsat.SearchM\">SearchM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.DvdSolution\">DvdSolution</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.lean#L181-L181","name":"Lean.Meta.Grind.Arith.Cutsat.DvdSolution.b","line":181,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.DvdSolution.b","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.DvdSolution.b\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">DvdSolution</span>.<span class=\"name\">b</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.DvdSolution\">DvdSolution</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Int/Basic.html#Int\">Int</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.lean#L180-L180","name":"Lean.Meta.Grind.Arith.Cutsat.DvdSolution.d","line":180,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.DvdSolution.d","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.DvdSolution.d\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">DvdSolution</span>.<span class=\"name\">d</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.DvdSolution\">DvdSolution</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Int/Basic.html#Int\">Int</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.lean#L179-L179","name":"Lean.Meta.Grind.Arith.Cutsat.DvdSolution.mk","line":179,"kind":"ctor","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.DvdSolution.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.DvdSolution.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">DvdSolution</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">d </span><span class=\"fn\">b</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.DvdSolution\">DvdSolution</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.lean#L175-L181","name":"Lean.Meta.Grind.Arith.Cutsat.DvdSolution","line":175,"kind":"structure","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.DvdSolution","doc":"Solution space for a divisibility constraint of the form `d ∣ a*x + b`\nSee `DvdCnstr.getSolutions?` to understand how it is computed.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.DvdSolution\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">DvdSolution</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.lean#L158-L173","name":"Lean.Meta.Grind.Arith.Cutsat.getDiseqValues","line":158,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.getDiseqValues","doc":"Returns values we cannot assign `x` because of disequality constraints. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.getDiseqValues\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">getDiseqValues</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Init/Data/Int/Linear.html#Int.Linear.Var\">Var</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/SearchM.html#Lean.Meta.Grind.Arith.Cutsat.SearchM\">SearchM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> (<a href=\"./Std/Internal/Rat.html#Std.Internal.Rat\">Rat</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Types.html#Lean.Meta.Grind.Arith.Cutsat.DiseqCnstr\">DiseqCnstr</a>))</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.lean#L138-L156","name":"Lean.Meta.Grind.Arith.Cutsat.getBestUpper?","line":138,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.getBestUpper?","doc":"Assuming all variables smaller than `x` have already been assigned,\nreturns the best upper bound for `x` using the given partial assignment and\ninequality constraints where `x` is the maximal variable.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.getBestUpper?\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">getBestUpper?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Init/Data/Int/Linear.html#Int.Linear.Var\">Var</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">dvd?</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Types.html#Lean.Meta.Grind.Arith.Cutsat.DvdCnstr\">DvdCnstr</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.GoalM\">GoalM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> (<a href=\"./Std/Internal/Rat.html#Std.Internal.Rat\">Rat</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Types.html#Lean.Meta.Grind.Arith.Cutsat.LeCnstr\">LeCnstr</a>))</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.lean#L118-L136","name":"Lean.Meta.Grind.Arith.Cutsat.getBestLower?","line":118,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.getBestLower?","doc":"Assuming all variables smaller than `x` have already been assigned,\nreturns the best lower bound for `x` using the given partial assignment and\ninequality constraints where `x` is the maximal variable.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.getBestLower?\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">getBestLower?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Init/Data/Int/Linear.html#Int.Linear.Var\">Var</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">dvd?</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Types.html#Lean.Meta.Grind.Arith.Cutsat.DvdCnstr\">DvdCnstr</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.GoalM\">GoalM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> (<a href=\"./Std/Internal/Rat.html#Std.Internal.Rat\">Rat</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Types.html#Lean.Meta.Grind.Arith.Cutsat.LeCnstr\">LeCnstr</a>))</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.lean#L99-L116","name":"Lean.Meta.Grind.Arith.Cutsat.tightUsingDvd","line":99,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.tightUsingDvd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.tightUsingDvd\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">tightUsingDvd</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Types.html#Lean.Meta.Grind.Arith.Cutsat.LeCnstr\">LeCnstr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">dvd?</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Types.html#Lean.Meta.Grind.Arith.Cutsat.DvdCnstr\">DvdCnstr</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.GoalM\">GoalM</a> <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Types.html#Lean.Meta.Grind.Arith.Cutsat.LeCnstr\">LeCnstr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.lean#L17-L52","name":"Lean.Meta.Grind.Arith.Cutsat.CooperSplit.assert","line":17,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.CooperSplit.assert","doc":"Asserts constraints implied by a `CooperSplit`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Search.html#Lean.Meta.Grind.Arith.Cutsat.CooperSplit.assert\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">CooperSplit</span>.<span class=\"name\">assert</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">cs</span> : <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Types.html#Lean.Meta.Grind.Arith.Cutsat.CooperSplit\">CooperSplit</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.GoalM\">GoalM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"}]}