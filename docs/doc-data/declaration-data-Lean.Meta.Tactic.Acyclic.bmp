{"name":"Lean.Meta.Tactic.Acyclic","instances":[],"imports":["Lean.Meta.MatchUtil","Lean.Meta.Tactic.Simp.Main"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/Acyclic.lean#L34-L55","name":"Lean.MVarId.acyclic.go","line":34,"kind":"def","docLink":"./Lean/Meta/Tactic/Acyclic.html#Lean.MVarId.acyclic.go","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Acyclic.html#Lean.MVarId.acyclic.go\"><span class=\"name\">Lean</span>.<span class=\"name\">MVarId</span>.<span class=\"name\">acyclic</span>.<span class=\"name\">go</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">mvarId</span> : <a href=\"./Lean/Expr.html#Lean.MVarId\">MVarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h </span><span class=\"fn\">lhs </span><span class=\"fn\">rhs</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">MetaM</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/Acyclic.lean#L19-L55","name":"Lean.MVarId.acyclic","line":19,"kind":"def","docLink":"./Lean/Meta/Tactic/Acyclic.html#Lean.MVarId.acyclic","doc":"Close the given goal if `h` is a proof for an equality such as `as = a :: as`.\nInductive datatypes in Lean are acyclic.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Acyclic.html#Lean.MVarId.acyclic\"><span class=\"name\">Lean</span>.<span class=\"name\">MVarId</span>.<span class=\"name\">acyclic</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">mvarId</span> : <a href=\"./Lean/Expr.html#Lean.MVarId\">MVarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">MetaM</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"}]}