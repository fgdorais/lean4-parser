{"name":"Lean.Meta.CollectFVars","instances":[],"imports":["Lean.Util.CollectFVars","Lean.Meta.Basic"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/CollectFVars.lean#L49-L61","name":"Lean.Meta.removeUnused","line":49,"kind":"def","docLink":"./Lean/Meta/CollectFVars.html#Lean.Meta.removeUnused","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/CollectFVars.html#Lean.Meta.removeUnused\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">removeUnused</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">vars</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">used</span> : <a href=\"./Lean/Util/CollectFVars.html#Lean.CollectFVars.State\">CollectFVars.State</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">MetaM</a> (<a href=\"./Lean/LocalContext.html#Lean.LocalContext\">LocalContext</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/MetavarContext.html#Lean.LocalInstances\">LocalInstances</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/CollectFVars.lean#L38-L45","name":"Lean.CollectFVars.State.addDependencies.go","line":38,"kind":"opaque","docLink":"./Lean/Meta/CollectFVars.html#Lean.CollectFVars.State.addDependencies.go","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/CollectFVars.html#Lean.CollectFVars.State.addDependencies.go\"><span class=\"name\">Lean</span>.<span class=\"name\">CollectFVars</span>.<span class=\"name\">State</span>.<span class=\"name\">addDependencies</span>.<span class=\"name\">go</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Control/StateRef.html#StateRefT'\">StateRefT'</a> <a href=\"./Init/System/IO.html#IO.RealWorld\">IO.RealWorld</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a> <span class=\"fn\">(<a href=\"./Init/Control/StateRef.html#StateRefT'\">StateRefT'</a> <a href=\"./Init/System/IO.html#IO.RealWorld\">IO.RealWorld</a> <a href=\"./Lean/Util/CollectFVars.html#Lean.CollectFVars.State\">State</a> <a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">MetaM</a>)</span> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/CollectFVars.lean#L28-L36","name":"Lean.CollectFVars.State.addDependencies.getNext?","line":28,"kind":"def","docLink":"./Lean/Meta/CollectFVars.html#Lean.CollectFVars.State.addDependencies.getNext?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/CollectFVars.html#Lean.CollectFVars.State.addDependencies.getNext?\"><span class=\"name\">Lean</span>.<span class=\"name\">CollectFVars</span>.<span class=\"name\">State</span>.<span class=\"name\">addDependencies</span>.<span class=\"name\">getNext?</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Control/StateRef.html#StateRefT'\">StateRefT'</a> <a href=\"./Init/System/IO.html#IO.RealWorld\">IO.RealWorld</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a> <span class=\"fn\">(<a href=\"./Init/Control/StateRef.html#StateRefT'\">StateRefT'</a> <a href=\"./Init/System/IO.html#IO.RealWorld\">IO.RealWorld</a> <a href=\"./Lean/Util/CollectFVars.html#Lean.CollectFVars.State\">State</a> <a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">MetaM</a>)</span> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Expr.html#Lean.FVarId\">FVarId</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/CollectFVars.lean#L23-L45","name":"Lean.CollectFVars.State.addDependencies","line":23,"kind":"def","docLink":"./Lean/Meta/CollectFVars.html#Lean.CollectFVars.State.addDependencies","doc":"For each variable in `s.fvarSet`, include its dependencies. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/CollectFVars.html#Lean.CollectFVars.State.addDependencies\"><span class=\"name\">Lean</span>.<span class=\"name\">CollectFVars</span>.<span class=\"name\">State</span>.<span class=\"name\">addDependencies</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Lean/Util/CollectFVars.html#Lean.CollectFVars.State\">State</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">MetaM</a> <a href=\"./Lean/Util/CollectFVars.html#Lean.CollectFVars.State\">State</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/CollectFVars.lean#L18-L21","name":"Lean.LocalDecl.collectFVars","line":18,"kind":"def","docLink":"./Lean/Meta/CollectFVars.html#Lean.LocalDecl.collectFVars","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/CollectFVars.html#Lean.LocalDecl.collectFVars\"><span class=\"name\">Lean</span>.<span class=\"name\">LocalDecl</span>.<span class=\"name\">collectFVars</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">localDecl</span> : <a href=\"./Lean/LocalContext.html#Lean.LocalDecl\">LocalDecl</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Control/StateRef.html#StateRefT'\">StateRefT'</a> <a href=\"./Init/System/IO.html#IO.RealWorld\">IO.RealWorld</a> <a href=\"./Lean/Util/CollectFVars.html#Lean.CollectFVars.State\">CollectFVars.State</a> <a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">MetaM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/CollectFVars.lean#L14-L16","name":"Lean.Expr.collectFVars","line":14,"kind":"def","docLink":"./Lean/Meta/CollectFVars.html#Lean.Expr.collectFVars","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/CollectFVars.html#Lean.Expr.collectFVars\"><span class=\"name\">Lean</span>.<span class=\"name\">Expr</span>.<span class=\"name\">collectFVars</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Control/StateRef.html#StateRefT'\">StateRefT'</a> <a href=\"./Init/System/IO.html#IO.RealWorld\">IO.RealWorld</a> <a href=\"./Lean/Util/CollectFVars.html#Lean.CollectFVars.State\">CollectFVars.State</a> <a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">MetaM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"}]}