{"name":"Lean.Server.References","instances":[{"typeNames":["Lean.Server.Ilean"],"name":"Lean.Server.instFromJsonIlean","className":"Lean.FromJson"},{"typeNames":["Lean.Server.Ilean"],"name":"Lean.Server.instToJsonIlean","className":"Lean.ToJson"}],"imports":["Lean.Data.Lsp.Internal","Lean.Server.Utils","Std.Data.TreeMap"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Server/References.lean#L536-L556","name":"Lean.Server.References.definitionsMatching","line":536,"kind":"def","docLink":"./Lean/Server/References.html#Lean.Server.References.definitionsMatching","doc":"Yields all definitions matching the given `filter`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.References.definitionsMatching\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">References</span>.<span class=\"name\">definitionsMatching</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α </span><span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Server/References.html#Lean.Server.References\">References</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">filterMapMod</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.Name\">Name</a> → <span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">α</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">filterMapIdent</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.Name\">Name</a> → <span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">β</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">cancelTk?</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/System/IO.html#IO.CancelToken\">IO.CancelToken</a></span> := <a href=\"./Init/Prelude.html#Option.none\">none</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Lean/Server/References.html#Lean.Server.References.MatchedDefinition\">MatchedDefinition</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Server/References.lean#L534-L534","name":"Lean.Server.References.MatchedDefinition.range","line":534,"kind":"def","docLink":"./Lean/Server/References.html#Lean.Server.References.MatchedDefinition.range","doc":"Definition range of matched identifier. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.References.MatchedDefinition.range\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">References</span>.<span class=\"name\">MatchedDefinition</span>.<span class=\"name\">range</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α </span><span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Lean/Server/References.html#Lean.Server.References.MatchedDefinition\">MatchedDefinition</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Data/Lsp/Basic.html#Lean.Lsp.Range\">Lsp.Range</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Server/References.lean#L532-L532","name":"Lean.Server.References.MatchedDefinition.ident","line":532,"kind":"def","docLink":"./Lean/Server/References.html#Lean.Server.References.MatchedDefinition.ident","doc":"Result of `filterMapIdent`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.References.MatchedDefinition.ident\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">References</span>.<span class=\"name\">MatchedDefinition</span>.<span class=\"name\">ident</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α </span><span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Lean/Server/References.html#Lean.Server.References.MatchedDefinition\">MatchedDefinition</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">β</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Server/References.lean#L530-L530","name":"Lean.Server.References.MatchedDefinition.mod","line":530,"kind":"def","docLink":"./Lean/Server/References.html#Lean.Server.References.MatchedDefinition.mod","doc":"Result of `filterMapMod`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.References.MatchedDefinition.mod\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">References</span>.<span class=\"name\">MatchedDefinition</span>.<span class=\"name\">mod</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α </span><span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Lean/Server/References.html#Lean.Server.References.MatchedDefinition\">MatchedDefinition</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">α</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Server/References.lean#L528-L528","name":"Lean.Server.References.MatchedDefinition.mk","line":528,"kind":"ctor","docLink":"./Lean/Server/References.html#Lean.Server.References.MatchedDefinition.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.References.MatchedDefinition.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">References</span>.<span class=\"name\">MatchedDefinition</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α </span><span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">mod</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ident</span> : <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">range</span> : <a href=\"./Lean/Data/Lsp/Basic.html#Lean.Lsp.Range\">Lsp.Range</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Server/References.html#Lean.Server.References.MatchedDefinition\">MatchedDefinition</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Server/References.lean#L527-L534","name":"Lean.Server.References.MatchedDefinition","line":527,"kind":"structure","docLink":"./Lean/Server/References.html#Lean.Server.References.MatchedDefinition","doc":"A match in `References.definitionsMatching`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.References.MatchedDefinition\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">References</span>.<span class=\"name\">MatchedDefinition</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α </span><span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Server/References.lean#L516-L525","name":"Lean.Server.References.definitionOf?","line":516,"kind":"def","docLink":"./Lean/Server/References.html#Lean.Server.References.definitionOf?","doc":"Yields the definition location of `ident`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.References.definitionOf?\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">References</span>.<span class=\"name\">definitionOf?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Server/References.html#Lean.Server.References\">References</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ident</span> : <a href=\"./Lean/Data/Lsp/Internal.html#Lean.Lsp.RefIdent\">Lsp.RefIdent</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Server/References.html#Lean.Server.References.DocumentRefInfo\">DocumentRefInfo</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Server/References.lean#L501-L514","name":"Lean.Server.References.referringTo","line":501,"kind":"def","docLink":"./Lean/Server/References.html#Lean.Server.References.referringTo","doc":"Yields locations and parent declaration for all references referring to `ident`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.References.referringTo\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">References</span>.<span class=\"name\">referringTo</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Server/References.html#Lean.Server.References\">References</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ident</span> : <a href=\"./Lean/Data/Lsp/Internal.html#Lean.Lsp.RefIdent\">Lsp.RefIdent</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">includeDefinition</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/Prelude.html#Bool.true\">true</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Server/References.html#Lean.Server.References.DocumentRefInfo\">DocumentRefInfo</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Server/References.lean#L499-L499","name":"Lean.Server.References.DocumentRefInfo.parentInfo?","line":499,"kind":"def","docLink":"./Lean/Server/References.html#Lean.Server.References.DocumentRefInfo.parentInfo?","doc":"Parent declaration of the reference. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.References.DocumentRefInfo.parentInfo?\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">References</span>.<span class=\"name\">DocumentRefInfo</span>.<span class=\"name\">parentInfo?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Server/References.html#Lean.Server.References.DocumentRefInfo\">DocumentRefInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Data/Lsp/Internal.html#Lean.Lsp.RefInfo.ParentDecl\">Lsp.RefInfo.ParentDecl</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Server/References.lean#L497-L497","name":"Lean.Server.References.DocumentRefInfo.module","line":497,"kind":"def","docLink":"./Lean/Server/References.html#Lean.Server.References.DocumentRefInfo.module","doc":"Module name of the reference. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.References.DocumentRefInfo.module\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">References</span>.<span class=\"name\">DocumentRefInfo</span>.<span class=\"name\">module</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Server/References.html#Lean.Server.References.DocumentRefInfo\">DocumentRefInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Name\">Name</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Server/References.lean#L495-L495","name":"Lean.Server.References.DocumentRefInfo.location","line":495,"kind":"def","docLink":"./Lean/Server/References.html#Lean.Server.References.DocumentRefInfo.location","doc":"Location of the reference. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.References.DocumentRefInfo.location\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">References</span>.<span class=\"name\">DocumentRefInfo</span>.<span class=\"name\">location</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Server/References.html#Lean.Server.References.DocumentRefInfo\">DocumentRefInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Data/Lsp/Basic.html#Lean.Lsp.Location\">Lsp.Location</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Server/References.lean#L493-L493","name":"Lean.Server.References.DocumentRefInfo.mk","line":493,"kind":"ctor","docLink":"./Lean/Server/References.html#Lean.Server.References.DocumentRefInfo.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.References.DocumentRefInfo.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">References</span>.<span class=\"name\">DocumentRefInfo</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">location</span> : <a href=\"./Lean/Data/Lsp/Basic.html#Lean.Lsp.Location\">Lsp.Location</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">module</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">parentInfo?</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Data/Lsp/Internal.html#Lean.Lsp.RefInfo.ParentDecl\">Lsp.RefInfo.ParentDecl</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Server/References.html#Lean.Server.References.DocumentRefInfo\">DocumentRefInfo</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Server/References.lean#L492-L499","name":"Lean.Server.References.DocumentRefInfo","line":492,"kind":"structure","docLink":"./Lean/Server/References.html#Lean.Server.References.DocumentRefInfo","doc":"Location and parent declaration of a reference. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.References.DocumentRefInfo\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">References</span>.<span class=\"name\">DocumentRefInfo</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Server/References.lean#L487-L490","name":"Lean.Server.References.findRange?","line":487,"kind":"def","docLink":"./Lean/Server/References.html#Lean.Server.References.findRange?","doc":"Yields the first reference in `module` at `pos`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.References.findRange?\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">References</span>.<span class=\"name\">findRange?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Server/References.html#Lean.Server.References\">References</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">module</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pos</span> : <a href=\"./Lean/Data/Lsp/Basic.html#Lean.Lsp.Position\">Lsp.Position</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">includeStop</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/Prelude.html#Bool.false\">false</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Data/Lsp/Basic.html#Lean.Lsp.Range\">Lsp.Range</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Server/References.lean#L481-L485","name":"Lean.Server.References.findAt","line":481,"kind":"def","docLink":"./Lean/Server/References.html#Lean.Server.References.findAt","doc":"Yields all references in `module` at `pos`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.References.findAt\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">References</span>.<span class=\"name\">findAt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Server/References.html#Lean.Server.References\">References</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">module</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pos</span> : <a href=\"./Lean/Data/Lsp/Basic.html#Lean.Lsp.Position\">Lsp.Position</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">includeStop</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/Prelude.html#Bool.false\">false</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Data/Lsp/Internal.html#Lean.Lsp.RefIdent\">Lsp.RefIdent</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Server/References.lean#L457-L479","name":"Lean.Server.References.allRefsFor","line":457,"kind":"def","docLink":"./Lean/Server/References.html#Lean.Server.References.allRefsFor","doc":"Yields all references in `self` for `ident`, as well as the `DocumentUri` that each\nreference occurs in.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.References.allRefsFor\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">References</span>.<span class=\"name\">allRefsFor</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Server/References.html#Lean.Server.References\">References</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ident</span> : <a href=\"./Lean/Data/Lsp/Internal.html#Lean.Lsp.RefIdent\">Lsp.RefIdent</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> (<a href=\"./Lean/Data/Lsp/Basic.html#Lean.Lsp.DocumentUri\">Lsp.DocumentUri</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#Lean.Name\">Name</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/Data/Lsp/Internal.html#Lean.Lsp.RefInfo\">Lsp.RefInfo</a>))</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Server/References.lean#L450-L455","name":"Lean.Server.References.getModuleRefs?","line":450,"kind":"def","docLink":"./Lean/Server/References.html#Lean.Server.References.getModuleRefs?","doc":"Gets the references for `mod`.\nThe current references in a file worker take precedence over those in .ilean files.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.References.getModuleRefs?\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">References</span>.<span class=\"name\">getModuleRefs?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Server/References.html#Lean.Server.References\">References</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">mod</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Data/Lsp/Internal.html#Lean.Lsp.ModuleRefs\">Lsp.ModuleRefs</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Server/References.lean#L445-L448","name":"Lean.Server.References.allRefs","line":445,"kind":"def","docLink":"./Lean/Server/References.html#Lean.Server.References.allRefs","doc":"Yields a map from all modules to all of their references. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.References.allRefs\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">References</span>.<span class=\"name\">allRefs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Server/References.html#Lean.Server.References\">References</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Server/References.html#Lean.Server.References.AllRefsMap\">AllRefsMap</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Server/References.lean#L439-L443","name":"Lean.Server.References.AllRefsMap","line":439,"kind":"def","docLink":"./Lean/Server/References.html#Lean.Server.References.AllRefsMap","doc":"All references for a module.\nThe current references in a file worker take precedence over those in .ilean files.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.References.AllRefsMap\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">References</span>.<span class=\"name\">AllRefsMap</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Server/References.lean#L435-L437","name":"Lean.Server.References.removeWorkerRefs","line":435,"kind":"def","docLink":"./Lean/Server/References.html#Lean.Server.References.removeWorkerRefs","doc":"Erases all worker references in `self` for the worker managing `name`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.References.removeWorkerRefs\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">References</span>.<span class=\"name\">removeWorkerRefs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Server/References.html#Lean.Server.References\">References</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">name</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Server/References.html#Lean.Server.References\">References</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Server/References.lean#L425-L433","name":"Lean.Server.References.finalizeWorkerRefs","line":425,"kind":"def","docLink":"./Lean/Server/References.html#Lean.Server.References.finalizeWorkerRefs","doc":"Replaces the worker references in `self` with the `refs` of the worker managing the module `name`\nif `version` is newer than the current version managed in `refs`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.References.finalizeWorkerRefs\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">References</span>.<span class=\"name\">finalizeWorkerRefs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Server/References.html#Lean.Server.References\">References</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">name</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">version</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">refs</span> : <a href=\"./Lean/Data/Lsp/Internal.html#Lean.Lsp.ModuleRefs\">Lsp.ModuleRefs</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Server/References.html#Lean.Server.References\">References</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Server/References.lean#L409-L423","name":"Lean.Server.References.updateWorkerRefs","line":409,"kind":"def","docLink":"./Lean/Server/References.html#Lean.Server.References.updateWorkerRefs","doc":"Updates the worker references in `self` with the `refs` of the worker managing the module `name`.\nReplaces the current references with `refs` if `version` is newer than the current version managed\nin `refs` and otherwise merges the reference data if `version` is equal to the current version.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.References.updateWorkerRefs\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">References</span>.<span class=\"name\">updateWorkerRefs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Server/References.html#Lean.Server.References\">References</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">name</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">version</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">refs</span> : <a href=\"./Lean/Data/Lsp/Internal.html#Lean.Lsp.ModuleRefs\">Lsp.ModuleRefs</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Server/References.html#Lean.Server.References\">References</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Server/References.lean#L403-L407","name":"Lean.Server.References.removeIlean","line":403,"kind":"def","docLink":"./Lean/Server/References.html#Lean.Server.References.removeIlean","doc":"Removes the ilean file data at `path` from `self`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.References.removeIlean\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">References</span>.<span class=\"name\">removeIlean</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Server/References.html#Lean.Server.References\">References</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">path</span> : <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Server/References.html#Lean.Server.References\">References</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Server/References.lean#L399-L401","name":"Lean.Server.References.addIlean","line":399,"kind":"def","docLink":"./Lean/Server/References.html#Lean.Server.References.addIlean","doc":"Adds the contents of an ilean file `ilean` at `path` to `self`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.References.addIlean\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">References</span>.<span class=\"name\">addIlean</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Server/References.html#Lean.Server.References\">References</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">path</span> : <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ilean</span> : <a href=\"./Lean/Server/References.html#Lean.Server.Ilean\">Ilean</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Server/References.html#Lean.Server.References\">References</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Server/References.lean#L396-L397","name":"Lean.Server.References.empty","line":396,"kind":"def","docLink":"./Lean/Server/References.html#Lean.Server.References.empty","doc":"No ilean files, no information from workers. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.References.empty\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">References</span>.<span class=\"name\">empty</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Server/References.html#Lean.Server.References\">References</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Server/References.lean#L392-L392","name":"Lean.Server.References.workers","line":392,"kind":"def","docLink":"./Lean/Server/References.html#Lean.Server.References.workers","doc":"References from workers, overriding the corresponding ilean files "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.References.workers\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">References</span>.<span class=\"name\">workers</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Server/References.html#Lean.Server.References\">References</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Server/References.html#Lean.Server.WorkerRefMap\">WorkerRefMap</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Server/References.lean#L390-L390","name":"Lean.Server.References.ileans","line":390,"kind":"def","docLink":"./Lean/Server/References.html#Lean.Server.References.ileans","doc":"References loaded from ilean files "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.References.ileans\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">References</span>.<span class=\"name\">ileans</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Server/References.html#Lean.Server.References\">References</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Server/References.html#Lean.Server.ILeanMap\">ILeanMap</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Server/References.lean#L388-L388","name":"Lean.Server.References.mk","line":388,"kind":"ctor","docLink":"./Lean/Server/References.html#Lean.Server.References.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.References.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">References</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ileans</span> : <a href=\"./Lean/Server/References.html#Lean.Server.ILeanMap\">ILeanMap</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">workers</span> : <a href=\"./Lean/Server/References.html#Lean.Server.WorkerRefMap\">WorkerRefMap</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Server/References.html#Lean.Server.References\">References</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Server/References.lean#L387-L392","name":"Lean.Server.References","line":387,"kind":"structure","docLink":"./Lean/Server/References.html#Lean.Server.References","doc":"References from ilean files and current ilean information from file workers. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.References\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">References</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Server/References.lean#L381-L385","name":"Lean.Server.WorkerRefMap","line":381,"kind":"def","docLink":"./Lean/Server/References.html#Lean.Server.WorkerRefMap","doc":"Document versions and module references for every module name. Loaded from the current state\nin a file worker.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.WorkerRefMap\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">WorkerRefMap</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Server/References.lean#L379-L380","name":"Lean.Server.ILeanMap","line":379,"kind":"def","docLink":"./Lean/Server/References.html#Lean.Server.ILeanMap","doc":"Paths and module references for every module name. Loaded from `.ilean` files. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.ILeanMap\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">ILeanMap</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Server/References.lean#L361-L375","name":"Lean.Server.findModuleRefs","line":361,"kind":"def","docLink":"./Lean/Server/References.html#Lean.Server.findModuleRefs","doc":"Finds all references in `trees` and deduplicates the result.\nSee `dedupReferences` and `combineIdents`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.findModuleRefs\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">findModuleRefs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">text</span> : <a href=\"./Lean/Data/Position.html#Lean.FileMap\">FileMap</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">trees</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Elab/InfoTree/Types.html#Lean.Elab.InfoTree\">Elab.InfoTree</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">localVars</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/Prelude.html#Bool.true\">true</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">allowSimultaneousBinderUse</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/Prelude.html#Bool.false\">false</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Server/References.html#Lean.Server.ModuleRefs\">ModuleRefs</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Server/References.lean#L344-L359","name":"Lean.Server.dedupReferences","line":344,"kind":"def","docLink":"./Lean/Server/References.html#Lean.Server.dedupReferences","doc":"Groups `refs` by identifier and range s.t. references with the same identifier and range\nare added to the `aliases` of the representative of the group.\nYields to separate groups for declaration and usages if `allowSimultaneousBinderUse` is set.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.dedupReferences\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">dedupReferences</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">refs</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Server/References.html#Lean.Server.Reference\">Reference</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">allowSimultaneousBinderUse</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/Prelude.html#Bool.false\">false</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Server/References.html#Lean.Server.Reference\">Reference</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Server/References.lean#L337-L342","name":"Lean.Server.combineIdents.insertIdMap","line":337,"kind":"def","docLink":"./Lean/Server/References.html#Lean.Server.combineIdents.insertIdMap","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.combineIdents.insertIdMap\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">combineIdents</span>.<span class=\"name\">insertIdMap</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">id </span><span class=\"fn\">baseId</span> : <a href=\"./Lean/Data/Lsp/Internal.html#Lean.Lsp.RefIdent\">Lsp.RefIdent</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Control/State.html#StateT\">StateT</a> <span class=\"fn\">(<a href=\"./Std/Data/HashMap/Basic.html#Std.HashMap\">Std.HashMap</a> <a href=\"./Lean/Data/Lsp/Internal.html#Lean.Lsp.RefIdent\">Lsp.RefIdent</a> <a href=\"./Lean/Data/Lsp/Internal.html#Lean.Lsp.RefIdent\">Lsp.RefIdent</a>)</span> <a href=\"./Init/Control/Id.html#Id\">Id</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Server/References.lean#L320-L334","name":"Lean.Server.combineIdents.buildIdMap","line":320,"kind":"def","docLink":"./Lean/Server/References.html#Lean.Server.combineIdents.buildIdMap","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.combineIdents.buildIdMap\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">combineIdents</span>.<span class=\"name\">buildIdMap</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">trees</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Elab/InfoTree/Types.html#Lean.Elab.InfoTree\">Elab.InfoTree</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">refs</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Server/References.html#Lean.Server.Reference\">Reference</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">posMap</span> : <span class=\"fn\"><a href=\"./Std/Data/HashMap/Basic.html#Std.HashMap\">Std.HashMap</a> <a href=\"./Lean/Data/Lsp/Basic.html#Lean.Lsp.Range\">Lsp.Range</a> <a href=\"./Lean/Data/Lsp/Internal.html#Lean.Lsp.RefIdent\">Lsp.RefIdent</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Data/HashMap/Basic.html#Std.HashMap\">Std.HashMap</a> <a href=\"./Lean/Data/Lsp/Internal.html#Lean.Lsp.RefIdent\">Lsp.RefIdent</a> <a href=\"./Lean/Data/Lsp/Internal.html#Lean.Lsp.RefIdent\">Lsp.RefIdent</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Server/References.lean#L314-L318","name":"Lean.Server.combineIdents.findCanonicalRepresentative","line":314,"kind":"def","docLink":"./Lean/Server/References.html#Lean.Server.combineIdents.findCanonicalRepresentative","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.combineIdents.findCanonicalRepresentative\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">combineIdents</span>.<span class=\"name\">findCanonicalRepresentative</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">idMap</span> : <span class=\"fn\"><a href=\"./Std/Data/HashMap/Basic.html#Std.HashMap\">Std.HashMap</a> <a href=\"./Lean/Data/Lsp/Internal.html#Lean.Lsp.RefIdent\">Lsp.RefIdent</a> <a href=\"./Lean/Data/Lsp/Internal.html#Lean.Lsp.RefIdent\">Lsp.RefIdent</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">id</span> : <a href=\"./Lean/Data/Lsp/Internal.html#Lean.Lsp.RefIdent\">Lsp.RefIdent</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Data/Lsp/Internal.html#Lean.Lsp.RefIdent\">Lsp.RefIdent</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Server/References.lean#L281-L312","name":"Lean.Server.combineIdents.useConstRepresentatives","line":281,"kind":"def","docLink":"./Lean/Server/References.html#Lean.Server.combineIdents.useConstRepresentatives","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.combineIdents.useConstRepresentatives\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">combineIdents</span>.<span class=\"name\">useConstRepresentatives</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">idMap</span> : <span class=\"fn\"><a href=\"./Std/Data/HashMap/Basic.html#Std.HashMap\">Std.HashMap</a> <a href=\"./Lean/Data/Lsp/Internal.html#Lean.Lsp.RefIdent\">Lsp.RefIdent</a> <a href=\"./Lean/Data/Lsp/Internal.html#Lean.Lsp.RefIdent\">Lsp.RefIdent</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Data/HashMap/Basic.html#Std.HashMap\">Std.HashMap</a> <a href=\"./Lean/Data/Lsp/Internal.html#Lean.Lsp.RefIdent\">Lsp.RefIdent</a> <a href=\"./Lean/Data/Lsp/Internal.html#Lean.Lsp.RefIdent\">Lsp.RefIdent</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Server/References.lean#L246-L342","name":"Lean.Server.combineIdents","line":246,"kind":"def","docLink":"./Lean/Server/References.html#Lean.Server.combineIdents","doc":"There are several different identifiers that should be considered equal for the purpose of finding\nall references of an identifier:\n- `FVarId`s of a function parameter in the function's signature and body\n- Chains of helper definitions like those created for do-reassignment `x := e`\n- Overlapping definitions like those defined by `where` declarations that define both an FVar\n  (for local usage) and a constant (for non-local usage)\n- Identifiers connected by `FVarAliasInfo` such as variables before and after `match` generalization\n\nIn the first three cases that are not explicitly denoted as aliases with an `FVarAliasInfo`, the\ncorresponding `Reference`s have the exact same range.\nThis function finds all definitions that have the exact same range as another definition or usage\nand collapses them into a single identifier. It also collapses identifiers connected by\nan `FVarAliasInfo`.\nWhen collapsing identifiers, it prefers using a `RefIdent.const name` over a `RefIdent.fvar id` for\nall identifiers that are being collapsed into one.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.combineIdents\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">combineIdents</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">trees</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Elab/InfoTree/Types.html#Lean.Elab.InfoTree\">Elab.InfoTree</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">refs</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Server/References.html#Lean.Server.Reference\">Reference</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Server/References.html#Lean.Server.Reference\">Reference</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Server/References.lean#L233-L244","name":"Lean.Server.findReferences","line":233,"kind":"def","docLink":"./Lean/Server/References.html#Lean.Server.findReferences","doc":"Finds all references in `trees`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.findReferences\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">findReferences</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">text</span> : <a href=\"./Lean/Data/Position.html#Lean.FileMap\">FileMap</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">trees</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Elab/InfoTree/Types.html#Lean.Elab.InfoTree\">Elab.InfoTree</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Server/References.html#Lean.Server.Reference\">Reference</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Server/References.lean#L215-L231","name":"Lean.Server.identOf","line":215,"kind":"def","docLink":"./Lean/Server/References.html#Lean.Server.identOf","doc":"Determines the `RefIdent` for the `Info` `i` of an identifier in `module` and\nwhether it is a declaration.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.identOf\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">identOf</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ci</span> : <a href=\"./Lean/Elab/InfoTree/Types.html#Lean.Elab.ContextInfo\">Elab.ContextInfo</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <a href=\"./Lean/Elab/InfoTree/Types.html#Lean.Elab.Info\">Elab.Info</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> (<a href=\"./Lean/Data/Lsp/Internal.html#Lean.Lsp.RefIdent\">Lsp.RefIdent</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Server/References.lean#L209-L213","name":"Lean.Server.getModuleContainingDecl?","line":209,"kind":"def","docLink":"./Lean/Server/References.html#Lean.Server.getModuleContainingDecl?","doc":"Gets the name of the module that contains `declName`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.getModuleContainingDecl?\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">getModuleContainingDecl?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">env</span> : <a href=\"./Lean/Environment.html#Lean.Environment\">Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">declName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Lean.Name\">Name</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Server/References.lean#L199-L204","name":"Lean.Server.Ilean.load","line":199,"kind":"def","docLink":"./Lean/Server/References.html#Lean.Server.Ilean.load","doc":"Reads and parses the .ilean file at `path`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.Ilean.load\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">Ilean</span>.<span class=\"name\">load</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">path</span> : <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Lean/Server/References.html#Lean.Server.Ilean\">Ilean</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Server/References.lean#L195-L195","name":"Lean.Server.instToJsonIlean","line":195,"kind":"instance","docLink":"./Lean/Server/References.html#Lean.Server.instToJsonIlean","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.instToJsonIlean\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">instToJsonIlean</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/Json/FromToJson.html#Lean.ToJson\">ToJson</a> <a href=\"./Lean/Server/References.html#Lean.Server.Ilean\">Ilean</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Server/References.lean#L195-L195","name":"Lean.Server.instFromJsonIlean","line":195,"kind":"instance","docLink":"./Lean/Server/References.html#Lean.Server.instFromJsonIlean","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.instFromJsonIlean\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">instFromJsonIlean</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/Json/FromToJson.html#Lean.FromJson\">FromJson</a> <a href=\"./Lean/Server/References.html#Lean.Server.Ilean\">Ilean</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Server/References.lean#L194-L194","name":"Lean.Server.Ilean.references","line":194,"kind":"def","docLink":"./Lean/Server/References.html#Lean.Server.Ilean.references","doc":"All references of this module. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.Ilean.references\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">Ilean</span>.<span class=\"name\">references</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Server/References.html#Lean.Server.Ilean\">Ilean</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Data/Lsp/Internal.html#Lean.Lsp.ModuleRefs\">Lsp.ModuleRefs</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Server/References.lean#L192-L192","name":"Lean.Server.Ilean.module","line":192,"kind":"def","docLink":"./Lean/Server/References.html#Lean.Server.Ilean.module","doc":"Name of the module that this ilean data has been collected for. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.Ilean.module\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">Ilean</span>.<span class=\"name\">module</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Server/References.html#Lean.Server.Ilean\">Ilean</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Name\">Name</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Server/References.lean#L190-L190","name":"Lean.Server.Ilean.version","line":190,"kind":"def","docLink":"./Lean/Server/References.html#Lean.Server.Ilean.version","doc":"Version number of the ilean format. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.Ilean.version\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">Ilean</span>.<span class=\"name\">version</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Server/References.html#Lean.Server.Ilean\">Ilean</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Server/References.lean#L188-L188","name":"Lean.Server.Ilean.mk","line":188,"kind":"ctor","docLink":"./Lean/Server/References.html#Lean.Server.Ilean.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.Ilean.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">Ilean</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">version</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">module</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">references</span> : <a href=\"./Lean/Data/Lsp/Internal.html#Lean.Lsp.ModuleRefs\">Lsp.ModuleRefs</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Server/References.html#Lean.Server.Ilean\">Ilean</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Server/References.lean#L187-L195","name":"Lean.Server.Ilean","line":187,"kind":"structure","docLink":"./Lean/Server/References.html#Lean.Server.Ilean","doc":"Content of individual `.ilean` files "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.Ilean\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">Ilean</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Server/References.lean#L173-L178","name":"Lean.Lsp.ModuleRefs.findRange?","line":173,"kind":"def","docLink":"./Lean/Server/References.html#Lean.Lsp.ModuleRefs.findRange?","doc":"Finds the first range in `self` that contains `pos`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Lsp.ModuleRefs.findRange?\"><span class=\"name\">Lean</span>.<span class=\"name\">Lsp</span>.<span class=\"name\">ModuleRefs</span>.<span class=\"name\">findRange?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Data/Lsp/Internal.html#Lean.Lsp.ModuleRefs\">ModuleRefs</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pos</span> : <a href=\"./Lean/Data/Lsp/Basic.html#Lean.Lsp.Position\">Position</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">includeStop</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/Prelude.html#Bool.false\">false</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Data/Lsp/Basic.html#Lean.Lsp.Range\">Range</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Server/References.lean#L159-L171","name":"Lean.Lsp.ModuleRefs.findAt","line":159,"kind":"def","docLink":"./Lean/Server/References.html#Lean.Lsp.ModuleRefs.findAt","doc":"Find all identifiers in `self` with a reference in this module that contains `pos` in its range.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Lsp.ModuleRefs.findAt\"><span class=\"name\">Lean</span>.<span class=\"name\">Lsp</span>.<span class=\"name\">ModuleRefs</span>.<span class=\"name\">findAt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Data/Lsp/Internal.html#Lean.Lsp.ModuleRefs\">ModuleRefs</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pos</span> : <a href=\"./Lean/Data/Lsp/Basic.html#Lean.Lsp.Position\">Position</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">includeStop</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/Prelude.html#Bool.false\">false</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Data/Lsp/Internal.html#Lean.Lsp.RefIdent\">RefIdent</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Server/References.lean#L150-L152","name":"Lean.Lsp.RefInfo.contains","line":150,"kind":"def","docLink":"./Lean/Server/References.html#Lean.Lsp.RefInfo.contains","doc":"Checks whether any of the ranges in `self.definition?` or `self.usages` contains `pos`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Lsp.RefInfo.contains\"><span class=\"name\">Lean</span>.<span class=\"name\">Lsp</span>.<span class=\"name\">RefInfo</span>.<span class=\"name\">contains</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Data/Lsp/Internal.html#Lean.Lsp.RefInfo\">RefInfo</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pos</span> : <a href=\"./Lean/Data/Lsp/Basic.html#Lean.Lsp.Position\">Position</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">includeStop</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/Prelude.html#Bool.false\">false</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Server/References.lean#L147-L148","name":"Lean.Lsp.RefInfo.findReferenceLocation?.contains","line":147,"kind":"def","docLink":"./Lean/Server/References.html#Lean.Lsp.RefInfo.findReferenceLocation?.contains","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Lsp.RefInfo.findReferenceLocation?.contains\"><span class=\"name\">Lean</span>.<span class=\"name\">Lsp</span>.<span class=\"name\">RefInfo</span>.<span class=\"name\">findReferenceLocation?</span>.<span class=\"name\">contains</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">includeStop</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/Prelude.html#Bool.false\">false</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">range</span> : <a href=\"./Lean/Data/Lsp/Basic.html#Lean.Lsp.Range\">Range</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pos</span> : <a href=\"./Lean/Data/Lsp/Basic.html#Lean.Lsp.Position\">Position</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Server/References.lean#L128-L148","name":"Lean.Lsp.RefInfo.findReferenceLocation?","line":128,"kind":"def","docLink":"./Lean/Server/References.html#Lean.Lsp.RefInfo.findReferenceLocation?","doc":"Finds the first definition or usage in `self` where the `RefInfo.Location.range`\ncontains the given `pos`. The `includeStop` parameter can be used to toggle between closed-interval\nand half-open-interval behavior for the range. Closed-interval behavior matches the expectation of\nVSCode when selecting an identifier at a cursor position (see #767).\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Lsp.RefInfo.findReferenceLocation?\"><span class=\"name\">Lean</span>.<span class=\"name\">Lsp</span>.<span class=\"name\">RefInfo</span>.<span class=\"name\">findReferenceLocation?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Data/Lsp/Internal.html#Lean.Lsp.RefInfo\">RefInfo</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pos</span> : <a href=\"./Lean/Data/Lsp/Basic.html#Lean.Lsp.Position\">Position</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">includeStop</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/Prelude.html#Bool.false\">false</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Data/Lsp/Internal.html#Lean.Lsp.RefInfo.Location\">Location</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Server/References.lean#L123-L126","name":"Lean.Lsp.RefInfo.merge","line":123,"kind":"def","docLink":"./Lean/Server/References.html#Lean.Lsp.RefInfo.merge","doc":"Combines the `usages` of `a` and `b` and prefers the `definition?` of `b` over that of `a`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Lsp.RefInfo.merge\"><span class=\"name\">Lean</span>.<span class=\"name\">Lsp</span>.<span class=\"name\">RefInfo</span>.<span class=\"name\">merge</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Lean/Data/Lsp/Internal.html#Lean.Lsp.RefInfo\">RefInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Data/Lsp/Internal.html#Lean.Lsp.RefInfo\">RefInfo</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Server/References.lean#L120-L121","name":"Lean.Lsp.RefInfo.empty","line":120,"kind":"def","docLink":"./Lean/Server/References.html#Lean.Lsp.RefInfo.empty","doc":"No definition, no usages "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Lsp.RefInfo.empty\"><span class=\"name\">Lean</span>.<span class=\"name\">Lsp</span>.<span class=\"name\">RefInfo</span>.<span class=\"name\">empty</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Data/Lsp/Internal.html#Lean.Lsp.RefInfo\">RefInfo</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Server/References.lean#L106-L111","name":"Lean.Server.ModuleRefs.toLspModuleRefs","line":106,"kind":"def","docLink":"./Lean/Server/References.html#Lean.Server.ModuleRefs.toLspModuleRefs","doc":"Converts `refs` to a JSON-serializable `Lsp.ModuleRefs`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.ModuleRefs.toLspModuleRefs\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">ModuleRefs</span>.<span class=\"name\">toLspModuleRefs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">refs</span> : <a href=\"./Lean/Server/References.html#Lean.Server.ModuleRefs\">ModuleRefs</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <a href=\"./Lean/Data/Lsp/Internal.html#Lean.Lsp.ModuleRefs\">Lsp.ModuleRefs</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Server/References.lean#L101-L104","name":"Lean.Server.ModuleRefs.addRef","line":101,"kind":"def","docLink":"./Lean/Server/References.html#Lean.Server.ModuleRefs.addRef","doc":"Adds `ref` to the `RefInfo` corresponding to `ref.ident` in `self`. See `RefInfo.addRef`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.ModuleRefs.addRef\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">ModuleRefs</span>.<span class=\"name\">addRef</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Server/References.html#Lean.Server.ModuleRefs\">ModuleRefs</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ref</span> : <a href=\"./Lean/Server/References.html#Lean.Server.Reference\">Reference</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Server/References.html#Lean.Server.ModuleRefs\">ModuleRefs</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Server/References.lean#L96-L97","name":"Lean.Server.ModuleRefs","line":96,"kind":"def","docLink":"./Lean/Server/References.html#Lean.Server.ModuleRefs","doc":"All references from within a module for all identifiers used in a single module. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.ModuleRefs\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">ModuleRefs</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Server/References.lean#L69-L92","name":"Lean.Server.RefInfo.toLspRefInfo","line":69,"kind":"def","docLink":"./Lean/Server/References.html#Lean.Server.RefInfo.toLspRefInfo","doc":"Converts `i` to a JSON-serializable `Lsp.RefInfo`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.RefInfo.toLspRefInfo\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">RefInfo</span>.<span class=\"name\">toLspRefInfo</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <a href=\"./Lean/Server/References.html#Lean.Server.RefInfo\">RefInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <a href=\"./Lean/Data/Lsp/Internal.html#Lean.Lsp.RefInfo\">Lsp.RefInfo</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Server/References.lean#L54-L67","name":"Lean.Server.RefInfo.addRef","line":54,"kind":"def","docLink":"./Lean/Server/References.html#Lean.Server.RefInfo.addRef","doc":"Adds `ref` to `i`.\nIf `i` has no `definition` and `ref` is a declaration, it becomes the `definition`.\nIf `i` already has a `definition` and `ref` is also a declaration, it is not added to `i`.\nOtherwise, `ref` is added to `i.usages`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.RefInfo.addRef\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">RefInfo</span>.<span class=\"name\">addRef</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <a href=\"./Lean/Server/References.html#Lean.Server.RefInfo\">RefInfo</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ref</span> : <a href=\"./Lean/Server/References.html#Lean.Server.Reference\">Reference</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Server/References.html#Lean.Server.RefInfo\">RefInfo</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Server/References.lean#L51-L52","name":"Lean.Server.RefInfo.empty","line":51,"kind":"def","docLink":"./Lean/Server/References.html#Lean.Server.RefInfo.empty","doc":"No definition, no usages. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.RefInfo.empty\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">RefInfo</span>.<span class=\"name\">empty</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Server/References.html#Lean.Server.RefInfo\">RefInfo</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Server/References.lean#L47-L47","name":"Lean.Server.RefInfo.usages","line":47,"kind":"def","docLink":"./Lean/Server/References.html#Lean.Server.RefInfo.usages","doc":"All usage `Reference`s of the identifier in a single module. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.RefInfo.usages\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">RefInfo</span>.<span class=\"name\">usages</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Server/References.html#Lean.Server.RefInfo\">RefInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Server/References.html#Lean.Server.Reference\">Reference</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Server/References.lean#L45-L45","name":"Lean.Server.RefInfo.definition","line":45,"kind":"def","docLink":"./Lean/Server/References.html#Lean.Server.RefInfo.definition","doc":"Definition `Reference` of the identifier.\nIs equal to `none` if e.g. the definition is outside of the module where this `RefInfo` is used.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.RefInfo.definition\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">RefInfo</span>.<span class=\"name\">definition</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Server/References.html#Lean.Server.RefInfo\">RefInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Server/References.html#Lean.Server.Reference\">Reference</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Server/References.lean#L40-L40","name":"Lean.Server.RefInfo.mk","line":40,"kind":"ctor","docLink":"./Lean/Server/References.html#Lean.Server.RefInfo.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.RefInfo.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">RefInfo</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">definition</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Server/References.html#Lean.Server.Reference\">Reference</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">usages</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Server/References.html#Lean.Server.Reference\">Reference</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Server/References.html#Lean.Server.RefInfo\">RefInfo</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Server/References.lean#L39-L47","name":"Lean.Server.RefInfo","line":39,"kind":"structure","docLink":"./Lean/Server/References.html#Lean.Server.RefInfo","doc":"Definition and usages of an identifier within a single module. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.RefInfo\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">RefInfo</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Server/References.lean#L37-L37","name":"Lean.Server.Reference.isBinder","line":37,"kind":"def","docLink":"./Lean/Server/References.html#Lean.Server.Reference.isBinder","doc":"Whether this reference declares `ident`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.Reference.isBinder\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">Reference</span>.<span class=\"name\">isBinder</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Server/References.html#Lean.Server.Reference\">Reference</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Server/References.lean#L35-L35","name":"Lean.Server.Reference.info","line":35,"kind":"def","docLink":"./Lean/Server/References.html#Lean.Server.Reference.info","doc":"Additional `InfoTree` information for this reference. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.Reference.info\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">Reference</span>.<span class=\"name\">info</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Server/References.html#Lean.Server.Reference\">Reference</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/InfoTree/Types.html#Lean.Elab.Info\">Elab.Info</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Server/References.lean#L33-L33","name":"Lean.Server.Reference.ci","line":33,"kind":"def","docLink":"./Lean/Server/References.html#Lean.Server.Reference.ci","doc":"`ContextInfo` at the point of elaboration of this reference. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.Reference.ci\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">Reference</span>.<span class=\"name\">ci</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Server/References.html#Lean.Server.Reference\">Reference</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/InfoTree/Types.html#Lean.Elab.ContextInfo\">Elab.ContextInfo</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Server/References.lean#L31-L31","name":"Lean.Server.Reference.stx","line":31,"kind":"def","docLink":"./Lean/Server/References.html#Lean.Server.Reference.stx","doc":"Syntax of this reference. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.Reference.stx\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">Reference</span>.<span class=\"name\">stx</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Server/References.html#Lean.Server.Reference\">Reference</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Server/References.lean#L29-L29","name":"Lean.Server.Reference.range","line":29,"kind":"def","docLink":"./Lean/Server/References.html#Lean.Server.Reference.range","doc":"Range where this reference occurs. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.Reference.range\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">Reference</span>.<span class=\"name\">range</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Server/References.html#Lean.Server.Reference\">Reference</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Data/Lsp/Basic.html#Lean.Lsp.Range\">Lsp.Range</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Server/References.lean#L27-L27","name":"Lean.Server.Reference.aliases","line":27,"kind":"def","docLink":"./Lean/Server/References.html#Lean.Server.Reference.aliases","doc":"Identifiers that are logically identical to this reference. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.Reference.aliases\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">Reference</span>.<span class=\"name\">aliases</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Server/References.html#Lean.Server.Reference\">Reference</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Data/Lsp/Internal.html#Lean.Lsp.RefIdent\">Lsp.RefIdent</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Server/References.lean#L25-L25","name":"Lean.Server.Reference.ident","line":25,"kind":"def","docLink":"./Lean/Server/References.html#Lean.Server.Reference.ident","doc":"Identifier of this reference. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.Reference.ident\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">Reference</span>.<span class=\"name\">ident</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Server/References.html#Lean.Server.Reference\">Reference</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Data/Lsp/Internal.html#Lean.Lsp.RefIdent\">Lsp.RefIdent</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Server/References.lean#L23-L23","name":"Lean.Server.Reference.mk","line":23,"kind":"ctor","docLink":"./Lean/Server/References.html#Lean.Server.Reference.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.Reference.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">Reference</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ident</span> : <a href=\"./Lean/Data/Lsp/Internal.html#Lean.Lsp.RefIdent\">Lsp.RefIdent</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">aliases</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Data/Lsp/Internal.html#Lean.Lsp.RefIdent\">Lsp.RefIdent</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">range</span> : <a href=\"./Lean/Data/Lsp/Basic.html#Lean.Lsp.Range\">Lsp.Range</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">stx</span> : <a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ci</span> : <a href=\"./Lean/Elab/InfoTree/Types.html#Lean.Elab.ContextInfo\">Elab.ContextInfo</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">info</span> : <a href=\"./Lean/Elab/InfoTree/Types.html#Lean.Elab.Info\">Elab.Info</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">isBinder</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Server/References.html#Lean.Server.Reference\">Reference</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Server/References.lean#L19-L37","name":"Lean.Server.Reference","line":19,"kind":"structure","docLink":"./Lean/Server/References.html#Lean.Server.Reference","doc":"Global reference. Used by the language server to figure out which identifiers refer to which\nother identifiers across the whole project.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.Reference\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">Reference</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"}]}