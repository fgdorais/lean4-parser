{"name":"Lean.Meta.Tactic.Grind.Arith.CommRing.Poly","instances":[],"imports":["Init.Grind.CommRing.Poly"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/Grind/Arith/CommRing/Poly.lean#L222-L224","name":"Lean.Grind.CommRing.Poly.length","line":222,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Arith/CommRing/Poly.html#Lean.Grind.CommRing.Poly.length","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/CommRing/Poly.html#Lean.Grind.CommRing.Poly.length\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">CommRing</span>.<span class=\"name\">Poly</span>.<span class=\"name\">length</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Grind/CommRing/Poly.html#Lean.Grind.CommRing.Poly\">Poly</a> → <a href=\"./Init/Prelude.html#Nat\">Nat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/Grind/Arith/CommRing/Poly.lean#L218-L220","name":"Lean.Grind.CommRing.Poly.size","line":218,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Arith/CommRing/Poly.html#Lean.Grind.CommRing.Poly.size","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/CommRing/Poly.html#Lean.Grind.CommRing.Poly.size\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">CommRing</span>.<span class=\"name\">Poly</span>.<span class=\"name\">size</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Grind/CommRing/Poly.html#Lean.Grind.CommRing.Poly\">Poly</a> → <a href=\"./Init/Prelude.html#Nat\">Nat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/Grind/Arith/CommRing/Poly.lean#L214-L216","name":"Lean.Grind.CommRing.Mon.size","line":214,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Arith/CommRing/Poly.html#Lean.Grind.CommRing.Mon.size","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/CommRing/Poly.html#Lean.Grind.CommRing.Mon.size\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">CommRing</span>.<span class=\"name\">Mon</span>.<span class=\"name\">size</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Grind/CommRing/Poly.html#Lean.Grind.CommRing.Mon\">Mon</a> → <a href=\"./Init/Prelude.html#Nat\">Nat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/Grind/Arith/CommRing/Poly.lean#L209-L212","name":"Lean.Grind.CommRing.Poly.divConst","line":209,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Arith/CommRing/Poly.html#Lean.Grind.CommRing.Poly.divConst","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/CommRing/Poly.html#Lean.Grind.CommRing.Poly.divConst\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">CommRing</span>.<span class=\"name\">Poly</span>.<span class=\"name\">divConst</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Init/Grind/CommRing/Poly.html#Lean.Grind.CommRing.Poly\">Poly</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Grind/CommRing/Poly.html#Lean.Grind.CommRing.Poly\">Poly</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/Grind/Arith/CommRing/Poly.lean#L202-L207","name":"Lean.Grind.CommRing.Poly.gcdCoeffs.go","line":202,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Arith/CommRing/Poly.html#Lean.Grind.CommRing.Poly.gcdCoeffs.go","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/CommRing/Poly.html#Lean.Grind.CommRing.Poly.gcdCoeffs.go\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">CommRing</span>.<span class=\"name\">Poly</span>.<span class=\"name\">gcdCoeffs</span>.<span class=\"name\">go</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Init/Grind/CommRing/Poly.html#Lean.Grind.CommRing.Poly\">Poly</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">acc</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/Grind/Arith/CommRing/Poly.lean#L198-L207","name":"Lean.Grind.CommRing.Poly.gcdCoeffs","line":198,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Arith/CommRing/Poly.html#Lean.Grind.CommRing.Poly.gcdCoeffs","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/CommRing/Poly.html#Lean.Grind.CommRing.Poly.gcdCoeffs\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">CommRing</span>.<span class=\"name\">Poly</span>.<span class=\"name\">gcdCoeffs</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Grind/CommRing/Poly.html#Lean.Grind.CommRing.Poly\">Poly</a> → <a href=\"./Init/Prelude.html#Nat\">Nat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/Grind/Arith/CommRing/Poly.lean#L193-L196","name":"Lean.Grind.CommRing.Poly.checkNoUnitMon","line":193,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Arith/CommRing/Poly.html#Lean.Grind.CommRing.Poly.checkNoUnitMon","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/CommRing/Poly.html#Lean.Grind.CommRing.Poly.checkNoUnitMon\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">CommRing</span>.<span class=\"name\">Poly</span>.<span class=\"name\">checkNoUnitMon</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Grind/CommRing/Poly.html#Lean.Grind.CommRing.Poly\">Poly</a> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/Grind/Arith/CommRing/Poly.lean#L189-L191","name":"Lean.Grind.CommRing.Poly.checkCoeffs","line":189,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Arith/CommRing/Poly.html#Lean.Grind.CommRing.Poly.checkCoeffs","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/CommRing/Poly.html#Lean.Grind.CommRing.Poly.checkCoeffs\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">CommRing</span>.<span class=\"name\">Poly</span>.<span class=\"name\">checkCoeffs</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Grind/CommRing/Poly.html#Lean.Grind.CommRing.Poly\">Poly</a> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/Grind/Arith/CommRing/Poly.lean#L185-L187","name":"Lean.Grind.CommRing.Poly.isZero","line":185,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Arith/CommRing/Poly.html#Lean.Grind.CommRing.Poly.isZero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/CommRing/Poly.html#Lean.Grind.CommRing.Poly.isZero\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">CommRing</span>.<span class=\"name\">Poly</span>.<span class=\"name\">isZero</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Grind/CommRing/Poly.html#Lean.Grind.CommRing.Poly\">Poly</a> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/Grind/Arith/CommRing/Poly.lean#L180-L183","name":"Lean.Grind.CommRing.Poly.lm","line":180,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Arith/CommRing/Poly.html#Lean.Grind.CommRing.Poly.lm","doc":"Returns the leading monomial of the given polynomial. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/CommRing/Poly.html#Lean.Grind.CommRing.Poly.lm\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">CommRing</span>.<span class=\"name\">Poly</span>.<span class=\"name\">lm</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Grind/CommRing/Poly.html#Lean.Grind.CommRing.Poly\">Poly</a> → <a href=\"./Init/Grind/CommRing/Poly.html#Lean.Grind.CommRing.Mon\">Mon</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/Grind/Arith/CommRing/Poly.lean#L175-L178","name":"Lean.Grind.CommRing.Poly.lc","line":175,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Arith/CommRing/Poly.html#Lean.Grind.CommRing.Poly.lc","doc":"Returns the leading coefficient of the given polynomial "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/CommRing/Poly.html#Lean.Grind.CommRing.Poly.lc\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">CommRing</span>.<span class=\"name\">Poly</span>.<span class=\"name\">lc</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Grind/CommRing/Poly.html#Lean.Grind.CommRing.Poly\">Poly</a> → <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/Grind/Arith/CommRing/Poly.lean#L169-L173","name":"Lean.Grind.CommRing.Poly.divides","line":169,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Arith/CommRing/Poly.html#Lean.Grind.CommRing.Poly.divides","doc":"Returns `true` if the leading monomial of `p` divides `m`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/CommRing/Poly.html#Lean.Grind.CommRing.Poly.divides\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">CommRing</span>.<span class=\"name\">Poly</span>.<span class=\"name\">divides</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Init/Grind/CommRing/Poly.html#Lean.Grind.CommRing.Poly\">Poly</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m</span> : <a href=\"./Init/Grind/CommRing/Poly.html#Lean.Grind.CommRing.Mon\">Mon</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/Grind/Arith/CommRing/Poly.lean#L165-L167","name":"Lean.Grind.CommRing.Poly.degree","line":165,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Arith/CommRing/Poly.html#Lean.Grind.CommRing.Poly.degree","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/CommRing/Poly.html#Lean.Grind.CommRing.Poly.degree\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">CommRing</span>.<span class=\"name\">Poly</span>.<span class=\"name\">degree</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Grind/CommRing/Poly.html#Lean.Grind.CommRing.Poly\">Poly</a> → <a href=\"./Init/Prelude.html#Nat\">Nat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/Grind/Arith/CommRing/Poly.lean#L140-L161","name":"Lean.Grind.CommRing.Poly.simp?.go?","line":140,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Arith/CommRing/Poly.html#Lean.Grind.CommRing.Poly.simp?.go?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/CommRing/Poly.html#Lean.Grind.CommRing.Poly.simp?.go?\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">CommRing</span>.<span class=\"name\">Poly</span>.<span class=\"name\">simp?</span>.<span class=\"name\">go?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">char?</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span> := <a href=\"./Init/Prelude.html#Option.none\">none</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k₂'</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m₂</span> : <a href=\"./Init/Grind/CommRing/Poly.html#Lean.Grind.CommRing.Mon\">Mon</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p₂ </span><span class=\"fn\">p₁</span> : <a href=\"./Init/Grind/CommRing/Poly.html#Lean.Grind.CommRing.Poly\">Poly</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Meta/Tactic/Grind/Arith/CommRing/Poly.html#Lean.Grind.CommRing.SimpResult\">SimpResult</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/Grind/Arith/CommRing/Poly.lean#L129-L163","name":"Lean.Grind.CommRing.Poly.simp?","line":129,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Arith/CommRing/Poly.html#Lean.Grind.CommRing.Poly.simp?","doc":"Simplifies polynomial `p₁` using polynomial `p₂` by rewriting.\n\nThis function attempts to rewrite `p₁` by eliminating the first occurrence of\nthe leading monomial of `p₂`.\n\nRemark: if `char? = some c`, then `c` is the characteristic of the ring.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/CommRing/Poly.html#Lean.Grind.CommRing.Poly.simp?\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">CommRing</span>.<span class=\"name\">Poly</span>.<span class=\"name\">simp?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p₁ </span><span class=\"fn\">p₂</span> : <a href=\"./Init/Grind/CommRing/Poly.html#Lean.Grind.CommRing.Poly\">Poly</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">char?</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span> := <a href=\"./Init/Prelude.html#Option.none\">none</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Meta/Tactic/Grind/Arith/CommRing/Poly.html#Lean.Grind.CommRing.SimpResult\">SimpResult</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/Grind/Arith/CommRing/Poly.lean#L127-L127","name":"Lean.Grind.CommRing.SimpResult.m₂","line":127,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Arith/CommRing/Poly.html#Lean.Grind.CommRing.SimpResult.m₂","doc":"The monomial factor applied to polynomial `p₂`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/CommRing/Poly.html#Lean.Grind.CommRing.SimpResult.m₂\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">CommRing</span>.<span class=\"name\">SimpResult</span>.<span class=\"name\">m₂</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Meta/Tactic/Grind/Arith/CommRing/Poly.html#Lean.Grind.CommRing.SimpResult\">SimpResult</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Grind/CommRing/Poly.html#Lean.Grind.CommRing.Mon\">Mon</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/Grind/Arith/CommRing/Poly.lean#L125-L125","name":"Lean.Grind.CommRing.SimpResult.k₂","line":125,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Arith/CommRing/Poly.html#Lean.Grind.CommRing.SimpResult.k₂","doc":"The integer coefficient multiplied with polynomial `p₂` during rewriting. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/CommRing/Poly.html#Lean.Grind.CommRing.SimpResult.k₂\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">CommRing</span>.<span class=\"name\">SimpResult</span>.<span class=\"name\">k₂</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Meta/Tactic/Grind/Arith/CommRing/Poly.html#Lean.Grind.CommRing.SimpResult\">SimpResult</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Int/Basic.html#Int\">Int</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/Grind/Arith/CommRing/Poly.lean#L123-L123","name":"Lean.Grind.CommRing.SimpResult.k₁","line":123,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Arith/CommRing/Poly.html#Lean.Grind.CommRing.SimpResult.k₁","doc":"The integer coefficient multiplied with polynomial `p₁` in the rewriting step. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/CommRing/Poly.html#Lean.Grind.CommRing.SimpResult.k₁\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">CommRing</span>.<span class=\"name\">SimpResult</span>.<span class=\"name\">k₁</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Meta/Tactic/Grind/Arith/CommRing/Poly.html#Lean.Grind.CommRing.SimpResult\">SimpResult</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Int/Basic.html#Int\">Int</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/Grind/Arith/CommRing/Poly.lean#L121-L121","name":"Lean.Grind.CommRing.SimpResult.p","line":121,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Arith/CommRing/Poly.html#Lean.Grind.CommRing.SimpResult.p","doc":"The resulting simplified polynomial after rewriting. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/CommRing/Poly.html#Lean.Grind.CommRing.SimpResult.p\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">CommRing</span>.<span class=\"name\">SimpResult</span>.<span class=\"name\">p</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Meta/Tactic/Grind/Arith/CommRing/Poly.html#Lean.Grind.CommRing.SimpResult\">SimpResult</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Grind/CommRing/Poly.html#Lean.Grind.CommRing.Poly\">Poly</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/Grind/Arith/CommRing/Poly.lean#L119-L119","name":"Lean.Grind.CommRing.SimpResult.mk","line":119,"kind":"ctor","docLink":"./Lean/Meta/Tactic/Grind/Arith/CommRing/Poly.html#Lean.Grind.CommRing.SimpResult.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/CommRing/Poly.html#Lean.Grind.CommRing.SimpResult.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">CommRing</span>.<span class=\"name\">SimpResult</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Init/Grind/CommRing/Poly.html#Lean.Grind.CommRing.Poly\">Poly</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k₁ </span><span class=\"fn\">k₂</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m₂</span> : <a href=\"./Init/Grind/CommRing/Poly.html#Lean.Grind.CommRing.Mon\">Mon</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Grind/Arith/CommRing/Poly.html#Lean.Grind.CommRing.SimpResult\">SimpResult</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/Grind/Arith/CommRing/Poly.lean#L113-L127","name":"Lean.Grind.CommRing.SimpResult","line":113,"kind":"structure","docLink":"./Lean/Meta/Tactic/Grind/Arith/CommRing/Poly.html#Lean.Grind.CommRing.SimpResult","doc":"Result of simplifying a polynomial `p₁` using a polynomial `p₂`.\n\nThe simplification rewrites the first monomial of `p₁` that can be divided\nby the leading monomial of `p₂`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/CommRing/Poly.html#Lean.Grind.CommRing.SimpResult\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">CommRing</span>.<span class=\"name\">SimpResult</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/Grind/Arith/CommRing/Poly.lean#L90-L111","name":"Lean.Grind.CommRing.Poly.spol","line":90,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Arith/CommRing/Poly.html#Lean.Grind.CommRing.Poly.spol","doc":"Returns the S-polynomial of polynomials `p₁` and `p₂`, and coefficients&terms used to construct it.\nGiven polynomials with leading terms `k₁*m₁` and `k₂*m₂`, the S-polynomial is defined as:\n```\nS(p₁, p₂) = (k₂/gcd(k₁, k₂)) * (lcm(m₁, m₂)/m₁) * p₁ - (k₁/gcd(k₁, k₂)) * (lcm(m₁, m₂)/m₂) * p₂\n```\nRemark: if `char? = some c`, then `c` is the characteristic of the ring.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/CommRing/Poly.html#Lean.Grind.CommRing.Poly.spol\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">CommRing</span>.<span class=\"name\">Poly</span>.<span class=\"name\">spol</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p₁ </span><span class=\"fn\">p₂</span> : <a href=\"./Init/Grind/CommRing/Poly.html#Lean.Grind.CommRing.Poly\">Poly</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">char?</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span> := <a href=\"./Init/Prelude.html#Option.none\">none</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Grind/Arith/CommRing/Poly.html#Lean.Grind.CommRing.SPolResult\">SPolResult</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/Grind/Arith/CommRing/Poly.lean#L87-L88","name":"Lean.Grind.CommRing.Poly.combine'","line":87,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Arith/CommRing/Poly.html#Lean.Grind.CommRing.Poly.combine'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/CommRing/Poly.html#Lean.Grind.CommRing.Poly.combine'\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">CommRing</span>.<span class=\"name\">Poly</span>.<span class=\"name\">combine'</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p₁ </span><span class=\"fn\">p₂</span> : <a href=\"./Init/Grind/CommRing/Poly.html#Lean.Grind.CommRing.Poly\">Poly</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">char?</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span> := <a href=\"./Init/Prelude.html#Option.none\">none</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Grind/CommRing/Poly.html#Lean.Grind.CommRing.Poly\">Poly</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/Grind/Arith/CommRing/Poly.lean#L84-L85","name":"Lean.Grind.CommRing.Poly.mulMon'","line":84,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Arith/CommRing/Poly.html#Lean.Grind.CommRing.Poly.mulMon'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/CommRing/Poly.html#Lean.Grind.CommRing.Poly.mulMon'\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">CommRing</span>.<span class=\"name\">Poly</span>.<span class=\"name\">mulMon'</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Init/Grind/CommRing/Poly.html#Lean.Grind.CommRing.Poly\">Poly</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m</span> : <a href=\"./Init/Grind/CommRing/Poly.html#Lean.Grind.CommRing.Mon\">Mon</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">char?</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span> := <a href=\"./Init/Prelude.html#Option.none\">none</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Grind/CommRing/Poly.html#Lean.Grind.CommRing.Poly\">Poly</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/Grind/Arith/CommRing/Poly.lean#L81-L82","name":"Lean.Grind.CommRing.Poly.mulConst'","line":81,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Arith/CommRing/Poly.html#Lean.Grind.CommRing.Poly.mulConst'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/CommRing/Poly.html#Lean.Grind.CommRing.Poly.mulConst'\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">CommRing</span>.<span class=\"name\">Poly</span>.<span class=\"name\">mulConst'</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Init/Grind/CommRing/Poly.html#Lean.Grind.CommRing.Poly\">Poly</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">char?</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span> := <a href=\"./Init/Prelude.html#Option.none\">none</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Grind/CommRing/Poly.html#Lean.Grind.CommRing.Poly\">Poly</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/Grind/Arith/CommRing/Poly.lean#L79-L79","name":"Lean.Grind.CommRing.SPolResult.m₂","line":79,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Arith/CommRing/Poly.html#Lean.Grind.CommRing.SPolResult.m₂","doc":"Monomial factor applied to polynomial `p₂`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/CommRing/Poly.html#Lean.Grind.CommRing.SPolResult.m₂\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">CommRing</span>.<span class=\"name\">SPolResult</span>.<span class=\"name\">m₂</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Meta/Tactic/Grind/Arith/CommRing/Poly.html#Lean.Grind.CommRing.SPolResult\">SPolResult</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Grind/CommRing/Poly.html#Lean.Grind.CommRing.Mon\">Mon</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/Grind/Arith/CommRing/Poly.lean#L77-L77","name":"Lean.Grind.CommRing.SPolResult.k₂","line":77,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Arith/CommRing/Poly.html#Lean.Grind.CommRing.SPolResult.k₂","doc":"Coefficient applied to polynomial `p₂`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/CommRing/Poly.html#Lean.Grind.CommRing.SPolResult.k₂\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">CommRing</span>.<span class=\"name\">SPolResult</span>.<span class=\"name\">k₂</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Meta/Tactic/Grind/Arith/CommRing/Poly.html#Lean.Grind.CommRing.SPolResult\">SPolResult</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Int/Basic.html#Int\">Int</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/Grind/Arith/CommRing/Poly.lean#L75-L75","name":"Lean.Grind.CommRing.SPolResult.m₁","line":75,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Arith/CommRing/Poly.html#Lean.Grind.CommRing.SPolResult.m₁","doc":"Monomial factor applied to polynomial `p₁`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/CommRing/Poly.html#Lean.Grind.CommRing.SPolResult.m₁\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">CommRing</span>.<span class=\"name\">SPolResult</span>.<span class=\"name\">m₁</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Meta/Tactic/Grind/Arith/CommRing/Poly.html#Lean.Grind.CommRing.SPolResult\">SPolResult</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Grind/CommRing/Poly.html#Lean.Grind.CommRing.Mon\">Mon</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/Grind/Arith/CommRing/Poly.lean#L73-L73","name":"Lean.Grind.CommRing.SPolResult.k₁","line":73,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Arith/CommRing/Poly.html#Lean.Grind.CommRing.SPolResult.k₁","doc":"Coefficient applied to polynomial `p₁`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/CommRing/Poly.html#Lean.Grind.CommRing.SPolResult.k₁\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">CommRing</span>.<span class=\"name\">SPolResult</span>.<span class=\"name\">k₁</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Meta/Tactic/Grind/Arith/CommRing/Poly.html#Lean.Grind.CommRing.SPolResult\">SPolResult</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Int/Basic.html#Int\">Int</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/Grind/Arith/CommRing/Poly.lean#L71-L71","name":"Lean.Grind.CommRing.SPolResult.spol","line":71,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Arith/CommRing/Poly.html#Lean.Grind.CommRing.SPolResult.spol","doc":"The computed S-polynomial. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/CommRing/Poly.html#Lean.Grind.CommRing.SPolResult.spol\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">CommRing</span>.<span class=\"name\">SPolResult</span>.<span class=\"name\">spol</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Meta/Tactic/Grind/Arith/CommRing/Poly.html#Lean.Grind.CommRing.SPolResult\">SPolResult</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Grind/CommRing/Poly.html#Lean.Grind.CommRing.Poly\">Poly</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/Grind/Arith/CommRing/Poly.lean#L69-L69","name":"Lean.Grind.CommRing.SPolResult.mk","line":69,"kind":"ctor","docLink":"./Lean/Meta/Tactic/Grind/Arith/CommRing/Poly.html#Lean.Grind.CommRing.SPolResult.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/CommRing/Poly.html#Lean.Grind.CommRing.SPolResult.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">CommRing</span>.<span class=\"name\">SPolResult</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">spol</span> : <a href=\"./Init/Grind/CommRing/Poly.html#Lean.Grind.CommRing.Poly\">Poly</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k₁</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m₁</span> : <a href=\"./Init/Grind/CommRing/Poly.html#Lean.Grind.CommRing.Mon\">Mon</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k₂</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m₂</span> : <a href=\"./Init/Grind/CommRing/Poly.html#Lean.Grind.CommRing.Mon\">Mon</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Grind/Arith/CommRing/Poly.html#Lean.Grind.CommRing.SPolResult\">SPolResult</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/Grind/Arith/CommRing/Poly.lean#L65-L79","name":"Lean.Grind.CommRing.SPolResult","line":65,"kind":"structure","docLink":"./Lean/Meta/Tactic/Grind/Arith/CommRing/Poly.html#Lean.Grind.CommRing.SPolResult","doc":"Contains the S-polynomial resulting from superposing two polynomials `p₁` and `p₂`,\nalong with coefficients and monomials used in their construction.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/CommRing/Poly.html#Lean.Grind.CommRing.SPolResult\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">CommRing</span>.<span class=\"name\">SPolResult</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/Grind/Arith/CommRing/Poly.lean#L52-L63","name":"Lean.Grind.CommRing.Mon.coprime","line":52,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Arith/CommRing/Poly.html#Lean.Grind.CommRing.Mon.coprime","doc":"`coprime m₁ m₂` returns `true` if the given monomials\ndo not have any variable in common.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/CommRing/Poly.html#Lean.Grind.CommRing.Mon.coprime\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">CommRing</span>.<span class=\"name\">Mon</span>.<span class=\"name\">coprime</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Grind/CommRing/Poly.html#Lean.Grind.CommRing.Mon\">Mon</a> → <a href=\"./Init/Grind/CommRing/Poly.html#Lean.Grind.CommRing.Mon\">Mon</a> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/Grind/Arith/CommRing/Poly.lean#L33-L50","name":"Lean.Grind.CommRing.Mon.div","line":33,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Arith/CommRing/Poly.html#Lean.Grind.CommRing.Mon.div","doc":"Given `m₁` and `m₂` such that `m₂.divides m₁`, then\n`m₁.div m₂` returns the result.\nExample `w.x^3.y^2.z` div `x^2.z` returns `w.x.y^2`\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/CommRing/Poly.html#Lean.Grind.CommRing.Mon.div\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">CommRing</span>.<span class=\"name\">Mon</span>.<span class=\"name\">div</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Grind/CommRing/Poly.html#Lean.Grind.CommRing.Mon\">Mon</a> → <a href=\"./Init/Grind/CommRing/Poly.html#Lean.Grind.CommRing.Mon\">Mon</a> → <a href=\"./Init/Grind/CommRing/Poly.html#Lean.Grind.CommRing.Mon\">Mon</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/Grind/Arith/CommRing/Poly.lean#L20-L31","name":"Lean.Grind.CommRing.Mon.divides","line":20,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Arith/CommRing/Poly.html#Lean.Grind.CommRing.Mon.divides","doc":"`divides m₁ m₂` returns `true` if monomial `m₁` divides `m₂`\nExample: `x^2.z` divides `w.x^3.y^2.z`\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/CommRing/Poly.html#Lean.Grind.CommRing.Mon.divides\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">CommRing</span>.<span class=\"name\">Mon</span>.<span class=\"name\">divides</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Grind/CommRing/Poly.html#Lean.Grind.CommRing.Mon\">Mon</a> → <a href=\"./Init/Grind/CommRing/Poly.html#Lean.Grind.CommRing.Mon\">Mon</a> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/Grind/Arith/CommRing/Poly.lean#L10-L18","name":"Lean.Grind.CommRing.Mon.lcm","line":10,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Arith/CommRing/Poly.html#Lean.Grind.CommRing.Mon.lcm","doc":"`lcm m₁ m₂` returns the least common multiple of the given monomials. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/CommRing/Poly.html#Lean.Grind.CommRing.Mon.lcm\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">CommRing</span>.<span class=\"name\">Mon</span>.<span class=\"name\">lcm</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Grind/CommRing/Poly.html#Lean.Grind.CommRing.Mon\">Mon</a> → <a href=\"./Init/Grind/CommRing/Poly.html#Lean.Grind.CommRing.Mon\">Mon</a> → <a href=\"./Init/Grind/CommRing/Poly.html#Lean.Grind.CommRing.Mon\">Mon</a></span></div></div>"}]}