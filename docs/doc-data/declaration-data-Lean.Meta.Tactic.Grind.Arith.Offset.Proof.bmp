{"name":"Lean.Meta.Tactic.Grind.Arith.Offset.Proof","instances":[],"imports":["Init.Grind.Offset","Init.Grind.Lemmas","Lean.Meta.Tactic.Grind.Types"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/Grind/Arith/Offset/Proof.lean#L137-L161","name":"Lean.Meta.Grind.Arith.Offset.mkPropagateEqFalseProof","line":137,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Arith/Offset/Proof.html#Lean.Meta.Grind.Arith.Offset.mkPropagateEqFalseProof","doc":"Given a path `u --(kuv)--> v` justified by proof `huv`,\nconstruct a proof of `e = False` where `e` is a term corresponding to the edgen `v --(k') --> u`\ns.t. `k+k' < 0`\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Offset/Proof.html#Lean.Meta.Grind.Arith.Offset.mkPropagateEqFalseProof\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Offset</span>.<span class=\"name\">mkPropagateEqFalseProof</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">u </span><span class=\"fn\">v</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">huv</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k'</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/Grind/Arith/Offset/Proof.lean#L110-L135","name":"Lean.Meta.Grind.Arith.Offset.mkPropagateEqTrueProof","line":110,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Arith/Offset/Proof.html#Lean.Meta.Grind.Arith.Offset.mkPropagateEqTrueProof","doc":"Given a path `u --(kuv)--> v` justified by proof `huv`,\nconstruct a proof of `e = True` where `e` is a term corresponding to the edgen `u --(k') --> v`\ns.t. `k ≤ k'`\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Offset/Proof.html#Lean.Meta.Grind.Arith.Offset.mkPropagateEqTrueProof\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Offset</span>.<span class=\"name\">mkPropagateEqTrueProof</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">u </span><span class=\"fn\">v</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">huv</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k'</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/Grind/Arith/Offset/Proof.lean#L89-L108","name":"Lean.Meta.Grind.Arith.Offset.mkUnsatProof","line":89,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Arith/Offset/Proof.html#Lean.Meta.Grind.Arith.Offset.mkUnsatProof","doc":"Returns a proof of `False` using a negative cycle composed of\n- `u --(kuv)--> v` with proof `huv`\n- `v --(kvu)--> u` with proof `hvu`\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Offset/Proof.html#Lean.Meta.Grind.Arith.Offset.mkUnsatProof\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Offset</span>.<span class=\"name\">mkUnsatProof</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">u </span><span class=\"fn\">v</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">kuv</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">huv</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">kvu</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hvu</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/Grind/Arith/Offset/Proof.lean#L77-L87","name":"Lean.Meta.Grind.Arith.Offset.mkOfNegEqFalse","line":77,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Arith/Offset/Proof.html#Lean.Meta.Grind.Arith.Offset.mkOfNegEqFalse","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Offset/Proof.html#Lean.Meta.Grind.Arith.Offset.mkOfNegEqFalse\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Offset</span>.<span class=\"name\">mkOfNegEqFalse</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">nodes</span> : <span class=\"fn\"><a href=\"./Lean/Data/PersistentArray.html#Lean.PArray\">PArray</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Arith/Offset/Util.html#Lean.Meta.Grind.Arith.Offset.Cnstr\">Cnstr</a> <a href=\"./Lean/Meta/Tactic/Grind/Arith/Offset/Types.html#Lean.Meta.Grind.Arith.Offset.NodeId\">NodeId</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/Grind/Arith/Offset/Proof.lean#L24-L74","name":"Lean.Meta.Grind.Arith.Offset.mkTrans","line":24,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Arith/Offset/Proof.html#Lean.Meta.Grind.Arith.Offset.mkTrans","doc":"Assume `pi₁` is `{ w := u, k := k₁, proof := p₁ }` and `pi₂` is `{ w := w, k := k₂, proof := p₂ }`\n`p₁` is the proof for edge `u -(k₁) → w` and `p₂` the proof for edge `w -(k₂)-> v`.\nThen, this function returns a proof for edge `u -(k₁+k₂) -> v`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Offset/Proof.html#Lean.Meta.Grind.Arith.Offset.mkTrans\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Offset</span>.<span class=\"name\">mkTrans</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">nodes</span> : <span class=\"fn\"><a href=\"./Lean/Data/PersistentArray.html#Lean.PArray\">PArray</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pi₁ </span><span class=\"fn\">pi₂</span> : <a href=\"./Lean/Meta/Tactic/Grind/Arith/Offset/Types.html#Lean.Meta.Grind.Arith.Offset.ProofInfo\">ProofInfo</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">v</span> : <a href=\"./Lean/Meta/Tactic/Grind/Arith/Offset/Types.html#Lean.Meta.Grind.Arith.Offset.NodeId\">NodeId</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Grind/Arith/Offset/Types.html#Lean.Meta.Grind.Arith.Offset.ProofInfo\">ProofInfo</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/Grind/Arith/Offset/Proof.lean#L16-L17","name":"Lean.Meta.Grind.Arith.Offset.rfl_true","line":16,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Arith/Offset/Proof.html#Lean.Meta.Grind.Arith.Offset.rfl_true","doc":"Returns a proof for `true = true` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Offset/Proof.html#Lean.Meta.Grind.Arith.Offset.rfl_true\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Offset</span>.<span class=\"name\">rfl_true</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></div></div>"}]}