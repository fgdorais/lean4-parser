{"name":"Lean.Util.PPExt","instances":[{"typeNames":["Std.Format","Lean.FormatWithInfos"],"name":"Lean.instCoeFormatFormatWithInfos","className":"Coe"},{"typeNames":["Lean.PPFns"],"name":"Lean.instInhabitedPPFns","className":"Inhabited"}],"imports":["Lean.Environment","Lean.MetavarContext","Lean.Data.OpenDecl","Lean.Elab.InfoTree.Types"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Util/PPExt.lean#L116-L123","name":"Lean.ppGoal","line":116,"kind":"def","docLink":"./Lean/Util/PPExt.html#Lean.ppGoal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/PPExt.html#Lean.ppGoal\"><span class=\"name\">Lean</span>.<span class=\"name\">ppGoal</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Lean/Util/PPExt.html#Lean.PPContext\">PPContext</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">mvarId</span> : <a href=\"./Lean/Expr.html#Lean.MVarId\">MVarId</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <a href=\"./Init/Data/Format/Basic.html#Std.Format\">Format</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Util/PPExt.lean#L113-L114","name":"Lean.ppLevel","line":113,"kind":"def","docLink":"./Lean/Util/PPExt.html#Lean.ppLevel","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/PPExt.html#Lean.ppLevel\"><span class=\"name\">Lean</span>.<span class=\"name\">ppLevel</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Lean/Util/PPExt.html#Lean.PPContext\">PPContext</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">l</span> : <a href=\"./Lean/Level.html#Lean.Level\">Level</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <a href=\"./Init/Data/Format/Basic.html#Std.Format\">Format</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Util/PPExt.lean#L101-L111","name":"Lean.ppTerm","line":101,"kind":"def","docLink":"./Lean/Util/PPExt.html#Lean.ppTerm","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/PPExt.html#Lean.ppTerm\"><span class=\"name\">Lean</span>.<span class=\"name\">ppTerm</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Lean/Util/PPExt.html#Lean.PPContext\">PPContext</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">stx</span> : <a href=\"./Init/Meta.html#Lean.Syntax.Term\">Term</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <a href=\"./Init/Data/Format/Basic.html#Std.Format\">Format</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Util/PPExt.lean#L92-L99","name":"Lean.ppConstNameWithInfos","line":92,"kind":"def","docLink":"./Lean/Util/PPExt.html#Lean.ppConstNameWithInfos","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/PPExt.html#Lean.ppConstNameWithInfos\"><span class=\"name\">Lean</span>.<span class=\"name\">ppConstNameWithInfos</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Lean/Util/PPExt.html#Lean.PPContext\">PPContext</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <a href=\"./Lean/Util/PPExt.html#Lean.FormatWithInfos\">FormatWithInfos</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Util/PPExt.lean#L79-L90","name":"Lean.ppExprWithInfos","line":79,"kind":"def","docLink":"./Lean/Util/PPExt.html#Lean.ppExprWithInfos","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/PPExt.html#Lean.ppExprWithInfos\"><span class=\"name\">Lean</span>.<span class=\"name\">ppExprWithInfos</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Lean/Util/PPExt.html#Lean.PPContext\">PPContext</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <a href=\"./Lean/Util/PPExt.html#Lean.FormatWithInfos\">FormatWithInfos</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Util/PPExt.lean#L76-L77","name":"Lean.ppExt","line":76,"kind":"opaque","docLink":"./Lean/Util/PPExt.html#Lean.ppExt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/PPExt.html#Lean.ppExt\"><span class=\"name\">Lean</span>.<span class=\"name\">ppExt</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.EnvExtension\">EnvExtension</a> <a href=\"./Lean/Util/PPExt.html#Lean.PPFns\">PPFns</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Util/PPExt.lean#L67-L74","name":"Lean.ppFnsRef","line":67,"kind":"opaque","docLink":"./Lean/Util/PPExt.html#Lean.ppFnsRef","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/PPExt.html#Lean.ppFnsRef\"><span class=\"name\">Lean</span>.<span class=\"name\">ppFnsRef</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO.Ref\">IO.Ref</a> <a href=\"./Lean/Util/PPExt.html#Lean.PPFns\">PPFns</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Util/PPExt.lean#L64-L65","name":"Lean.formatRawGoal","line":64,"kind":"def","docLink":"./Lean/Util/PPExt.html#Lean.formatRawGoal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/PPExt.html#Lean.formatRawGoal\"><span class=\"name\">Lean</span>.<span class=\"name\">formatRawGoal</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">mvarId</span> : <a href=\"./Lean/Expr.html#Lean.MVarId\">MVarId</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Format/Basic.html#Std.Format\">Format</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Util/PPExt.lean#L61-L62","name":"Lean.formatRawTerm","line":61,"kind":"def","docLink":"./Lean/Util/PPExt.html#Lean.formatRawTerm","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/PPExt.html#Lean.formatRawTerm\"><span class=\"name\">Lean</span>.<span class=\"name\">formatRawTerm</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Lean/Util/PPExt.html#Lean.PPContext\">PPContext</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">stx</span> : <a href=\"./Init/Meta.html#Lean.Syntax.Term\">Term</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Format/Basic.html#Std.Format\">Format</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Util/PPExt.lean#L59-L59","name":"Lean.instInhabitedPPFns","line":59,"kind":"instance","docLink":"./Lean/Util/PPExt.html#Lean.instInhabitedPPFns","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/PPExt.html#Lean.instInhabitedPPFns\"><span class=\"name\">Lean</span>.<span class=\"name\">instInhabitedPPFns</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Util/PPExt.html#Lean.PPFns\">PPFns</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Util/PPExt.lean#L58-L58","name":"Lean.PPFns.ppGoal","line":58,"kind":"def","docLink":"./Lean/Util/PPExt.html#Lean.PPFns.ppGoal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/PPExt.html#Lean.PPFns.ppGoal\"><span class=\"name\">Lean</span>.<span class=\"name\">PPFns</span>.<span class=\"name\">ppGoal</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Util/PPExt.html#Lean.PPFns\">PPFns</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Util/PPExt.html#Lean.PPContext\">PPContext</a> → <span class=\"fn\"><a href=\"./Lean/Expr.html#Lean.MVarId\">MVarId</a> → <span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Data/Format/Basic.html#Std.Format\">Format</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Util/PPExt.lean#L57-L57","name":"Lean.PPFns.ppLevel","line":57,"kind":"def","docLink":"./Lean/Util/PPExt.html#Lean.PPFns.ppLevel","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/PPExt.html#Lean.PPFns.ppLevel\"><span class=\"name\">Lean</span>.<span class=\"name\">PPFns</span>.<span class=\"name\">ppLevel</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Util/PPExt.html#Lean.PPFns\">PPFns</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Util/PPExt.html#Lean.PPContext\">PPContext</a> → <span class=\"fn\"><a href=\"./Lean/Level.html#Lean.Level\">Level</a> → <span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <a href=\"./Init/Data/Format/Basic.html#Std.Format\">Format</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Util/PPExt.lean#L56-L56","name":"Lean.PPFns.ppTerm","line":56,"kind":"def","docLink":"./Lean/Util/PPExt.html#Lean.PPFns.ppTerm","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/PPExt.html#Lean.PPFns.ppTerm\"><span class=\"name\">Lean</span>.<span class=\"name\">PPFns</span>.<span class=\"name\">ppTerm</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Util/PPExt.html#Lean.PPFns\">PPFns</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Util/PPExt.html#Lean.PPContext\">PPContext</a> → <span class=\"fn\"><a href=\"./Init/Meta.html#Lean.Syntax.Term\">Term</a> → <span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Data/Format/Basic.html#Std.Format\">Format</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Util/PPExt.lean#L55-L55","name":"Lean.PPFns.ppConstNameWithInfos","line":55,"kind":"def","docLink":"./Lean/Util/PPExt.html#Lean.PPFns.ppConstNameWithInfos","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/PPExt.html#Lean.PPFns.ppConstNameWithInfos\"><span class=\"name\">Lean</span>.<span class=\"name\">PPFns</span>.<span class=\"name\">ppConstNameWithInfos</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Util/PPExt.html#Lean.PPFns\">PPFns</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Util/PPExt.html#Lean.PPContext\">PPContext</a> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.Name\">Name</a> → <span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Lean/Util/PPExt.html#Lean.FormatWithInfos\">FormatWithInfos</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Util/PPExt.lean#L54-L54","name":"Lean.PPFns.ppExprWithInfos","line":54,"kind":"def","docLink":"./Lean/Util/PPExt.html#Lean.PPFns.ppExprWithInfos","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/PPExt.html#Lean.PPFns.ppExprWithInfos\"><span class=\"name\">Lean</span>.<span class=\"name\">PPFns</span>.<span class=\"name\">ppExprWithInfos</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Util/PPExt.html#Lean.PPFns\">PPFns</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Util/PPExt.html#Lean.PPContext\">PPContext</a> → <span class=\"fn\"><a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a> → <span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Lean/Util/PPExt.html#Lean.FormatWithInfos\">FormatWithInfos</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Util/PPExt.lean#L53-L53","name":"Lean.PPFns.mk","line":53,"kind":"ctor","docLink":"./Lean/Util/PPExt.html#Lean.PPFns.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/PPExt.html#Lean.PPFns.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">PPFns</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ppExprWithInfos</span> : <span class=\"fn\"><a href=\"./Lean/Util/PPExt.html#Lean.PPContext\">PPContext</a> → <span class=\"fn\"><a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a> → <span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Lean/Util/PPExt.html#Lean.FormatWithInfos\">FormatWithInfos</a></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ppConstNameWithInfos</span> : <span class=\"fn\"><a href=\"./Lean/Util/PPExt.html#Lean.PPContext\">PPContext</a> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.Name\">Name</a> → <span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Lean/Util/PPExt.html#Lean.FormatWithInfos\">FormatWithInfos</a></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ppTerm</span> : <span class=\"fn\"><a href=\"./Lean/Util/PPExt.html#Lean.PPContext\">PPContext</a> → <span class=\"fn\"><a href=\"./Init/Meta.html#Lean.Syntax.Term\">Term</a> → <span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Data/Format/Basic.html#Std.Format\">Format</a></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ppLevel</span> : <span class=\"fn\"><a href=\"./Lean/Util/PPExt.html#Lean.PPContext\">PPContext</a> → <span class=\"fn\"><a href=\"./Lean/Level.html#Lean.Level\">Level</a> → <span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <a href=\"./Init/Data/Format/Basic.html#Std.Format\">Format</a></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ppGoal</span> : <span class=\"fn\"><a href=\"./Lean/Util/PPExt.html#Lean.PPContext\">PPContext</a> → <span class=\"fn\"><a href=\"./Lean/Expr.html#Lean.MVarId\">MVarId</a> → <span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Data/Format/Basic.html#Std.Format\">Format</a></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Util/PPExt.html#Lean.PPFns\">PPFns</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Util/PPExt.lean#L53-L59","name":"Lean.PPFns","line":53,"kind":"structure","docLink":"./Lean/Util/PPExt.html#Lean.PPFns","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/PPExt.html#Lean.PPFns\"><span class=\"name\">Lean</span>.<span class=\"name\">PPFns</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Util/PPExt.lean#L50-L51","name":"Lean.instCoeFormatFormatWithInfos","line":50,"kind":"instance","docLink":"./Lean/Util/PPExt.html#Lean.instCoeFormatFormatWithInfos","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/PPExt.html#Lean.instCoeFormatFormatWithInfos\"><span class=\"name\">Lean</span>.<span class=\"name\">instCoeFormatFormatWithInfos</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Coe.html#Coe\">Coe</a> <a href=\"./Init/Data/Format/Basic.html#Std.Format\">Format</a> <a href=\"./Lean/Util/PPExt.html#Lean.FormatWithInfos\">FormatWithInfos</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Util/PPExt.lean#L49-L49","name":"Lean.FormatWithInfos.infos","line":49,"kind":"def","docLink":"./Lean/Util/PPExt.html#Lean.FormatWithInfos.infos","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/PPExt.html#Lean.FormatWithInfos.infos\"><span class=\"name\">Lean</span>.<span class=\"name\">FormatWithInfos</span>.<span class=\"name\">infos</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Util/PPExt.html#Lean.FormatWithInfos\">FormatWithInfos</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Util/PPExt.html#Lean.PrettyPrinter.InfoPerPos\">PrettyPrinter.InfoPerPos</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Util/PPExt.lean#L48-L48","name":"Lean.FormatWithInfos.fmt","line":48,"kind":"def","docLink":"./Lean/Util/PPExt.html#Lean.FormatWithInfos.fmt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/PPExt.html#Lean.FormatWithInfos.fmt\"><span class=\"name\">Lean</span>.<span class=\"name\">FormatWithInfos</span>.<span class=\"name\">fmt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Util/PPExt.html#Lean.FormatWithInfos\">FormatWithInfos</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Format/Basic.html#Std.Format\">Format</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Util/PPExt.lean#L47-L47","name":"Lean.FormatWithInfos.mk","line":47,"kind":"ctor","docLink":"./Lean/Util/PPExt.html#Lean.FormatWithInfos.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/PPExt.html#Lean.FormatWithInfos.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">FormatWithInfos</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fmt</span> : <a href=\"./Init/Data/Format/Basic.html#Std.Format\">Format</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">infos</span> : <a href=\"./Lean/Util/PPExt.html#Lean.PrettyPrinter.InfoPerPos\">PrettyPrinter.InfoPerPos</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Util/PPExt.html#Lean.FormatWithInfos\">FormatWithInfos</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Util/PPExt.lean#L43-L49","name":"Lean.FormatWithInfos","line":43,"kind":"structure","docLink":"./Lean/Util/PPExt.html#Lean.FormatWithInfos","doc":"A format tree with `Elab.Info` annotations.\nEach `.tag n _` node is annotated with `infos[n]`.\nThis is used to attach semantic data such as expressions\nto pretty-printer outputs. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/PPExt.html#Lean.FormatWithInfos\"><span class=\"name\">Lean</span>.<span class=\"name\">FormatWithInfos</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Util/PPExt.lean#L42-L42","name":"Lean.PrettyPrinter.InfoPerPos","line":42,"kind":"def","docLink":"./Lean/Util/PPExt.html#Lean.PrettyPrinter.InfoPerPos","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/PPExt.html#Lean.PrettyPrinter.InfoPerPos\"><span class=\"name\">Lean</span>.<span class=\"name\">PrettyPrinter</span>.<span class=\"name\">InfoPerPos</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Util/PPExt.lean#L40-L40","name":"Lean.PPContext.openDecls","line":40,"kind":"def","docLink":"./Lean/Util/PPExt.html#Lean.PPContext.openDecls","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/PPExt.html#Lean.PPContext.openDecls\"><span class=\"name\">Lean</span>.<span class=\"name\">PPContext</span>.<span class=\"name\">openDecls</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Util/PPExt.html#Lean.PPContext\">PPContext</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Lean/Data/OpenDecl.html#Lean.OpenDecl\">OpenDecl</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Util/PPExt.lean#L39-L39","name":"Lean.PPContext.currNamespace","line":39,"kind":"def","docLink":"./Lean/Util/PPExt.html#Lean.PPContext.currNamespace","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/PPExt.html#Lean.PPContext.currNamespace\"><span class=\"name\">Lean</span>.<span class=\"name\">PPContext</span>.<span class=\"name\">currNamespace</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Util/PPExt.html#Lean.PPContext\">PPContext</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Name\">Name</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Util/PPExt.lean#L38-L38","name":"Lean.PPContext.opts","line":38,"kind":"def","docLink":"./Lean/Util/PPExt.html#Lean.PPContext.opts","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/PPExt.html#Lean.PPContext.opts\"><span class=\"name\">Lean</span>.<span class=\"name\">PPContext</span>.<span class=\"name\">opts</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Util/PPExt.html#Lean.PPContext\">PPContext</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Data/Options.html#Lean.Options\">Options</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Util/PPExt.lean#L37-L37","name":"Lean.PPContext.lctx","line":37,"kind":"def","docLink":"./Lean/Util/PPExt.html#Lean.PPContext.lctx","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/PPExt.html#Lean.PPContext.lctx\"><span class=\"name\">Lean</span>.<span class=\"name\">PPContext</span>.<span class=\"name\">lctx</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Util/PPExt.html#Lean.PPContext\">PPContext</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/LocalContext.html#Lean.LocalContext\">LocalContext</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Util/PPExt.lean#L36-L36","name":"Lean.PPContext.mctx","line":36,"kind":"def","docLink":"./Lean/Util/PPExt.html#Lean.PPContext.mctx","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/PPExt.html#Lean.PPContext.mctx\"><span class=\"name\">Lean</span>.<span class=\"name\">PPContext</span>.<span class=\"name\">mctx</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Util/PPExt.html#Lean.PPContext\">PPContext</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/MetavarContext.html#Lean.MetavarContext\">MetavarContext</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Util/PPExt.lean#L35-L35","name":"Lean.PPContext.env","line":35,"kind":"def","docLink":"./Lean/Util/PPExt.html#Lean.PPContext.env","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/PPExt.html#Lean.PPContext.env\"><span class=\"name\">Lean</span>.<span class=\"name\">PPContext</span>.<span class=\"name\">env</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Util/PPExt.html#Lean.PPContext\">PPContext</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Environment.html#Lean.Environment\">Environment</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Util/PPExt.lean#L34-L34","name":"Lean.PPContext.mk","line":34,"kind":"ctor","docLink":"./Lean/Util/PPExt.html#Lean.PPContext.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/PPExt.html#Lean.PPContext.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">PPContext</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">env</span> : <a href=\"./Lean/Environment.html#Lean.Environment\">Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">mctx</span> : <a href=\"./Lean/MetavarContext.html#Lean.MetavarContext\">MetavarContext</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">lctx</span> : <a href=\"./Lean/LocalContext.html#Lean.LocalContext\">LocalContext</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">opts</span> : <a href=\"./Lean/Data/Options.html#Lean.Options\">Options</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">currNamespace</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">openDecls</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Lean/Data/OpenDecl.html#Lean.OpenDecl\">OpenDecl</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Util/PPExt.html#Lean.PPContext\">PPContext</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Util/PPExt.lean#L34-L40","name":"Lean.PPContext","line":34,"kind":"structure","docLink":"./Lean/Util/PPExt.html#Lean.PPContext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/PPExt.html#Lean.PPContext\"><span class=\"name\">Lean</span>.<span class=\"name\">PPContext</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Util/PPExt.lean#L28-L32","name":"Lean.pp.rawOnError","line":28,"kind":"opaque","docLink":"./Lean/Util/PPExt.html#Lean.pp.rawOnError","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/PPExt.html#Lean.pp.rawOnError\"><span class=\"name\">Lean</span>.<span class=\"name\">pp</span>.<span class=\"name\">rawOnError</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/Options.html#Lean.Option\">Lean.Option</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Util/PPExt.lean#L23-L27","name":"Lean.pp.raw.maxDepth","line":23,"kind":"opaque","docLink":"./Lean/Util/PPExt.html#Lean.pp.raw.maxDepth","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/PPExt.html#Lean.pp.raw.maxDepth\"><span class=\"name\">Lean</span>.<span class=\"name\">pp</span>.<span class=\"name\">raw</span>.<span class=\"name\">maxDepth</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/Options.html#Lean.Option\">Lean.Option</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Util/PPExt.lean#L18-L22","name":"Lean.pp.raw.showInfo","line":18,"kind":"opaque","docLink":"./Lean/Util/PPExt.html#Lean.pp.raw.showInfo","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/PPExt.html#Lean.pp.raw.showInfo\"><span class=\"name\">Lean</span>.<span class=\"name\">pp</span>.<span class=\"name\">raw</span>.<span class=\"name\">showInfo</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/Options.html#Lean.Option\">Lean.Option</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Util/PPExt.lean#L13-L17","name":"Lean.pp.raw","line":13,"kind":"opaque","docLink":"./Lean/Util/PPExt.html#Lean.pp.raw","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/PPExt.html#Lean.pp.raw\"><span class=\"name\">Lean</span>.<span class=\"name\">pp</span>.<span class=\"name\">raw</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/Options.html#Lean.Option\">Lean.Option</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"}]}