{"name":"Lean.Compiler.IR.FreeVars","instances":[{"typeNames":["Lean.IR.MaxIndex.Collector"],"name":"Lean.IR.MaxIndex.instAndThenCollector","className":"AndThen"},{"typeNames":["Lean.IR.FreeIndices.Collector"],"name":"Lean.IR.FreeIndices.instAndThenCollector","className":"AndThen"}],"imports":["Lean.Compiler.IR.Basic"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/FreeVars.lean#L231-L231","name":"Lean.IR.FnBody.hasFreeVar","line":231,"kind":"def","docLink":"./Lean/Compiler/IR/FreeVars.html#Lean.IR.FnBody.hasFreeVar","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/FreeVars.html#Lean.IR.FnBody.hasFreeVar\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">FnBody</span>.<span class=\"name\">hasFreeVar</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.FnBody\">FnBody</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.VarId\">VarId</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/FreeVars.lean#L230-L230","name":"Lean.IR.Expr.hasFreeVar","line":230,"kind":"def","docLink":"./Lean/Compiler/IR/FreeVars.html#Lean.IR.Expr.hasFreeVar","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/FreeVars.html#Lean.IR.Expr.hasFreeVar\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">Expr</span>.<span class=\"name\">hasFreeVar</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.VarId\">VarId</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/FreeVars.lean#L229-L229","name":"Lean.IR.Arg.hasFreeVar","line":229,"kind":"def","docLink":"./Lean/Compiler/IR/FreeVars.html#Lean.IR.Arg.hasFreeVar","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/FreeVars.html#Lean.IR.Arg.hasFreeVar\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">Arg</span>.<span class=\"name\">hasFreeVar</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">arg</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Arg\">Arg</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.VarId\">VarId</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/FreeVars.lean#L211-L225","name":"Lean.IR.HasIndex.visitFnBody","line":211,"kind":"opaque","docLink":"./Lean/Compiler/IR/FreeVars.html#Lean.IR.HasIndex.visitFnBody","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/FreeVars.html#Lean.IR.HasIndex.visitFnBody\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">HasIndex</span>.<span class=\"name\">visitFnBody</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">w</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Index\">Index</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.FnBody\">FnBody</a> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/FreeVars.lean#L196-L209","name":"Lean.IR.HasIndex.visitExpr","line":196,"kind":"def","docLink":"./Lean/Compiler/IR/FreeVars.html#Lean.IR.HasIndex.visitExpr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/FreeVars.html#Lean.IR.HasIndex.visitExpr\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">HasIndex</span>.<span class=\"name\">visitExpr</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">w</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Index\">Index</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Expr\">Expr</a> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/FreeVars.lean#L193-L194","name":"Lean.IR.HasIndex.visitParams","line":193,"kind":"def","docLink":"./Lean/Compiler/IR/FreeVars.html#Lean.IR.HasIndex.visitParams","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/FreeVars.html#Lean.IR.HasIndex.visitParams\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">HasIndex</span>.<span class=\"name\">visitParams</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">w</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Index\">Index</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ps</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Param\">Param</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/FreeVars.lean#L190-L191","name":"Lean.IR.HasIndex.visitArgs","line":190,"kind":"def","docLink":"./Lean/Compiler/IR/FreeVars.html#Lean.IR.HasIndex.visitArgs","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/FreeVars.html#Lean.IR.HasIndex.visitArgs\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">HasIndex</span>.<span class=\"name\">visitArgs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">w</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Index\">Index</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">xs</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Arg\">Arg</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/FreeVars.lean#L186-L188","name":"Lean.IR.HasIndex.visitArg","line":186,"kind":"def","docLink":"./Lean/Compiler/IR/FreeVars.html#Lean.IR.HasIndex.visitArg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/FreeVars.html#Lean.IR.HasIndex.visitArg\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">HasIndex</span>.<span class=\"name\">visitArg</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">w</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Index\">Index</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Arg\">Arg</a> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/FreeVars.lean#L184-L184","name":"Lean.IR.HasIndex.visitJP","line":184,"kind":"def","docLink":"./Lean/Compiler/IR/FreeVars.html#Lean.IR.HasIndex.visitJP","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/FreeVars.html#Lean.IR.HasIndex.visitJP\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">HasIndex</span>.<span class=\"name\">visitJP</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">w</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Index\">Index</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.JoinPointId\">JoinPointId</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/FreeVars.lean#L183-L183","name":"Lean.IR.HasIndex.visitVar","line":183,"kind":"def","docLink":"./Lean/Compiler/IR/FreeVars.html#Lean.IR.HasIndex.visitVar","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/FreeVars.html#Lean.IR.HasIndex.visitVar\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">HasIndex</span>.<span class=\"name\">visitVar</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">w</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Index\">Index</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.VarId\">VarId</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/FreeVars.lean#L175-L176","name":"Lean.IR.FnBody.freeIndices","line":175,"kind":"def","docLink":"./Lean/Compiler/IR/FreeVars.html#Lean.IR.FnBody.freeIndices","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/FreeVars.html#Lean.IR.FnBody.freeIndices\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">FnBody</span>.<span class=\"name\">freeIndices</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.FnBody\">FnBody</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.IndexSet\">IndexSet</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/FreeVars.lean#L172-L173","name":"Lean.IR.FnBody.collectFreeIndices","line":172,"kind":"def","docLink":"./Lean/Compiler/IR/FreeVars.html#Lean.IR.FnBody.collectFreeIndices","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/FreeVars.html#Lean.IR.FnBody.collectFreeIndices\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">FnBody</span>.<span class=\"name\">collectFreeIndices</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.FnBody\">FnBody</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">vs</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.IndexSet\">IndexSet</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.IndexSet\">IndexSet</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/FreeVars.lean#L154-L168","name":"Lean.IR.FreeIndices.collectFnBody","line":154,"kind":"opaque","docLink":"./Lean/Compiler/IR/FreeVars.html#Lean.IR.FreeIndices.collectFnBody","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/FreeVars.html#Lean.IR.FreeIndices.collectFnBody\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">FreeIndices</span>.<span class=\"name\">collectFnBody</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.FnBody\">FnBody</a> → <a href=\"./Lean/Compiler/IR/FreeVars.html#Lean.IR.FreeIndices.Collector\">Collector</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/FreeVars.lean#L123-L124","name":"Lean.IR.FreeIndices.instAndThenCollector","line":123,"kind":"instance","docLink":"./Lean/Compiler/IR/FreeVars.html#Lean.IR.FreeIndices.instAndThenCollector","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/FreeVars.html#Lean.IR.FreeIndices.instAndThenCollector\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">FreeIndices</span>.<span class=\"name\">instAndThenCollector</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#AndThen\">AndThen</a> <a href=\"./Lean/Compiler/IR/FreeVars.html#Lean.IR.FreeIndices.Collector\">Collector</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/FreeVars.lean#L114-L115","name":"Lean.IR.FreeIndices.insertParams","line":114,"kind":"def","docLink":"./Lean/Compiler/IR/FreeVars.html#Lean.IR.FreeIndices.insertParams","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/FreeVars.html#Lean.IR.FreeIndices.insertParams\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">FreeIndices</span>.<span class=\"name\">insertParams</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.IndexSet\">IndexSet</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ys</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Param\">Param</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.IndexSet\">IndexSet</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/FreeVars.lean#L91-L91","name":"Lean.IR.FreeIndices.Collector","line":91,"kind":"def","docLink":"./Lean/Compiler/IR/FreeVars.html#Lean.IR.FreeIndices.Collector","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/FreeVars.html#Lean.IR.FreeIndices.Collector\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">FreeIndices</span>.<span class=\"name\">Collector</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/FreeVars.lean#L84-L85","name":"Lean.IR.Decl.maxIndex","line":84,"kind":"def","docLink":"./Lean/Compiler/IR/FreeVars.html#Lean.IR.Decl.maxIndex","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/FreeVars.html#Lean.IR.Decl.maxIndex\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">Decl</span>.<span class=\"name\">maxIndex</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">d</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Decl\">Decl</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Index\">Index</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/FreeVars.lean#L81-L82","name":"Lean.IR.FnBody.maxIndex","line":81,"kind":"def","docLink":"./Lean/Compiler/IR/FreeVars.html#Lean.IR.FnBody.maxIndex","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/FreeVars.html#Lean.IR.FnBody.maxIndex\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">FnBody</span>.<span class=\"name\">maxIndex</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.FnBody\">FnBody</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Index\">Index</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/FreeVars.lean#L75-L77","name":"Lean.IR.MaxIndex.collectDecl","line":75,"kind":"def","docLink":"./Lean/Compiler/IR/FreeVars.html#Lean.IR.MaxIndex.collectDecl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/FreeVars.html#Lean.IR.MaxIndex.collectDecl\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">MaxIndex</span>.<span class=\"name\">collectDecl</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Decl\">Decl</a> → <a href=\"./Lean/Compiler/IR/FreeVars.html#Lean.IR.MaxIndex.Collector\">Collector</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/FreeVars.lean#L59-L73","name":"Lean.IR.MaxIndex.collectFnBody","line":59,"kind":"opaque","docLink":"./Lean/Compiler/IR/FreeVars.html#Lean.IR.MaxIndex.collectFnBody","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/FreeVars.html#Lean.IR.MaxIndex.collectFnBody\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">MaxIndex</span>.<span class=\"name\">collectFnBody</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.FnBody\">FnBody</a> → <a href=\"./Lean/Compiler/IR/FreeVars.html#Lean.IR.MaxIndex.Collector\">Collector</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/FreeVars.lean#L27-L28","name":"Lean.IR.MaxIndex.instAndThenCollector","line":27,"kind":"instance","docLink":"./Lean/Compiler/IR/FreeVars.html#Lean.IR.MaxIndex.instAndThenCollector","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/FreeVars.html#Lean.IR.MaxIndex.instAndThenCollector\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">MaxIndex</span>.<span class=\"name\">instAndThenCollector</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#AndThen\">AndThen</a> <a href=\"./Lean/Compiler/IR/FreeVars.html#Lean.IR.MaxIndex.Collector\">Collector</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/FreeVars.lean#L20-L20","name":"Lean.IR.MaxIndex.Collector","line":20,"kind":"def","docLink":"./Lean/Compiler/IR/FreeVars.html#Lean.IR.MaxIndex.Collector","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/FreeVars.html#Lean.IR.MaxIndex.Collector\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">MaxIndex</span>.<span class=\"name\">Collector</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"}]}