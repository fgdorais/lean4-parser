{"name":"Lean.Meta.Tactic.Grind.ENodeKey","instances":[{"typeNames":["Lean.Meta.Grind.ENodeKey"],"name":"Lean.Meta.Grind.instHashableENodeKey","className":"Hashable"},{"typeNames":["Lean.Meta.Grind.ENodeKey"],"name":"Lean.Meta.Grind.instBEqENodeKey","className":"BEq"}],"imports":["Lean.Expr"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/Grind/ENodeKey.lean#L27-L28","name":"Lean.Meta.Grind.instBEqENodeKey","line":27,"kind":"instance","docLink":"./Lean/Meta/Tactic/Grind/ENodeKey.html#Lean.Meta.Grind.instBEqENodeKey","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/ENodeKey.html#Lean.Meta.Grind.instBEqENodeKey\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">instBEqENodeKey</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <a href=\"./Lean/Meta/Tactic/Grind/ENodeKey.html#Lean.Meta.Grind.ENodeKey\">ENodeKey</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/Grind/ENodeKey.lean#L24-L25","name":"Lean.Meta.Grind.instHashableENodeKey","line":24,"kind":"instance","docLink":"./Lean/Meta/Tactic/Grind/ENodeKey.html#Lean.Meta.Grind.instHashableENodeKey","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/ENodeKey.html#Lean.Meta.Grind.instHashableENodeKey\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">instHashableENodeKey</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <a href=\"./Lean/Meta/Tactic/Grind/ENodeKey.html#Lean.Meta.Grind.ENodeKey\">ENodeKey</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/Grind/ENodeKey.lean#L22-L22","name":"Lean.Meta.Grind.ENodeKey.expr","line":22,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/ENodeKey.html#Lean.Meta.Grind.ENodeKey.expr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/ENodeKey.html#Lean.Meta.Grind.ENodeKey.expr\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">ENodeKey</span>.<span class=\"name\">expr</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Meta/Tactic/Grind/ENodeKey.html#Lean.Meta.Grind.ENodeKey\">ENodeKey</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/Grind/ENodeKey.lean#L21-L21","name":"Lean.Meta.Grind.ENodeKey.mk","line":21,"kind":"ctor","docLink":"./Lean/Meta/Tactic/Grind/ENodeKey.html#Lean.Meta.Grind.ENodeKey.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/ENodeKey.html#Lean.Meta.Grind.ENodeKey.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">ENodeKey</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">expr</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Grind/ENodeKey.html#Lean.Meta.Grind.ENodeKey\">ENodeKey</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/Grind/ENodeKey.lean#L16-L22","name":"Lean.Meta.Grind.ENodeKey","line":16,"kind":"structure","docLink":"./Lean/Meta/Tactic/Grind/ENodeKey.html#Lean.Meta.Grind.ENodeKey","doc":"Key for the `ENodeMap` and `ParentMap` map.\nWe use pointer addresses and rely on the fact all internalized expressions\nhave been hash-consed, i.e., we have applied `shareCommon`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/ENodeKey.html#Lean.Meta.Grind.ENodeKey\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">ENodeKey</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/Grind/ENodeKey.lean#L11-L14","name":"Lean.Meta.Grind.isSameExpr","line":11,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/ENodeKey.html#Lean.Meta.Grind.isSameExpr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/ENodeKey.html#Lean.Meta.Grind.isSameExpr\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">isSameExpr</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"}]}