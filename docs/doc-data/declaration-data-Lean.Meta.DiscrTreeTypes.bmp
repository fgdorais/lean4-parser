{"name":"Lean.Meta.DiscrTreeTypes","instances":[{"typeNames":["Lean.Meta.DiscrTree.Key"],"name":"Lean.Meta.DiscrTree.instInhabitedKey","className":"Inhabited"},{"typeNames":["Lean.Meta.DiscrTree.Key"],"name":"Lean.Meta.DiscrTree.instBEqKey","className":"BEq"},{"typeNames":["Lean.Meta.DiscrTree.Key"],"name":"Lean.Meta.DiscrTree.instReprKey","className":"Repr"},{"typeNames":["Lean.Meta.DiscrTree.Key"],"name":"Lean.Meta.DiscrTree.instHashableKey","className":"Hashable"},{"typeNames":["Lean.Meta.DiscrTree.Key"],"name":"Lean.Meta.DiscrTree.instToExprKey","className":"Lean.ToExpr"}],"imports":["Lean.Expr","Lean.ToExpr"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/DiscrTreeTypes.lean#L96-L96","name":"Lean.Meta.DiscrTree.root","line":96,"kind":"def","docLink":"./Lean/Meta/DiscrTreeTypes.html#Lean.Meta.DiscrTree.root","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/DiscrTreeTypes.html#Lean.Meta.DiscrTree.root\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">DiscrTree</span>.<span class=\"name\">root</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Lean/Meta/DiscrTreeTypes.html#Lean.Meta.DiscrTree\">DiscrTree</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap\">PersistentHashMap</a> <a href=\"./Lean/Meta/DiscrTreeTypes.html#Lean.Meta.DiscrTree.Key\">Key</a> <span class=\"fn\">(<a href=\"./Lean/Meta/DiscrTreeTypes.html#Lean.Meta.DiscrTree.Trie\">Trie</a> <span class=\"fn\">α</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/DiscrTreeTypes.lean#L95-L95","name":"Lean.Meta.DiscrTree.mk","line":95,"kind":"ctor","docLink":"./Lean/Meta/DiscrTreeTypes.html#Lean.Meta.DiscrTree.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/DiscrTreeTypes.html#Lean.Meta.DiscrTree.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">DiscrTree</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">root</span> : <span class=\"fn\"><a href=\"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap\">PersistentHashMap</a> <a href=\"./Lean/Meta/DiscrTreeTypes.html#Lean.Meta.DiscrTree.Key\">Key</a> <span class=\"fn\">(<a href=\"./Lean/Meta/DiscrTreeTypes.html#Lean.Meta.DiscrTree.Trie\">Trie</a> <span class=\"fn\">α</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/DiscrTreeTypes.html#Lean.Meta.DiscrTree\">DiscrTree</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/DiscrTreeTypes.lean#L92-L96","name":"Lean.Meta.DiscrTree","line":92,"kind":"structure","docLink":"./Lean/Meta/DiscrTreeTypes.html#Lean.Meta.DiscrTree","doc":"Discrimination trees. It is an index from terms to values of type `α`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/DiscrTreeTypes.html#Lean.Meta.DiscrTree\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">DiscrTree</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/DiscrTreeTypes.lean#L54-L54","name":"Lean.Meta.DiscrTree.Trie.node","line":54,"kind":"ctor","docLink":"./Lean/Meta/DiscrTreeTypes.html#Lean.Meta.DiscrTree.Trie.node","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/DiscrTreeTypes.html#Lean.Meta.DiscrTree.Trie.node\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">DiscrTree</span>.<span class=\"name\">Trie</span>.<span class=\"name\">node</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">vs</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">children</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> (<a href=\"./Lean/Meta/DiscrTreeTypes.html#Lean.Meta.DiscrTree.Key\">Key</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Lean/Meta/DiscrTreeTypes.html#Lean.Meta.DiscrTree.Trie\">Trie</a> <span class=\"fn\">α</span></span>)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/DiscrTreeTypes.html#Lean.Meta.DiscrTree.Trie\">Trie</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/DiscrTreeTypes.lean#L50-L54","name":"Lean.Meta.DiscrTree.Trie","line":50,"kind":"inductive","docLink":"./Lean/Meta/DiscrTreeTypes.html#Lean.Meta.DiscrTree.Trie","doc":"Discrimination tree trie. See `DiscrTree`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/DiscrTreeTypes.html#Lean.Meta.DiscrTree.Trie\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">DiscrTree</span>.<span class=\"name\">Trie</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/DiscrTreeTypes.lean#L39-L48","name":"Lean.Meta.DiscrTree.instToExprKey","line":39,"kind":"instance","docLink":"./Lean/Meta/DiscrTreeTypes.html#Lean.Meta.DiscrTree.instToExprKey","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/DiscrTreeTypes.html#Lean.Meta.DiscrTree.instToExprKey\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">DiscrTree</span>.<span class=\"name\">instToExprKey</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">ToExpr</a> <a href=\"./Lean/Meta/DiscrTreeTypes.html#Lean.Meta.DiscrTree.Key\">Key</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/DiscrTreeTypes.lean#L37-L37","name":"Lean.Meta.DiscrTree.instHashableKey","line":37,"kind":"instance","docLink":"./Lean/Meta/DiscrTreeTypes.html#Lean.Meta.DiscrTree.instHashableKey","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/DiscrTreeTypes.html#Lean.Meta.DiscrTree.instHashableKey\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">DiscrTree</span>.<span class=\"name\">instHashableKey</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <a href=\"./Lean/Meta/DiscrTreeTypes.html#Lean.Meta.DiscrTree.Key\">Key</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/DiscrTreeTypes.lean#L28-L35","name":"Lean.Meta.DiscrTree.Key.hash","line":28,"kind":"def","docLink":"./Lean/Meta/DiscrTreeTypes.html#Lean.Meta.DiscrTree.Key.hash","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/DiscrTreeTypes.html#Lean.Meta.DiscrTree.Key.hash\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">DiscrTree</span>.<span class=\"name\">Key</span>.<span class=\"name\">hash</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/DiscrTreeTypes.html#Lean.Meta.DiscrTree.Key\">Key</a> → <a href=\"./Init/Prelude.html#UInt64\">UInt64</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/DiscrTreeTypes.lean#L26-L26","name":"Lean.Meta.DiscrTree.instReprKey","line":26,"kind":"instance","docLink":"./Lean/Meta/DiscrTreeTypes.html#Lean.Meta.DiscrTree.instReprKey","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/DiscrTreeTypes.html#Lean.Meta.DiscrTree.instReprKey\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">DiscrTree</span>.<span class=\"name\">instReprKey</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <a href=\"./Lean/Meta/DiscrTreeTypes.html#Lean.Meta.DiscrTree.Key\">Key</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/DiscrTreeTypes.lean#L26-L26","name":"Lean.Meta.DiscrTree.instBEqKey","line":26,"kind":"instance","docLink":"./Lean/Meta/DiscrTreeTypes.html#Lean.Meta.DiscrTree.instBEqKey","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/DiscrTreeTypes.html#Lean.Meta.DiscrTree.instBEqKey\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">DiscrTree</span>.<span class=\"name\">instBEqKey</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <a href=\"./Lean/Meta/DiscrTreeTypes.html#Lean.Meta.DiscrTree.Key\">Key</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/DiscrTreeTypes.lean#L26-L26","name":"Lean.Meta.DiscrTree.instInhabitedKey","line":26,"kind":"instance","docLink":"./Lean/Meta/DiscrTreeTypes.html#Lean.Meta.DiscrTree.instInhabitedKey","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/DiscrTreeTypes.html#Lean.Meta.DiscrTree.instInhabitedKey\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">DiscrTree</span>.<span class=\"name\">instInhabitedKey</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Meta/DiscrTreeTypes.html#Lean.Meta.DiscrTree.Key\">Key</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/DiscrTreeTypes.lean#L25-L25","name":"Lean.Meta.DiscrTree.Key.proj","line":25,"kind":"ctor","docLink":"./Lean/Meta/DiscrTreeTypes.html#Lean.Meta.DiscrTree.Key.proj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/DiscrTreeTypes.html#Lean.Meta.DiscrTree.Key.proj\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">DiscrTree</span>.<span class=\"name\">Key</span>.<span class=\"name\">proj</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.Name\">Name</a> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">Nat</a> → <a href=\"./Init/Prelude.html#Nat\">Nat</a> → <a href=\"./Lean/Meta/DiscrTreeTypes.html#Lean.Meta.DiscrTree.Key\">Key</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/DiscrTreeTypes.lean#L24-L24","name":"Lean.Meta.DiscrTree.Key.arrow","line":24,"kind":"ctor","docLink":"./Lean/Meta/DiscrTreeTypes.html#Lean.Meta.DiscrTree.Key.arrow","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/DiscrTreeTypes.html#Lean.Meta.DiscrTree.Key.arrow\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">DiscrTree</span>.<span class=\"name\">Key</span>.<span class=\"name\">arrow</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/DiscrTreeTypes.html#Lean.Meta.DiscrTree.Key\">Key</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/DiscrTreeTypes.lean#L23-L23","name":"Lean.Meta.DiscrTree.Key.other","line":23,"kind":"ctor","docLink":"./Lean/Meta/DiscrTreeTypes.html#Lean.Meta.DiscrTree.Key.other","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/DiscrTreeTypes.html#Lean.Meta.DiscrTree.Key.other\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">DiscrTree</span>.<span class=\"name\">Key</span>.<span class=\"name\">other</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/DiscrTreeTypes.html#Lean.Meta.DiscrTree.Key\">Key</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/DiscrTreeTypes.lean#L22-L22","name":"Lean.Meta.DiscrTree.Key.star","line":22,"kind":"ctor","docLink":"./Lean/Meta/DiscrTreeTypes.html#Lean.Meta.DiscrTree.Key.star","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/DiscrTreeTypes.html#Lean.Meta.DiscrTree.Key.star\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">DiscrTree</span>.<span class=\"name\">Key</span>.<span class=\"name\">star</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/DiscrTreeTypes.html#Lean.Meta.DiscrTree.Key\">Key</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/DiscrTreeTypes.lean#L21-L21","name":"Lean.Meta.DiscrTree.Key.lit","line":21,"kind":"ctor","docLink":"./Lean/Meta/DiscrTreeTypes.html#Lean.Meta.DiscrTree.Key.lit","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/DiscrTreeTypes.html#Lean.Meta.DiscrTree.Key.lit\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">DiscrTree</span>.<span class=\"name\">Key</span>.<span class=\"name\">lit</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Expr.html#Lean.Literal\">Literal</a> → <a href=\"./Lean/Meta/DiscrTreeTypes.html#Lean.Meta.DiscrTree.Key\">Key</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/DiscrTreeTypes.lean#L20-L20","name":"Lean.Meta.DiscrTree.Key.fvar","line":20,"kind":"ctor","docLink":"./Lean/Meta/DiscrTreeTypes.html#Lean.Meta.DiscrTree.Key.fvar","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/DiscrTreeTypes.html#Lean.Meta.DiscrTree.Key.fvar\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">DiscrTree</span>.<span class=\"name\">Key</span>.<span class=\"name\">fvar</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Expr.html#Lean.FVarId\">FVarId</a> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">Nat</a> → <a href=\"./Lean/Meta/DiscrTreeTypes.html#Lean.Meta.DiscrTree.Key\">Key</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/DiscrTreeTypes.lean#L19-L19","name":"Lean.Meta.DiscrTree.Key.const","line":19,"kind":"ctor","docLink":"./Lean/Meta/DiscrTreeTypes.html#Lean.Meta.DiscrTree.Key.const","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/DiscrTreeTypes.html#Lean.Meta.DiscrTree.Key.const\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">DiscrTree</span>.<span class=\"name\">Key</span>.<span class=\"name\">const</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.Name\">Name</a> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">Nat</a> → <a href=\"./Lean/Meta/DiscrTreeTypes.html#Lean.Meta.DiscrTree.Key\">Key</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/DiscrTreeTypes.lean#L15-L26","name":"Lean.Meta.DiscrTree.Key","line":15,"kind":"inductive","docLink":"./Lean/Meta/DiscrTreeTypes.html#Lean.Meta.DiscrTree.Key","doc":"Discrimination tree key. See `DiscrTree`\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/DiscrTreeTypes.html#Lean.Meta.DiscrTree.Key\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">DiscrTree</span>.<span class=\"name\">Key</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"}]}