{"name":"Std.Time.DateTime.PlainDateTime","instances":[{"typeNames":["Std.Time.PlainDateTime"],"name":"Std.Time.instInhabitedPlainDateTime","className":"Inhabited"},{"typeNames":["Eq"],"name":"Std.Time.instDecidableEqPlainDateTime","className":"Decidable"},{"typeNames":["Std.Time.PlainDateTime"],"name":"Std.Time.instReprPlainDateTime","className":"Repr"},{"typeNames":["Std.Time.PlainDateTime"],"name":"Std.Time.instOrdPlainDateTime","className":"Ord"},{"typeNames":["Std.Time.PlainDateTime"],"name":"Std.Time.instTransOrdPlainDateTime","className":"Std.TransCmp"},{"typeNames":["Std.Time.PlainDateTime"],"name":"Std.Time.instLawfulEqOrdPlainDateTime","className":"Std.LawfulEqCmp"},{"typeNames":["Std.Time.PlainDateTime","Std.Time.Day.Offset","Std.Time.PlainDateTime"],"name":"Std.Time.PlainDateTime.instHAddOffset","className":"HAdd"},{"typeNames":["Std.Time.PlainDateTime","Std.Time.Day.Offset","Std.Time.PlainDateTime"],"name":"Std.Time.PlainDateTime.instHSubOffset","className":"HSub"},{"typeNames":["Std.Time.PlainDateTime","Std.Time.Week.Offset","Std.Time.PlainDateTime"],"name":"Std.Time.PlainDateTime.instHAddOffset_1","className":"HAdd"},{"typeNames":["Std.Time.PlainDateTime","Std.Time.Week.Offset","Std.Time.PlainDateTime"],"name":"Std.Time.PlainDateTime.instHSubOffset_1","className":"HSub"},{"typeNames":["Std.Time.PlainDateTime","Std.Time.Hour.Offset","Std.Time.PlainDateTime"],"name":"Std.Time.PlainDateTime.instHAddOffset_2","className":"HAdd"},{"typeNames":["Std.Time.PlainDateTime","Std.Time.Hour.Offset","Std.Time.PlainDateTime"],"name":"Std.Time.PlainDateTime.instHSubOffset_2","className":"HSub"},{"typeNames":["Std.Time.PlainDateTime","Std.Time.Minute.Offset","Std.Time.PlainDateTime"],"name":"Std.Time.PlainDateTime.instHAddOffset_3","className":"HAdd"},{"typeNames":["Std.Time.PlainDateTime","Std.Time.Minute.Offset","Std.Time.PlainDateTime"],"name":"Std.Time.PlainDateTime.instHSubOffset_3","className":"HSub"},{"typeNames":["Std.Time.PlainDateTime","Std.Time.Millisecond.Offset","Std.Time.PlainDateTime"],"name":"Std.Time.PlainDateTime.instHAddOffset_4","className":"HAdd"},{"typeNames":["Std.Time.PlainDateTime","Std.Time.Millisecond.Offset","Std.Time.PlainDateTime"],"name":"Std.Time.PlainDateTime.instHSubOffset_4","className":"HSub"},{"typeNames":["Std.Time.PlainDateTime","Std.Time.Second.Offset","Std.Time.PlainDateTime"],"name":"Std.Time.PlainDateTime.instHAddOffset_5","className":"HAdd"},{"typeNames":["Std.Time.PlainDateTime","Std.Time.Second.Offset","Std.Time.PlainDateTime"],"name":"Std.Time.PlainDateTime.instHSubOffset_5","className":"HSub"},{"typeNames":["Std.Time.PlainDateTime","Std.Time.Nanosecond.Offset","Std.Time.PlainDateTime"],"name":"Std.Time.PlainDateTime.instHAddOffset_6","className":"HAdd"},{"typeNames":["Std.Time.PlainDateTime","Std.Time.Nanosecond.Offset","Std.Time.PlainDateTime"],"name":"Std.Time.PlainDateTime.instHSubOffset_6","className":"HSub"},{"typeNames":["Std.Time.PlainDateTime","Std.Time.Duration","Std.Time.PlainDateTime"],"name":"Std.Time.PlainDateTime.instHAddDuration","className":"HAdd"}],"imports":["Std.Time.Date","Std.Time.Time","Std.Time.Internal","Std.Time.DateTime.Timestamp"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/DateTime/PlainDateTime.lean#L589-L594","name":"Std.Time.PlainTime.atDate","line":589,"kind":"def","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainTime.atDate","doc":"Combines a `PlainTime` and `PlainDate` into a `PlainDateTime`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainTime.atDate\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainTime</span>.<span class=\"name\">atDate</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">time</span> : <a href=\"./Std/Time/Time/PlainTime.html#Std.Time.PlainTime\">PlainTime</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">date</span> : <a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">PlainDate</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/DateTime/PlainDateTime.lean#L579-L584","name":"Std.Time.PlainDate.atTime","line":579,"kind":"def","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDate.atTime","doc":"Combines a `PlainDate` and `PlainTime` into a `PlainDateTime`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDate.atTime\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDate</span>.<span class=\"name\">atTime</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">PlainDate</a> → <span class=\"fn\"><a href=\"./Std/Time/Time/PlainTime.html#Std.Time.PlainTime\">PlainTime</a> → <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/DateTime/PlainDateTime.lean#L573-L574","name":"Std.Time.PlainDateTime.instHAddDuration","line":573,"kind":"instance","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.instHAddDuration","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.instHAddDuration\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">instHAddDuration</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#HAdd\">HAdd</a> <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a> <a href=\"./Std/Time/Duration.html#Std.Time.Duration\">Duration</a> <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/DateTime/PlainDateTime.lean#L570-L571","name":"Std.Time.PlainDateTime.instHSubOffset_6","line":570,"kind":"instance","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.instHSubOffset_6","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.instHSubOffset_6\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">instHSubOffset_6</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#HSub\">HSub</a> <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a> <a href=\"./Std/Time/Time/Unit/Nanosecond.html#Std.Time.Nanosecond.Offset\">Nanosecond.Offset</a> <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/DateTime/PlainDateTime.lean#L567-L568","name":"Std.Time.PlainDateTime.instHAddOffset_6","line":567,"kind":"instance","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.instHAddOffset_6","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.instHAddOffset_6\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">instHAddOffset_6</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#HAdd\">HAdd</a> <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a> <a href=\"./Std/Time/Time/Unit/Nanosecond.html#Std.Time.Nanosecond.Offset\">Nanosecond.Offset</a> <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/DateTime/PlainDateTime.lean#L564-L565","name":"Std.Time.PlainDateTime.instHSubOffset_5","line":564,"kind":"instance","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.instHSubOffset_5","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.instHSubOffset_5\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">instHSubOffset_5</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#HSub\">HSub</a> <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a> <a href=\"./Std/Time/Time/Unit/Second.html#Std.Time.Second.Offset\">Second.Offset</a> <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/DateTime/PlainDateTime.lean#L561-L562","name":"Std.Time.PlainDateTime.instHAddOffset_5","line":561,"kind":"instance","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.instHAddOffset_5","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.instHAddOffset_5\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">instHAddOffset_5</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#HAdd\">HAdd</a> <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a> <a href=\"./Std/Time/Time/Unit/Second.html#Std.Time.Second.Offset\">Second.Offset</a> <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/DateTime/PlainDateTime.lean#L558-L559","name":"Std.Time.PlainDateTime.instHSubOffset_4","line":558,"kind":"instance","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.instHSubOffset_4","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.instHSubOffset_4\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">instHSubOffset_4</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#HSub\">HSub</a> <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a> <a href=\"./Std/Time/Time/Unit/Millisecond.html#Std.Time.Millisecond.Offset\">Millisecond.Offset</a> <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/DateTime/PlainDateTime.lean#L555-L556","name":"Std.Time.PlainDateTime.instHAddOffset_4","line":555,"kind":"instance","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.instHAddOffset_4","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.instHAddOffset_4\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">instHAddOffset_4</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#HAdd\">HAdd</a> <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a> <a href=\"./Std/Time/Time/Unit/Millisecond.html#Std.Time.Millisecond.Offset\">Millisecond.Offset</a> <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/DateTime/PlainDateTime.lean#L552-L553","name":"Std.Time.PlainDateTime.instHSubOffset_3","line":552,"kind":"instance","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.instHSubOffset_3","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.instHSubOffset_3\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">instHSubOffset_3</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#HSub\">HSub</a> <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a> <a href=\"./Std/Time/Time/Unit/Minute.html#Std.Time.Minute.Offset\">Minute.Offset</a> <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/DateTime/PlainDateTime.lean#L549-L550","name":"Std.Time.PlainDateTime.instHAddOffset_3","line":549,"kind":"instance","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.instHAddOffset_3","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.instHAddOffset_3\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">instHAddOffset_3</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#HAdd\">HAdd</a> <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a> <a href=\"./Std/Time/Time/Unit/Minute.html#Std.Time.Minute.Offset\">Minute.Offset</a> <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/DateTime/PlainDateTime.lean#L546-L547","name":"Std.Time.PlainDateTime.instHSubOffset_2","line":546,"kind":"instance","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.instHSubOffset_2","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.instHSubOffset_2\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">instHSubOffset_2</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#HSub\">HSub</a> <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a> <a href=\"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.Offset\">Hour.Offset</a> <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/DateTime/PlainDateTime.lean#L543-L544","name":"Std.Time.PlainDateTime.instHAddOffset_2","line":543,"kind":"instance","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.instHAddOffset_2","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.instHAddOffset_2\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">instHAddOffset_2</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#HAdd\">HAdd</a> <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a> <a href=\"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.Offset\">Hour.Offset</a> <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/DateTime/PlainDateTime.lean#L540-L541","name":"Std.Time.PlainDateTime.instHSubOffset_1","line":540,"kind":"instance","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.instHSubOffset_1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.instHSubOffset_1\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">instHSubOffset_1</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#HSub\">HSub</a> <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a> <a href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Offset\">Week.Offset</a> <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/DateTime/PlainDateTime.lean#L537-L538","name":"Std.Time.PlainDateTime.instHAddOffset_1","line":537,"kind":"instance","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.instHAddOffset_1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.instHAddOffset_1\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">instHAddOffset_1</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#HAdd\">HAdd</a> <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a> <a href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Offset\">Week.Offset</a> <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/DateTime/PlainDateTime.lean#L534-L535","name":"Std.Time.PlainDateTime.instHSubOffset","line":534,"kind":"instance","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.instHSubOffset","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.instHSubOffset\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">instHSubOffset</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#HSub\">HSub</a> <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a> <a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset\">Day.Offset</a> <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/DateTime/PlainDateTime.lean#L531-L532","name":"Std.Time.PlainDateTime.instHAddOffset","line":531,"kind":"instance","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.instHAddOffset","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.instHAddOffset\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">instHAddOffset</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#HAdd\">HAdd</a> <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a> <a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset\">Day.Offset</a> <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/DateTime/PlainDateTime.lean#L524-L529","name":"Std.Time.PlainDateTime.atDate","line":524,"kind":"def","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.atDate","doc":"Combines a `PlainTime` and `PlainDate` into a `PlainDateTime`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.atDate\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">atDate</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">time</span> : <a href=\"./Std/Time/Time/PlainTime.html#Std.Time.PlainTime\">PlainTime</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">date</span> : <a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">PlainDate</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/DateTime/PlainDateTime.lean#L517-L522","name":"Std.Time.PlainDateTime.atTime","line":517,"kind":"def","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.atTime","doc":"Combines a `PlainDate` and `PlainTime` into a `PlainDateTime`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.atTime\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">atTime</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">PlainDate</a> → <span class=\"fn\"><a href=\"./Std/Time/Time/PlainTime.html#Std.Time.PlainTime\">PlainTime</a> → <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/DateTime/PlainDateTime.lean#L510-L515","name":"Std.Time.PlainDateTime.quarter","line":510,"kind":"def","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.quarter","doc":"Determines the quarter of the year for the given `PlainDateTime`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.quarter\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">quarter</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">date</span> : <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Time/Internal/Bounded.html#Std.Time.Internal.Bounded.LE\">Internal.Bounded.LE</a> <span class=\"fn\">1</span> <span class=\"fn\">4</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/DateTime/PlainDateTime.lean#L503-L508","name":"Std.Time.PlainDateTime.dayOfYear","line":503,"kind":"def","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.dayOfYear","doc":"Transforms a tuple of a `PlainDateTime` into a `Day.Ordinal.OfYear`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.dayOfYear\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">dayOfYear</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">date</span> : <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal.OfYear\">Day.Ordinal.OfYear</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">date</span>.<a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.year\">year</a></span>.<a href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Offset.isLeap\">isLeap</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/DateTime/PlainDateTime.lean#L494-L501","name":"Std.Time.PlainDateTime.alignedWeekOfMonth","line":494,"kind":"def","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.alignedWeekOfMonth","doc":"Determines the week of the month for the given `PlainDateTime`. The week of the month is calculated based\non the day of the month and the weekday. Each week starts on Monday because the entire library is\nbased on the Gregorian Calendar.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.alignedWeekOfMonth\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">alignedWeekOfMonth</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">date</span> : <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Ordinal.OfMonth\">Week.Ordinal.OfMonth</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/DateTime/PlainDateTime.lean#L488-L492","name":"Std.Time.PlainDateTime.weekOfMonth","line":488,"kind":"def","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.weekOfMonth","doc":"Returns the unaligned week of the month for a `PlainDateTime` (day divided by 7, plus 1).\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.weekOfMonth\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">weekOfMonth</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">date</span> : <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Time/Internal/Bounded.html#Std.Time.Internal.Bounded.LE\">Internal.Bounded.LE</a> <span class=\"fn\">1</span> <span class=\"fn\">5</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/DateTime/PlainDateTime.lean#L481-L486","name":"Std.Time.PlainDateTime.weekOfYear","line":481,"kind":"def","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.weekOfYear","doc":"Determines the week of the year for the given `PlainDateTime`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.weekOfYear\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">weekOfYear</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">date</span> : <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Ordinal\">Week.Ordinal</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/DateTime/PlainDateTime.lean#L474-L479","name":"Std.Time.PlainDateTime.inLeapYear","line":474,"kind":"def","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.inLeapYear","doc":"Checks if the `PlainDateTime` is in a leap year.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.inLeapYear\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">inLeapYear</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">date</span> : <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/DateTime/PlainDateTime.lean#L467-L472","name":"Std.Time.PlainDateTime.era","line":467,"kind":"def","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.era","doc":"Determines the era of the given `PlainDateTime` based on its year.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.era\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">era</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">date</span> : <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Era\">Year.Era</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/DateTime/PlainDateTime.lean#L460-L465","name":"Std.Time.PlainDateTime.nanosecond","line":460,"kind":"def","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.nanosecond","doc":"Getter for the `Nanosecond.Ordinal` inside of a `PlainDateTime`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.nanosecond\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">nanosecond</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">dt</span> : <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Time/Unit/Nanosecond.html#Std.Time.Nanosecond.Ordinal\">Nanosecond.Ordinal</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/DateTime/PlainDateTime.lean#L453-L458","name":"Std.Time.PlainDateTime.second","line":453,"kind":"def","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.second","doc":"Getter for the `Second` inside of a `PlainDateTime`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.second\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">second</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">dt</span> : <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Time/Time/Unit/Second.html#Std.Time.Second.Ordinal\">Second.Ordinal</a> <a href=\"./Init/Prelude.html#Bool.true\">true</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/DateTime/PlainDateTime.lean#L446-L451","name":"Std.Time.PlainDateTime.millisecond","line":446,"kind":"def","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.millisecond","doc":"Getter for the `Millisecond` inside of a `PlainDateTime`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.millisecond\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">millisecond</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">dt</span> : <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Time/Unit/Millisecond.html#Std.Time.Millisecond.Ordinal\">Millisecond.Ordinal</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/DateTime/PlainDateTime.lean#L439-L444","name":"Std.Time.PlainDateTime.minute","line":439,"kind":"def","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.minute","doc":"Getter for the `Minute` inside of a `PlainDateTime`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.minute\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">minute</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">dt</span> : <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Time/Unit/Minute.html#Std.Time.Minute.Ordinal\">Minute.Ordinal</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/DateTime/PlainDateTime.lean#L432-L437","name":"Std.Time.PlainDateTime.hour","line":432,"kind":"def","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.hour","doc":"Getter for the `Hour` inside of a `PlainDateTime`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.hour\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">hour</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">dt</span> : <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.Ordinal\">Hour.Ordinal</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/DateTime/PlainDateTime.lean#L425-L430","name":"Std.Time.PlainDateTime.weekday","line":425,"kind":"def","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.weekday","doc":"Getter for the `Weekday` inside of a `PlainDateTime`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.weekday\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">weekday</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">dt</span> : <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Weekday.html#Std.Time.Weekday\">Weekday</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/DateTime/PlainDateTime.lean#L418-L423","name":"Std.Time.PlainDateTime.day","line":418,"kind":"def","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.day","doc":"Getter for the `Day` inside of a `PlainDateTime`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.day\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">day</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">dt</span> : <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal\">Day.Ordinal</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/DateTime/PlainDateTime.lean#L411-L416","name":"Std.Time.PlainDateTime.month","line":411,"kind":"def","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.month","doc":"Getter for the `Month` inside of a `PlainDateTime`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.month\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">month</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">dt</span> : <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Ordinal\">Month.Ordinal</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/DateTime/PlainDateTime.lean#L404-L409","name":"Std.Time.PlainDateTime.year","line":404,"kind":"def","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.year","doc":"Getter for the `Year` inside of a `PlainDateTime`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.year\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">year</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">dt</span> : <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Offset\">Year.Offset</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/DateTime/PlainDateTime.lean#L397-L402","name":"Std.Time.PlainDateTime.subMilliseconds","line":397,"kind":"def","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.subMilliseconds","doc":"Subtracts a `Millisecond.Offset` from a `PlainDateTime`, adjusting the second, minute, hour, and date if the milliseconds underflow.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.subMilliseconds\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">subMilliseconds</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">dt</span> : <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">milliseconds</span> : <a href=\"./Std/Time/Time/Unit/Millisecond.html#Std.Time.Millisecond.Offset\">Millisecond.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/DateTime/PlainDateTime.lean#L390-L395","name":"Std.Time.PlainDateTime.addMilliseconds","line":390,"kind":"def","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.addMilliseconds","doc":"Adds a `Millisecond.Offset` to a `PlainDateTime`, adjusting the second, minute, hour, and date if the milliseconds overflow.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.addMilliseconds\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">addMilliseconds</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">dt</span> : <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">milliseconds</span> : <a href=\"./Std/Time/Time/Unit/Millisecond.html#Std.Time.Millisecond.Offset\">Millisecond.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/DateTime/PlainDateTime.lean#L383-L388","name":"Std.Time.PlainDateTime.subSeconds","line":383,"kind":"def","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.subSeconds","doc":"Subtracts a `Second.Offset` from a `PlainDateTime`, adjusting the minute, hour, and date if the seconds underflow.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.subSeconds\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">subSeconds</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">dt</span> : <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">seconds</span> : <a href=\"./Std/Time/Time/Unit/Second.html#Std.Time.Second.Offset\">Second.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/DateTime/PlainDateTime.lean#L376-L381","name":"Std.Time.PlainDateTime.addSeconds","line":376,"kind":"def","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.addSeconds","doc":"Adds a `Second.Offset` to a `PlainDateTime`, adjusting the minute, hour, and date if the seconds overflow.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.addSeconds\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">addSeconds</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">dt</span> : <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">seconds</span> : <a href=\"./Std/Time/Time/Unit/Second.html#Std.Time.Second.Offset\">Second.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/DateTime/PlainDateTime.lean#L369-L374","name":"Std.Time.PlainDateTime.subMinutes","line":369,"kind":"def","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.subMinutes","doc":"Subtracts a `Minute.Offset` from a `PlainDateTime`, adjusting the hour and date if the minutes underflow.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.subMinutes\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">subMinutes</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">dt</span> : <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">minutes</span> : <a href=\"./Std/Time/Time/Unit/Minute.html#Std.Time.Minute.Offset\">Minute.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/DateTime/PlainDateTime.lean#L362-L367","name":"Std.Time.PlainDateTime.addMinutes","line":362,"kind":"def","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.addMinutes","doc":"Adds a `Minute.Offset` to a `PlainDateTime`, adjusting the hour and date if the minutes overflow.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.addMinutes\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">addMinutes</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">dt</span> : <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">minutes</span> : <a href=\"./Std/Time/Time/Unit/Minute.html#Std.Time.Minute.Offset\">Minute.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/DateTime/PlainDateTime.lean#L355-L360","name":"Std.Time.PlainDateTime.subHours","line":355,"kind":"def","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.subHours","doc":"Subtracts an `Hour.Offset` from a `PlainDateTime`, adjusting the date if the hour underflows.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.subHours\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">subHours</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">dt</span> : <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hours</span> : <a href=\"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.Offset\">Hour.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/DateTime/PlainDateTime.lean#L348-L353","name":"Std.Time.PlainDateTime.addHours","line":348,"kind":"def","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.addHours","doc":"Adds an `Hour.Offset` to a `PlainDateTime`, adjusting the date if the hour overflows.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.addHours\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">addHours</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">dt</span> : <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hours</span> : <a href=\"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.Offset\">Hour.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/DateTime/PlainDateTime.lean#L341-L346","name":"Std.Time.PlainDateTime.subNanoseconds","line":341,"kind":"def","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.subNanoseconds","doc":"Subtracts a `Nanosecond.Offset` from a `PlainDateTime`, adjusting the seconds, minutes, hours, and date if the nanoseconds underflow.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.subNanoseconds\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">subNanoseconds</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">dt</span> : <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">nanos</span> : <a href=\"./Std/Time/Time/Unit/Nanosecond.html#Std.Time.Nanosecond.Offset\">Nanosecond.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/DateTime/PlainDateTime.lean#L334-L339","name":"Std.Time.PlainDateTime.addNanoseconds","line":334,"kind":"def","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.addNanoseconds","doc":"Adds a `Nanosecond.Offset` to a `PlainDateTime`, adjusting the seconds, minutes, hours, and date if the nanoseconds overflow.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.addNanoseconds\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">addNanoseconds</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">dt</span> : <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">nanos</span> : <a href=\"./Std/Time/Time/Unit/Nanosecond.html#Std.Time.Nanosecond.Offset\">Nanosecond.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/DateTime/PlainDateTime.lean#L326-L332","name":"Std.Time.PlainDateTime.subYearsClip","line":326,"kind":"def","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.subYearsClip","doc":"Subtracts a `Year.Offset` from a `PlainDateTime`, adjusting the day to the last valid day of the\nresulting month.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.subYearsClip\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">subYearsClip</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">dt</span> : <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">years</span> : <a href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Offset\">Year.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/DateTime/PlainDateTime.lean#L318-L324","name":"Std.Time.PlainDateTime.subYearsRollOver","line":318,"kind":"def","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.subYearsRollOver","doc":"Subtracts a `Year.Offset` from a `PlainDateTime`, this function rolls over any excess days into the\nfollowing month.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.subYearsRollOver\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">subYearsRollOver</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">dt</span> : <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">years</span> : <a href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Offset\">Year.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/DateTime/PlainDateTime.lean#L310-L316","name":"Std.Time.PlainDateTime.addYearsClip","line":310,"kind":"def","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.addYearsClip","doc":"Subtracts a `Month.Offset` from a `PlainDateTime`, rolling over excess days to the following month if\nneeded.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.addYearsClip\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">addYearsClip</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">dt</span> : <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">years</span> : <a href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Offset\">Year.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/DateTime/PlainDateTime.lean#L303-L308","name":"Std.Time.PlainDateTime.addYearsRollOver","line":303,"kind":"def","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.addYearsRollOver","doc":"Adds a `Month.Offset` to a `PlainDateTime`, rolling over excess days to the following month if needed.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.addYearsRollOver\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">addYearsRollOver</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">dt</span> : <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">years</span> : <a href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Offset\">Year.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/DateTime/PlainDateTime.lean#L295-L301","name":"Std.Time.PlainDateTime.subMonthsRollOver","line":295,"kind":"def","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.subMonthsRollOver","doc":"Subtracts a `Month.Offset` from a `PlainDateTime`, adjusting the day to the last valid day of the\nresulting month.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.subMonthsRollOver\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">subMonthsRollOver</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">dt</span> : <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">months</span> : <a href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Offset\">Month.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/DateTime/PlainDateTime.lean#L289-L293","name":"Std.Time.PlainDateTime.addMonthsRollOver","line":289,"kind":"def","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.addMonthsRollOver","doc":"Adds a `Month.Offset` to a `PlainDateTime`, rolling over excess days to the following month if needed.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.addMonthsRollOver\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">addMonthsRollOver</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">dt</span> : <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">months</span> : <a href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Offset\">Month.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/DateTime/PlainDateTime.lean#L282-L287","name":"Std.Time.PlainDateTime.subMonthsClip","line":282,"kind":"def","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.subMonthsClip","doc":"Subtracts `Month.Offset` from a `PlainDateTime`, it clips the day to the last valid day of that month.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.subMonthsClip\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">subMonthsClip</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">dt</span> : <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">months</span> : <a href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Offset\">Month.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/DateTime/PlainDateTime.lean#L275-L280","name":"Std.Time.PlainDateTime.addMonthsClip","line":275,"kind":"def","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.addMonthsClip","doc":"Adds a `Month.Offset` to a `PlainDateTime`, adjusting the day to the last valid day of the resulting\nmonth.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.addMonthsClip\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">addMonthsClip</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">dt</span> : <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">months</span> : <a href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Offset\">Month.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/DateTime/PlainDateTime.lean#L268-L273","name":"Std.Time.PlainDateTime.subWeeks","line":268,"kind":"def","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.subWeeks","doc":"Subtracts a `Week.Offset` from a `PlainDateTime`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.subWeeks\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">subWeeks</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">dt</span> : <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">weeks</span> : <a href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Offset\">Week.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/DateTime/PlainDateTime.lean#L261-L266","name":"Std.Time.PlainDateTime.addWeeks","line":261,"kind":"def","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.addWeeks","doc":"Adds a `Week.Offset` to a `PlainDateTime`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.addWeeks\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">addWeeks</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">dt</span> : <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">weeks</span> : <a href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Offset\">Week.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/DateTime/PlainDateTime.lean#L254-L259","name":"Std.Time.PlainDateTime.subDays","line":254,"kind":"def","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.subDays","doc":"Subtracts a `Day.Offset` from a `PlainDateTime`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.subDays\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">subDays</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">dt</span> : <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">days</span> : <a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset\">Day.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/DateTime/PlainDateTime.lean#L247-L252","name":"Std.Time.PlainDateTime.addDays","line":247,"kind":"def","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.addDays","doc":"Adds a `Day.Offset` to a `PlainDateTime`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.addDays\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">addDays</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">dt</span> : <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">days</span> : <a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset\">Day.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/DateTime/PlainDateTime.lean#L240-L245","name":"Std.Time.PlainDateTime.withNanoseconds","line":240,"kind":"def","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.withNanoseconds","doc":"Creates a new `PlainDateTime` by adjusting the `nano` component of its `time` to the given value.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.withNanoseconds\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">withNanoseconds</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">dt</span> : <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">nano</span> : <a href=\"./Std/Time/Time/Unit/Nanosecond.html#Std.Time.Nanosecond.Ordinal\">Nanosecond.Ordinal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/DateTime/PlainDateTime.lean#L233-L238","name":"Std.Time.PlainDateTime.withMilliseconds","line":233,"kind":"def","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.withMilliseconds","doc":"Creates a new `PlainDateTime` by adjusting the milliseconds component inside the `nano` component of its `time` to the given value.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.withMilliseconds\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">withMilliseconds</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">dt</span> : <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">millis</span> : <a href=\"./Std/Time/Time/Unit/Millisecond.html#Std.Time.Millisecond.Ordinal\">Millisecond.Ordinal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/DateTime/PlainDateTime.lean#L226-L231","name":"Std.Time.PlainDateTime.withSeconds","line":226,"kind":"def","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.withSeconds","doc":"Creates a new `PlainDateTime` by adjusting the `second` component of its `time` to the given value.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.withSeconds\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">withSeconds</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">dt</span> : <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">second</span> : <span class=\"fn\"><a href=\"./Std/Time/Time/Unit/Second.html#Std.Time.Second.Ordinal\">Second.Ordinal</a> <a href=\"./Init/Prelude.html#Bool.true\">true</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/DateTime/PlainDateTime.lean#L219-L224","name":"Std.Time.PlainDateTime.withMinutes","line":219,"kind":"def","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.withMinutes","doc":"Creates a new `PlainDateTime` by adjusting the `minute` component of its `time` to the given value.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.withMinutes\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">withMinutes</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">dt</span> : <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">minute</span> : <a href=\"./Std/Time/Time/Unit/Minute.html#Std.Time.Minute.Ordinal\">Minute.Ordinal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/DateTime/PlainDateTime.lean#L212-L217","name":"Std.Time.PlainDateTime.withHours","line":212,"kind":"def","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.withHours","doc":"Creates a new `PlainDateTime` by adjusting the `hour` component of its `time` to the given value.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.withHours\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">withHours</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">dt</span> : <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hour</span> : <a href=\"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.Ordinal\">Hour.Ordinal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/DateTime/PlainDateTime.lean#L204-L210","name":"Std.Time.PlainDateTime.withYearRollOver","line":204,"kind":"def","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.withYearRollOver","doc":"Creates a new `PlainDateTime` by adjusting the year to the given `year` value. The month and day are rolled\nover to the next valid month and day if necessary.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.withYearRollOver\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">withYearRollOver</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">dt</span> : <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">year</span> : <a href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Offset\">Year.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/DateTime/PlainDateTime.lean#L196-L202","name":"Std.Time.PlainDateTime.withYearClip","line":196,"kind":"def","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.withYearClip","doc":"Creates a new `PlainDateTime` by adjusting the year to the given `year` value. The month and day\nremain unchanged, with any out-of-range days clipped to the nearest valid date.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.withYearClip\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">withYearClip</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">dt</span> : <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">year</span> : <a href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Offset\">Year.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/DateTime/PlainDateTime.lean#L188-L194","name":"Std.Time.PlainDateTime.withMonthRollOver","line":188,"kind":"def","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.withMonthRollOver","doc":"Creates a new `PlainDateTime` by adjusting the month to the given `month` value.\nThe day is rolled over to the next valid month if necessary.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.withMonthRollOver\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">withMonthRollOver</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">dt</span> : <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">month</span> : <a href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Ordinal\">Month.Ordinal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/DateTime/PlainDateTime.lean#L180-L186","name":"Std.Time.PlainDateTime.withMonthClip","line":180,"kind":"def","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.withMonthClip","doc":"Creates a new `PlainDateTime` by adjusting the month to the given `month` value, with any\nout-of-range days clipped to the nearest valid date.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.withMonthClip\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">withMonthClip</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">dt</span> : <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">month</span> : <a href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Ordinal\">Month.Ordinal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/DateTime/PlainDateTime.lean#L172-L178","name":"Std.Time.PlainDateTime.withDaysRollOver","line":172,"kind":"def","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.withDaysRollOver","doc":"Creates a new `PlainDateTime` by adjusting the day of the month to the given `days` value, with any\nout-of-range days rolled over to the next month or year as needed.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.withDaysRollOver\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">withDaysRollOver</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">dt</span> : <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">days</span> : <a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal\">Day.Ordinal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/DateTime/PlainDateTime.lean#L164-L170","name":"Std.Time.PlainDateTime.withDaysClip","line":164,"kind":"def","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.withDaysClip","doc":"Creates a new `PlainDateTime` by adjusting the day of the month to the given `days` value, with any\nout-of-range days clipped to the nearest valid date.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.withDaysClip\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">withDaysClip</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">dt</span> : <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">days</span> : <a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal\">Day.Ordinal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/DateTime/PlainDateTime.lean#L158-L162","name":"Std.Time.PlainDateTime.withWeekday","line":158,"kind":"def","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.withWeekday","doc":"Sets the `PlainDateTime` to the specified `desiredWeekday`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.withWeekday\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">withWeekday</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">dt</span> : <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">desiredWeekday</span> : <a href=\"./Std/Time/Date/Unit/Weekday.html#Std.Time.Weekday\">Weekday</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/DateTime/PlainDateTime.lean#L151-L156","name":"Std.Time.PlainDateTime.ofDaysSinceUNIXEpoch","line":151,"kind":"def","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.ofDaysSinceUNIXEpoch","doc":"Converts a `PlainDateTime` to the number of days since the UNIX epoch.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.ofDaysSinceUNIXEpoch\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">ofDaysSinceUNIXEpoch</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">days</span> : <a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset\">Day.Offset</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">time</span> : <a href=\"./Std/Time/Time/PlainTime.html#Std.Time.PlainTime\">PlainTime</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/DateTime/PlainDateTime.lean#L144-L149","name":"Std.Time.PlainDateTime.toDaysSinceUNIXEpoch","line":144,"kind":"def","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.toDaysSinceUNIXEpoch","doc":"Converts a `PlainDateTime` to the number of days since the UNIX epoch.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.toDaysSinceUNIXEpoch\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">toDaysSinceUNIXEpoch</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pdt</span> : <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset\">Day.Offset</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/DateTime/PlainDateTime.lean#L61-L142","name":"Std.Time.PlainDateTime.ofTimestampAssumingUTC","line":61,"kind":"def","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.ofTimestampAssumingUTC","doc":"Converts a `Timestamp` to a `PlainDateTime`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.ofTimestampAssumingUTC\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">ofTimestampAssumingUTC</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">stamp</span> : <a href=\"./Std/Time/DateTime/Timestamp.html#Std.Time.Timestamp\">Timestamp</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/DateTime/PlainDateTime.lean#L52-L59","name":"Std.Time.PlainDateTime.toTimestampAssumingUTC","line":52,"kind":"def","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.toTimestampAssumingUTC","doc":"Converts a `PlainDateTime` to a `Timestamp`\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.toTimestampAssumingUTC\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">toTimestampAssumingUTC</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">dt</span> : <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/DateTime/Timestamp.html#Std.Time.Timestamp\">Timestamp</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/DateTime/PlainDateTime.lean#L43-L48","name":"Std.Time.instLawfulEqOrdPlainDateTime","line":43,"kind":"instance","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.instLawfulEqOrdPlainDateTime","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.instLawfulEqOrdPlainDateTime\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">instLawfulEqOrdPlainDateTime</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Classes/Ord.html#Std.LawfulEqOrd\">LawfulEqOrd</a> <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/DateTime/PlainDateTime.lean#L41-L41","name":"Std.Time.instTransOrdPlainDateTime","line":41,"kind":"instance","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.instTransOrdPlainDateTime","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.instTransOrdPlainDateTime\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">instTransOrdPlainDateTime</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Classes/Ord.html#Std.TransOrd\">TransOrd</a> <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/DateTime/PlainDateTime.lean#L38-L39","name":"Std.Time.PlainDateTime.compare_def","line":38,"kind":"theorem","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.compare_def","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.compare_def\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">compare_def</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Ord.html#Ord.compare\">compare</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/Ord.html#compareLex\">compareLex</a> <span class=\"fn\">(<a href=\"./Init/Data/Ord.html#compareOn\">compareOn</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.date\">date</a></span></span>)</span> <span class=\"fn\">(<a href=\"./Init/Data/Ord.html#compareOn\">compareOn</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.time\">time</a></span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/DateTime/PlainDateTime.lean#L35-L36","name":"Std.Time.instOrdPlainDateTime","line":35,"kind":"instance","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.instOrdPlainDateTime","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.instOrdPlainDateTime\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">instOrdPlainDateTime</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Ord.html#Ord\">Ord</a> <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/DateTime/PlainDateTime.lean#L33-L33","name":"Std.Time.instReprPlainDateTime","line":33,"kind":"instance","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.instReprPlainDateTime","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.instReprPlainDateTime\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">instReprPlainDateTime</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/DateTime/PlainDateTime.lean#L33-L33","name":"Std.Time.instDecidableEqPlainDateTime","line":33,"kind":"instance","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.instDecidableEqPlainDateTime","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.instDecidableEqPlainDateTime\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">instDecidableEqPlainDateTime</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/DateTime/PlainDateTime.lean#L33-L33","name":"Std.Time.instInhabitedPlainDateTime","line":33,"kind":"instance","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.instInhabitedPlainDateTime","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.instInhabitedPlainDateTime\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">instInhabitedPlainDateTime</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/DateTime/PlainDateTime.lean#L32-L32","name":"Std.Time.PlainDateTime.time","line":32,"kind":"def","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.time","doc":"The `Time` component of a `PlainTime`\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.time\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">time</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Time/PlainTime.html#Std.Time.PlainTime\">PlainTime</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/DateTime/PlainDateTime.lean#L27-L27","name":"Std.Time.PlainDateTime.date","line":27,"kind":"def","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.date","doc":"The `Date` component of a `PlainDate`\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.date\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">date</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">PlainDate</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/DateTime/PlainDateTime.lean#L22-L22","name":"Std.Time.PlainDateTime.mk","line":22,"kind":"ctor","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.mk\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">date</span> : <a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">PlainDate</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">time</span> : <a href=\"./Std/Time/Time/PlainTime.html#Std.Time.PlainTime\">PlainTime</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/DateTime/PlainDateTime.lean#L21-L21","name":"Std.Time.PlainDateTime.ext","line":21,"kind":"theorem","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.ext\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">date</span> : <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.date\">date</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.date\">date</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">time</span> : <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.time\">time</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.time\">time</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/DateTime/PlainDateTime.lean#L21-L21","name":"Std.Time.PlainDateTime.ext_iff","line":21,"kind":"theorem","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.ext_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.ext_iff\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">ext_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">PlainDateTime</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.date\">date</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.date\">date</a></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.time\">time</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.time\">time</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/DateTime/PlainDateTime.lean#L18-L33","name":"Std.Time.PlainDateTime","line":18,"kind":"structure","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime","doc":"Represents a date and time with components for Year, Month, Day, Hour, Minute, Second, and Nanosecond.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"}]}