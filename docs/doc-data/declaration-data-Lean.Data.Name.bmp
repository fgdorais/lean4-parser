{"name":"Lean.Data.Name","instances":[],"imports":["Init.Data.Ord"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Data/Name.lean#L173-L186","name":"Lean.Name.anyS","line":173,"kind":"def","docLink":"./Lean/Data/Name.html#Lean.Name.anyS","doc":"Return `true` if `n` contains a string part `s` that satisfies `f`.\n\nExamples:\n```\n#eval (`foo.bla).anyS (·.startsWith \"fo\") -- true\n#eval (`foo.bla).anyS (·.startsWith \"boo\") -- false\n```\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/Name.html#Lean.Name.anyS\"><span class=\"name\">Lean</span>.<span class=\"name\">Name</span>.<span class=\"name\">anyS</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#String\">String</a> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Data/Name.lean#L169-L171","name":"Lean.Name.isNum","line":169,"kind":"def","docLink":"./Lean/Data/Name.html#Lean.Name.isNum","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/Name.html#Lean.Name.isNum\"><span class=\"name\">Lean</span>.<span class=\"name\">Name</span>.<span class=\"name\">isNum</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.Name\">Name</a> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Data/Name.lean#L165-L167","name":"Lean.Name.isStr","line":165,"kind":"def","docLink":"./Lean/Data/Name.html#Lean.Name.isStr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/Name.html#Lean.Name.isStr\"><span class=\"name\">Lean</span>.<span class=\"name\">Name</span>.<span class=\"name\">isStr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.Name\">Name</a> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Data/Name.lean#L161-L163","name":"Lean.Name.isAnonymous","line":161,"kind":"def","docLink":"./Lean/Data/Name.html#Lean.Name.isAnonymous","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/Name.html#Lean.Name.isAnonymous\"><span class=\"name\">Lean</span>.<span class=\"name\">Name</span>.<span class=\"name\">isAnonymous</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.Name\">Name</a> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Data/Name.lean#L155-L159","name":"Lean.Name.isAtomic","line":155,"kind":"def","docLink":"./Lean/Data/Name.html#Lean.Name.isAtomic","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/Name.html#Lean.Name.isAtomic\"><span class=\"name\">Lean</span>.<span class=\"name\">Name</span>.<span class=\"name\">isAtomic</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.Name\">Name</a> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Data/Name.lean#L144-L153","name":"Lean.Name.isImplementationDetail","line":144,"kind":"def","docLink":"./Lean/Data/Name.html#Lean.Name.isImplementationDetail","doc":"Checks whether the name is an implementation-detail hypothesis name.\n\nImplementation-detail hypothesis names start with a double underscore.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/Name.html#Lean.Name.isImplementationDetail\"><span class=\"name\">Lean</span>.<span class=\"name\">Name</span>.<span class=\"name\">isImplementationDetail</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.Name\">Name</a> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Data/Name.lean#L141-L142","name":"Lean.Name.isInternalDetail.matchPrefix","line":141,"kind":"def","docLink":"./Lean/Data/Name.html#Lean.Name.isInternalDetail.matchPrefix","doc":"Check that a string begins with the given prefix, and then is only digit characters. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/Name.html#Lean.Name.isInternalDetail.matchPrefix\"><span class=\"name\">Lean</span>.<span class=\"name\">Name</span>.<span class=\"name\">isInternalDetail</span>.<span class=\"name\">matchPrefix</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s </span><span class=\"fn\">pre</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Data/Name.lean#L123-L142","name":"Lean.Name.isInternalDetail","line":123,"kind":"def","docLink":"./Lean/Data/Name.html#Lean.Name.isInternalDetail","doc":"Returns true if this a part of name that is internal or dynamically\ngenerated so that it may easily be changed.\n\nGenerally, user code should not explicitly use internal names.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/Name.html#Lean.Name.isInternalDetail\"><span class=\"name\">Lean</span>.<span class=\"name\">Name</span>.<span class=\"name\">isInternalDetail</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.Name\">Name</a> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Data/Name.lean#L112-L121","name":"Lean.Name.isInternalOrNum","line":112,"kind":"def","docLink":"./Lean/Data/Name.html#Lean.Name.isInternalOrNum","doc":"The frontend does not allow user declarations to start with `_` in any of its parts.\nWe use name parts starting with `_` internally to create auxiliary names (e.g., `_private`).\n\nThis function checks if any component of the name starts with `_`, or is numeric.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/Name.html#Lean.Name.isInternalOrNum\"><span class=\"name\">Lean</span>.<span class=\"name\">Name</span>.<span class=\"name\">isInternalOrNum</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.Name\">Name</a> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Data/Name.lean#L105-L110","name":"Lean.Name.isInternal","line":105,"kind":"def","docLink":"./Lean/Data/Name.html#Lean.Name.isInternal","doc":"The frontend does not allow user declarations to start with `_` in any of its parts.\nWe use name parts starting with `_` internally to create auxiliary names (e.g., `_private`). "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/Name.html#Lean.Name.isInternal\"><span class=\"name\">Lean</span>.<span class=\"name\">Name</span>.<span class=\"name\">isInternal</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.Name\">Name</a> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Data/Name.lean#L99-L103","name":"Lean.Name.hasNum","line":99,"kind":"def","docLink":"./Lean/Data/Name.html#Lean.Name.hasNum","doc":"Returns true if the name has any numeric components. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/Name.html#Lean.Name.hasNum\"><span class=\"name\">Lean</span>.<span class=\"name\">Name</span>.<span class=\"name\">hasNum</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.Name\">Name</a> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Data/Name.lean#L96-L97","name":"Lean.Name.quickLt","line":96,"kind":"def","docLink":"./Lean/Data/Name.html#Lean.Name.quickLt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/Name.html#Lean.Name.quickLt\"><span class=\"name\">Lean</span>.<span class=\"name\">Name</span>.<span class=\"name\">quickLt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n₁ </span><span class=\"fn\">n₂</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Data/Name.lean#L91-L94","name":"Lean.Name.quickCmp","line":91,"kind":"def","docLink":"./Lean/Data/Name.html#Lean.Name.quickCmp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/Name.html#Lean.Name.quickCmp\"><span class=\"name\">Lean</span>.<span class=\"name\">Name</span>.<span class=\"name\">quickCmp</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n₁ </span><span class=\"fn\">n₂</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Ord.html#Ordering\">Ordering</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Data/Name.lean#L76-L89","name":"Lean.Name.quickCmpAux","line":76,"kind":"def","docLink":"./Lean/Data/Name.html#Lean.Name.quickCmpAux","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/Name.html#Lean.Name.quickCmpAux\"><span class=\"name\">Lean</span>.<span class=\"name\">Name</span>.<span class=\"name\">quickCmpAux</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.Name\">Name</a> → <a href=\"./Init/Prelude.html#Lean.Name\">Name</a> → <a href=\"./Init/Data/Ord.html#Ordering\">Ordering</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Data/Name.lean#L73-L74","name":"Lean.Name.lt","line":73,"kind":"def","docLink":"./Lean/Data/Name.html#Lean.Name.lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/Name.html#Lean.Name.lt\"><span class=\"name\">Lean</span>.<span class=\"name\">Name</span>.<span class=\"name\">lt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Data/Name.lean#L58-L71","name":"Lean.Name.cmp","line":58,"kind":"def","docLink":"./Lean/Data/Name.html#Lean.Name.cmp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/Name.html#Lean.Name.cmp\"><span class=\"name\">Lean</span>.<span class=\"name\">Name</span>.<span class=\"name\">cmp</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.Name\">Name</a> → <a href=\"./Init/Prelude.html#Lean.Name\">Name</a> → <a href=\"./Init/Data/Ord.html#Ordering\">Ordering</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Data/Name.lean#L52-L56","name":"Lean.Name.isSuffixOf","line":52,"kind":"def","docLink":"./Lean/Data/Name.html#Lean.Name.isSuffixOf","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/Name.html#Lean.Name.isSuffixOf\"><span class=\"name\">Lean</span>.<span class=\"name\">Name</span>.<span class=\"name\">isSuffixOf</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.Name\">Name</a> → <a href=\"./Init/Prelude.html#Lean.Name\">Name</a> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Data/Name.lean#L46-L49","name":"Lean.Name.isPrefixOf","line":46,"kind":"def","docLink":"./Lean/Data/Name.html#Lean.Name.isPrefixOf","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/Name.html#Lean.Name.isPrefixOf\"><span class=\"name\">Lean</span>.<span class=\"name\">Name</span>.<span class=\"name\">isPrefixOf</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.Name\">Name</a> → <a href=\"./Init/Prelude.html#Lean.Name\">Name</a> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Data/Name.lean#L42-L44","name":"Lean.Name.eqStr","line":42,"kind":"def","docLink":"./Lean/Data/Name.html#Lean.Name.eqStr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/Name.html#Lean.Name.eqStr\"><span class=\"name\">Lean</span>.<span class=\"name\">Name</span>.<span class=\"name\">eqStr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.Name\">Name</a> → <span class=\"fn\"><a href=\"./Init/Prelude.html#String\">String</a> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Data/Name.lean#L39-L40","name":"Lean.Name.components","line":39,"kind":"def","docLink":"./Lean/Data/Name.html#Lean.Name.components","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/Name.html#Lean.Name.components\"><span class=\"name\">Lean</span>.<span class=\"name\">Name</span>.<span class=\"name\">components</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Prelude.html#Lean.Name\">Name</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Data/Name.lean#L34-L37","name":"Lean.Name.componentsRev","line":34,"kind":"def","docLink":"./Lean/Data/Name.html#Lean.Name.componentsRev","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/Name.html#Lean.Name.componentsRev\"><span class=\"name\">Lean</span>.<span class=\"name\">Name</span>.<span class=\"name\">componentsRev</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.Name\">Name</a> → <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Prelude.html#Lean.Name\">Name</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Data/Name.lean#L29-L32","name":"Lean.Name.updatePrefix","line":29,"kind":"def","docLink":"./Lean/Data/Name.html#Lean.Name.updatePrefix","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/Name.html#Lean.Name.updatePrefix\"><span class=\"name\">Lean</span>.<span class=\"name\">Name</span>.<span class=\"name\">updatePrefix</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.Name\">Name</a> → <a href=\"./Init/Prelude.html#Lean.Name\">Name</a> → <a href=\"./Init/Prelude.html#Lean.Name\">Name</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Data/Name.lean#L24-L27","name":"Lean.Name.getNumParts","line":24,"kind":"def","docLink":"./Lean/Data/Name.html#Lean.Name.getNumParts","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/Name.html#Lean.Name.getNumParts\"><span class=\"name\">Lean</span>.<span class=\"name\">Name</span>.<span class=\"name\">getNumParts</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.Name\">Name</a> → <a href=\"./Init/Prelude.html#Nat\">Nat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Data/Name.lean#L20-L22","name":"Lean.Name.getString!","line":20,"kind":"def","docLink":"./Lean/Data/Name.html#Lean.Name.getString!","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/Name.html#Lean.Name.getString!\"><span class=\"name\">Lean</span>.<span class=\"name\">Name</span>.<span class=\"name\">getString!</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.Name\">Name</a> → <a href=\"./Init/Prelude.html#String\">String</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Data/Name.lean#L15-L18","name":"Lean.Name.getPrefix","line":15,"kind":"def","docLink":"./Lean/Data/Name.html#Lean.Name.getPrefix","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/Name.html#Lean.Name.getPrefix\"><span class=\"name\">Lean</span>.<span class=\"name\">Name</span>.<span class=\"name\">getPrefix</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.Name\">Name</a> → <a href=\"./Init/Prelude.html#Lean.Name\">Name</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Data/Name.lean#L12-L13","name":"Lean.Name.hashEx","line":12,"kind":"def","docLink":"./Lean/Data/Name.html#Lean.Name.hashEx","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/Name.html#Lean.Name.hashEx\"><span class=\"name\">Lean</span>.<span class=\"name\">Name</span>.<span class=\"name\">hashEx</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.Name\">Name</a> → <a href=\"./Init/Prelude.html#UInt64\">UInt64</a></span></div></div>"}]}