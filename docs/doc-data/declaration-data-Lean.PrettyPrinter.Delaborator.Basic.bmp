{"name":"Lean.PrettyPrinter.Delaborator.Basic","instances":[{"typeNames":["Lean.PrettyPrinter.Delaborator.DelabM"],"name":"Lean.PrettyPrinter.Delaborator.instInhabitedDelabM","className":"Inhabited"},{"typeNames":["Lean.PrettyPrinter.Delaborator.DelabM"],"name":"Lean.PrettyPrinter.Delaborator.instAlternativeDelabM","className":"Alternative"},{"typeNames":["Lean.PrettyPrinter.Delaborator.DelabM"],"name":"Lean.PrettyPrinter.Delaborator.instOrElseDelabM","className":"OrElse"},{"typeNames":["Lean.SubExpr","Lean.PrettyPrinter.Delaborator.DelabM"],"name":"Lean.PrettyPrinter.Delaborator.instMonadReaderOfSubExprDelabM","className":"MonadReaderOf"},{"typeNames":["Lean.SubExpr","Lean.PrettyPrinter.Delaborator.DelabM"],"name":"Lean.PrettyPrinter.Delaborator.instMonadWithReaderOfSubExprDelabM","className":"MonadWithReaderOf"},{"typeNames":["Lean.PrettyPrinter.Delaborator.SubExpr.HoleIterator","Lean.PrettyPrinter.Delaborator.DelabM"],"name":"Lean.PrettyPrinter.Delaborator.instMonadStateOfHoleIteratorDelabM","className":"MonadStateOf"},{"typeNames":["Lean.PrettyPrinter.Delaborator.DelabM"],"name":"Lean.PrettyPrinter.Delaborator.instMonadQuotationDelabM","className":"Lean.MonadQuotation"}],"imports":["Lean.Elab.Term","Lean.PrettyPrinter.Delaborator.Options","Lean.PrettyPrinter.Delaborator.SubExpr","Lean.PrettyPrinter.Delaborator.TopDownAnalyze"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/PrettyPrinter/Delaborator/Basic.lean#L497-L500","name":"Lean.PrettyPrinter.delab","line":497,"kind":"def","docLink":"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.delab","doc":"\"Delaborate\" the given term into surface-level syntax using the default and given subterm-specific options. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.delab\"><span class=\"name\">Lean</span>.<span class=\"name\">PrettyPrinter</span>.<span class=\"name\">delab</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">optionsPerPos</span> : <a href=\"./Lean/PrettyPrinter/Delaborator/SubExpr.html#Lean.PrettyPrinter.Delaborator.OptionsPerPos\">Delaborator.OptionsPerPos</a> := <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">MetaM</a> <a href=\"./Init/Meta.html#Lean.Syntax.Term\">Term</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/PrettyPrinter/Delaborator/Basic.lean#L465-L495","name":"Lean.PrettyPrinter.delabCore","line":465,"kind":"def","docLink":"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.delabCore","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.delabCore\"><span class=\"name\">Lean</span>.<span class=\"name\">PrettyPrinter</span>.<span class=\"name\">delabCore</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">optionsPerPos</span> : <a href=\"./Lean/PrettyPrinter/Delaborator/SubExpr.html#Lean.PrettyPrinter.Delaborator.OptionsPerPos\">Delaborator.OptionsPerPos</a> := <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">delab</span> : <span class=\"fn\"><a href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.DelabM\">Delaborator.DelabM</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">MetaM</a> (<span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Lean/SubExpr.html#Lean.SubExpr.PosMap\">SubExpr.PosMap</a> <a href=\"./Lean/Elab/InfoTree/Types.html#Lean.Elab.Info\">Elab.Info</a></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/PrettyPrinter/Delaborator/Basic.lean#L458-L458","name":"Lean.PrettyPrinter.Delaborator.appUnexpanderAttribute","line":458,"kind":"opaque","docLink":"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.appUnexpanderAttribute","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.appUnexpanderAttribute\"><span class=\"name\">Lean</span>.<span class=\"name\">PrettyPrinter</span>.<span class=\"name\">Delaborator</span>.<span class=\"name\">appUnexpanderAttribute</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/KeyedDeclsAttribute.html#Lean.KeyedDeclsAttribute\">KeyedDeclsAttribute</a> <a href=\"./Init/Prelude.html#Lean.PrettyPrinter.Unexpander\">Unexpander</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/PrettyPrinter/Delaborator/Basic.lean#L446-L457","name":"Lean.PrettyPrinter.Delaborator.mkAppUnexpanderAttribute","line":446,"kind":"def","docLink":"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.mkAppUnexpanderAttribute","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">unsafe def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.mkAppUnexpanderAttribute\"><span class=\"name\">Lean</span>.<span class=\"name\">PrettyPrinter</span>.<span class=\"name\">Delaborator</span>.<span class=\"name\">mkAppUnexpanderAttribute</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">(<a href=\"./Lean/KeyedDeclsAttribute.html#Lean.KeyedDeclsAttribute\">KeyedDeclsAttribute</a> <a href=\"./Init/Prelude.html#Lean.PrettyPrinter.Unexpander\">Unexpander</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/PrettyPrinter/Delaborator/Basic.lean#L418-L444","name":"Lean.PrettyPrinter.Delaborator.delab","line":418,"kind":"opaque","docLink":"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.delab","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.delab\"><span class=\"name\">Lean</span>.<span class=\"name\">PrettyPrinter</span>.<span class=\"name\">Delaborator</span>.<span class=\"name\">delab</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.Delab\">Delab</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/PrettyPrinter/Delaborator/Basic.lean#L411-L416","name":"Lean.PrettyPrinter.Delaborator.delabFor","line":411,"kind":"opaque","docLink":"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.delabFor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.delabFor\"><span class=\"name\">Lean</span>.<span class=\"name\">PrettyPrinter</span>.<span class=\"name\">Delaborator</span>.<span class=\"name\">delabFor</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.Name\">Name</a> → <a href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.Delab\">Delab</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/PrettyPrinter/Delaborator/Basic.lean#L401-L409","name":"Lean.PrettyPrinter.Delaborator.omission","line":401,"kind":"def","docLink":"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.omission","doc":"Delaborates the current expression as `⋯` and attaches `Elab.OmissionInfo`, which influences how the\nsubterm omitted by `⋯` is delaborated when hovered over.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.omission\"><span class=\"name\">Lean</span>.<span class=\"name\">PrettyPrinter</span>.<span class=\"name\">Delaborator</span>.<span class=\"name\">omission</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">reason</span> : <a href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.OmissionReason\">OmissionReason</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.Delab\">Delab</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/PrettyPrinter/Delaborator/Basic.lean#L380-L399","name":"Lean.PrettyPrinter.Delaborator.shouldOmitProof","line":380,"kind":"def","docLink":"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.shouldOmitProof","doc":"Returns `true` if the given expression is a proof and should be omitted.\nThis function only returns `true` if `pp.proofs` is set to `false`.\n\n\"Shallow\" proofs are not omitted.\nThe `pp.proofs.threshold` option controls the depth threshold for what constitutes a shallow proof.\nSee `Lean.PrettyPrinter.Delaborator.isShallowExpression`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.shouldOmitProof\"><span class=\"name\">Lean</span>.<span class=\"name\">PrettyPrinter</span>.<span class=\"name\">Delaborator</span>.<span class=\"name\">shouldOmitProof</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.DelabM\">DelabM</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/PrettyPrinter/Delaborator/Basic.lean#L356-L378","name":"Lean.PrettyPrinter.Delaborator.shouldOmitExpr","line":356,"kind":"def","docLink":"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.shouldOmitExpr","doc":"Returns `true` if, at the current depth, we should omit the term and use `⋯` rather than\ndelaborating it. This function can only return `true` if `pp.deepTerms` is set to `false`.\nIt also contains a heuristic to allow \"shallow terms\" to be delaborated, even if they appear deep in\nan expression, which prevents terms such as atomic expressions or `OfNat.ofNat` literals from being\ndelaborated as `⋯`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.shouldOmitExpr\"><span class=\"name\">Lean</span>.<span class=\"name\">PrettyPrinter</span>.<span class=\"name\">Delaborator</span>.<span class=\"name\">shouldOmitExpr</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.DelabM\">DelabM</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/PrettyPrinter/Delaborator/Basic.lean#L343-L354","name":"Lean.PrettyPrinter.Delaborator.isShallowExpression","line":343,"kind":"def","docLink":"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.isShallowExpression","doc":"Returns true if `e` is a \"shallow\" expression.\nLocal variables, constants, and other atomic expressions are always shallow.\nIn general, an expression is considered to be shallow if its depth is at most `threshold`.\n\nSince the implementation uses `Lean.Expr.approxDepth`, the `threshold` is clamped to `[0, 254]`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.isShallowExpression\"><span class=\"name\">Lean</span>.<span class=\"name\">PrettyPrinter</span>.<span class=\"name\">Delaborator</span>.<span class=\"name\">isShallowExpression</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">threshold</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/PrettyPrinter/Delaborator/Basic.lean#L335-L341","name":"Lean.PrettyPrinter.Delaborator.withIncDepth","line":335,"kind":"def","docLink":"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.withIncDepth","doc":"Runs the delaborator `act` with increased depth.\nThe depth is used when `pp.deepTerms` is `false` to determine what is a deep term.\nSee also `Lean.PrettyPrinter.Delaborator.Context.depth`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.withIncDepth\"><span class=\"name\">Lean</span>.<span class=\"name\">PrettyPrinter</span>.<span class=\"name\">Delaborator</span>.<span class=\"name\">withIncDepth</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">act</span> : <span class=\"fn\"><a href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.DelabM\">DelabM</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.DelabM\">DelabM</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/PrettyPrinter/Delaborator/Basic.lean#L332-L333","name":"Lean.PrettyPrinter.Delaborator.addOmissionInfo","line":332,"kind":"def","docLink":"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.addOmissionInfo","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.addOmissionInfo\"><span class=\"name\">Lean</span>.<span class=\"name\">PrettyPrinter</span>.<span class=\"name\">Delaborator</span>.<span class=\"name\">addOmissionInfo</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pos</span> : <a href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos\">SubExpr.Pos</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">stx</span> : <a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">reason</span> : <a href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.OmissionReason\">OmissionReason</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.DelabM\">DelabM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/PrettyPrinter/Delaborator/Basic.lean#L327-L330","name":"Lean.PrettyPrinter.Delaborator.OmissionReason.toString","line":327,"kind":"def","docLink":"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.OmissionReason.toString","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.OmissionReason.toString\"><span class=\"name\">Lean</span>.<span class=\"name\">PrettyPrinter</span>.<span class=\"name\">Delaborator</span>.<span class=\"name\">OmissionReason</span>.<span class=\"name\">toString</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.OmissionReason\">OmissionReason</a> → <a href=\"./Init/Prelude.html#String\">String</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/PrettyPrinter/Delaborator/Basic.lean#L325-L325","name":"Lean.PrettyPrinter.Delaborator.OmissionReason.maxSteps","line":325,"kind":"ctor","docLink":"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.OmissionReason.maxSteps","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.OmissionReason.maxSteps\"><span class=\"name\">Lean</span>.<span class=\"name\">PrettyPrinter</span>.<span class=\"name\">Delaborator</span>.<span class=\"name\">OmissionReason</span>.<span class=\"name\">maxSteps</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.OmissionReason\">OmissionReason</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/PrettyPrinter/Delaborator/Basic.lean#L324-L324","name":"Lean.PrettyPrinter.Delaborator.OmissionReason.proof","line":324,"kind":"ctor","docLink":"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.OmissionReason.proof","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.OmissionReason.proof\"><span class=\"name\">Lean</span>.<span class=\"name\">PrettyPrinter</span>.<span class=\"name\">Delaborator</span>.<span class=\"name\">OmissionReason</span>.<span class=\"name\">proof</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.OmissionReason\">OmissionReason</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/PrettyPrinter/Delaborator/Basic.lean#L323-L323","name":"Lean.PrettyPrinter.Delaborator.OmissionReason.deep","line":323,"kind":"ctor","docLink":"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.OmissionReason.deep","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.OmissionReason.deep\"><span class=\"name\">Lean</span>.<span class=\"name\">PrettyPrinter</span>.<span class=\"name\">Delaborator</span>.<span class=\"name\">OmissionReason</span>.<span class=\"name\">deep</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.OmissionReason\">OmissionReason</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/PrettyPrinter/Delaborator/Basic.lean#L322-L325","name":"Lean.PrettyPrinter.Delaborator.OmissionReason","line":322,"kind":"inductive","docLink":"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.OmissionReason","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.OmissionReason\"><span class=\"name\">Lean</span>.<span class=\"name\">PrettyPrinter</span>.<span class=\"name\">Delaborator</span>.<span class=\"name\">OmissionReason</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/PrettyPrinter/Delaborator/Basic.lean#L310-L320","name":"Lean.PrettyPrinter.Delaborator.withBindingBodyUnusedName","line":310,"kind":"def","docLink":"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.withBindingBodyUnusedName","doc":"Enters the body of the current expression, which must be a lambda or forall.\nThe binding variable is passed to `d` as `Syntax`, and it is an identifier that has been annotated with the fvar expression\nfor the variable.\n\nIf `preserveName` is `false` (the default), gives the binder an unused name.\nOtherwise, it tries to preserve the textual form of the name, preserving whether it is hygienic.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.withBindingBodyUnusedName\"><span class=\"name\">Lean</span>.<span class=\"name\">PrettyPrinter</span>.<span class=\"name\">Delaborator</span>.<span class=\"name\">withBindingBodyUnusedName</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">d</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a> → <span class=\"fn\"><a href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.DelabM\">DelabM</a> <span class=\"fn\">α</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">preserveName</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/Prelude.html#Bool.false\">false</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.DelabM\">DelabM</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/PrettyPrinter/Delaborator/Basic.lean#L301-L308","name":"Lean.PrettyPrinter.Delaborator.mkAnnotatedIdent","line":301,"kind":"def","docLink":"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.mkAnnotatedIdent","doc":"Creates an identifier that is annotated with the term `e`, using a fresh position using the `HoleIterator`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.mkAnnotatedIdent\"><span class=\"name\">Lean</span>.<span class=\"name\">PrettyPrinter</span>.<span class=\"name\">Delaborator</span>.<span class=\"name\">mkAnnotatedIdent</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.DelabM\">DelabM</a> <a href=\"./Init/Meta.html#Lean.Syntax.Ident\">Ident</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/PrettyPrinter/Delaborator/Basic.lean#L293-L299","name":"Lean.PrettyPrinter.Delaborator.getUnusedName.bodyUsesSuggestion","line":293,"kind":"def","docLink":"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.getUnusedName.bodyUsesSuggestion","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.getUnusedName.bodyUsesSuggestion\"><span class=\"name\">Lean</span>.<span class=\"name\">PrettyPrinter</span>.<span class=\"name\">Delaborator</span>.<span class=\"name\">getUnusedName</span>.<span class=\"name\">bodyUsesSuggestion</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">body</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">lctx</span> : <a href=\"./Lean/LocalContext.html#Lean.LocalContext\">LocalContext</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">suggestion'</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/PrettyPrinter/Delaborator/Basic.lean#L267-L299","name":"Lean.PrettyPrinter.Delaborator.getUnusedName","line":267,"kind":"def","docLink":"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.getUnusedName","doc":"Gets an name based on `suggestion` that is unused in the local context.\nErases macro scopes.\nIf `pp.safeShadowing` is true, then the name is allowed to shadow a name in the local context\nif the name does not appear in `body`.\n\nIf `preserveName` is false, then returns the name, possibly with fresh macro scopes added.\nIf `suggestion` has macro scopes then the result does as well.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.getUnusedName\"><span class=\"name\">Lean</span>.<span class=\"name\">PrettyPrinter</span>.<span class=\"name\">Delaborator</span>.<span class=\"name\">getUnusedName</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">suggestion</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">body</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">preserveName</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/Prelude.html#Bool.false\">false</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.DelabM\">DelabM</a> <a href=\"./Init/Prelude.html#Lean.Name\">Name</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/PrettyPrinter/Delaborator/Basic.lean#L260-L265","name":"Lean.PrettyPrinter.Delaborator.withAnnotateTermInfoUnlessAnnotated","line":260,"kind":"def","docLink":"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.withAnnotateTermInfoUnlessAnnotated","doc":"Modifies the delaborator so that it ensures resulting term is annotated using `annotateTermInfoUnlessAnnotated`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.withAnnotateTermInfoUnlessAnnotated\"><span class=\"name\">Lean</span>.<span class=\"name\">PrettyPrinter</span>.<span class=\"name\">Delaborator</span>.<span class=\"name\">withAnnotateTermInfoUnlessAnnotated</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">d</span> : <a href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.Delab\">Delab</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.Delab\">Delab</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/PrettyPrinter/Delaborator/Basic.lean#L253-L258","name":"Lean.PrettyPrinter.Delaborator.withAnnotateTermInfo","line":253,"kind":"def","docLink":"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.withAnnotateTermInfo","doc":"Modifies the delaborator so that it annotates the resulting term using `annotateTermInfo`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.withAnnotateTermInfo\"><span class=\"name\">Lean</span>.<span class=\"name\">PrettyPrinter</span>.<span class=\"name\">Delaborator</span>.<span class=\"name\">withAnnotateTermInfo</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">d</span> : <a href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.Delab\">Delab</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.Delab\">Delab</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/PrettyPrinter/Delaborator/Basic.lean#L242-L251","name":"Lean.PrettyPrinter.Delaborator.annotateTermInfoUnlessAnnotated","line":242,"kind":"def","docLink":"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.annotateTermInfoUnlessAnnotated","doc":"Annotates the term with the current expression position and registers `TermInfo`\nto associate the term to the current expression, unless the syntax has a synthetic position\nand associated `Info` already.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.annotateTermInfoUnlessAnnotated\"><span class=\"name\">Lean</span>.<span class=\"name\">PrettyPrinter</span>.<span class=\"name\">Delaborator</span>.<span class=\"name\">annotateTermInfoUnlessAnnotated</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">stx</span> : <a href=\"./Init/Meta.html#Lean.Syntax.Term\">Term</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.Delab\">Delab</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/PrettyPrinter/Delaborator/Basic.lean#L233-L240","name":"Lean.PrettyPrinter.Delaborator.annotateTermInfo","line":233,"kind":"def","docLink":"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.annotateTermInfo","doc":"Annotates the term with the current expression position and registers `TermInfo`\nto associate the term to the current expression.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.annotateTermInfo\"><span class=\"name\">Lean</span>.<span class=\"name\">PrettyPrinter</span>.<span class=\"name\">Delaborator</span>.<span class=\"name\">annotateTermInfo</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">stx</span> : <a href=\"./Init/Meta.html#Lean.Syntax.Term\">Term</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.Delab\">Delab</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/PrettyPrinter/Delaborator/Basic.lean#L223-L231","name":"Lean.PrettyPrinter.Delaborator.addDelabTermInfo","line":223,"kind":"def","docLink":"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.addDelabTermInfo","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.addDelabTermInfo\"><span class=\"name\">Lean</span>.<span class=\"name\">PrettyPrinter</span>.<span class=\"name\">Delaborator</span>.<span class=\"name\">addDelabTermInfo</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pos</span> : <a href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos\">SubExpr.Pos</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">stx</span> : <a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">isBinder</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/Prelude.html#Bool.false\">false</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">location?</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Data/DeclarationRange.html#Lean.DeclarationLocation\">DeclarationLocation</a></span> := <a href=\"./Init/Prelude.html#Option.none\">none</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">docString?</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#String\">String</a></span> := <a href=\"./Init/Prelude.html#Option.none\">none</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">explicit</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/Prelude.html#Bool.true\">true</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.DelabM\">DelabM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/PrettyPrinter/Delaborator/Basic.lean#L215-L221","name":"Lean.PrettyPrinter.Delaborator.addFieldInfo.mkFieldInfo","line":215,"kind":"def","docLink":"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.addFieldInfo.mkFieldInfo","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.addFieldInfo.mkFieldInfo\"><span class=\"name\">Lean</span>.<span class=\"name\">PrettyPrinter</span>.<span class=\"name\">Delaborator</span>.<span class=\"name\">addFieldInfo</span>.<span class=\"name\">mkFieldInfo</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">projName </span><span class=\"fn\">fieldName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">stx</span> : <a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">val</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.DelabM\">DelabM</a> <a href=\"./Lean/Elab/InfoTree/Types.html#Lean.Elab.FieldInfo\">Elab.FieldInfo</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/PrettyPrinter/Delaborator/Basic.lean#L211-L221","name":"Lean.PrettyPrinter.Delaborator.addFieldInfo","line":211,"kind":"def","docLink":"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.addFieldInfo","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.addFieldInfo\"><span class=\"name\">Lean</span>.<span class=\"name\">PrettyPrinter</span>.<span class=\"name\">Delaborator</span>.<span class=\"name\">addFieldInfo</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pos</span> : <a href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos\">SubExpr.Pos</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">projName </span><span class=\"fn\">fieldName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">stx</span> : <a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">val</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.DelabM\">DelabM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/PrettyPrinter/Delaborator/Basic.lean#L202-L209","name":"Lean.PrettyPrinter.Delaborator.addTermInfo.mkTermInfo","line":202,"kind":"def","docLink":"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.addTermInfo.mkTermInfo","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.addTermInfo.mkTermInfo\"><span class=\"name\">Lean</span>.<span class=\"name\">PrettyPrinter</span>.<span class=\"name\">Delaborator</span>.<span class=\"name\">addTermInfo</span>.<span class=\"name\">mkTermInfo</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">stx</span> : <a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">isBinder</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/Prelude.html#Bool.false\">false</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.DelabM\">DelabM</a> <a href=\"./Lean/Elab/InfoTree/Types.html#Lean.Elab.TermInfo\">Elab.TermInfo</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/PrettyPrinter/Delaborator/Basic.lean#L198-L209","name":"Lean.PrettyPrinter.Delaborator.addTermInfo","line":198,"kind":"def","docLink":"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.addTermInfo","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.addTermInfo\"><span class=\"name\">Lean</span>.<span class=\"name\">PrettyPrinter</span>.<span class=\"name\">Delaborator</span>.<span class=\"name\">addTermInfo</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pos</span> : <a href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos\">SubExpr.Pos</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">stx</span> : <a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">isBinder</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/Prelude.html#Bool.false\">false</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.DelabM\">DelabM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/PrettyPrinter/Delaborator/Basic.lean#L195-L196","name":"Lean.PrettyPrinter.Delaborator.annotateCurPos","line":195,"kind":"def","docLink":"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.annotateCurPos","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.annotateCurPos\"><span class=\"name\">Lean</span>.<span class=\"name\">PrettyPrinter</span>.<span class=\"name\">Delaborator</span>.<span class=\"name\">annotateCurPos</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">stx</span> : <a href=\"./Init/Meta.html#Lean.Syntax.Term\">Term</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.Delab\">Delab</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/PrettyPrinter/Delaborator/Basic.lean#L192-L193","name":"Lean.PrettyPrinter.Delaborator.annotatePos","line":192,"kind":"def","docLink":"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.annotatePos","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.annotatePos\"><span class=\"name\">Lean</span>.<span class=\"name\">PrettyPrinter</span>.<span class=\"name\">Delaborator</span>.<span class=\"name\">annotatePos</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pos</span> : <a href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos\">SubExpr.Pos</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">stx</span> : <a href=\"./Init/Meta.html#Lean.Syntax.Term\">Term</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Meta.html#Lean.Syntax.Term\">Term</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/PrettyPrinter/Delaborator/Basic.lean#L183-L190","name":"Lean.PrettyPrinter.Delaborator.withOptionAtCurrPos","line":183,"kind":"def","docLink":"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.withOptionAtCurrPos","doc":"Set the given option at the current position and execute `x` in this context. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.withOptionAtCurrPos\"><span class=\"name\">Lean</span>.<span class=\"name\">PrettyPrinter</span>.<span class=\"name\">Delaborator</span>.<span class=\"name\">withOptionAtCurrPos</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">v</span> : <a href=\"./Lean/Data/KVMap.html#Lean.DataValue\">DataValue</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.DelabM\">DelabM</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.DelabM\">DelabM</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/PrettyPrinter/Delaborator/Basic.lean#L179-L181","name":"Lean.PrettyPrinter.Delaborator.whenNotPPOption","line":179,"kind":"def","docLink":"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.whenNotPPOption","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.whenNotPPOption\"><span class=\"name\">Lean</span>.<span class=\"name\">PrettyPrinter</span>.<span class=\"name\">Delaborator</span>.<span class=\"name\">whenNotPPOption</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">opt</span> : <span class=\"fn\"><a href=\"./Lean/Data/Options.html#Lean.Options\">Options</a> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">d</span> : <a href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.Delab\">Delab</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.Delab\">Delab</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/PrettyPrinter/Delaborator/Basic.lean#L175-L177","name":"Lean.PrettyPrinter.Delaborator.whenPPOption","line":175,"kind":"def","docLink":"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.whenPPOption","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.whenPPOption\"><span class=\"name\">Lean</span>.<span class=\"name\">PrettyPrinter</span>.<span class=\"name\">Delaborator</span>.<span class=\"name\">whenPPOption</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">opt</span> : <span class=\"fn\"><a href=\"./Lean/Data/Options.html#Lean.Options\">Options</a> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">d</span> : <a href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.Delab\">Delab</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.Delab\">Delab</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/PrettyPrinter/Delaborator/Basic.lean#L171-L173","name":"Lean.PrettyPrinter.Delaborator.getPPOption","line":171,"kind":"def","docLink":"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.getPPOption","doc":"Evaluate option accessor, using subterm-specific options if set. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.getPPOption\"><span class=\"name\">Lean</span>.<span class=\"name\">PrettyPrinter</span>.<span class=\"name\">Delaborator</span>.<span class=\"name\">getPPOption</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">opt</span> : <span class=\"fn\"><a href=\"./Lean/Data/Options.html#Lean.Options\">Options</a> → <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.DelabM\">DelabM</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/PrettyPrinter/Delaborator/Basic.lean#L163-L169","name":"Lean.PrettyPrinter.Delaborator.getOptionsAtCurrPos","line":163,"kind":"def","docLink":"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.getOptionsAtCurrPos","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.getOptionsAtCurrPos\"><span class=\"name\">Lean</span>.<span class=\"name\">PrettyPrinter</span>.<span class=\"name\">Delaborator</span>.<span class=\"name\">getOptionsAtCurrPos</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.DelabM\">DelabM</a> <a href=\"./Lean/Data/Options.html#Lean.Options\">Options</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/PrettyPrinter/Delaborator/Basic.lean#L141-L161","name":"Lean.PrettyPrinter.Delaborator.getExprKind","line":141,"kind":"def","docLink":"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.getExprKind","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.getExprKind\"><span class=\"name\">Lean</span>.<span class=\"name\">PrettyPrinter</span>.<span class=\"name\">Delaborator</span>.<span class=\"name\">getExprKind</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.DelabM\">DelabM</a> <a href=\"./Init/Prelude.html#Lean.Name\">Name</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/PrettyPrinter/Delaborator/Basic.lean#L135-L139","name":"Lean.PrettyPrinter.Delaborator.attrApp_delab_","line":135,"kind":"def","docLink":"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.attrApp_delab_","doc":"`@[app_delab c]` registers a delaborator for applications with head constant `c`.\nSuch delaborators also apply to the constant `c` itself (known as a \"nullary application\").\n\nThis attribute should be applied to definitions of type `Lean.PrettyPrinter.Delaborator.Delab`.\n\nWhen defining delaborators for constant applications, one should prefer this attribute over `@[delab app.c]`,\nas `@[app_delab c]` first performs name resolution on `c` in the current scope.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.attrApp_delab_\"><span class=\"name\">Lean</span>.<span class=\"name\">PrettyPrinter</span>.<span class=\"name\">Delaborator</span>.<span class=\"name\">attrApp_delab_</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/PrettyPrinter/Delaborator/Basic.lean#L124-L124","name":"Lean.PrettyPrinter.Delaborator.delabAttribute","line":124,"kind":"opaque","docLink":"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.delabAttribute","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.delabAttribute\"><span class=\"name\">Lean</span>.<span class=\"name\">PrettyPrinter</span>.<span class=\"name\">Delaborator</span>.<span class=\"name\">delabAttribute</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/KeyedDeclsAttribute.html#Lean.KeyedDeclsAttribute\">KeyedDeclsAttribute</a> <a href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.Delab\">Delab</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/PrettyPrinter/Delaborator/Basic.lean#L102-L123","name":"Lean.PrettyPrinter.Delaborator.mkDelabAttribute","line":102,"kind":"def","docLink":"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.mkDelabAttribute","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">unsafe def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.mkDelabAttribute\"><span class=\"name\">Lean</span>.<span class=\"name\">PrettyPrinter</span>.<span class=\"name\">Delaborator</span>.<span class=\"name\">mkDelabAttribute</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">(<a href=\"./Lean/KeyedDeclsAttribute.html#Lean.KeyedDeclsAttribute\">KeyedDeclsAttribute</a> <a href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.Delab\">Delab</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/PrettyPrinter/Delaborator/Basic.lean#L96-L100","name":"Lean.PrettyPrinter.Delaborator.instMonadQuotationDelabM","line":96,"kind":"instance","docLink":"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.instMonadQuotationDelabM","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.instMonadQuotationDelabM\"><span class=\"name\">Lean</span>.<span class=\"name\">PrettyPrinter</span>.<span class=\"name\">Delaborator</span>.<span class=\"name\">instMonadQuotationDelabM</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.MonadQuotation\">MonadQuotation</a> <a href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.DelabM\">DelabM</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/PrettyPrinter/Delaborator/Basic.lean#L87-L92","name":"Lean.PrettyPrinter.Delaborator.instMonadStateOfHoleIteratorDelabM","line":87,"kind":"instance","docLink":"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.instMonadStateOfHoleIteratorDelabM","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.instMonadStateOfHoleIteratorDelabM\"><span class=\"name\">Lean</span>.<span class=\"name\">PrettyPrinter</span>.<span class=\"name\">Delaborator</span>.<span class=\"name\">instMonadStateOfHoleIteratorDelabM</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#MonadStateOf\">MonadStateOf</a> <a href=\"./Lean/PrettyPrinter/Delaborator/SubExpr.html#Lean.PrettyPrinter.Delaborator.SubExpr.HoleIterator\">SubExpr.HoleIterator</a> <a href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.DelabM\">DelabM</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/PrettyPrinter/Delaborator/Basic.lean#L84-L85","name":"Lean.PrettyPrinter.Delaborator.instMonadWithReaderOfSubExprDelabM","line":84,"kind":"instance","docLink":"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.instMonadWithReaderOfSubExprDelabM","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.instMonadWithReaderOfSubExprDelabM\"><span class=\"name\">Lean</span>.<span class=\"name\">PrettyPrinter</span>.<span class=\"name\">Delaborator</span>.<span class=\"name\">instMonadWithReaderOfSubExprDelabM</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#MonadWithReaderOf\">MonadWithReaderOf</a> <a href=\"./Lean/SubExpr.html#Lean.SubExpr\">SubExpr</a> <a href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.DelabM\">DelabM</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/PrettyPrinter/Delaborator/Basic.lean#L81-L82","name":"Lean.PrettyPrinter.Delaborator.instMonadReaderOfSubExprDelabM","line":81,"kind":"instance","docLink":"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.instMonadReaderOfSubExprDelabM","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.instMonadReaderOfSubExprDelabM\"><span class=\"name\">Lean</span>.<span class=\"name\">PrettyPrinter</span>.<span class=\"name\">Delaborator</span>.<span class=\"name\">instMonadReaderOfSubExprDelabM</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#MonadReaderOf\">MonadReaderOf</a> <a href=\"./Lean/SubExpr.html#Lean.SubExpr\">SubExpr</a> <a href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.DelabM\">DelabM</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/PrettyPrinter/Delaborator/Basic.lean#L78-L78","name":"Lean.PrettyPrinter.Delaborator.instOrElseDelabM","line":78,"kind":"instance","docLink":"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.instOrElseDelabM","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.instOrElseDelabM\"><span class=\"name\">Lean</span>.<span class=\"name\">PrettyPrinter</span>.<span class=\"name\">Delaborator</span>.<span class=\"name\">instOrElseDelabM</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#OrElse\">OrElse</a> <span class=\"fn\">(<a href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.DelabM\">DelabM</a> <span class=\"fn\">α</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/PrettyPrinter/Delaborator/Basic.lean#L73-L75","name":"Lean.PrettyPrinter.Delaborator.instAlternativeDelabM","line":73,"kind":"instance","docLink":"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.instAlternativeDelabM","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.instAlternativeDelabM\"><span class=\"name\">Lean</span>.<span class=\"name\">PrettyPrinter</span>.<span class=\"name\">Delaborator</span>.<span class=\"name\">instAlternativeDelabM</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Control/Basic.html#Alternative\">Alternative</a> <a href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.DelabM\">DelabM</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/PrettyPrinter/Delaborator/Basic.lean#L70-L71","name":"Lean.PrettyPrinter.Delaborator.failure","line":70,"kind":"def","docLink":"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.failure","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.failure\"><span class=\"name\">Lean</span>.<span class=\"name\">PrettyPrinter</span>.<span class=\"name\">Delaborator</span>.<span class=\"name\">failure</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.DelabM\">DelabM</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/PrettyPrinter/Delaborator/Basic.lean#L67-L68","name":"Lean.PrettyPrinter.Delaborator.orElse","line":67,"kind":"def","docLink":"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.orElse","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.orElse\"><span class=\"name\">Lean</span>.<span class=\"name\">PrettyPrinter</span>.<span class=\"name\">Delaborator</span>.<span class=\"name\">orElse</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">d₁</span> : <span class=\"fn\"><a href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.DelabM\">DelabM</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">d₂</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Unit\">Unit</a> → <span class=\"fn\"><a href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.DelabM\">DelabM</a> <span class=\"fn\">α</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.DelabM\">DelabM</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/PrettyPrinter/Delaborator/Basic.lean#L64-L65","name":"Lean.PrettyPrinter.Delaborator.instInhabitedDelabM","line":64,"kind":"instance","docLink":"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.instInhabitedDelabM","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.instInhabitedDelabM\"><span class=\"name\">Lean</span>.<span class=\"name\">PrettyPrinter</span>.<span class=\"name\">Delaborator</span>.<span class=\"name\">instInhabitedDelabM</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<a href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.DelabM\">DelabM</a> <span class=\"fn\">α</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/PrettyPrinter/Delaborator/Basic.lean#L62-L62","name":"Lean.PrettyPrinter.Delaborator.Delab","line":62,"kind":"def","docLink":"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.Delab","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.Delab\"><span class=\"name\">Lean</span>.<span class=\"name\">PrettyPrinter</span>.<span class=\"name\">Delaborator</span>.<span class=\"name\">Delab</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/PrettyPrinter/Delaborator/Basic.lean#L61-L61","name":"Lean.PrettyPrinter.Delaborator.DelabM","line":61,"kind":"def","docLink":"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.DelabM","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.DelabM\"><span class=\"name\">Lean</span>.<span class=\"name\">PrettyPrinter</span>.<span class=\"name\">Delaborator</span>.<span class=\"name\">DelabM</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/PrettyPrinter/Delaborator/Basic.lean#L59-L59","name":"Lean.PrettyPrinter.Delaborator.delabFailureId","line":59,"kind":"opaque","docLink":"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.delabFailureId","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.delabFailureId\"><span class=\"name\">Lean</span>.<span class=\"name\">PrettyPrinter</span>.<span class=\"name\">Delaborator</span>.<span class=\"name\">delabFailureId</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/InternalExceptionId.html#Lean.InternalExceptionId\">InternalExceptionId</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/PrettyPrinter/Delaborator/Basic.lean#L55-L55","name":"Lean.PrettyPrinter.Delaborator.State.holeIter","line":55,"kind":"def","docLink":"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.State.holeIter","doc":"See `SubExpr.nextExtraPos`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.State.holeIter\"><span class=\"name\">Lean</span>.<span class=\"name\">PrettyPrinter</span>.<span class=\"name\">Delaborator</span>.<span class=\"name\">State</span>.<span class=\"name\">holeIter</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.State\">State</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/PrettyPrinter/Delaborator/SubExpr.html#Lean.PrettyPrinter.Delaborator.SubExpr.HoleIterator\">SubExpr.HoleIterator</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/PrettyPrinter/Delaborator/Basic.lean#L53-L53","name":"Lean.PrettyPrinter.Delaborator.State.infos","line":53,"kind":"def","docLink":"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.State.infos","doc":"We attach `Elab.Info` at various locations in the `Syntax` output in order to convey\nits semantics. While the elaborator emits `InfoTree`s, here we have no real text location tree\nto traverse, so we use a flattened map. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.State.infos\"><span class=\"name\">Lean</span>.<span class=\"name\">PrettyPrinter</span>.<span class=\"name\">Delaborator</span>.<span class=\"name\">State</span>.<span class=\"name\">infos</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.State\">State</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/SubExpr.html#Lean.SubExpr.PosMap\">SubExpr.PosMap</a> <a href=\"./Lean/Elab/InfoTree/Types.html#Lean.Elab.Info\">Elab.Info</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/PrettyPrinter/Delaborator/Basic.lean#L49-L49","name":"Lean.PrettyPrinter.Delaborator.State.steps","line":49,"kind":"def","docLink":"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.State.steps","doc":"The number of `delab` steps so far. Used by `pp.maxSteps` to stop delaboration. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.State.steps\"><span class=\"name\">Lean</span>.<span class=\"name\">PrettyPrinter</span>.<span class=\"name\">Delaborator</span>.<span class=\"name\">State</span>.<span class=\"name\">steps</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.State\">State</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/PrettyPrinter/Delaborator/Basic.lean#L47-L47","name":"Lean.PrettyPrinter.Delaborator.State.mk","line":47,"kind":"ctor","docLink":"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.State.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.State.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">PrettyPrinter</span>.<span class=\"name\">Delaborator</span>.<span class=\"name\">State</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">steps</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">infos</span> : <span class=\"fn\"><a href=\"./Lean/SubExpr.html#Lean.SubExpr.PosMap\">SubExpr.PosMap</a> <a href=\"./Lean/Elab/InfoTree/Types.html#Lean.Elab.Info\">Elab.Info</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">holeIter</span> : <a href=\"./Lean/PrettyPrinter/Delaborator/SubExpr.html#Lean.PrettyPrinter.Delaborator.SubExpr.HoleIterator\">SubExpr.HoleIterator</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.State\">State</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/PrettyPrinter/Delaborator/Basic.lean#L47-L55","name":"Lean.PrettyPrinter.Delaborator.State","line":47,"kind":"structure","docLink":"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.State","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.State\"><span class=\"name\">Lean</span>.<span class=\"name\">PrettyPrinter</span>.<span class=\"name\">Delaborator</span>.<span class=\"name\">State</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/PrettyPrinter/Delaborator/Basic.lean#L45-L45","name":"Lean.PrettyPrinter.Delaborator.Context.depth","line":45,"kind":"def","docLink":"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.Context.depth","doc":"Current recursion depth during delaboration. Used by the `pp.deepTerms false` option. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.Context.depth\"><span class=\"name\">Lean</span>.<span class=\"name\">PrettyPrinter</span>.<span class=\"name\">Delaborator</span>.<span class=\"name\">Context</span>.<span class=\"name\">depth</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.Context\">Context</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/PrettyPrinter/Delaborator/Basic.lean#L43-L43","name":"Lean.PrettyPrinter.Delaborator.Context.subExpr","line":43,"kind":"def","docLink":"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.Context.subExpr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.Context.subExpr\"><span class=\"name\">Lean</span>.<span class=\"name\">PrettyPrinter</span>.<span class=\"name\">Delaborator</span>.<span class=\"name\">Context</span>.<span class=\"name\">subExpr</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.Context\">Context</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/SubExpr.html#Lean.SubExpr\">SubExpr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/PrettyPrinter/Delaborator/Basic.lean#L42-L42","name":"Lean.PrettyPrinter.Delaborator.Context.inPattern","line":42,"kind":"def","docLink":"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.Context.inPattern","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.Context.inPattern\"><span class=\"name\">Lean</span>.<span class=\"name\">PrettyPrinter</span>.<span class=\"name\">Delaborator</span>.<span class=\"name\">Context</span>.<span class=\"name\">inPattern</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.Context\">Context</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/PrettyPrinter/Delaborator/Basic.lean#L41-L41","name":"Lean.PrettyPrinter.Delaborator.Context.openDecls","line":41,"kind":"def","docLink":"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.Context.openDecls","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.Context.openDecls\"><span class=\"name\">Lean</span>.<span class=\"name\">PrettyPrinter</span>.<span class=\"name\">Delaborator</span>.<span class=\"name\">Context</span>.<span class=\"name\">openDecls</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.Context\">Context</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Lean/Data/OpenDecl.html#Lean.OpenDecl\">OpenDecl</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/PrettyPrinter/Delaborator/Basic.lean#L40-L40","name":"Lean.PrettyPrinter.Delaborator.Context.currNamespace","line":40,"kind":"def","docLink":"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.Context.currNamespace","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.Context.currNamespace\"><span class=\"name\">Lean</span>.<span class=\"name\">PrettyPrinter</span>.<span class=\"name\">Delaborator</span>.<span class=\"name\">Context</span>.<span class=\"name\">currNamespace</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.Context\">Context</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Name\">Name</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/PrettyPrinter/Delaborator/Basic.lean#L39-L39","name":"Lean.PrettyPrinter.Delaborator.Context.optionsPerPos","line":39,"kind":"def","docLink":"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.Context.optionsPerPos","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.Context.optionsPerPos\"><span class=\"name\">Lean</span>.<span class=\"name\">PrettyPrinter</span>.<span class=\"name\">Delaborator</span>.<span class=\"name\">Context</span>.<span class=\"name\">optionsPerPos</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.Context\">Context</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/PrettyPrinter/Delaborator/SubExpr.html#Lean.PrettyPrinter.Delaborator.OptionsPerPos\">OptionsPerPos</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/PrettyPrinter/Delaborator/Basic.lean#L38-L38","name":"Lean.PrettyPrinter.Delaborator.Context.mk","line":38,"kind":"ctor","docLink":"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.Context.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.Context.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">PrettyPrinter</span>.<span class=\"name\">Delaborator</span>.<span class=\"name\">Context</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">optionsPerPos</span> : <a href=\"./Lean/PrettyPrinter/Delaborator/SubExpr.html#Lean.PrettyPrinter.Delaborator.OptionsPerPos\">OptionsPerPos</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">currNamespace</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">openDecls</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Lean/Data/OpenDecl.html#Lean.OpenDecl\">OpenDecl</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">inPattern</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">subExpr</span> : <a href=\"./Lean/SubExpr.html#Lean.SubExpr\">SubExpr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">depth</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.Context\">Context</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/PrettyPrinter/Delaborator/Basic.lean#L38-L45","name":"Lean.PrettyPrinter.Delaborator.Context","line":38,"kind":"structure","docLink":"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.Context","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.Context\"><span class=\"name\">Lean</span>.<span class=\"name\">PrettyPrinter</span>.<span class=\"name\">Delaborator</span>.<span class=\"name\">Context</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"}]}