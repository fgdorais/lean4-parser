{"name":"Lean.Elab.Tactic.BVDecide.External","instances":[],"imports":["Std.Tactic.BVDecide.LRAT.Parser","Lean.CoreM","Std.Internal.Parsec"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/Tactic/BVDecide/External.lean#L138-L189","name":"Lean.Elab.Tactic.BVDecide.External.satQuery","line":138,"kind":"def","docLink":"./Lean/Elab/Tactic/BVDecide/External.html#Lean.Elab.Tactic.BVDecide.External.satQuery","doc":"Call the SAT solver in `solverPath` with `problemPath` as CNF input and ask it to output an LRAT\nUNSAT proof (binary or non-binary depending on `binaryProofs`) into `proofOutput`. To avoid runaway\nsolvers the solver is run with `timeout` in seconds as a maximum time limit to solve the problem.\n\nNote: This function currently assume that the solver has the same CLI as CaDiCal.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/External.html#Lean.Elab.Tactic.BVDecide.External.satQuery\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">External</span>.<span class=\"name\">satQuery</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">solverPath </span><span class=\"fn\">problemPath </span><span class=\"fn\">proofOutput</span> : <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">timeout</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">binaryProofs</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">CoreM</a> <a href=\"./Lean/Elab/Tactic/BVDecide/External.html#Lean.Elab.Tactic.BVDecide.External.SolverResult\">SolverResult</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/Tactic/BVDecide/External.lean#L130-L136","name":"Lean.Elab.Tactic.BVDecide.External.runInterruptible.withInterruptCheck","line":130,"kind":"def","docLink":"./Lean/Elab/Tactic/BVDecide/External.html#Lean.Elab.Tactic.BVDecide.External.runInterruptible.withInterruptCheck","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/External.html#Lean.Elab.Tactic.BVDecide.External.runInterruptible.withInterruptCheck\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">External</span>.<span class=\"name\">runInterruptible</span>.<span class=\"name\">withInterruptCheck</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">cleanup</span> : <span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">CoreM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">CoreM</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">CoreM</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/Tactic/BVDecide/External.lean#L122-L128","name":"Lean.Elab.Tactic.BVDecide.External.runInterruptible.withTimeoutCheck","line":122,"kind":"def","docLink":"./Lean/Elab/Tactic/BVDecide/External.html#Lean.Elab.Tactic.BVDecide.External.runInterruptible.withTimeoutCheck","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/External.html#Lean.Elab.Tactic.BVDecide.External.runInterruptible.withTimeoutCheck\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">External</span>.<span class=\"name\">runInterruptible</span>.<span class=\"name\">withTimeoutCheck</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">budgetMs</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">cleanup</span> : <span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">CoreM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">CoreM</a> <span class=\"fn\">(<a href=\"./Lean/Elab/Tactic/BVDecide/External.html#Lean.Elab.Tactic.BVDecide.External.TimedOut\">TimedOut</a> <span class=\"fn\">α</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">CoreM</a> <span class=\"fn\">(<a href=\"./Lean/Elab/Tactic/BVDecide/External.html#Lean.Elab.Tactic.BVDecide.External.TimedOut\">TimedOut</a> <span class=\"fn\">α</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/Tactic/BVDecide/External.lean#L118-L120","name":"Lean.Elab.Tactic.BVDecide.External.runInterruptible.killAndWait","line":118,"kind":"def","docLink":"./Lean/Elab/Tactic/BVDecide/External.html#Lean.Elab.Tactic.BVDecide.External.runInterruptible.killAndWait","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/External.html#Lean.Elab.Tactic.BVDecide.External.runInterruptible.killAndWait\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">External</span>.<span class=\"name\">runInterruptible</span>.<span class=\"name\">killAndWait</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">cfg</span> : <a href=\"./Init/System/IO.html#IO.Process.StdioConfig\">IO.Process.StdioConfig</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">child</span> : <span class=\"fn\"><a href=\"./Init/System/IO.html#IO.Process.Child\">IO.Process.Child</a> <span class=\"fn\">cfg</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/Tactic/BVDecide/External.lean#L103-L116","name":"Lean.Elab.Tactic.BVDecide.External.runInterruptible.go","line":103,"kind":"opaque","docLink":"./Lean/Elab/Tactic/BVDecide/External.html#Lean.Elab.Tactic.BVDecide.External.runInterruptible.go","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/External.html#Lean.Elab.Tactic.BVDecide.External.runInterruptible.go\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">External</span>.<span class=\"name\">runInterruptible</span>.<span class=\"name\">go</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">cfg</span> : <a href=\"./Init/System/IO.html#IO.Process.StdioConfig\">IO.Process.StdioConfig</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">budgetMs</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">child</span> : <span class=\"fn\"><a href=\"./Init/System/IO.html#IO.Process.Child\">IO.Process.Child</a> <span class=\"fn\">cfg</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">stdout </span><span class=\"fn\">stderr</span> : <span class=\"fn\"><a href=\"./Init/Core.html#Task\">Task</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Except\">Except</a> <a href=\"./Init/System/IOError.html#IO.Error\">IO.Error</a> <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">CoreM</a> <span class=\"fn\">(<a href=\"./Lean/Elab/Tactic/BVDecide/External.html#Lean.Elab.Tactic.BVDecide.External.TimedOut\">TimedOut</a> <a href=\"./Init/System/IO.html#IO.Process.Output\">IO.Process.Output</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/Tactic/BVDecide/External.lean#L92-L136","name":"Lean.Elab.Tactic.BVDecide.External.runInterruptible","line":92,"kind":"def","docLink":"./Lean/Elab/Tactic/BVDecide/External.html#Lean.Elab.Tactic.BVDecide.External.runInterruptible","doc":"Run a process with `args` until it terminates or the cancellation token in `CoreM` tells us to abort\nor `timeout` seconds have passed.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/External.html#Lean.Elab.Tactic.BVDecide.External.runInterruptible\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">External</span>.<span class=\"name\">runInterruptible</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">timeout</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">args</span> : <a href=\"./Init/System/IO.html#IO.Process.SpawnArgs\">IO.Process.SpawnArgs</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">CoreM</a> <span class=\"fn\">(<a href=\"./Lean/Elab/Tactic/BVDecide/External.html#Lean.Elab.Tactic.BVDecide.External.TimedOut\">TimedOut</a> <a href=\"./Init/System/IO.html#IO.Process.Output\">IO.Process.Output</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/Tactic/BVDecide/External.lean#L90-L90","name":"Lean.Elab.Tactic.BVDecide.External.TimedOut.timeout","line":90,"kind":"ctor","docLink":"./Lean/Elab/Tactic/BVDecide/External.html#Lean.Elab.Tactic.BVDecide.External.TimedOut.timeout","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/External.html#Lean.Elab.Tactic.BVDecide.External.TimedOut.timeout\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">External</span>.<span class=\"name\">TimedOut</span>.<span class=\"name\">timeout</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Tactic/BVDecide/External.html#Lean.Elab.Tactic.BVDecide.External.TimedOut\">TimedOut</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/Tactic/BVDecide/External.lean#L89-L89","name":"Lean.Elab.Tactic.BVDecide.External.TimedOut.success","line":89,"kind":"ctor","docLink":"./Lean/Elab/Tactic/BVDecide/External.html#Lean.Elab.Tactic.BVDecide.External.TimedOut.success","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/External.html#Lean.Elab.Tactic.BVDecide.External.TimedOut.success\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">External</span>.<span class=\"name\">TimedOut</span>.<span class=\"name\">success</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Tactic/BVDecide/External.html#Lean.Elab.Tactic.BVDecide.External.TimedOut\">TimedOut</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/Tactic/BVDecide/External.lean#L88-L90","name":"Lean.Elab.Tactic.BVDecide.External.TimedOut","line":88,"kind":"inductive","docLink":"./Lean/Elab/Tactic/BVDecide/External.html#Lean.Elab.Tactic.BVDecide.External.TimedOut","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/External.html#Lean.Elab.Tactic.BVDecide.External.TimedOut\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">External</span>.<span class=\"name\">TimedOut</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/Tactic/BVDecide/External.lean#L74-L82","name":"Lean.Elab.Tactic.BVDecide.External.ModelParser.parse","line":74,"kind":"def","docLink":"./Lean/Elab/Tactic/BVDecide/External.html#Lean.Elab.Tactic.BVDecide.External.ModelParser.parse","doc":"Parse the witness format of a SAT solver. The rough grammar for this is:\nline = \"v\" (\" \" lit)*\\n\nterminal_line = \"v\" (\" \" lit)* (\" \" 0)\\n\nwitness = \"s SATISFIABLE\\n\" line+ terminal_line\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/External.html#Lean.Elab.Tactic.BVDecide.External.ModelParser.parse\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">External</span>.<span class=\"name\">ModelParser</span>.<span class=\"name\">parse</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Internal/Parsec/ByteArray.html#Std.Internal.Parsec.ByteArray.Parser\">Std.Internal.Parsec.ByteArray.Parser</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> (<a href=\"./Init/Prelude.html#Bool\">Bool</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a>))</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/Tactic/BVDecide/External.lean#L69-L72","name":"Lean.Elab.Tactic.BVDecide.External.ModelParser.parseHeader","line":69,"kind":"def","docLink":"./Lean/Elab/Tactic/BVDecide/External.html#Lean.Elab.Tactic.BVDecide.External.ModelParser.parseHeader","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/External.html#Lean.Elab.Tactic.BVDecide.External.ModelParser.parseHeader\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">External</span>.<span class=\"name\">ModelParser</span>.<span class=\"name\">parseHeader</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Internal/Parsec/ByteArray.html#Std.Internal.Parsec.ByteArray.Parser\">Std.Internal.Parsec.ByteArray.Parser</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/Tactic/BVDecide/External.lean#L61-L67","name":"Lean.Elab.Tactic.BVDecide.External.ModelParser.parseLines.go","line":61,"kind":"opaque","docLink":"./Lean/Elab/Tactic/BVDecide/External.html#Lean.Elab.Tactic.BVDecide.External.ModelParser.parseLines.go","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/External.html#Lean.Elab.Tactic.BVDecide.External.ModelParser.parseLines.go\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">External</span>.<span class=\"name\">ModelParser</span>.<span class=\"name\">parseLines</span>.<span class=\"name\">go</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">acc</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> (<a href=\"./Init/Prelude.html#Bool\">Bool</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Internal/Parsec/ByteArray.html#Std.Internal.Parsec.ByteArray.Parser\">Std.Internal.Parsec.ByteArray.Parser</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> (<a href=\"./Init/Prelude.html#Bool\">Bool</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a>))</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/Tactic/BVDecide/External.lean#L58-L67","name":"Lean.Elab.Tactic.BVDecide.External.ModelParser.parseLines","line":58,"kind":"def","docLink":"./Lean/Elab/Tactic/BVDecide/External.html#Lean.Elab.Tactic.BVDecide.External.ModelParser.parseLines","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/External.html#Lean.Elab.Tactic.BVDecide.External.ModelParser.parseLines\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">External</span>.<span class=\"name\">ModelParser</span>.<span class=\"name\">parseLines</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Internal/Parsec/ByteArray.html#Std.Internal.Parsec.ByteArray.Parser\">Std.Internal.Parsec.ByteArray.Parser</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> (<a href=\"./Init/Prelude.html#Bool\">Bool</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a>))</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/Tactic/BVDecide/External.lean#L54-L56","name":"Lean.Elab.Tactic.BVDecide.External.ModelParser.parsePartialAssignment.wsLit","line":54,"kind":"def","docLink":"./Lean/Elab/Tactic/BVDecide/External.html#Lean.Elab.Tactic.BVDecide.External.ModelParser.parsePartialAssignment.wsLit","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/External.html#Lean.Elab.Tactic.BVDecide.External.ModelParser.parsePartialAssignment.wsLit\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">External</span>.<span class=\"name\">ModelParser</span>.<span class=\"name\">parsePartialAssignment</span>.<span class=\"name\">wsLit</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Internal/Parsec/ByteArray.html#Std.Internal.Parsec.ByteArray.Parser\">Std.Internal.Parsec.ByteArray.Parser</a> <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/Tactic/BVDecide/External.lean#L41-L56","name":"Lean.Elab.Tactic.BVDecide.External.ModelParser.parsePartialAssignment","line":41,"kind":"def","docLink":"./Lean/Elab/Tactic/BVDecide/External.html#Lean.Elab.Tactic.BVDecide.External.ModelParser.parsePartialAssignment","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/External.html#Lean.Elab.Tactic.BVDecide.External.ModelParser.parsePartialAssignment\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">External</span>.<span class=\"name\">ModelParser</span>.<span class=\"name\">parsePartialAssignment</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Internal/Parsec/ByteArray.html#Std.Internal.Parsec.ByteArray.Parser\">Std.Internal.Parsec.ByteArray.Parser</a> (<a href=\"./Init/Prelude.html#Bool\">Bool</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> (<a href=\"./Init/Prelude.html#Bool\">Bool</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/Tactic/BVDecide/External.lean#L30-L33","name":"Lean.Elab.Tactic.BVDecide.External.SolverResult.unsat","line":30,"kind":"ctor","docLink":"./Lean/Elab/Tactic/BVDecide/External.html#Lean.Elab.Tactic.BVDecide.External.SolverResult.unsat","doc":"The solver returned UNSAT.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/External.html#Lean.Elab.Tactic.BVDecide.External.SolverResult.unsat\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">External</span>.<span class=\"name\">SolverResult</span>.<span class=\"name\">unsat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Tactic/BVDecide/External.html#Lean.Elab.Tactic.BVDecide.External.SolverResult\">SolverResult</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/Tactic/BVDecide/External.lean#L26-L29","name":"Lean.Elab.Tactic.BVDecide.External.SolverResult.sat","line":26,"kind":"ctor","docLink":"./Lean/Elab/Tactic/BVDecide/External.html#Lean.Elab.Tactic.BVDecide.External.SolverResult.sat","doc":"The solver returned SAT with some literal assignment.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/External.html#Lean.Elab.Tactic.BVDecide.External.SolverResult.sat\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">External</span>.<span class=\"name\">SolverResult</span>.<span class=\"name\">sat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">assignment</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> (<a href=\"./Init/Prelude.html#Bool\">Bool</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Tactic/BVDecide/External.html#Lean.Elab.Tactic.BVDecide.External.SolverResult\">SolverResult</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/Tactic/BVDecide/External.lean#L22-L33","name":"Lean.Elab.Tactic.BVDecide.External.SolverResult","line":22,"kind":"inductive","docLink":"./Lean/Elab/Tactic/BVDecide/External.html#Lean.Elab.Tactic.BVDecide.External.SolverResult","doc":"The result of calling a SAT solver.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/External.html#Lean.Elab.Tactic.BVDecide.External.SolverResult\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">External</span>.<span class=\"name\">SolverResult</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"}]}