{"name":"Lean.Meta.CollectMVars","instances":[],"imports":["Lean.Util.CollectMVars","Lean.Meta.Basic"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/CollectMVars.lean#L70-L82","name":"Lean.MVarId.getMVarDependencies.go","line":70,"kind":"opaque","docLink":"./Lean/Meta/CollectMVars.html#Lean.MVarId.getMVarDependencies.go","doc":"Auxiliary definition for `getMVarDependencies`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/CollectMVars.html#Lean.MVarId.getMVarDependencies.go\"><span class=\"name\">Lean</span>.<span class=\"name\">MVarId</span>.<span class=\"name\">getMVarDependencies</span>.<span class=\"name\">go</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">includeDelayed</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/Prelude.html#Bool.false\">false</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">mvarId</span> : <a href=\"./Lean/Expr.html#Lean.MVarId\">MVarId</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Control/StateRef.html#StateRefT'\">StateRefT'</a> <a href=\"./Init/System/IO.html#IO.RealWorld\">IO.RealWorld</a> <span class=\"fn\">(<a href=\"./Std/Data/HashSet/Basic.html#Std.HashSet\">Std.HashSet</a> <a href=\"./Lean/Expr.html#Lean.MVarId\">MVarId</a>)</span> <a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">MetaM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/CollectMVars.lean#L59-L67","name":"Lean.MVarId.getMVarDependencies.addMVars","line":59,"kind":"opaque","docLink":"./Lean/Meta/CollectMVars.html#Lean.MVarId.getMVarDependencies.addMVars","doc":"Auxiliary definition for `getMVarDependencies`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/CollectMVars.html#Lean.MVarId.getMVarDependencies.addMVars\"><span class=\"name\">Lean</span>.<span class=\"name\">MVarId</span>.<span class=\"name\">getMVarDependencies</span>.<span class=\"name\">addMVars</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">includeDelayed</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/Prelude.html#Bool.false\">false</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Control/StateRef.html#StateRefT'\">StateRefT'</a> <a href=\"./Init/System/IO.html#IO.RealWorld\">IO.RealWorld</a> <span class=\"fn\">(<a href=\"./Std/Data/HashSet/Basic.html#Std.HashSet\">Std.HashSet</a> <a href=\"./Lean/Expr.html#Lean.MVarId\">MVarId</a>)</span> <a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">MetaM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/CollectMVars.lean#L49-L82","name":"Lean.MVarId.getMVarDependencies","line":49,"kind":"def","docLink":"./Lean/Meta/CollectMVars.html#Lean.MVarId.getMVarDependencies","doc":"Collect the metavariables which `mvarId` depends on. These are the metavariables\nwhich appear in the type and local context of `mvarId`, as well as the\nmetavariables which *those* metavariables depend on, etc.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/CollectMVars.html#Lean.MVarId.getMVarDependencies\"><span class=\"name\">Lean</span>.<span class=\"name\">MVarId</span>.<span class=\"name\">getMVarDependencies</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">mvarId</span> : <a href=\"./Lean/Expr.html#Lean.MVarId\">MVarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">includeDelayed</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/Prelude.html#Bool.false\">false</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">MetaM</a> <span class=\"fn\">(<a href=\"./Std/Data/HashSet/Basic.html#Std.HashSet\">Std.HashSet</a> <a href=\"./Lean/Expr.html#Lean.MVarId\">MVarId</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/CollectMVars.lean#L45-L47","name":"Lean.Meta.getMVarsAtDecl","line":45,"kind":"def","docLink":"./Lean/Meta/CollectMVars.html#Lean.Meta.getMVarsAtDecl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/CollectMVars.html#Lean.Meta.getMVarsAtDecl\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">getMVarsAtDecl</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">d</span> : <a href=\"./Lean/Declaration.html#Lean.Declaration\">Declaration</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">MetaM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.MVarId\">MVarId</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/CollectMVars.lean#L42-L43","name":"Lean.Meta.collectMVarsAtDecl","line":42,"kind":"def","docLink":"./Lean/Meta/CollectMVars.html#Lean.Meta.collectMVarsAtDecl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/CollectMVars.html#Lean.Meta.collectMVarsAtDecl\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">collectMVarsAtDecl</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">d</span> : <a href=\"./Lean/Declaration.html#Lean.Declaration\">Declaration</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Control/StateRef.html#StateRefT'\">StateRefT'</a> <a href=\"./Init/System/IO.html#IO.RealWorld\">IO.RealWorld</a> <a href=\"./Lean/Util/CollectMVars.html#Lean.CollectMVars.State\">CollectMVars.State</a> <a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">MetaM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/CollectMVars.lean#L37-L40","name":"Lean.Meta.getMVarsNoDelayed","line":37,"kind":"def","docLink":"./Lean/Meta/CollectMVars.html#Lean.Meta.getMVarsNoDelayed","doc":"Similar to `getMVars`, but removes delayed assignments. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/CollectMVars.html#Lean.Meta.getMVarsNoDelayed\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">getMVarsNoDelayed</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">MetaM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.MVarId\">MVarId</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/CollectMVars.lean#L32-L35","name":"Lean.Meta.getMVars","line":32,"kind":"def","docLink":"./Lean/Meta/CollectMVars.html#Lean.Meta.getMVars","doc":"Return metavariables occurring in the given expression. See `collectMVars` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/CollectMVars.html#Lean.Meta.getMVars\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">getMVars</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">MetaM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.MVarId\">MVarId</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/CollectMVars.lean#L12-L30","name":"Lean.Meta.collectMVars","line":12,"kind":"opaque","docLink":"./Lean/Meta/CollectMVars.html#Lean.Meta.collectMVars","doc":"Collect unassigned metavariables occurring in the given expression.\n\nRemark: if `e` contains `?m` and there is a `t` assigned to `?m`, we\ncollect unassigned metavariables occurring in `t`.\n\nRemark: if `e` contains `?m` and `?m` is delayed assigned to some term `t`,\nwe collect `?m` and unassigned metavariables occurring in `t`.\nWe collect `?m` because it has not been assigned yet. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/CollectMVars.html#Lean.Meta.collectMVars\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">collectMVars</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Control/StateRef.html#StateRefT'\">StateRefT'</a> <a href=\"./Init/System/IO.html#IO.RealWorld\">IO.RealWorld</a> <a href=\"./Lean/Util/CollectMVars.html#Lean.CollectMVars.State\">CollectMVars.State</a> <a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">MetaM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"}]}