{"name":"Lean.Compiler.IR.LLVMBindings","instances":[{"typeNames":["LLVM.BasicBlock"],"name":"LLVM.instNonemptyBasicBlock","className":"Nonempty"},{"typeNames":["LLVM.Builder"],"name":"LLVM.instNonemptyBuilder","className":"Nonempty"},{"typeNames":["LLVM.Context"],"name":"LLVM.instNonemptyContext","className":"Nonempty"},{"typeNames":["LLVM.LLVMType"],"name":"LLVM.instNonemptyLLVMType","className":"Nonempty"},{"typeNames":["LLVM.MemoryBuffer"],"name":"LLVM.instNonemptyMemoryBuffer","className":"Nonempty"},{"typeNames":["LLVM.Module"],"name":"LLVM.instNonemptyModule","className":"Nonempty"},{"typeNames":["LLVM.Target"],"name":"LLVM.instNonemptyTarget","className":"Nonempty"},{"typeNames":["LLVM.TargetMachine"],"name":"LLVM.instNonemptyTargetMachine","className":"Nonempty"},{"typeNames":["LLVM.Value"],"name":"LLVM.instNonemptyValue","className":"Nonempty"},{"typeNames":["LLVM.Attribute"],"name":"LLVM.instNonemptyAttribute","className":"Nonempty"}],"imports":["Init.System.IO"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/LLVMBindings.lean#L467-L469","name":"LLVM.constIntUnsigned","line":467,"kind":"def","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.constIntUnsigned","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.constIntUnsigned\"><span class=\"name\">LLVM</span>.<span class=\"name\">constIntUnsigned</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">value</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">signExtend</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/Prelude.html#Bool.false\">false</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">Value</a> <span class=\"fn\">ctx</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/LLVMBindings.lean#L463-L465","name":"LLVM.constIntSizeT","line":463,"kind":"def","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.constIntSizeT","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.constIntSizeT\"><span class=\"name\">LLVM</span>.<span class=\"name\">constIntSizeT</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">value</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">signExtend</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/Prelude.html#Bool.false\">false</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">Value</a> <span class=\"fn\">ctx</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/LLVMBindings.lean#L460-L461","name":"LLVM.constInt64","line":460,"kind":"def","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.constInt64","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.constInt64\"><span class=\"name\">LLVM</span>.<span class=\"name\">constInt64</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">value</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">signExtend</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/Prelude.html#Bool.false\">false</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">Value</a> <span class=\"fn\">ctx</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/LLVMBindings.lean#L457-L458","name":"LLVM.constInt32","line":457,"kind":"def","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.constInt32","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.constInt32\"><span class=\"name\">LLVM</span>.<span class=\"name\">constInt32</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">value</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">signExtend</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/Prelude.html#Bool.false\">false</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">Value</a> <span class=\"fn\">ctx</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/LLVMBindings.lean#L454-L455","name":"LLVM.constInt8","line":454,"kind":"def","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.constInt8","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.constInt8\"><span class=\"name\">LLVM</span>.<span class=\"name\">constInt8</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">value</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">signExtend</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/Prelude.html#Bool.false\">false</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">Value</a> <span class=\"fn\">ctx</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/LLVMBindings.lean#L451-L452","name":"LLVM.constInt1","line":451,"kind":"def","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.constInt1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.constInt1\"><span class=\"name\">LLVM</span>.<span class=\"name\">constInt1</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">value</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">signExtend</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/Prelude.html#Bool.false\">false</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">Value</a> <span class=\"fn\">ctx</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/LLVMBindings.lean#L448-L449","name":"LLVM.constInt'","line":448,"kind":"def","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.constInt'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.constInt'\"><span class=\"name\">LLVM</span>.<span class=\"name\">constInt'</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">width </span><span class=\"fn\">value</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">signExtend</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/Prelude.html#Bool.false\">false</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">Value</a> <span class=\"fn\">ctx</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/LLVMBindings.lean#L445-L446","name":"LLVM.constFalse","line":445,"kind":"def","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.constFalse","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.constFalse\"><span class=\"name\">LLVM</span>.<span class=\"name\">constFalse</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">Value</a> <span class=\"fn\">ctx</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/LLVMBindings.lean#L442-L443","name":"LLVM.constTrue","line":442,"kind":"def","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.constTrue","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.constTrue\"><span class=\"name\">LLVM</span>.<span class=\"name\">constTrue</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">Value</a> <span class=\"fn\">ctx</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/LLVMBindings.lean#L439-L440","name":"LLVM.i8PtrType","line":439,"kind":"def","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.i8PtrType","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.i8PtrType\"><span class=\"name\">LLVM</span>.<span class=\"name\">i8PtrType</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.LLVMType\">LLVMType</a> <span class=\"fn\">ctx</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/LLVMBindings.lean#L436-L437","name":"LLVM.voidPtrType","line":436,"kind":"def","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.voidPtrType","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.voidPtrType\"><span class=\"name\">LLVM</span>.<span class=\"name\">voidPtrType</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.LLVMType\">LLVMType</a> <span class=\"fn\">ctx</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/LLVMBindings.lean#L433-L434","name":"LLVM.i64Type","line":433,"kind":"def","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.i64Type","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.i64Type\"><span class=\"name\">LLVM</span>.<span class=\"name\">i64Type</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.LLVMType\">LLVMType</a> <span class=\"fn\">ctx</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/LLVMBindings.lean#L430-L431","name":"LLVM.i32Type","line":430,"kind":"def","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.i32Type","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.i32Type\"><span class=\"name\">LLVM</span>.<span class=\"name\">i32Type</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.LLVMType\">LLVMType</a> <span class=\"fn\">ctx</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/LLVMBindings.lean#L427-L428","name":"LLVM.i16Type","line":427,"kind":"def","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.i16Type","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.i16Type\"><span class=\"name\">LLVM</span>.<span class=\"name\">i16Type</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.LLVMType\">LLVMType</a> <span class=\"fn\">ctx</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/LLVMBindings.lean#L424-L425","name":"LLVM.i8Type","line":424,"kind":"def","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.i8Type","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.i8Type\"><span class=\"name\">LLVM</span>.<span class=\"name\">i8Type</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.LLVMType\">LLVMType</a> <span class=\"fn\">ctx</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/LLVMBindings.lean#L421-L422","name":"LLVM.i1Type","line":421,"kind":"def","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.i1Type","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.i1Type\"><span class=\"name\">LLVM</span>.<span class=\"name\">i1Type</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.LLVMType\">LLVMType</a> <span class=\"fn\">ctx</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/LLVMBindings.lean#L417-L418","name":"LLVM.setLinkage","line":417,"kind":"opaque","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.setLinkage","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.setLinkage\"><span class=\"name\">LLVM</span>.<span class=\"name\">setLinkage</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">value</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">Value</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">linkage</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Linkage\">Linkage</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/LLVMBindings.lean#L414-L415","name":"LLVM.Linkage.linkerPrivateWeak","line":414,"kind":"def","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Linkage.linkerPrivateWeak","doc":"Like LinkerPrivate, but is weak. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Linkage.linkerPrivateWeak\"><span class=\"name\">LLVM</span>.<span class=\"name\">Linkage</span>.<span class=\"name\">linkerPrivateWeak</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Linkage\">Linkage</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/LLVMBindings.lean#L412-L413","name":"LLVM.Linkage.linkerPrivate","line":412,"kind":"def","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Linkage.linkerPrivate","doc":"Like Private, but linker removes. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Linkage.linkerPrivate\"><span class=\"name\">LLVM</span>.<span class=\"name\">Linkage</span>.<span class=\"name\">linkerPrivate</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Linkage\">Linkage</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/LLVMBindings.lean#L410-L411","name":"LLVM.Linkage.common","line":410,"kind":"def","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Linkage.common","doc":"Tentative definitions "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Linkage.common\"><span class=\"name\">LLVM</span>.<span class=\"name\">Linkage</span>.<span class=\"name\">common</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Linkage\">Linkage</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/LLVMBindings.lean#L408-L409","name":"LLVM.Linkage.ghost","line":408,"kind":"def","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Linkage.ghost","doc":"Obsolete "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Linkage.ghost\"><span class=\"name\">LLVM</span>.<span class=\"name\">Linkage</span>.<span class=\"name\">ghost</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Linkage\">Linkage</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/LLVMBindings.lean#L406-L407","name":"LLVM.Linkage.externalWeak","line":406,"kind":"def","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Linkage.externalWeak","doc":"ExternalWeak linkage description "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Linkage.externalWeak\"><span class=\"name\">LLVM</span>.<span class=\"name\">Linkage</span>.<span class=\"name\">externalWeak</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Linkage\">Linkage</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/LLVMBindings.lean#L404-L405","name":"LLVM.Linkage.dllExport","line":404,"kind":"def","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Linkage.dllExport","doc":"Obsolete "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Linkage.dllExport\"><span class=\"name\">LLVM</span>.<span class=\"name\">Linkage</span>.<span class=\"name\">dllExport</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Linkage\">Linkage</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/LLVMBindings.lean#L402-L403","name":"LLVM.Linkage.dllImport","line":402,"kind":"def","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Linkage.dllImport","doc":"Obsolete "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Linkage.dllImport\"><span class=\"name\">LLVM</span>.<span class=\"name\">Linkage</span>.<span class=\"name\">dllImport</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Linkage\">Linkage</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/LLVMBindings.lean#L400-L401","name":"LLVM.Linkage.private","line":400,"kind":"def","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Linkage.private","doc":"Like Internal, but omit from symbol table "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Linkage.private\"><span class=\"name\">LLVM</span>.<span class=\"name\">Linkage</span>.<span class=\"name\">private</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Linkage\">Linkage</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/LLVMBindings.lean#L398-L399","name":"LLVM.Linkage.internal","line":398,"kind":"def","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Linkage.internal","doc":"Rename collisions when linking (static functions) "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Linkage.internal\"><span class=\"name\">LLVM</span>.<span class=\"name\">Linkage</span>.<span class=\"name\">internal</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Linkage\">Linkage</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/LLVMBindings.lean#L396-L397","name":"LLVM.Linkage.appending","line":396,"kind":"def","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Linkage.appending","doc":"Special purpose, only applies to global arrays "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Linkage.appending\"><span class=\"name\">LLVM</span>.<span class=\"name\">Linkage</span>.<span class=\"name\">appending</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Linkage\">Linkage</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/LLVMBindings.lean#L394-L395","name":"LLVM.Linkage.weakODR","line":394,"kind":"def","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Linkage.weakODR","doc":"Same, but only replaced by something equivalent "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Linkage.weakODR\"><span class=\"name\">LLVM</span>.<span class=\"name\">Linkage</span>.<span class=\"name\">weakODR</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Linkage\">Linkage</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/LLVMBindings.lean#L392-L393","name":"LLVM.Linkage.weakAny","line":392,"kind":"def","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Linkage.weakAny","doc":"Keep one copy of function when linking (weak) "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Linkage.weakAny\"><span class=\"name\">LLVM</span>.<span class=\"name\">Linkage</span>.<span class=\"name\">weakAny</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Linkage\">Linkage</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/LLVMBindings.lean#L390-L391","name":"LLVM.Linkage.linkOnceODRAutoHide","line":390,"kind":"def","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Linkage.linkOnceODRAutoHide","doc":"Obsolete "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Linkage.linkOnceODRAutoHide\"><span class=\"name\">LLVM</span>.<span class=\"name\">Linkage</span>.<span class=\"name\">linkOnceODRAutoHide</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Linkage\">Linkage</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/LLVMBindings.lean#L388-L389","name":"LLVM.Linkage.linkOnceODR","line":388,"kind":"def","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Linkage.linkOnceODR","doc":"Same, but only replaced by something equivalent  "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Linkage.linkOnceODR\"><span class=\"name\">LLVM</span>.<span class=\"name\">Linkage</span>.<span class=\"name\">linkOnceODR</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Linkage\">Linkage</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/LLVMBindings.lean#L386-L387","name":"LLVM.Linkage.linkOnceAny","line":386,"kind":"def","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Linkage.linkOnceAny","doc":"Keep one copy of function when linking (inline) "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Linkage.linkOnceAny\"><span class=\"name\">LLVM</span>.<span class=\"name\">Linkage</span>.<span class=\"name\">linkOnceAny</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Linkage\">Linkage</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/LLVMBindings.lean#L385-L385","name":"LLVM.Linkage.availableExternally","line":385,"kind":"def","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Linkage.availableExternally","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Linkage.availableExternally\"><span class=\"name\">LLVM</span>.<span class=\"name\">Linkage</span>.<span class=\"name\">availableExternally</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Linkage\">Linkage</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/LLVMBindings.lean#L383-L384","name":"LLVM.Linkage.external","line":383,"kind":"def","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Linkage.external","doc":"Externally visible function "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Linkage.external\"><span class=\"name\">LLVM</span>.<span class=\"name\">Linkage</span>.<span class=\"name\">external</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Linkage\">Linkage</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/LLVMBindings.lean#L381-L381","name":"LLVM.Linkage.val","line":381,"kind":"def","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Linkage.val","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Linkage.val\"><span class=\"name\">LLVM</span>.<span class=\"name\">Linkage</span>.<span class=\"name\">val</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Linkage\">Linkage</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#UInt64\">UInt64</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/LLVMBindings.lean#L380-L381","name":"LLVM.Linkage","line":380,"kind":"structure","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Linkage","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Linkage\"><span class=\"name\">LLVM</span>.<span class=\"name\">Linkage</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/LLVMBindings.lean#L376-L377","name":"LLVM.setDLLStorageClass","line":376,"kind":"opaque","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.setDLLStorageClass","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.setDLLStorageClass\"><span class=\"name\">LLVM</span>.<span class=\"name\">setDLLStorageClass</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">value</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">Value</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">dllStorageClass</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.DLLStorageClass\">DLLStorageClass</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/LLVMBindings.lean#L374-L374","name":"LLVM.DLLStorageClass.export","line":374,"kind":"def","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.DLLStorageClass.export","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.DLLStorageClass.export\"><span class=\"name\">LLVM</span>.<span class=\"name\">DLLStorageClass</span>.<span class=\"name\">export</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.DLLStorageClass\">DLLStorageClass</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/LLVMBindings.lean#L373-L373","name":"LLVM.DLLStorageClass.import","line":373,"kind":"def","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.DLLStorageClass.import","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.DLLStorageClass.import\"><span class=\"name\">LLVM</span>.<span class=\"name\">DLLStorageClass</span>.<span class=\"name\">import</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.DLLStorageClass\">DLLStorageClass</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/LLVMBindings.lean#L372-L372","name":"LLVM.DLLStorageClass.default","line":372,"kind":"def","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.DLLStorageClass.default","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.DLLStorageClass.default\"><span class=\"name\">LLVM</span>.<span class=\"name\">DLLStorageClass</span>.<span class=\"name\">default</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.DLLStorageClass\">DLLStorageClass</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/LLVMBindings.lean#L370-L370","name":"LLVM.DLLStorageClass.val","line":370,"kind":"def","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.DLLStorageClass.val","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.DLLStorageClass.val\"><span class=\"name\">LLVM</span>.<span class=\"name\">DLLStorageClass</span>.<span class=\"name\">val</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.DLLStorageClass\">DLLStorageClass</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#UInt64\">UInt64</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/LLVMBindings.lean#L369-L370","name":"LLVM.DLLStorageClass","line":369,"kind":"structure","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.DLLStorageClass","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.DLLStorageClass\"><span class=\"name\">LLVM</span>.<span class=\"name\">DLLStorageClass</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/LLVMBindings.lean#L365-L366","name":"LLVM.setVisibility","line":365,"kind":"opaque","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.setVisibility","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.setVisibility\"><span class=\"name\">LLVM</span>.<span class=\"name\">setVisibility</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">value</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">Value</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">visibility</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Visibility\">Visibility</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/LLVMBindings.lean#L363-L363","name":"LLVM.Visibility.protected","line":363,"kind":"def","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Visibility.protected","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Visibility.protected\"><span class=\"name\">LLVM</span>.<span class=\"name\">Visibility</span>.<span class=\"name\">protected</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Visibility\">Visibility</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/LLVMBindings.lean#L362-L362","name":"LLVM.Visibility.hidden","line":362,"kind":"def","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Visibility.hidden","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Visibility.hidden\"><span class=\"name\">LLVM</span>.<span class=\"name\">Visibility</span>.<span class=\"name\">hidden</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Visibility\">Visibility</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/LLVMBindings.lean#L361-L361","name":"LLVM.Visibility.default","line":361,"kind":"def","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Visibility.default","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Visibility.default\"><span class=\"name\">LLVM</span>.<span class=\"name\">Visibility</span>.<span class=\"name\">default</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Visibility\">Visibility</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/LLVMBindings.lean#L359-L359","name":"LLVM.Visibility.val","line":359,"kind":"def","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Visibility.val","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Visibility.val\"><span class=\"name\">LLVM</span>.<span class=\"name\">Visibility</span>.<span class=\"name\">val</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Visibility\">Visibility</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#UInt64\">UInt64</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/LLVMBindings.lean#L358-L359","name":"LLVM.Visibility","line":358,"kind":"structure","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Visibility","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Visibility\"><span class=\"name\">LLVM</span>.<span class=\"name\">Visibility</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/LLVMBindings.lean#L353-L354","name":"LLVM.addAttributeAtIndex","line":353,"kind":"opaque","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.addAttributeAtIndex","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.addAttributeAtIndex\"><span class=\"name\">LLVM</span>.<span class=\"name\">addAttributeAtIndex</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fn</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">Value</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">idx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.AttributeIndex\">AttributeIndex</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">attr</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Attribute\">Attribute</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/LLVMBindings.lean#L350-L351","name":"LLVM.createStringAttribute","line":350,"kind":"opaque","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.createStringAttribute","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.createStringAttribute\"><span class=\"name\">LLVM</span>.<span class=\"name\">createStringAttribute</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">key </span><span class=\"fn\">value</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Attribute\">Attribute</a> <span class=\"fn\">ctx</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/LLVMBindings.lean#L347-L348","name":"LLVM.verifyModule","line":347,"kind":"opaque","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.verifyModule","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.verifyModule\"><span class=\"name\">LLVM</span>.<span class=\"name\">verifyModule</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Module\">Module</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#String\">String</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/LLVMBindings.lean#L344-L345","name":"LLVM.disposeModule","line":344,"kind":"opaque","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.disposeModule","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.disposeModule\"><span class=\"name\">LLVM</span>.<span class=\"name\">disposeModule</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Module\">Module</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/LLVMBindings.lean#L341-L342","name":"LLVM.disposeTargetMachine","line":341,"kind":"opaque","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.disposeTargetMachine","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.disposeTargetMachine\"><span class=\"name\">LLVM</span>.<span class=\"name\">disposeTargetMachine</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">tm</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.TargetMachine\">TargetMachine</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/LLVMBindings.lean#L315-L316","name":"LLVM.targetMachineEmitToFile","line":315,"kind":"opaque","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.targetMachineEmitToFile","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.targetMachineEmitToFile\"><span class=\"name\">LLVM</span>.<span class=\"name\">targetMachineEmitToFile</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">targetMachine</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.TargetMachine\">TargetMachine</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">module</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Module\">Module</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">filepath</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">codegenType</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.CodegenFileType\">CodegenFileType</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/LLVMBindings.lean#L312-L313","name":"LLVM.createTargetMachine","line":312,"kind":"opaque","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.createTargetMachine","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.createTargetMachine\"><span class=\"name\">LLVM</span>.<span class=\"name\">createTargetMachine</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">target</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Target\">Target</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">tripleStr </span><span class=\"fn\">cpu </span><span class=\"fn\">features</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.TargetMachine\">TargetMachine</a> <span class=\"fn\">ctx</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/LLVMBindings.lean#L309-L310","name":"LLVM.getTargetFromTriple","line":309,"kind":"opaque","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.getTargetFromTriple","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.getTargetFromTriple\"><span class=\"name\">LLVM</span>.<span class=\"name\">getTargetFromTriple</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">triple</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Target\">Target</a> <span class=\"fn\">ctx</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/LLVMBindings.lean#L306-L307","name":"LLVM.getDefaultTargetTriple","line":306,"kind":"opaque","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.getDefaultTargetTriple","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.getDefaultTargetTriple\"><span class=\"name\">LLVM</span>.<span class=\"name\">getDefaultTargetTriple</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <a href=\"./Init/Prelude.html#String\">String</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/LLVMBindings.lean#L303-L304","name":"LLVM.linkModules","line":303,"kind":"opaque","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.linkModules","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.linkModules\"><span class=\"name\">LLVM</span>.<span class=\"name\">linkModules</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">dest </span><span class=\"fn\">src</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Module\">Module</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/LLVMBindings.lean#L300-L301","name":"LLVM.parseBitcode","line":300,"kind":"opaque","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.parseBitcode","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.parseBitcode\"><span class=\"name\">LLVM</span>.<span class=\"name\">parseBitcode</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">membuf</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.MemoryBuffer\">MemoryBuffer</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Module\">Module</a> <span class=\"fn\">ctx</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/LLVMBindings.lean#L297-L298","name":"LLVM.createMemoryBufferWithContentsOfFile","line":297,"kind":"opaque","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.createMemoryBufferWithContentsOfFile","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.createMemoryBufferWithContentsOfFile\"><span class=\"name\">LLVM</span>.<span class=\"name\">createMemoryBufferWithContentsOfFile</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">path</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.MemoryBuffer\">MemoryBuffer</a> <span class=\"fn\">ctx</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/LLVMBindings.lean#L294-L295","name":"LLVM.getParam","line":294,"kind":"opaque","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.getParam","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.getParam\"><span class=\"name\">LLVM</span>.<span class=\"name\">getParam</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fn</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">Value</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ix</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">Value</a> <span class=\"fn\">ctx</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/LLVMBindings.lean#L291-L292","name":"LLVM.countParams","line":291,"kind":"opaque","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.countParams","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.countParams\"><span class=\"name\">LLVM</span>.<span class=\"name\">countParams</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fn</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">Value</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <a href=\"./Init/Prelude.html#UInt64\">UInt64</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/LLVMBindings.lean#L288-L289","name":"LLVM.printModuletoFile","line":288,"kind":"opaque","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.printModuletoFile","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.printModuletoFile\"><span class=\"name\">LLVM</span>.<span class=\"name\">printModuletoFile</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">mod</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Module\">Module</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">file</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/LLVMBindings.lean#L285-L286","name":"LLVM.printModuletoString","line":285,"kind":"opaque","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.printModuletoString","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.printModuletoString\"><span class=\"name\">LLVM</span>.<span class=\"name\">printModuletoString</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">mod</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Module\">Module</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <a href=\"./Init/Prelude.html#String\">String</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/LLVMBindings.lean#L282-L283","name":"LLVM.constInt","line":282,"kind":"opaque","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.constInt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.constInt\"><span class=\"name\">LLVM</span>.<span class=\"name\">constInt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">intty</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.LLVMType\">LLVMType</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">value</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">signExtend</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/Prelude.html#Bool.false\">false</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">Value</a> <span class=\"fn\">ctx</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/LLVMBindings.lean#L279-L280","name":"LLVM.typeOf","line":279,"kind":"opaque","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.typeOf","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.typeOf\"><span class=\"name\">LLVM</span>.<span class=\"name\">typeOf</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">val</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">Value</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.LLVMType\">LLVMType</a> <span class=\"fn\">ctx</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/LLVMBindings.lean#L276-L277","name":"LLVM.getBasicBlockParent","line":276,"kind":"opaque","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.getBasicBlockParent","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.getBasicBlockParent\"><span class=\"name\">LLVM</span>.<span class=\"name\">getBasicBlockParent</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">bb</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.BasicBlock\">BasicBlock</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">Value</a> <span class=\"fn\">ctx</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/LLVMBindings.lean#L273-L274","name":"LLVM.clearInsertionPosition","line":273,"kind":"opaque","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.clearInsertionPosition","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.clearInsertionPosition\"><span class=\"name\">LLVM</span>.<span class=\"name\">clearInsertionPosition</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Context✝</span> : <a href=\"./foundational_types.html\">Sort</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <span class=\"fn\">Context✝</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">builder</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Builder\">Builder</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/LLVMBindings.lean#L270-L271","name":"LLVM.getInsertBlock","line":270,"kind":"opaque","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.getInsertBlock","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.getInsertBlock\"><span class=\"name\">LLVM</span>.<span class=\"name\">getInsertBlock</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Context✝</span> : <a href=\"./foundational_types.html\">Sort</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <span class=\"fn\">Context✝</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">builder</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Builder\">Builder</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.BasicBlock\">BasicBlock</a> <span class=\"fn\">ctx</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/LLVMBindings.lean#L267-L268","name":"LLVM.addCase","line":267,"kind":"opaque","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.addCase","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.addCase\"><span class=\"name\">LLVM</span>.<span class=\"name\">addCase</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">switch </span><span class=\"fn\">onVal</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">Value</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">destBB</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.BasicBlock\">BasicBlock</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/LLVMBindings.lean#L264-L265","name":"LLVM.buildICmp","line":264,"kind":"opaque","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.buildICmp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.buildICmp\"><span class=\"name\">LLVM</span>.<span class=\"name\">buildICmp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">builder</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Builder\">Builder</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">predicate</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.IntPredicate\">IntPredicate</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">Value</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">name</span> : <a href=\"./Init/Prelude.html#String\">String</a> := <span class=\"fn\">&quot;&quot;</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">Value</a> <span class=\"fn\">ctx</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/LLVMBindings.lean#L261-L262","name":"LLVM.buildNot","line":261,"kind":"opaque","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.buildNot","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.buildNot\"><span class=\"name\">LLVM</span>.<span class=\"name\">buildNot</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">builder</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Builder\">Builder</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">Value</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">name</span> : <a href=\"./Init/Prelude.html#String\">String</a> := <span class=\"fn\">&quot;&quot;</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">Value</a> <span class=\"fn\">ctx</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/LLVMBindings.lean#L258-L259","name":"LLVM.buildSub","line":258,"kind":"opaque","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.buildSub","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.buildSub\"><span class=\"name\">LLVM</span>.<span class=\"name\">buildSub</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">builder</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Builder\">Builder</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">Value</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">name</span> : <a href=\"./Init/Prelude.html#String\">String</a> := <span class=\"fn\">&quot;&quot;</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">Value</a> <span class=\"fn\">ctx</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/LLVMBindings.lean#L255-L256","name":"LLVM.buildAdd","line":255,"kind":"opaque","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.buildAdd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.buildAdd\"><span class=\"name\">LLVM</span>.<span class=\"name\">buildAdd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">builder</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Builder\">Builder</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">Value</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">name</span> : <a href=\"./Init/Prelude.html#String\">String</a> := <span class=\"fn\">&quot;&quot;</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">Value</a> <span class=\"fn\">ctx</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/LLVMBindings.lean#L252-L253","name":"LLVM.buildMul","line":252,"kind":"opaque","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.buildMul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.buildMul\"><span class=\"name\">LLVM</span>.<span class=\"name\">buildMul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">builder</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Builder\">Builder</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">Value</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">name</span> : <a href=\"./Init/Prelude.html#String\">String</a> := <span class=\"fn\">&quot;&quot;</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">Value</a> <span class=\"fn\">ctx</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/LLVMBindings.lean#L249-L250","name":"LLVM.buildPtrToInt","line":249,"kind":"opaque","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.buildPtrToInt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.buildPtrToInt\"><span class=\"name\">LLVM</span>.<span class=\"name\">buildPtrToInt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">builder</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Builder\">Builder</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ptr</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">Value</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">destTy</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.LLVMType\">LLVMType</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">name</span> : <a href=\"./Init/Prelude.html#String\">String</a> := <span class=\"fn\">&quot;&quot;</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">Value</a> <span class=\"fn\">ctx</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/LLVMBindings.lean#L246-L247","name":"LLVM.buildSwitch","line":246,"kind":"opaque","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.buildSwitch","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.buildSwitch\"><span class=\"name\">LLVM</span>.<span class=\"name\">buildSwitch</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">builder</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Builder\">Builder</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">val</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">Value</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">elseBB</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.BasicBlock\">BasicBlock</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">numCasesHint</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">Value</a> <span class=\"fn\">ctx</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/LLVMBindings.lean#L243-L244","name":"LLVM.buildSextOrTrunc","line":243,"kind":"opaque","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.buildSextOrTrunc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.buildSextOrTrunc\"><span class=\"name\">LLVM</span>.<span class=\"name\">buildSextOrTrunc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">builder</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Builder\">Builder</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">val</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">Value</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">destTy</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.LLVMType\">LLVMType</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">name</span> : <a href=\"./Init/Prelude.html#String\">String</a> := <span class=\"fn\">&quot;&quot;</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">Value</a> <span class=\"fn\">ctx</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/LLVMBindings.lean#L240-L241","name":"LLVM.buildZext","line":240,"kind":"opaque","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.buildZext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.buildZext\"><span class=\"name\">LLVM</span>.<span class=\"name\">buildZext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">builder</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Builder\">Builder</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">val</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">Value</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">destTy</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.LLVMType\">LLVMType</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">name</span> : <a href=\"./Init/Prelude.html#String\">String</a> := <span class=\"fn\">&quot;&quot;</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">Value</a> <span class=\"fn\">ctx</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/LLVMBindings.lean#L237-L238","name":"LLVM.buildSext","line":237,"kind":"opaque","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.buildSext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.buildSext\"><span class=\"name\">LLVM</span>.<span class=\"name\">buildSext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">builder</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Builder\">Builder</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">val</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">Value</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">destTy</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.LLVMType\">LLVMType</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">name</span> : <a href=\"./Init/Prelude.html#String\">String</a> := <span class=\"fn\">&quot;&quot;</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">Value</a> <span class=\"fn\">ctx</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/LLVMBindings.lean#L234-L235","name":"LLVM.buildInBoundsGEP2","line":234,"kind":"opaque","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.buildInBoundsGEP2","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.buildInBoundsGEP2\"><span class=\"name\">LLVM</span>.<span class=\"name\">buildInBoundsGEP2</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">builder</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Builder\">Builder</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ty</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.LLVMType\">LLVMType</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">base</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">Value</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ixs</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">Value</a> <span class=\"fn\">ctx</span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">name</span> : <a href=\"./Init/Prelude.html#String\">String</a> := <span class=\"fn\">&quot;&quot;</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">Value</a> <span class=\"fn\">ctx</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/LLVMBindings.lean#L231-L232","name":"LLVM.buildGEP2","line":231,"kind":"opaque","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.buildGEP2","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.buildGEP2\"><span class=\"name\">LLVM</span>.<span class=\"name\">buildGEP2</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">builder</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Builder\">Builder</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ty</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.LLVMType\">LLVMType</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">base</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">Value</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ixs</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">Value</a> <span class=\"fn\">ctx</span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">name</span> : <a href=\"./Init/Prelude.html#String\">String</a> := <span class=\"fn\">&quot;&quot;</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">Value</a> <span class=\"fn\">ctx</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/LLVMBindings.lean#L228-L229","name":"LLVM.buildUnreachable","line":228,"kind":"opaque","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.buildUnreachable","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.buildUnreachable\"><span class=\"name\">LLVM</span>.<span class=\"name\">buildUnreachable</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">builder</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Builder\">Builder</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">Value</a> <span class=\"fn\">ctx</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/LLVMBindings.lean#L225-L226","name":"LLVM.buildRet","line":225,"kind":"opaque","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.buildRet","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.buildRet\"><span class=\"name\">LLVM</span>.<span class=\"name\">buildRet</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">builder</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Builder\">Builder</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">val</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">Value</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">Value</a> <span class=\"fn\">ctx</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/LLVMBindings.lean#L222-L223","name":"LLVM.buildStore","line":222,"kind":"opaque","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.buildStore","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.buildStore\"><span class=\"name\">LLVM</span>.<span class=\"name\">buildStore</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">builder</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Builder\">Builder</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">val </span><span class=\"fn\">store_loc_ptr</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">Value</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/LLVMBindings.lean#L219-L220","name":"LLVM.buildLoad2","line":219,"kind":"opaque","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.buildLoad2","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.buildLoad2\"><span class=\"name\">LLVM</span>.<span class=\"name\">buildLoad2</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">builder</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Builder\">Builder</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ty</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.LLVMType\">LLVMType</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">val</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">Value</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">name</span> : <a href=\"./Init/Prelude.html#String\">String</a> := <span class=\"fn\">&quot;&quot;</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">Value</a> <span class=\"fn\">ctx</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/LLVMBindings.lean#L216-L217","name":"LLVM.buildAlloca","line":216,"kind":"opaque","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.buildAlloca","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.buildAlloca\"><span class=\"name\">LLVM</span>.<span class=\"name\">buildAlloca</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">builder</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Builder\">Builder</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ty</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.LLVMType\">LLVMType</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">name</span> : <a href=\"./Init/Prelude.html#String\">String</a> := <span class=\"fn\">&quot;&quot;</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">Value</a> <span class=\"fn\">ctx</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/LLVMBindings.lean#L213-L214","name":"LLVM.buildBr","line":213,"kind":"opaque","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.buildBr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.buildBr\"><span class=\"name\">LLVM</span>.<span class=\"name\">buildBr</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">builder</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Builder\">Builder</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">bb</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.BasicBlock\">BasicBlock</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">Value</a> <span class=\"fn\">ctx</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/LLVMBindings.lean#L210-L211","name":"LLVM.buildCondBr","line":210,"kind":"opaque","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.buildCondBr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.buildCondBr\"><span class=\"name\">LLVM</span>.<span class=\"name\">buildCondBr</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">builder</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Builder\">Builder</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">if_</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">Value</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">thenbb </span><span class=\"fn\">elsebb</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.BasicBlock\">BasicBlock</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">Value</a> <span class=\"fn\">ctx</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/LLVMBindings.lean#L207-L208","name":"LLVM.setTailCall","line":207,"kind":"opaque","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.setTailCall","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.setTailCall\"><span class=\"name\">LLVM</span>.<span class=\"name\">setTailCall</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fn</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">Value</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">istail</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/LLVMBindings.lean#L204-L205","name":"LLVM.buildCall2","line":204,"kind":"opaque","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.buildCall2","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.buildCall2\"><span class=\"name\">LLVM</span>.<span class=\"name\">buildCall2</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">builder</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Builder\">Builder</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ty</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.LLVMType\">LLVMType</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fn</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">Value</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">args</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">Value</a> <span class=\"fn\">ctx</span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">name</span> : <a href=\"./Init/Prelude.html#String\">String</a> := <span class=\"fn\">&quot;&quot;</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">Value</a> <span class=\"fn\">ctx</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/LLVMBindings.lean#L201-L202","name":"LLVM.positionBuilderAtEnd","line":201,"kind":"opaque","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.positionBuilderAtEnd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.positionBuilderAtEnd\"><span class=\"name\">LLVM</span>.<span class=\"name\">positionBuilderAtEnd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Context✝</span> : <a href=\"./foundational_types.html\">Sort</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <span class=\"fn\">Context✝</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">builder</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Builder\">Builder</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">bb</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.BasicBlock\">BasicBlock</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/LLVMBindings.lean#L198-L199","name":"LLVM.positionBuilderBefore","line":198,"kind":"opaque","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.positionBuilderBefore","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.positionBuilderBefore\"><span class=\"name\">LLVM</span>.<span class=\"name\">positionBuilderBefore</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">builder</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Builder\">Builder</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">instr</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">Value</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/LLVMBindings.lean#L195-L196","name":"LLVM.getFirstInstruction","line":195,"kind":"opaque","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.getFirstInstruction","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.getFirstInstruction\"><span class=\"name\">LLVM</span>.<span class=\"name\">getFirstInstruction</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">bb</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.BasicBlock\">BasicBlock</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">Value</a> <span class=\"fn\">ctx</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/LLVMBindings.lean#L192-L193","name":"LLVM.getEntryBasicBlock","line":192,"kind":"opaque","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.getEntryBasicBlock","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.getEntryBasicBlock\"><span class=\"name\">LLVM</span>.<span class=\"name\">getEntryBasicBlock</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fn</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">Value</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.BasicBlock\">BasicBlock</a> <span class=\"fn\">ctx</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/LLVMBindings.lean#L189-L190","name":"LLVM.countBasicBlocks","line":189,"kind":"opaque","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.countBasicBlocks","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.countBasicBlocks\"><span class=\"name\">LLVM</span>.<span class=\"name\">countBasicBlocks</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fn</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">Value</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <a href=\"./Init/Prelude.html#UInt64\">UInt64</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/LLVMBindings.lean#L186-L187","name":"LLVM.appendBasicBlockInContext","line":186,"kind":"opaque","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.appendBasicBlockInContext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.appendBasicBlockInContext\"><span class=\"name\">LLVM</span>.<span class=\"name\">appendBasicBlockInContext</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fn</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">Value</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">name</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.BasicBlock\">BasicBlock</a> <span class=\"fn\">ctx</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/LLVMBindings.lean#L183-L184","name":"LLVM.createBuilderInContext","line":183,"kind":"opaque","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.createBuilderInContext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.createBuilderInContext\"><span class=\"name\">LLVM</span>.<span class=\"name\">createBuilderInContext</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Builder\">Builder</a> <span class=\"fn\">ctx</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/LLVMBindings.lean#L180-L181","name":"LLVM.getUndef","line":180,"kind":"opaque","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.getUndef","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.getUndef\"><span class=\"name\">LLVM</span>.<span class=\"name\">getUndef</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">elemty</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.LLVMType\">LLVMType</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">Value</a> <span class=\"fn\">ctx</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/LLVMBindings.lean#L177-L178","name":"LLVM.constPointerNull","line":177,"kind":"opaque","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.constPointerNull","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.constPointerNull\"><span class=\"name\">LLVM</span>.<span class=\"name\">constPointerNull</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">elemty</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.LLVMType\">LLVMType</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">Value</a> <span class=\"fn\">ctx</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/LLVMBindings.lean#L174-L175","name":"LLVM.constString","line":174,"kind":"opaque","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.constString","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.constString\"><span class=\"name\">LLVM</span>.<span class=\"name\">constString</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">str</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">Value</a> <span class=\"fn\">ctx</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/LLVMBindings.lean#L170-L171","name":"LLVM.constArray","line":170,"kind":"opaque","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.constArray","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.constArray\"><span class=\"name\">LLVM</span>.<span class=\"name\">constArray</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">elemty</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.LLVMType\">LLVMType</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">vals</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">Value</a> <span class=\"fn\">ctx</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.LLVMType\">LLVMType</a> <span class=\"fn\">ctx</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/LLVMBindings.lean#L167-L168","name":"LLVM.arrayType","line":167,"kind":"opaque","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.arrayType","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.arrayType\"><span class=\"name\">LLVM</span>.<span class=\"name\">arrayType</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">elemty</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.LLVMType\">LLVMType</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">nelem</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.LLVMType\">LLVMType</a> <span class=\"fn\">ctx</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/LLVMBindings.lean#L164-L165","name":"LLVM.pointerType","line":164,"kind":"opaque","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.pointerType","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.pointerType\"><span class=\"name\">LLVM</span>.<span class=\"name\">pointerType</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">elemty</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.LLVMType\">LLVMType</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.LLVMType\">LLVMType</a> <span class=\"fn\">ctx</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/LLVMBindings.lean#L161-L162","name":"LLVM.doubleTypeInContext","line":161,"kind":"opaque","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.doubleTypeInContext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.doubleTypeInContext\"><span class=\"name\">LLVM</span>.<span class=\"name\">doubleTypeInContext</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.LLVMType\">LLVMType</a> <span class=\"fn\">ctx</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/LLVMBindings.lean#L158-L159","name":"LLVM.floatTypeInContext","line":158,"kind":"opaque","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.floatTypeInContext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.floatTypeInContext\"><span class=\"name\">LLVM</span>.<span class=\"name\">floatTypeInContext</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.LLVMType\">LLVMType</a> <span class=\"fn\">ctx</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/LLVMBindings.lean#L155-L156","name":"LLVM.opaquePointerTypeInContext","line":155,"kind":"opaque","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.opaquePointerTypeInContext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.opaquePointerTypeInContext\"><span class=\"name\">LLVM</span>.<span class=\"name\">opaquePointerTypeInContext</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">addrspace</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a> := <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.LLVMType\">LLVMType</a> <span class=\"fn\">ctx</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/LLVMBindings.lean#L152-L153","name":"LLVM.intTypeInContext","line":152,"kind":"opaque","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.intTypeInContext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.intTypeInContext\"><span class=\"name\">LLVM</span>.<span class=\"name\">intTypeInContext</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">width</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.LLVMType\">LLVMType</a> <span class=\"fn\">ctx</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/LLVMBindings.lean#L149-L150","name":"LLVM.voidType","line":149,"kind":"opaque","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.voidType","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.voidType\"><span class=\"name\">LLVM</span>.<span class=\"name\">voidType</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.LLVMType\">LLVMType</a> <span class=\"fn\">ctx</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/LLVMBindings.lean#L146-L147","name":"LLVM.functionType","line":146,"kind":"opaque","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.functionType","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.functionType\"><span class=\"name\">LLVM</span>.<span class=\"name\">functionType</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">retty</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.LLVMType\">LLVMType</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">args</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.LLVMType\">LLVMType</a> <span class=\"fn\">ctx</span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">isVarArg</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/Prelude.html#Bool.false\">false</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.LLVMType\">LLVMType</a> <span class=\"fn\">ctx</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/LLVMBindings.lean#L143-L144","name":"LLVM.setInitializer","line":143,"kind":"opaque","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.setInitializer","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.setInitializer\"><span class=\"name\">LLVM</span>.<span class=\"name\">setInitializer</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">glbl </span><span class=\"fn\">val</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">Value</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/LLVMBindings.lean#L140-L141","name":"LLVM.isDeclaration","line":140,"kind":"opaque","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.isDeclaration","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.isDeclaration\"><span class=\"name\">LLVM</span>.<span class=\"name\">isDeclaration</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">global</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">Value</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/LLVMBindings.lean#L137-L138","name":"LLVM.buildGlobalString","line":137,"kind":"opaque","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.buildGlobalString","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.buildGlobalString\"><span class=\"name\">LLVM</span>.<span class=\"name\">buildGlobalString</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">builder</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Builder\">Builder</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">value</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">name</span> : <a href=\"./Init/Prelude.html#String\">String</a> := <span class=\"fn\">&quot;&quot;</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">Value</a> <span class=\"fn\">ctx</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/LLVMBindings.lean#L134-L135","name":"LLVM.getNextGlobal","line":134,"kind":"opaque","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.getNextGlobal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.getNextGlobal\"><span class=\"name\">LLVM</span>.<span class=\"name\">getNextGlobal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">glbl</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">Value</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">Value</a> <span class=\"fn\">ctx</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/LLVMBindings.lean#L131-L132","name":"LLVM.getFirstGlobal","line":131,"kind":"opaque","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.getFirstGlobal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.getFirstGlobal\"><span class=\"name\">LLVM</span>.<span class=\"name\">getFirstGlobal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Module\">Module</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">Value</a> <span class=\"fn\">ctx</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/LLVMBindings.lean#L128-L129","name":"LLVM.getNamedGlobal","line":128,"kind":"opaque","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.getNamedGlobal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.getNamedGlobal\"><span class=\"name\">LLVM</span>.<span class=\"name\">getNamedGlobal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Module\">Module</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">name</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">Value</a> <span class=\"fn\">ctx</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/LLVMBindings.lean#L125-L126","name":"LLVM.addGlobal","line":125,"kind":"opaque","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.addGlobal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.addGlobal\"><span class=\"name\">LLVM</span>.<span class=\"name\">addGlobal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Module\">Module</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">name</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">type</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.LLVMType\">LLVMType</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">Value</a> <span class=\"fn\">ctx</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/LLVMBindings.lean#L122-L123","name":"LLVM.getNamedFunction","line":122,"kind":"opaque","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.getNamedFunction","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.getNamedFunction\"><span class=\"name\">LLVM</span>.<span class=\"name\">getNamedFunction</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Module\">Module</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">name</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">Value</a> <span class=\"fn\">ctx</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/LLVMBindings.lean#L119-L120","name":"LLVM.getNextFunction","line":119,"kind":"opaque","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.getNextFunction","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.getNextFunction\"><span class=\"name\">LLVM</span>.<span class=\"name\">getNextFunction</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">glbl</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">Value</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">Value</a> <span class=\"fn\">ctx</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/LLVMBindings.lean#L116-L117","name":"LLVM.getFirstFunction","line":116,"kind":"opaque","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.getFirstFunction","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.getFirstFunction\"><span class=\"name\">LLVM</span>.<span class=\"name\">getFirstFunction</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Module\">Module</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">Value</a> <span class=\"fn\">ctx</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/LLVMBindings.lean#L113-L114","name":"LLVM.addFunction","line":113,"kind":"opaque","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.addFunction","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.addFunction\"><span class=\"name\">LLVM</span>.<span class=\"name\">addFunction</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Module\">Module</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">name</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">type</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.LLVMType\">LLVMType</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">Value</a> <span class=\"fn\">ctx</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/LLVMBindings.lean#L110-L111","name":"LLVM.writeBitcodeToFile","line":110,"kind":"opaque","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.writeBitcodeToFile","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.writeBitcodeToFile\"><span class=\"name\">LLVM</span>.<span class=\"name\">writeBitcodeToFile</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Module\">Module</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">path</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/LLVMBindings.lean#L107-L108","name":"LLVM.moduleToString","line":107,"kind":"opaque","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.moduleToString","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.moduleToString\"><span class=\"name\">LLVM</span>.<span class=\"name\">moduleToString</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Module\">Module</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <a href=\"./Init/Prelude.html#String\">String</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/LLVMBindings.lean#L104-L105","name":"LLVM.createModule","line":104,"kind":"opaque","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.createModule","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.createModule\"><span class=\"name\">LLVM</span>.<span class=\"name\">createModule</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">name</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Module\">Module</a> <span class=\"fn\">ctx</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/LLVMBindings.lean#L101-L102","name":"LLVM.createContext","line":101,"kind":"opaque","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.createContext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.createContext\"><span class=\"name\">LLVM</span>.<span class=\"name\">createContext</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/LLVMBindings.lean#L98-L99","name":"LLVM.llvmInitializeTargetInfo","line":98,"kind":"opaque","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.llvmInitializeTargetInfo","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.llvmInitializeTargetInfo\"><span class=\"name\">LLVM</span>.<span class=\"name\">llvmInitializeTargetInfo</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/LLVMBindings.lean#L96-L96","name":"LLVM.instNonemptyAttribute","line":96,"kind":"instance","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.instNonemptyAttribute","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.instNonemptyAttribute\"><span class=\"name\">LLVM</span>.<span class=\"name\">instNonemptyAttribute</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Attribute\">Attribute</a> <span class=\"fn\">ctx</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/LLVMBindings.lean#L95-L95","name":"LLVM.Attribute.ptr","line":95,"kind":"def","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Attribute.ptr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Attribute.ptr\"><span class=\"name\">LLVM</span>.<span class=\"name\">Attribute</span>.<span class=\"name\">ptr</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Attribute\">Attribute</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#USize\">USize</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/LLVMBindings.lean#L94-L95","name":"LLVM.Attribute","line":94,"kind":"structure","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Attribute","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Attribute\"><span class=\"name\">LLVM</span>.<span class=\"name\">Attribute</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/LLVMBindings.lean#L91-L92","name":"LLVM.Value.getName","line":91,"kind":"opaque","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value.getName","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value.getName\"><span class=\"name\">LLVM</span>.<span class=\"name\">Value</span>.<span class=\"name\">getName</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">value</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">Value</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <a href=\"./Init/Prelude.html#String\">String</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/LLVMBindings.lean#L88-L89","name":"LLVM.Value.isNull","line":88,"kind":"def","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value.isNull","doc":"Check if the value is a null pointer. -"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value.isNull\"><span class=\"name\">LLVM</span>.<span class=\"name\">Value</span>.<span class=\"name\">isNull</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">v</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">Value</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/LLVMBindings.lean#L86-L86","name":"LLVM.instNonemptyValue","line":86,"kind":"instance","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.instNonemptyValue","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.instNonemptyValue\"><span class=\"name\">LLVM</span>.<span class=\"name\">instNonemptyValue</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">Value</a> <span class=\"fn\">ctx</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/LLVMBindings.lean#L85-L85","name":"LLVM.Value.ptr","line":85,"kind":"def","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value.ptr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value.ptr\"><span class=\"name\">LLVM</span>.<span class=\"name\">Value</span>.<span class=\"name\">ptr</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">Value</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#USize\">USize</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/LLVMBindings.lean#L84-L85","name":"LLVM.Value","line":84,"kind":"structure","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\"><span class=\"name\">LLVM</span>.<span class=\"name\">Value</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/LLVMBindings.lean#L82-L82","name":"LLVM.instNonemptyTargetMachine","line":82,"kind":"instance","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.instNonemptyTargetMachine","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.instNonemptyTargetMachine\"><span class=\"name\">LLVM</span>.<span class=\"name\">instNonemptyTargetMachine</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.TargetMachine\">TargetMachine</a> <span class=\"fn\">ctx</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/LLVMBindings.lean#L81-L81","name":"LLVM.TargetMachine.ptr","line":81,"kind":"def","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.TargetMachine.ptr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.TargetMachine.ptr\"><span class=\"name\">LLVM</span>.<span class=\"name\">TargetMachine</span>.<span class=\"name\">ptr</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.TargetMachine\">TargetMachine</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#USize\">USize</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/LLVMBindings.lean#L80-L81","name":"LLVM.TargetMachine","line":80,"kind":"structure","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.TargetMachine","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.TargetMachine\"><span class=\"name\">LLVM</span>.<span class=\"name\">TargetMachine</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/LLVMBindings.lean#L78-L78","name":"LLVM.instNonemptyTarget","line":78,"kind":"instance","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.instNonemptyTarget","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.instNonemptyTarget\"><span class=\"name\">LLVM</span>.<span class=\"name\">instNonemptyTarget</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Target\">Target</a> <span class=\"fn\">ctx</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/LLVMBindings.lean#L77-L77","name":"LLVM.Target.ptr","line":77,"kind":"def","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Target.ptr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Target.ptr\"><span class=\"name\">LLVM</span>.<span class=\"name\">Target</span>.<span class=\"name\">ptr</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Target\">Target</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#USize\">USize</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/LLVMBindings.lean#L76-L77","name":"LLVM.Target","line":76,"kind":"structure","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Target","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Target\"><span class=\"name\">LLVM</span>.<span class=\"name\">Target</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/LLVMBindings.lean#L64-L64","name":"LLVM.instNonemptyModule","line":64,"kind":"instance","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.instNonemptyModule","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.instNonemptyModule\"><span class=\"name\">LLVM</span>.<span class=\"name\">instNonemptyModule</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Module\">Module</a> <span class=\"fn\">ctx</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/LLVMBindings.lean#L63-L63","name":"LLVM.Module.ptr","line":63,"kind":"def","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Module.ptr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Module.ptr\"><span class=\"name\">LLVM</span>.<span class=\"name\">Module</span>.<span class=\"name\">ptr</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Module\">Module</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#USize\">USize</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/LLVMBindings.lean#L62-L63","name":"LLVM.Module","line":62,"kind":"structure","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Module","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Module\"><span class=\"name\">LLVM</span>.<span class=\"name\">Module</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/LLVMBindings.lean#L60-L60","name":"LLVM.instNonemptyMemoryBuffer","line":60,"kind":"instance","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.instNonemptyMemoryBuffer","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.instNonemptyMemoryBuffer\"><span class=\"name\">LLVM</span>.<span class=\"name\">instNonemptyMemoryBuffer</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.MemoryBuffer\">MemoryBuffer</a> <span class=\"fn\">ctx</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/LLVMBindings.lean#L59-L59","name":"LLVM.MemoryBuffer.ptr","line":59,"kind":"def","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.MemoryBuffer.ptr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.MemoryBuffer.ptr\"><span class=\"name\">LLVM</span>.<span class=\"name\">MemoryBuffer</span>.<span class=\"name\">ptr</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.MemoryBuffer\">MemoryBuffer</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#USize\">USize</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/LLVMBindings.lean#L58-L59","name":"LLVM.MemoryBuffer","line":58,"kind":"structure","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.MemoryBuffer","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.MemoryBuffer\"><span class=\"name\">LLVM</span>.<span class=\"name\">MemoryBuffer</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/LLVMBindings.lean#L56-L56","name":"LLVM.instNonemptyLLVMType","line":56,"kind":"instance","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.instNonemptyLLVMType","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.instNonemptyLLVMType\"><span class=\"name\">LLVM</span>.<span class=\"name\">instNonemptyLLVMType</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.LLVMType\">LLVMType</a> <span class=\"fn\">ctx</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/LLVMBindings.lean#L55-L55","name":"LLVM.LLVMType.ptr","line":55,"kind":"def","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.LLVMType.ptr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.LLVMType.ptr\"><span class=\"name\">LLVM</span>.<span class=\"name\">LLVMType</span>.<span class=\"name\">ptr</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.LLVMType\">LLVMType</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#USize\">USize</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/LLVMBindings.lean#L54-L55","name":"LLVM.LLVMType","line":54,"kind":"structure","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.LLVMType","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.LLVMType\"><span class=\"name\">LLVM</span>.<span class=\"name\">LLVMType</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/LLVMBindings.lean#L52-L52","name":"LLVM.instNonemptyContext","line":52,"kind":"instance","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.instNonemptyContext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.instNonemptyContext\"><span class=\"name\">LLVM</span>.<span class=\"name\">instNonemptyContext</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/LLVMBindings.lean#L51-L51","name":"LLVM.Context.ptr","line":51,"kind":"def","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context.ptr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context.ptr\"><span class=\"name\">LLVM</span>.<span class=\"name\">Context</span>.<span class=\"name\">ptr</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">Context</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#USize\">USize</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/LLVMBindings.lean#L50-L51","name":"LLVM.Context","line":50,"kind":"structure","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\"><span class=\"name\">LLVM</span>.<span class=\"name\">Context</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/LLVMBindings.lean#L48-L48","name":"LLVM.instNonemptyBuilder","line":48,"kind":"instance","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.instNonemptyBuilder","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.instNonemptyBuilder\"><span class=\"name\">LLVM</span>.<span class=\"name\">instNonemptyBuilder</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Context✝</span> : <a href=\"./foundational_types.html\">Sort</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <span class=\"fn\">Context✝</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Builder\">Builder</a> <span class=\"fn\">ctx</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/LLVMBindings.lean#L47-L47","name":"LLVM.Builder.ptr","line":47,"kind":"def","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Builder.ptr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Builder.ptr\"><span class=\"name\">LLVM</span>.<span class=\"name\">Builder</span>.<span class=\"name\">ptr</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Context</span> : <a href=\"./foundational_types.html\">Sort</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <span class=\"fn\">Context</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Builder\">Builder</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#USize\">USize</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/LLVMBindings.lean#L46-L47","name":"LLVM.Builder","line":46,"kind":"structure","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Builder","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Builder\"><span class=\"name\">LLVM</span>.<span class=\"name\">Builder</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Context</span> : <a href=\"./foundational_types.html\">Sort</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <span class=\"fn\">Context</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/LLVMBindings.lean#L44-L44","name":"LLVM.instNonemptyBasicBlock","line":44,"kind":"instance","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.instNonemptyBasicBlock","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.instNonemptyBasicBlock\"><span class=\"name\">LLVM</span>.<span class=\"name\">instNonemptyBasicBlock</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Context✝</span> : <a href=\"./foundational_types.html\">Sort</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <span class=\"fn\">Context✝</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.BasicBlock\">BasicBlock</a> <span class=\"fn\">ctx</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/LLVMBindings.lean#L43-L43","name":"LLVM.BasicBlock.ptr","line":43,"kind":"def","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.BasicBlock.ptr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.BasicBlock.ptr\"><span class=\"name\">LLVM</span>.<span class=\"name\">BasicBlock</span>.<span class=\"name\">ptr</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Context</span> : <a href=\"./foundational_types.html\">Sort</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <span class=\"fn\">Context</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.BasicBlock\">BasicBlock</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#USize\">USize</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/LLVMBindings.lean#L42-L43","name":"LLVM.BasicBlock","line":42,"kind":"structure","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.BasicBlock","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.BasicBlock\"><span class=\"name\">LLVM</span>.<span class=\"name\">BasicBlock</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Context</span> : <a href=\"./foundational_types.html\">Sort</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <span class=\"fn\">Context</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/LLVMBindings.lean#L40-L40","name":"LLVM.AttributeIndex.AttributeFunctionIndex","line":40,"kind":"def","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.AttributeIndex.AttributeFunctionIndex","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.AttributeIndex.AttributeFunctionIndex\"><span class=\"name\">LLVM</span>.<span class=\"name\">AttributeIndex</span>.<span class=\"name\">AttributeFunctionIndex</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.AttributeIndex\">AttributeIndex</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/LLVMBindings.lean#L38-L38","name":"LLVM.AttributeIndex.AttributeReturnIndex","line":38,"kind":"def","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.AttributeIndex.AttributeReturnIndex","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.AttributeIndex.AttributeReturnIndex\"><span class=\"name\">LLVM</span>.<span class=\"name\">AttributeIndex</span>.<span class=\"name\">AttributeReturnIndex</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.AttributeIndex\">AttributeIndex</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/LLVMBindings.lean#L36-L36","name":"LLVM.AttributeIndex.val","line":36,"kind":"def","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.AttributeIndex.val","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.AttributeIndex.val\"><span class=\"name\">LLVM</span>.<span class=\"name\">AttributeIndex</span>.<span class=\"name\">val</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.AttributeIndex\">AttributeIndex</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#UInt64\">UInt64</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/LLVMBindings.lean#L35-L36","name":"LLVM.AttributeIndex","line":35,"kind":"structure","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.AttributeIndex","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.AttributeIndex\"><span class=\"name\">LLVM</span>.<span class=\"name\">AttributeIndex</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/LLVMBindings.lean#L32-L32","name":"LLVM.IntPredicate.UGT","line":32,"kind":"def","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.IntPredicate.UGT","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.IntPredicate.UGT\"><span class=\"name\">LLVM</span>.<span class=\"name\">IntPredicate</span>.<span class=\"name\">UGT</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.IntPredicate\">IntPredicate</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/LLVMBindings.lean#L31-L31","name":"LLVM.IntPredicate.NE","line":31,"kind":"def","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.IntPredicate.NE","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.IntPredicate.NE\"><span class=\"name\">LLVM</span>.<span class=\"name\">IntPredicate</span>.<span class=\"name\">NE</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.IntPredicate\">IntPredicate</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/LLVMBindings.lean#L30-L30","name":"LLVM.IntPredicate.EQ","line":30,"kind":"def","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.IntPredicate.EQ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.IntPredicate.EQ\"><span class=\"name\">LLVM</span>.<span class=\"name\">IntPredicate</span>.<span class=\"name\">EQ</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.IntPredicate\">IntPredicate</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/LLVMBindings.lean#L28-L28","name":"LLVM.IntPredicate.val","line":28,"kind":"def","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.IntPredicate.val","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.IntPredicate.val\"><span class=\"name\">LLVM</span>.<span class=\"name\">IntPredicate</span>.<span class=\"name\">val</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.IntPredicate\">IntPredicate</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#UInt64\">UInt64</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/LLVMBindings.lean#L27-L28","name":"LLVM.IntPredicate","line":27,"kind":"structure","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.IntPredicate","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.IntPredicate\"><span class=\"name\">LLVM</span>.<span class=\"name\">IntPredicate</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/LLVMBindings.lean#L24-L24","name":"LLVM.CodegenFileType.ObjectFile","line":24,"kind":"def","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.CodegenFileType.ObjectFile","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.CodegenFileType.ObjectFile\"><span class=\"name\">LLVM</span>.<span class=\"name\">CodegenFileType</span>.<span class=\"name\">ObjectFile</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.CodegenFileType\">CodegenFileType</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/LLVMBindings.lean#L23-L23","name":"LLVM.CodegenFileType.AssemblyFile","line":23,"kind":"def","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.CodegenFileType.AssemblyFile","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.CodegenFileType.AssemblyFile\"><span class=\"name\">LLVM</span>.<span class=\"name\">CodegenFileType</span>.<span class=\"name\">AssemblyFile</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.CodegenFileType\">CodegenFileType</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/LLVMBindings.lean#L21-L21","name":"LLVM.CodegenFileType.val","line":21,"kind":"def","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.CodegenFileType.val","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.CodegenFileType.val\"><span class=\"name\">LLVM</span>.<span class=\"name\">CodegenFileType</span>.<span class=\"name\">val</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.CodegenFileType\">CodegenFileType</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#UInt64\">UInt64</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/LLVMBindings.lean#L20-L21","name":"LLVM.CodegenFileType","line":20,"kind":"structure","docLink":"./Lean/Compiler/IR/LLVMBindings.html#LLVM.CodegenFileType","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.CodegenFileType\"><span class=\"name\">LLVM</span>.<span class=\"name\">CodegenFileType</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"}]}