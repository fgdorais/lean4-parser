{"name":"Lean.Meta.Tactic.Grind.MatchDiscrOnly","instances":[],"imports":["Init.Grind.Util","Init.Simproc","Lean.Meta.Tactic.Simp.Simproc","Lean.Meta.Tactic.Simp.Rewrite"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/Grind/MatchDiscrOnly.lean#L38-L52","name":"Lean.Meta.Grind.eraseSimpMatchDiscrsOnly","line":38,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/MatchDiscrOnly.html#Lean.Meta.Grind.eraseSimpMatchDiscrsOnly","doc":"Erases `Grind.simpMatchDiscrsOnly` annotations. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/MatchDiscrOnly.html#Lean.Meta.Grind.eraseSimpMatchDiscrsOnly\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">eraseSimpMatchDiscrsOnly</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">MetaM</a> <a href=\"./Lean/Meta/Tactic/Simp/Types.html#Lean.Meta.Simp.Result\">Simp.Result</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/Grind/MatchDiscrOnly.lean#L34-L36","name":"Lean.Meta.Grind.addSimpMatchDiscrsOnly","line":34,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/MatchDiscrOnly.html#Lean.Meta.Grind.addSimpMatchDiscrsOnly","doc":"Adds `reduceSimpMatchDiscrsOnly` to `s` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/MatchDiscrOnly.html#Lean.Meta.Grind.addSimpMatchDiscrsOnly\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">addSimpMatchDiscrsOnly</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Lean/Meta/Tactic/Simp/Types.html#Lean.Meta.Simp.Simprocs\">Simprocs</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">CoreM</a> <a href=\"./Lean/Meta/Tactic/Simp/Types.html#Lean.Meta.Simp.Simprocs\">Simprocs</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/Grind/MatchDiscrOnly.lean#L24-L32","name":"Lean.Meta.Grind.reduceSimpMatchDiscrsOnly","line":24,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/MatchDiscrOnly.html#Lean.Meta.Grind.reduceSimpMatchDiscrsOnly","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/MatchDiscrOnly.html#Lean.Meta.Grind.reduceSimpMatchDiscrsOnly\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">reduceSimpMatchDiscrsOnly</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Simp/Types.html#Lean.Meta.Simp.Simproc\">Simp.Simproc</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/Grind/MatchDiscrOnly.lean#L21-L22","name":"Lean.Meta.Grind.isSimpMatchDiscrsOnly","line":21,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/MatchDiscrOnly.html#Lean.Meta.Grind.isSimpMatchDiscrsOnly","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/MatchDiscrOnly.html#Lean.Meta.Grind.isSimpMatchDiscrsOnly\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">isSimpMatchDiscrsOnly</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/Grind/MatchDiscrOnly.lean#L13-L19","name":"Lean.Meta.Grind.markAsSimpMatchDiscrsOnly","line":13,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/MatchDiscrOnly.html#Lean.Meta.Grind.markAsSimpMatchDiscrsOnly","doc":"Returns `Grind.simpMatchDiscrsOnly e`. Recall that `Grind.simpMatchDiscrsOnly` is\na gadget for instructing the `grind` simplifier to only normalize/simplify\nthe discriminants of a `match`-expression. See `reduceSimpMatchDiscrsOnly`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/MatchDiscrOnly.html#Lean.Meta.Grind.markAsSimpMatchDiscrsOnly\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">markAsSimpMatchDiscrsOnly</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">MetaM</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span></div></div>"}]}