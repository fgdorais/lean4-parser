{"name":"Lean.Util.InstantiateLevelParams","instances":[],"imports":["Lean.Util.ReplaceExpr"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Util/InstantiateLevelParams.lean#L53-L60","name":"Lean.Expr.instantiateLevelParamsArray","line":53,"kind":"def","docLink":"./Lean/Util/InstantiateLevelParams.html#Lean.Expr.instantiateLevelParamsArray","doc":"Instantiate universe level parameters names `paramNames` with `lvls` in `e`.\nIf the two arrays have different length, the smallest one is used.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/InstantiateLevelParams.html#Lean.Expr.instantiateLevelParamsArray\"><span class=\"name\">Lean</span>.<span class=\"name\">Expr</span>.<span class=\"name\">instantiateLevelParamsArray</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">paramNames</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Lean.Name\">Name</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">lvls</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Level.html#Lean.Level\">Level</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Util/InstantiateLevelParams.lean#L35-L42","name":"Lean.Expr.instantiateLevelParamsNoCache","line":35,"kind":"def","docLink":"./Lean/Util/InstantiateLevelParams.html#Lean.Expr.instantiateLevelParamsNoCache","doc":"Instantiate universe level parameters names `paramNames` with `lvls` in `e`.\nIf the two lists have different length, the smallest one is used.\n(Does not preserve expression sharing.)\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/InstantiateLevelParams.html#Lean.Expr.instantiateLevelParamsNoCache\"><span class=\"name\">Lean</span>.<span class=\"name\">Expr</span>.<span class=\"name\">instantiateLevelParamsNoCache</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">paramNames</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Prelude.html#Lean.Name\">Name</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">lvls</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Lean/Level.html#Lean.Level\">Level</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Util/InstantiateLevelParams.lean#L27-L33","name":"Lean.Expr.instantiateLevelParams","line":27,"kind":"def","docLink":"./Lean/Util/InstantiateLevelParams.html#Lean.Expr.instantiateLevelParams","doc":"Instantiate universe level parameters names `paramNames` with `lvls` in `e`.\nIf the two lists have different length, the smallest one is used.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/InstantiateLevelParams.html#Lean.Expr.instantiateLevelParams\"><span class=\"name\">Lean</span>.<span class=\"name\">Expr</span>.<span class=\"name\">instantiateLevelParams</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">paramNames</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Prelude.html#Lean.Name\">Name</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">lvls</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Lean/Level.html#Lean.Level\">Level</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Util/InstantiateLevelParams.lean#L17-L21","name":"Lean.Expr.instantiateLevelParamsCore.replaceFn","line":17,"kind":"def","docLink":"./Lean/Util/InstantiateLevelParams.html#Lean.Expr.instantiateLevelParamsCore.replaceFn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/InstantiateLevelParams.html#Lean.Expr.instantiateLevelParamsCore.replaceFn\"><span class=\"name\">Lean</span>.<span class=\"name\">Expr</span>.<span class=\"name\">instantiateLevelParamsCore</span>.<span class=\"name\">replaceFn</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.Name\">Name</a> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Level.html#Lean.Level\">Level</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Util/InstantiateLevelParams.lean#L11-L21","name":"Lean.Expr.instantiateLevelParamsCore","line":11,"kind":"def","docLink":"./Lean/Util/InstantiateLevelParams.html#Lean.Expr.instantiateLevelParamsCore","doc":"Instantiate level parameters\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/InstantiateLevelParams.html#Lean.Expr.instantiateLevelParamsCore\"><span class=\"name\">Lean</span>.<span class=\"name\">Expr</span>.<span class=\"name\">instantiateLevelParamsCore</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.Name\">Name</a> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Level.html#Lean.Level\">Level</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></div></div>"}]}