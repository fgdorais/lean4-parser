{"name":"Lean.Meta.Tactic.Grind.Arith.Main","instances":[],"imports":["Lean.Meta.Tactic.Grind.PropagatorAttr","Lean.Meta.Tactic.Grind.Combinators","Lean.Meta.Tactic.Grind.Arith.Offset","Lean.Meta.Tactic.Grind.Arith.Cutsat.LeCnstr","Lean.Meta.Tactic.Grind.Arith.Cutsat.Search","Lean.Meta.Tactic.Grind.Arith.CommRing.EqCnstr"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/Grind/Arith/Main.lean#L40-L54","name":"Lean.Meta.Grind.Arith.check","line":40,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Arith/Main.html#Lean.Meta.Grind.Arith.check","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Main.html#Lean.Meta.Grind.Arith.check\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">check</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Grind/Combinators.html#Lean.Meta.Grind.GrindTactic\">GrindTactic</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/Grind/Arith/Main.lean#L30-L38","name":"Lean.Meta.Grind.Arith.propagateLE","line":30,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Arith/Main.html#Lean.Meta.Grind.Arith.propagateLE","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Main.html#Lean.Meta.Grind.Arith.propagateLE\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">propagateLE</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.Propagator\">Propagator</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/Grind/Arith/Main.lean#L23-L26","name":"Lean.Meta.Grind.Arith.Offset.assertFalse","line":23,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Arith/Main.html#Lean.Meta.Grind.Arith.Offset.assertFalse","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Main.html#Lean.Meta.Grind.Arith.Offset.assertFalse\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Offset</span>.<span class=\"name\">assertFalse</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Arith/Offset/Util.html#Lean.Meta.Grind.Arith.Offset.Cnstr\">Cnstr</a> <a href=\"./Lean/Meta/Tactic/Grind/Arith/Offset/Types.html#Lean.Meta.Grind.Arith.Offset.NodeId\">NodeId</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.GoalM\">GoalM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/Grind/Arith/Main.lean#L20-L21","name":"Lean.Meta.Grind.Arith.Offset.assertTrue","line":20,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Arith/Main.html#Lean.Meta.Grind.Arith.Offset.assertTrue","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Main.html#Lean.Meta.Grind.Arith.Offset.assertTrue\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Offset</span>.<span class=\"name\">assertTrue</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Arith/Offset/Util.html#Lean.Meta.Grind.Arith.Offset.Cnstr\">Cnstr</a> <a href=\"./Lean/Meta/Tactic/Grind/Arith/Offset/Types.html#Lean.Meta.Grind.Arith.Offset.NodeId\">NodeId</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.GoalM\">GoalM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/Grind/Arith/Main.lean#L17-L18","name":"Lean.Meta.Grind.Arith.Offset.isCnstr?","line":17,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Arith/Main.html#Lean.Meta.Grind.Arith.Offset.isCnstr?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Main.html#Lean.Meta.Grind.Arith.Offset.isCnstr?\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Offset</span>.<span class=\"name\">isCnstr?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.GoalM\">GoalM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">(<a href=\"./Lean/Meta/Tactic/Grind/Arith/Offset/Util.html#Lean.Meta.Grind.Arith.Offset.Cnstr\">Cnstr</a> <a href=\"./Lean/Meta/Tactic/Grind/Arith/Offset/Types.html#Lean.Meta.Grind.Arith.Offset.NodeId\">NodeId</a>)</span>)</span></span></div></div>"}]}