{"name":"Lean.Elab.Tactic.BVDecide.Frontend.Normalize.AC","instances":[{"typeNames":["Lean.Elab.Tactic.BVDecide.Frontend.Normalize.Op"],"name":"Lean.Elab.Tactic.BVDecide.Frontend.Normalize.instBEqOp","className":"BEq"},{"typeNames":["Lean.Elab.Tactic.BVDecide.Frontend.Normalize.Op"],"name":"Lean.Elab.Tactic.BVDecide.Frontend.Normalize.instReprOp","className":"Repr"},{"typeNames":["Lean.Elab.Tactic.BVDecide.Frontend.Normalize.Op"],"name":"Lean.Elab.Tactic.BVDecide.Frontend.Normalize.Op.instToMessageData","className":"Lean.ToMessageData"}],"imports":["Lean.Meta.Tactic.AC.Main","Lean.Elab.Tactic.BVDecide.Frontend.Normalize.Basic"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.lean#L345-L356","name":"Lean.Elab.Tactic.BVDecide.Frontend.Normalize.bvAcNormalizePass","line":345,"kind":"def","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.bvAcNormalizePass","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.bvAcNormalizePass\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">Normalize</span>.<span class=\"name\">bvAcNormalizePass</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/Basic.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.Pass\">Pass</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.lean#L334-L343","name":"Lean.Elab.Tactic.BVDecide.Frontend.Normalize.bvAcNfHypMeta","line":334,"kind":"def","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.bvAcNfHypMeta","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.bvAcNfHypMeta\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">Normalize</span>.<span class=\"name\">bvAcNfHypMeta</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">goal</span> : <a href=\"./Lean/Expr.html#Lean.MVarId\">MVarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fvarId</span> : <a href=\"./Lean/Expr.html#Lean.FVarId\">FVarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">maxSteps</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a> := <a href=\"./Init/MetaTypes.html#Lean.Meta.Simp.defaultMaxSteps\">Meta.Simp.defaultMaxSteps</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">MetaM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Expr.html#Lean.MVarId\">MVarId</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.lean#L323-L331","name":"Lean.Elab.Tactic.BVDecide.Frontend.Normalize.bvAcNfTarget","line":323,"kind":"def","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.bvAcNfTarget","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.bvAcNfTarget\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">Normalize</span>.<span class=\"name\">bvAcNfTarget</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">mvarId</span> : <a href=\"./Lean/Expr.html#Lean.MVarId\">MVarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">maxSteps</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a> := <a href=\"./Init/MetaTypes.html#Lean.Meta.Simp.defaultMaxSteps\">Meta.Simp.defaultMaxSteps</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">MetaM</a> <a href=\"./Lean/Expr.html#Lean.MVarId\">MVarId</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.lean#L302-L317","name":"Lean.Elab.Tactic.BVDecide.Frontend.Normalize.bvAcNfpost","line":302,"kind":"def","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.bvAcNfpost","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.bvAcNfpost\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">Normalize</span>.<span class=\"name\">bvAcNfpost</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Simp/Types.html#Lean.Meta.Simp.Simproc\">Meta.Simp.Simproc</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.lean#L244-L300","name":"Lean.Elab.Tactic.BVDecide.Frontend.Normalize.canonicalizeWithSharing","line":244,"kind":"def","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.canonicalizeWithSharing","doc":"Given an expression `P lhs rhs`, where `lhs, rhs : ty` and `P : $ty → $ty → _`,\ncanonicalize top-level applications of a recognized associative and commutative\noperation on both the `lhs` and the `rhs` such that the final expression is:\n  `P ($common ⊕ $lhs') ($common ⊕ $rhs')`\nThat is, in a way that exposes terms that are shared between the lhs and rhs.\n\nFor example, `x₁ * (y₁ * z) == x₂ * (y₂ * z)` is normalized to\n`z * (x₁ * y₁) == z * (x₂ * y₂)`, pulling the shared variable `z` to the front on\nboth sides.\n\nSee `Op.fromExpr?` to see which operations are recognized.\nOther operations are ignored, even if they are associative and commutative.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.canonicalizeWithSharing\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">Normalize</span>.<span class=\"name\">canonicalizeWithSharing</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P </span><span class=\"fn\">lhs </span><span class=\"fn\">rhs</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Simp/Types.html#Lean.Meta.Simp.SimpM\">Meta.SimpM</a> <a href=\"./Lean/Meta/Tactic/Simp/Types.html#Lean.Meta.Simp.Step\">Meta.Simp.Step</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.lean#L232-L241","name":"Lean.Elab.Tactic.BVDecide.Frontend.Normalize.proveEqualityByAC","line":232,"kind":"def","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.proveEqualityByAC","doc":"Given two expressions `x, y` which are equal up to associativity and commutativity,\nconstruct and return a proof of `x = y`.\n\nUses `ac_rfl` internally to contruct said proof. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.proveEqualityByAC\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">Normalize</span>.<span class=\"name\">proveEqualityByAC</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">MetaM</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.lean#L212-L227","name":"Lean.Elab.Tactic.BVDecide.Frontend.Normalize.CoefficientsMap.toExpr","line":212,"kind":"def","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.CoefficientsMap.toExpr","doc":"Compute the canonical expression for a given set of coefficients.\nReturns `none` if all coefficients are zero.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.CoefficientsMap.toExpr\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">Normalize</span>.<span class=\"name\">CoefficientsMap</span>.<span class=\"name\">toExpr</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">coeff</span> : <a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.CoefficientsMap\">CoefficientsMap</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">op</span> : <a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.Op\">Op</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.VarStateM\">VarStateM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.lean#L185-L210","name":"Lean.Elab.Tactic.BVDecide.Frontend.Normalize.SharedCoefficients.compute","line":185,"kind":"def","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.SharedCoefficients.compute","doc":"Given two sets of coefficients `x` and `y` (computed with the same variable\nmapping), extract the shared coefficients, such that `x` (resp. `y`) is the sum of\ncoefficients in `common` and `x` (resp `y`) of the result.\n\nThat is, if `{ common, x', y' } ← SharedCoeffients.compute x y`, then\n  `x[idx] = common[idx] + x'[idx]` and\n  `y[idx] = common[idx] + y'[idx]`\nfor all valid variable indices `idx`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.SharedCoefficients.compute\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">Normalize</span>.<span class=\"name\">SharedCoefficients</span>.<span class=\"name\">compute</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.CoefficientsMap\">CoefficientsMap</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.VarStateM\">VarStateM</a> <a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.SharedCoefficients\">SharedCoefficients</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.lean#L183-L183","name":"Lean.Elab.Tactic.BVDecide.Frontend.Normalize.SharedCoefficients.y","line":183,"kind":"def","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.SharedCoefficients.y","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.SharedCoefficients.y\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">Normalize</span>.<span class=\"name\">SharedCoefficients</span>.<span class=\"name\">y</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.SharedCoefficients\">SharedCoefficients</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.CoefficientsMap\">CoefficientsMap</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.lean#L182-L182","name":"Lean.Elab.Tactic.BVDecide.Frontend.Normalize.SharedCoefficients.x","line":182,"kind":"def","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.SharedCoefficients.x","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.SharedCoefficients.x\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">Normalize</span>.<span class=\"name\">SharedCoefficients</span>.<span class=\"name\">x</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.SharedCoefficients\">SharedCoefficients</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.CoefficientsMap\">CoefficientsMap</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.lean#L181-L181","name":"Lean.Elab.Tactic.BVDecide.Frontend.Normalize.SharedCoefficients.common","line":181,"kind":"def","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.SharedCoefficients.common","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.SharedCoefficients.common\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">Normalize</span>.<span class=\"name\">SharedCoefficients</span>.<span class=\"name\">common</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.SharedCoefficients\">SharedCoefficients</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.CoefficientsMap\">CoefficientsMap</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.lean#L180-L180","name":"Lean.Elab.Tactic.BVDecide.Frontend.Normalize.SharedCoefficients.mk","line":180,"kind":"ctor","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.SharedCoefficients.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.SharedCoefficients.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">Normalize</span>.<span class=\"name\">SharedCoefficients</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">common </span><span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.CoefficientsMap\">CoefficientsMap</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.SharedCoefficients\">SharedCoefficients</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.lean#L180-L183","name":"Lean.Elab.Tactic.BVDecide.Frontend.Normalize.SharedCoefficients","line":180,"kind":"structure","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.SharedCoefficients","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.SharedCoefficients\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">Normalize</span>.<span class=\"name\">SharedCoefficients</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.lean#L168-L178","name":"Lean.Elab.Tactic.BVDecide.Frontend.Normalize.VarStateM.computeCoefficients.go","line":168,"kind":"def","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.VarStateM.computeCoefficients.go","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.VarStateM.computeCoefficients.go\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">Normalize</span>.<span class=\"name\">VarStateM</span>.<span class=\"name\">computeCoefficients</span>.<span class=\"name\">go</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">op</span> : <a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.Op\">Op</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">coeff</span> : <a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.CoefficientsMap\">CoefficientsMap</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a> → <span class=\"fn\"><a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.VarStateM\">VarStateM</a> <a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.CoefficientsMap\">CoefficientsMap</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.lean#L165-L167","name":"Lean.Elab.Tactic.BVDecide.Frontend.Normalize.VarStateM.computeCoefficients.incrVar","line":165,"kind":"def","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.VarStateM.computeCoefficients.incrVar","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.VarStateM.computeCoefficients.incrVar\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">Normalize</span>.<span class=\"name\">VarStateM</span>.<span class=\"name\">computeCoefficients</span>.<span class=\"name\">incrVar</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">coeff</span> : <a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.CoefficientsMap\">CoefficientsMap</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.VarStateM\">VarStateM</a> <a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.CoefficientsMap\">CoefficientsMap</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.lean#L149-L178","name":"Lean.Elab.Tactic.BVDecide.Frontend.Normalize.VarStateM.computeCoefficients","line":149,"kind":"def","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.VarStateM.computeCoefficients","doc":"Given a binary, associative and commutative operation `op`,\ndecompose expression `e` into its variable coefficients.\n\nFor example `a ⊕ b ⊕ (a ⊕ c)` will give the coefficients:\n```\na => 2\nb => 1\nc => 1\n```\n\nAny compound expression which is not an application of the given `op` will be\nabstracted away and treated as a variable (see `VarStateM.exprToVar`).\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.VarStateM.computeCoefficients\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">Normalize</span>.<span class=\"name\">VarStateM</span>.<span class=\"name\">computeCoefficients</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">op</span> : <a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.Op\">Op</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.VarStateM\">VarStateM</a> <a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.CoefficientsMap\">CoefficientsMap</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.lean#L139-L146","name":"Lean.Elab.Tactic.BVDecide.Frontend.Normalize.VarStateM.varToExpr","line":139,"kind":"def","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.VarStateM.varToExpr","doc":"Return the expression that is represented by a specific variable index. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.VarStateM.varToExpr\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">Normalize</span>.<span class=\"name\">VarStateM</span>.<span class=\"name\">varToExpr</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">idx</span> : <a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.VarIndex\">VarIndex</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.VarStateM\">VarStateM</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.lean#L124-L137","name":"Lean.Elab.Tactic.BVDecide.Frontend.Normalize.VarStateM.exprToVar","line":124,"kind":"def","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.VarStateM.exprToVar","doc":"Return the unique variable index for an expression, or `none` if the expression\nis a neutral element (see `isNeutral`).\n\nModifies the monadic state to add a new mapping, if needed. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.VarStateM.exprToVar\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">Normalize</span>.<span class=\"name\">VarStateM</span>.<span class=\"name\">exprToVar</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.VarStateM\">VarStateM</a> <a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.VarIndex\">VarIndex</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.lean#L119-L120","name":"Lean.Elab.Tactic.BVDecide.Frontend.Normalize.VarStateM.run'","line":119,"kind":"def","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.VarStateM.run'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.VarStateM.run'\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">Normalize</span>.<span class=\"name\">VarStateM</span>.<span class=\"name\">run'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.VarStateM\">VarStateM</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.VarState\">VarState</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">MetaM</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.lean#L117-L117","name":"Lean.Elab.Tactic.BVDecide.Frontend.Normalize.VarStateM","line":117,"kind":"def","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.VarStateM","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.VarStateM\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">Normalize</span>.<span class=\"name\">VarStateM</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.lean#L109-L113","name":"Lean.Elab.Tactic.BVDecide.Frontend.Normalize.CoefficientsMap","line":109,"kind":"def","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.CoefficientsMap","doc":"A representation of an expression as a map from variable index to the number\nof occurences of the expression represented by that variable.\n\nSee `CoefficientsMap.toExpr` for the explicit conversion. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.CoefficientsMap\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">Normalize</span>.<span class=\"name\">CoefficientsMap</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.lean#L96-L96","name":"Lean.Elab.Tactic.BVDecide.Frontend.Normalize.VarState.varToExpr","line":96,"kind":"def","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.VarState.varToExpr","doc":"Inverse of `exprToVarIndex`, which maps a `VarIndex` to the expression it represents. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.VarState.varToExpr\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">Normalize</span>.<span class=\"name\">VarState</span>.<span class=\"name\">varToExpr</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.VarState\">VarState</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.lean#L94-L94","name":"Lean.Elab.Tactic.BVDecide.Frontend.Normalize.VarState.exprToVarIndex","line":94,"kind":"def","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.VarState.exprToVarIndex","doc":"Map from atomic expressions to an index. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.VarState.exprToVarIndex\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">Normalize</span>.<span class=\"name\">VarState</span>.<span class=\"name\">exprToVarIndex</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.VarState\">VarState</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Data/HashMap/Basic.html#Std.HashMap\">Std.HashMap</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a> <a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.VarIndex\">VarIndex</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.lean#L92-L92","name":"Lean.Elab.Tactic.BVDecide.Frontend.Normalize.VarState.op","line":92,"kind":"def","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.VarState.op","doc":"The associative and commutative operator we are currently canonicalizing with respect to. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.VarState.op\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">Normalize</span>.<span class=\"name\">VarState</span>.<span class=\"name\">op</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.VarState\">VarState</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.Op\">Op</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.lean#L90-L90","name":"Lean.Elab.Tactic.BVDecide.Frontend.Normalize.VarState.mk","line":90,"kind":"ctor","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.VarState.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.VarState.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">Normalize</span>.<span class=\"name\">VarState</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">op</span> : <a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.Op\">Op</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">exprToVarIndex</span> : <span class=\"fn\"><a href=\"./Std/Data/HashMap/Basic.html#Std.HashMap\">Std.HashMap</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a> <a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.VarIndex\">VarIndex</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">varToExpr</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.VarState\">VarState</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.lean#L90-L96","name":"Lean.Elab.Tactic.BVDecide.Frontend.Normalize.VarState","line":90,"kind":"structure","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.VarState","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.VarState\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">Normalize</span>.<span class=\"name\">VarState</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.lean#L85-L86","name":"Lean.Elab.Tactic.BVDecide.Frontend.Normalize.Op.instToMessageData","line":85,"kind":"instance","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.Op.instToMessageData","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.Op.instToMessageData\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">Normalize</span>.<span class=\"name\">Op</span>.<span class=\"name\">instToMessageData</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Message.html#Lean.ToMessageData\">ToMessageData</a> <a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.Op\">Op</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.lean#L74-L83","name":"Lean.Elab.Tactic.BVDecide.Frontend.Normalize.Op.isSameKind","line":74,"kind":"def","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.Op.isSameKind","doc":"Parse `op'` using `ofExpr?` and return true if the resulting operation is\nof the same kind as `op` (i.e., both are multiplications).\nReturns false if `op'` fails to parse.\n\nNote that the width of the operation is *not* compared.\n "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.Op.isSameKind\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">Normalize</span>.<span class=\"name\">Op</span>.<span class=\"name\">isSameKind</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">op</span> : <a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.Op\">Op</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">op'</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.lean#L70-L72","name":"Lean.Elab.Tactic.BVDecide.Frontend.Normalize.Op.neutralElement","line":70,"kind":"def","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.Op.neutralElement","doc":"The identity / neutral element of given operation "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.Op.neutralElement\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">Normalize</span>.<span class=\"name\">Op</span>.<span class=\"name\">neutralElement</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.Op\">Op</a> → <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.lean#L64-L68","name":"Lean.Elab.Tactic.BVDecide.Frontend.Normalize.Op.toExpr","line":64,"kind":"def","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.Op.toExpr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.Op.toExpr\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">Normalize</span>.<span class=\"name\">Op</span>.<span class=\"name\">toExpr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.Op\">Op</a> → <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.lean#L55-L62","name":"Lean.Elab.Tactic.BVDecide.Frontend.Normalize.Op.ofApp2?","line":55,"kind":"def","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.Op.ofApp2?","doc":"Given an *application* of a recognized binary operation (to two arguments),\nreturn the decoded `Op`.\n\nReturn `none` if the expression is not an application of a recognized operation.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.Op.ofApp2?\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">Normalize</span>.<span class=\"name\">Op</span>.<span class=\"name\">ofApp2?</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.Op\">Op</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.lean#L46-L53","name":"Lean.Elab.Tactic.BVDecide.Frontend.Normalize.Op.ofExpr?","line":46,"kind":"def","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.Op.ofExpr?","doc":"Given an expression of an (unapplied) operation, return the decoded `Op`.\nReturn `none` if the expression is not a recognized operation. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.Op.ofExpr?\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">Normalize</span>.<span class=\"name\">Op</span>.<span class=\"name\">ofExpr?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.Op\">Op</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.lean#L42-L42","name":"Lean.Elab.Tactic.BVDecide.Frontend.Normalize.instReprOp","line":42,"kind":"instance","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.instReprOp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.instReprOp\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">Normalize</span>.<span class=\"name\">instReprOp</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.Op\">Op</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.lean#L42-L42","name":"Lean.Elab.Tactic.BVDecide.Frontend.Normalize.instBEqOp","line":42,"kind":"instance","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.instBEqOp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.instBEqOp\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">Normalize</span>.<span class=\"name\">instBEqOp</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.Op\">Op</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.lean#L41-L41","name":"Lean.Elab.Tactic.BVDecide.Frontend.Normalize.Op.mul","line":41,"kind":"ctor","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.Op.mul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.Op.mul\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">Normalize</span>.<span class=\"name\">Op</span>.<span class=\"name\">mul</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">w</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.Op\">Op</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.lean#L39-L42","name":"Lean.Elab.Tactic.BVDecide.Frontend.Normalize.Op","line":39,"kind":"inductive","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.Op","doc":"Bitvector operations that we perform AC canonicalization on. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.Op\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">Normalize</span>.<span class=\"name\">Op</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.lean#L37-L37","name":"Lean.Elab.Tactic.BVDecide.Frontend.Normalize.VarIndex","line":37,"kind":"def","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.VarIndex","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.VarIndex\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">Normalize</span>.<span class=\"name\">VarIndex</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.lean#L29-L31","name":"Lean.Elab.Tactic.BVDecide.Frontend.Normalize.mkBitVecLit","line":29,"kind":"def","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.mkBitVecLit","doc":"Construct a literal of type `BitVec w`, with value `n`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.mkBitVecLit\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">Normalize</span>.<span class=\"name\">mkBitVecLit</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">w</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.lean#L24-L25","name":"Lean.Elab.Tactic.BVDecide.Frontend.Normalize.BitVec.mkInstHMul","line":24,"kind":"def","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.BitVec.mkInstHMul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.BitVec.mkInstHMul\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">Normalize</span>.<span class=\"name\">BitVec</span>.<span class=\"name\">mkInstHMul</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">w</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.lean#L22-L22","name":"Lean.Elab.Tactic.BVDecide.Frontend.Normalize.BitVec.mkInstMul","line":22,"kind":"def","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.BitVec.mkInstMul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.BitVec.mkInstMul\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">Normalize</span>.<span class=\"name\">BitVec</span>.<span class=\"name\">mkInstMul</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">w</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.lean#L20-L20","name":"Lean.Elab.Tactic.BVDecide.Frontend.Normalize.BitVec.mkType","line":20,"kind":"def","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.BitVec.mkType","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/AC.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.BitVec.mkType\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">Normalize</span>.<span class=\"name\">BitVec</span>.<span class=\"name\">mkType</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">w</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></div></div>"}]}