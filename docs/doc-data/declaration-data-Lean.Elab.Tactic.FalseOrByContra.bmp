{"name":"Lean.Elab.Tactic.FalseOrByContra","instances":[],"imports":["Lean.Elab.Tactic.Basic","Lean.Meta.Tactic.Apply","Lean.Meta.Tactic.Intro"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/Tactic/FalseOrByContra.lean#L64-L67","name":"Lean.MVarId.elabFalseOrByContra","line":64,"kind":"def","docLink":"./Lean/Elab/Tactic/FalseOrByContra.html#Lean.MVarId.elabFalseOrByContra","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/FalseOrByContra.html#Lean.MVarId.elabFalseOrByContra\"><span class=\"name\">Lean</span>.<span class=\"name\">MVarId</span>.<span class=\"name\">elabFalseOrByContra</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.Tactic\">Elab.Tactic.Tactic</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/Tactic/FalseOrByContra.lean#L29-L62","name":"Lean.MVarId.falseOrByContra","line":29,"kind":"opaque","docLink":"./Lean/Elab/Tactic/FalseOrByContra.html#Lean.MVarId.falseOrByContra","doc":"Changes the goal to `False`, retaining as much information as possible:\n\n* If the goal is `False`, do nothing.\n* If the goal is an implication or a function type, introduce the argument and restart.\n  (In particular, if the goal is `x ≠ y`, introduce `x = y`.)\n* Otherwise, for a propositional goal `P`, replace it with `¬ ¬ P`\n  (attempting to find a `Decidable` instance, but otherwise falling back to working classically)\n  and introduce `¬ P`.\n* For a non-propositional goal use `False.elim`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/FalseOrByContra.html#Lean.MVarId.falseOrByContra\"><span class=\"name\">Lean</span>.<span class=\"name\">MVarId</span>.<span class=\"name\">falseOrByContra</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <a href=\"./Lean/Expr.html#Lean.MVarId\">MVarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">useClassical</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span> := <a href=\"./Init/Prelude.html#Option.none\">none</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">MetaM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Expr.html#Lean.MVarId\">MVarId</a>)</span></span></div></div>"}]}