{"name":"Lean.Meta.CoeAttr","instances":[{"typeNames":["Lean.Meta.CoeFnType"],"name":"Lean.Meta.instInhabitedCoeFnType","className":"Inhabited"},{"typeNames":["Lean.Meta.CoeFnType"],"name":"Lean.Meta.instReprCoeFnType","className":"Repr"},{"typeNames":["Eq"],"name":"Lean.Meta.instDecidableEqCoeFnType","className":"Decidable"},{"typeNames":["Lean.Meta.CoeFnType"],"name":"Lean.Meta.instToExprCoeFnType","className":"Lean.ToExpr"},{"typeNames":["Lean.Meta.CoeFnInfo"],"name":"Lean.Meta.instInhabitedCoeFnInfo","className":"Inhabited"},{"typeNames":["Lean.Meta.CoeFnInfo"],"name":"Lean.Meta.instReprCoeFnInfo","className":"Repr"},{"typeNames":["Lean.Meta.CoeFnInfo"],"name":"Lean.Meta.instToExprCoeFnInfo","className":"Lean.ToExpr"}],"imports":["Lean.Attributes","Lean.ScopedEnvExtension","Lean.Meta.FunInfo"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/CoeAttr.lean#L69-L76","name":"Lean.Meta.registerCoercion","line":69,"kind":"def","docLink":"./Lean/Meta/CoeAttr.html#Lean.Meta.registerCoercion","doc":"Add `name` to the coercion extension and add a coercion delaborator for the function. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/CoeAttr.html#Lean.Meta.registerCoercion\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">registerCoercion</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">name</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">info</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Meta/CoeAttr.html#Lean.Meta.CoeFnInfo\">CoeFnInfo</a></span> := <a href=\"./Init/Prelude.html#Option.none\">none</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">MetaM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/CoeAttr.lean#L65-L67","name":"Lean.Meta.getCoeFnInfo?","line":65,"kind":"def","docLink":"./Lean/Meta/CoeAttr.html#Lean.Meta.getCoeFnInfo?","doc":"Lookup the coercion information for a given function "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/CoeAttr.html#Lean.Meta.getCoeFnInfo?\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">getCoeFnInfo?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fn</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">CoreM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Meta/CoeAttr.html#Lean.Meta.CoeFnInfo\">CoeFnInfo</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/CoeAttr.lean#L57-L63","name":"Lean.Meta.coeExt","line":57,"kind":"opaque","docLink":"./Lean/Meta/CoeAttr.html#Lean.Meta.coeExt","doc":"The environment extension for tracking coercion functions for delaboration "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/CoeAttr.html#Lean.Meta.coeExt\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">coeExt</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/ScopedEnvExtension.html#Lean.SimpleScopedEnvExtension\">SimpleScopedEnvExtension</a> (<a href=\"./Init/Prelude.html#Lean.Name\">Name</a> <a href=\"./Init/Prelude.html#Prod\">Ã—</a> <a href=\"./Lean/Meta/CoeAttr.html#Lean.Meta.CoeFnInfo\">CoeFnInfo</a>) <span class=\"fn\">(<a href=\"./Lean/Data/NameMap.html#Lean.NameMap\">NameMap</a> <a href=\"./Lean/Meta/CoeAttr.html#Lean.Meta.CoeFnInfo\">CoeFnInfo</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/CoeAttr.lean#L53-L55","name":"Lean.Meta.instToExprCoeFnInfo","line":53,"kind":"instance","docLink":"./Lean/Meta/CoeAttr.html#Lean.Meta.instToExprCoeFnInfo","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/CoeAttr.html#Lean.Meta.instToExprCoeFnInfo\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">instToExprCoeFnInfo</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">ToExpr</a> <a href=\"./Lean/Meta/CoeAttr.html#Lean.Meta.CoeFnInfo\">CoeFnInfo</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/CoeAttr.lean#L51-L51","name":"Lean.Meta.instReprCoeFnInfo","line":51,"kind":"instance","docLink":"./Lean/Meta/CoeAttr.html#Lean.Meta.instReprCoeFnInfo","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/CoeAttr.html#Lean.Meta.instReprCoeFnInfo\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">instReprCoeFnInfo</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <a href=\"./Lean/Meta/CoeAttr.html#Lean.Meta.CoeFnInfo\">CoeFnInfo</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/CoeAttr.lean#L51-L51","name":"Lean.Meta.instInhabitedCoeFnInfo","line":51,"kind":"instance","docLink":"./Lean/Meta/CoeAttr.html#Lean.Meta.instInhabitedCoeFnInfo","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/CoeAttr.html#Lean.Meta.instInhabitedCoeFnInfo\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">instInhabitedCoeFnInfo</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Meta/CoeAttr.html#Lean.Meta.CoeFnInfo\">CoeFnInfo</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/CoeAttr.lean#L50-L50","name":"Lean.Meta.CoeFnInfo.type","line":50,"kind":"def","docLink":"./Lean/Meta/CoeAttr.html#Lean.Meta.CoeFnInfo.type","doc":"The type of coercion "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/CoeAttr.html#Lean.Meta.CoeFnInfo.type\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">CoeFnInfo</span>.<span class=\"name\">type</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Meta/CoeAttr.html#Lean.Meta.CoeFnInfo\">CoeFnInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/CoeAttr.html#Lean.Meta.CoeFnType\">CoeFnType</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/CoeAttr.lean#L48-L48","name":"Lean.Meta.CoeFnInfo.coercee","line":48,"kind":"def","docLink":"./Lean/Meta/CoeAttr.html#Lean.Meta.CoeFnInfo.coercee","doc":"The argument index that represents the value being coerced "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/CoeAttr.html#Lean.Meta.CoeFnInfo.coercee\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">CoeFnInfo</span>.<span class=\"name\">coercee</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Meta/CoeAttr.html#Lean.Meta.CoeFnInfo\">CoeFnInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/CoeAttr.lean#L46-L46","name":"Lean.Meta.CoeFnInfo.numArgs","line":46,"kind":"def","docLink":"./Lean/Meta/CoeAttr.html#Lean.Meta.CoeFnInfo.numArgs","doc":"The number of arguments to the coercion function "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/CoeAttr.html#Lean.Meta.CoeFnInfo.numArgs\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">CoeFnInfo</span>.<span class=\"name\">numArgs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Meta/CoeAttr.html#Lean.Meta.CoeFnInfo\">CoeFnInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/CoeAttr.lean#L44-L44","name":"Lean.Meta.CoeFnInfo.mk","line":44,"kind":"ctor","docLink":"./Lean/Meta/CoeAttr.html#Lean.Meta.CoeFnInfo.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/CoeAttr.html#Lean.Meta.CoeFnInfo.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">CoeFnInfo</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">numArgs </span><span class=\"fn\">coercee</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">type</span> : <a href=\"./Lean/Meta/CoeAttr.html#Lean.Meta.CoeFnType\">CoeFnType</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/CoeAttr.html#Lean.Meta.CoeFnInfo\">CoeFnInfo</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/CoeAttr.lean#L43-L51","name":"Lean.Meta.CoeFnInfo","line":43,"kind":"structure","docLink":"./Lean/Meta/CoeAttr.html#Lean.Meta.CoeFnInfo","doc":"Information associated to a coercion function to enable sensible delaboration. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/CoeAttr.html#Lean.Meta.CoeFnInfo\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">CoeFnInfo</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/CoeAttr.lean#L36-L41","name":"Lean.Meta.instToExprCoeFnType","line":36,"kind":"instance","docLink":"./Lean/Meta/CoeAttr.html#Lean.Meta.instToExprCoeFnType","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/CoeAttr.html#Lean.Meta.instToExprCoeFnType\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">instToExprCoeFnType</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">ToExpr</a> <a href=\"./Lean/Meta/CoeAttr.html#Lean.Meta.CoeFnType\">CoeFnType</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/CoeAttr.lean#L34-L34","name":"Lean.Meta.instDecidableEqCoeFnType","line":34,"kind":"instance","docLink":"./Lean/Meta/CoeAttr.html#Lean.Meta.instDecidableEqCoeFnType","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/CoeAttr.html#Lean.Meta.instDecidableEqCoeFnType\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">instDecidableEqCoeFnType</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <a href=\"./Lean/Meta/CoeAttr.html#Lean.Meta.CoeFnType\">CoeFnType</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/CoeAttr.lean#L34-L34","name":"Lean.Meta.instReprCoeFnType","line":34,"kind":"instance","docLink":"./Lean/Meta/CoeAttr.html#Lean.Meta.instReprCoeFnType","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/CoeAttr.html#Lean.Meta.instReprCoeFnType\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">instReprCoeFnType</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <a href=\"./Lean/Meta/CoeAttr.html#Lean.Meta.CoeFnType\">CoeFnType</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/CoeAttr.lean#L34-L34","name":"Lean.Meta.instInhabitedCoeFnType","line":34,"kind":"instance","docLink":"./Lean/Meta/CoeAttr.html#Lean.Meta.instInhabitedCoeFnType","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/CoeAttr.html#Lean.Meta.instInhabitedCoeFnType\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">instInhabitedCoeFnType</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Meta/CoeAttr.html#Lean.Meta.CoeFnType\">CoeFnType</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/CoeAttr.lean#L32-L33","name":"Lean.Meta.CoeFnType.coeSort","line":32,"kind":"ctor","docLink":"./Lean/Meta/CoeAttr.html#Lean.Meta.CoeFnType.coeSort","doc":"The coercion to a type, see `CoeSort.coe` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/CoeAttr.html#Lean.Meta.CoeFnType.coeSort\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">CoeFnType</span>.<span class=\"name\">coeSort</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/CoeAttr.html#Lean.Meta.CoeFnType\">CoeFnType</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/CoeAttr.lean#L30-L31","name":"Lean.Meta.CoeFnType.coeFun","line":30,"kind":"ctor","docLink":"./Lean/Meta/CoeAttr.html#Lean.Meta.CoeFnType.coeFun","doc":"The coercion to a function type, see `CoeFun.coe` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/CoeAttr.html#Lean.Meta.CoeFnType.coeFun\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">CoeFnType</span>.<span class=\"name\">coeFun</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/CoeAttr.html#Lean.Meta.CoeFnType\">CoeFnType</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/CoeAttr.lean#L28-L29","name":"Lean.Meta.CoeFnType.coe","line":28,"kind":"ctor","docLink":"./Lean/Meta/CoeAttr.html#Lean.Meta.CoeFnType.coe","doc":"The basic coercion `â†‘x`, see `CoeT.coe` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/CoeAttr.html#Lean.Meta.CoeFnType.coe\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">CoeFnType</span>.<span class=\"name\">coe</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/CoeAttr.html#Lean.Meta.CoeFnType\">CoeFnType</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/CoeAttr.lean#L26-L34","name":"Lean.Meta.CoeFnType","line":26,"kind":"inductive","docLink":"./Lean/Meta/CoeAttr.html#Lean.Meta.CoeFnType","doc":"The different types of coercions that are supported by the `coe` attribute. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/CoeAttr.html#Lean.Meta.CoeFnType\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">CoeFnType</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"}]}