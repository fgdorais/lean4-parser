{"name":"Std.Internal.UV.UDP","instances":[{"typeNames":["Std.Internal.UV.UDP.Socket"],"name":"Std.Internal.UV.UDP.instNonemptySocket","className":"Nonempty"}],"imports":["Init.System.IO","Init.System.Promise","Std.Net"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Internal/UV/UDP.lean#L126-L130","name":"Std.Internal.UV.UDP.Socket.setTTL","line":126,"kind":"opaque","docLink":"./Std/Internal/UV/UDP.html#Std.Internal.UV.UDP.Socket.setTTL","doc":"Sets the TTL value for outgoing packets.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Internal/UV/UDP.html#Std.Internal.UV.UDP.Socket.setTTL\"><span class=\"name\">Std</span>.<span class=\"name\">Internal</span>.<span class=\"name\">UV</span>.<span class=\"name\">UDP</span>.<span class=\"name\">Socket</span>.<span class=\"name\">setTTL</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">socket</span> : <a href=\"./Std/Internal/UV/UDP.html#Std.Internal.UV.UDP.Socket\">Socket</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ttl</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Internal/UV/UDP.lean#L120-L124","name":"Std.Internal.UV.UDP.Socket.setMulticastInterface","line":120,"kind":"opaque","docLink":"./Std/Internal/UV/UDP.html#Std.Internal.UV.UDP.Socket.setMulticastInterface","doc":"Sets the multicast interface for sending packets.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Internal/UV/UDP.html#Std.Internal.UV.UDP.Socket.setMulticastInterface\"><span class=\"name\">Std</span>.<span class=\"name\">Internal</span>.<span class=\"name\">UV</span>.<span class=\"name\">UDP</span>.<span class=\"name\">Socket</span>.<span class=\"name\">setMulticastInterface</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">socket</span> : <a href=\"./Std/Internal/UV/UDP.html#Std.Internal.UV.UDP.Socket\">Socket</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">interfaceAddr</span> : <a href=\"./Std/Net/Addr.html#Std.Net.IPAddr\">Net.IPAddr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Internal/UV/UDP.lean#L113-L118","name":"Std.Internal.UV.UDP.Socket.setMembership","line":113,"kind":"opaque","docLink":"./Std/Internal/UV/UDP.html#Std.Internal.UV.UDP.Socket.setMembership","doc":"Sets the membership for joining or leaving a multicast group. If `interfaceAddr` is `none`, the\ndefault network interface is used.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Internal/UV/UDP.html#Std.Internal.UV.UDP.Socket.setMembership\"><span class=\"name\">Std</span>.<span class=\"name\">Internal</span>.<span class=\"name\">UV</span>.<span class=\"name\">UDP</span>.<span class=\"name\">Socket</span>.<span class=\"name\">setMembership</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">socket</span> : <a href=\"./Std/Internal/UV/UDP.html#Std.Internal.UV.UDP.Socket\">Socket</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">multicastAddr</span> : <a href=\"./Std/Net/Addr.html#Std.Net.IPAddr\">Net.IPAddr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">interfaceAddr</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Std/Net/Addr.html#Std.Net.IPAddr\">Net.IPAddr</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">membership</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Internal/UV/UDP.lean#L107-L111","name":"Std.Internal.UV.UDP.Socket.setMulticastTTL","line":107,"kind":"opaque","docLink":"./Std/Internal/UV/UDP.html#Std.Internal.UV.UDP.Socket.setMulticastTTL","doc":"Sets the time-to-live (TTL) value for multicast packets.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Internal/UV/UDP.html#Std.Internal.UV.UDP.Socket.setMulticastTTL\"><span class=\"name\">Std</span>.<span class=\"name\">Internal</span>.<span class=\"name\">UV</span>.<span class=\"name\">UDP</span>.<span class=\"name\">Socket</span>.<span class=\"name\">setMulticastTTL</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">socket</span> : <a href=\"./Std/Internal/UV/UDP.html#Std.Internal.UV.UDP.Socket\">Socket</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ttl</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Internal/UV/UDP.lean#L101-L105","name":"Std.Internal.UV.UDP.Socket.setMulticastLoop","line":101,"kind":"opaque","docLink":"./Std/Internal/UV/UDP.html#Std.Internal.UV.UDP.Socket.setMulticastLoop","doc":"Enables or disables multicast loopback for a UDP socket.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Internal/UV/UDP.html#Std.Internal.UV.UDP.Socket.setMulticastLoop\"><span class=\"name\">Std</span>.<span class=\"name\">Internal</span>.<span class=\"name\">UV</span>.<span class=\"name\">UDP</span>.<span class=\"name\">Socket</span>.<span class=\"name\">setMulticastLoop</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">socket</span> : <a href=\"./Std/Internal/UV/UDP.html#Std.Internal.UV.UDP.Socket\">Socket</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">on</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Internal/UV/UDP.lean#L95-L99","name":"Std.Internal.UV.UDP.Socket.setBroadcast","line":95,"kind":"opaque","docLink":"./Std/Internal/UV/UDP.html#Std.Internal.UV.UDP.Socket.setBroadcast","doc":"Enables or disables broadcasting on a UDP socket.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Internal/UV/UDP.html#Std.Internal.UV.UDP.Socket.setBroadcast\"><span class=\"name\">Std</span>.<span class=\"name\">Internal</span>.<span class=\"name\">UV</span>.<span class=\"name\">UDP</span>.<span class=\"name\">Socket</span>.<span class=\"name\">setBroadcast</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">socket</span> : <a href=\"./Std/Internal/UV/UDP.html#Std.Internal.UV.UDP.Socket\">Socket</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">on</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Internal/UV/UDP.lean#L89-L93","name":"Std.Internal.UV.UDP.Socket.getSockName","line":89,"kind":"opaque","docLink":"./Std/Internal/UV/UDP.html#Std.Internal.UV.UDP.Socket.getSockName","doc":"Gets the local address of a bound UDP socket.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Internal/UV/UDP.html#Std.Internal.UV.UDP.Socket.getSockName\"><span class=\"name\">Std</span>.<span class=\"name\">Internal</span>.<span class=\"name\">UV</span>.<span class=\"name\">UDP</span>.<span class=\"name\">Socket</span>.<span class=\"name\">getSockName</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">socket</span> : <a href=\"./Std/Internal/UV/UDP.html#Std.Internal.UV.UDP.Socket\">Socket</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Std/Net/Addr.html#Std.Net.SocketAddress\">Net.SocketAddress</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Internal/UV/UDP.lean#L81-L87","name":"Std.Internal.UV.UDP.Socket.getPeerName","line":81,"kind":"opaque","docLink":"./Std/Internal/UV/UDP.html#Std.Internal.UV.UDP.Socket.getPeerName","doc":"Receives data from an UDP socket. `size` is for the maximum bytes to receive. The promise resolves\nwhen some data is available or an error occurs. If the socket has not been previously bound with `bind`,\nit is automatically bound to `0.0.0.0` (all interfaces) with a random port.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Internal/UV/UDP.html#Std.Internal.UV.UDP.Socket.getPeerName\"><span class=\"name\">Std</span>.<span class=\"name\">Internal</span>.<span class=\"name\">UV</span>.<span class=\"name\">UDP</span>.<span class=\"name\">Socket</span>.<span class=\"name\">getPeerName</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">socket</span> : <a href=\"./Std/Internal/UV/UDP.html#Std.Internal.UV.UDP.Socket\">Socket</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Std/Net/Addr.html#Std.Net.SocketAddress\">Net.SocketAddress</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Internal/UV/UDP.lean#L71-L79","name":"Std.Internal.UV.UDP.Socket.cancelRecv","line":71,"kind":"opaque","docLink":"./Std/Internal/UV/UDP.html#Std.Internal.UV.UDP.Socket.cancelRecv","doc":"Cancels a receive operation in the form of `recv` or `waitReadable` if there is currently one\npending. This resolves their returned `IO.Promise` to `none`. This function is considered dangerous,\nas improper use can cause data loss, and is therefore not exposed to the top-level API.\nNote that this function is idempotent and as such can be called multiple times on the same socket\nwithout causing errors, in particular also without a receive running in the first place.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Internal/UV/UDP.html#Std.Internal.UV.UDP.Socket.cancelRecv\"><span class=\"name\">Std</span>.<span class=\"name\">Internal</span>.<span class=\"name\">UV</span>.<span class=\"name\">UDP</span>.<span class=\"name\">Socket</span>.<span class=\"name\">cancelRecv</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">socket</span> : <a href=\"./Std/Internal/UV/UDP.html#Std.Internal.UV.UDP.Socket\">Socket</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Internal/UV/UDP.lean#L64-L69","name":"Std.Internal.UV.UDP.Socket.waitReadable","line":64,"kind":"opaque","docLink":"./Std/Internal/UV/UDP.html#Std.Internal.UV.UDP.Socket.waitReadable","doc":"Returns an `IO.Promise` that resolves once `socket` has data available for reading. Calling this\nfunction twice on the same `Socket` or in parallel with `recv` is not supported.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Internal/UV/UDP.html#Std.Internal.UV.UDP.Socket.waitReadable\"><span class=\"name\">Std</span>.<span class=\"name\">Internal</span>.<span class=\"name\">UV</span>.<span class=\"name\">UDP</span>.<span class=\"name\">Socket</span>.<span class=\"name\">waitReadable</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">socket</span> : <a href=\"./Std/Internal/UV/UDP.html#Std.Internal.UV.UDP.Socket\">Socket</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">(<a href=\"./Init/System/Promise.html#IO.Promise\">IO.Promise</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Except\">Except</a> <a href=\"./Init/System/IOError.html#IO.Error\">IO.Error</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Internal/UV/UDP.lean#L56-L62","name":"Std.Internal.UV.UDP.Socket.recv","line":56,"kind":"opaque","docLink":"./Std/Internal/UV/UDP.html#Std.Internal.UV.UDP.Socket.recv","doc":"Receives data from an UDP socket. `size` is for the maximum bytes to receive. The promise\nresolves when some data is available or an error occurs.\nFurthermore calling this function in parallel with `waitReadable` is not supported.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Internal/UV/UDP.html#Std.Internal.UV.UDP.Socket.recv\"><span class=\"name\">Std</span>.<span class=\"name\">Internal</span>.<span class=\"name\">UV</span>.<span class=\"name\">UDP</span>.<span class=\"name\">Socket</span>.<span class=\"name\">recv</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">socket</span> : <a href=\"./Std/Internal/UV/UDP.html#Std.Internal.UV.UDP.Socket\">Socket</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">size</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">(<a href=\"./Init/System/Promise.html#IO.Promise\">IO.Promise</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Except\">Except</a> <a href=\"./Init/System/IOError.html#IO.Error\">IO.Error</a> (<a href=\"./Init/Data/ByteArray/Basic.html#ByteArray\">ByteArray</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Std/Net/Addr.html#Std.Net.SocketAddress\">Net.SocketAddress</a></span>))</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Internal/UV/UDP.lean#L49-L54","name":"Std.Internal.UV.UDP.Socket.send","line":49,"kind":"opaque","docLink":"./Std/Internal/UV/UDP.html#Std.Internal.UV.UDP.Socket.send","doc":"Sends data through an UDP socket. The `addr` parameter specifies the destination address. If `addr`\nis `none`, the data is sent to the default peer address set by `connect`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Internal/UV/UDP.html#Std.Internal.UV.UDP.Socket.send\"><span class=\"name\">Std</span>.<span class=\"name\">Internal</span>.<span class=\"name\">UV</span>.<span class=\"name\">UDP</span>.<span class=\"name\">Socket</span>.<span class=\"name\">send</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">socket</span> : <a href=\"./Std/Internal/UV/UDP.html#Std.Internal.UV.UDP.Socket\">Socket</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">data</span> : <a href=\"./Init/Data/ByteArray/Basic.html#ByteArray\">ByteArray</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">addr</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Std/Net/Addr.html#Std.Net.SocketAddress\">Net.SocketAddress</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">(<a href=\"./Init/System/Promise.html#IO.Promise\">IO.Promise</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Except\">Except</a> <a href=\"./Init/System/IOError.html#IO.Error\">IO.Error</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Internal/UV/UDP.lean#L42-L47","name":"Std.Internal.UV.UDP.Socket.connect","line":42,"kind":"opaque","docLink":"./Std/Internal/UV/UDP.html#Std.Internal.UV.UDP.Socket.connect","doc":"Associates the UDP socket with the given address and port, so every message sent by this socket is\nautomatically sent to that destination.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Internal/UV/UDP.html#Std.Internal.UV.UDP.Socket.connect\"><span class=\"name\">Std</span>.<span class=\"name\">Internal</span>.<span class=\"name\">UV</span>.<span class=\"name\">UDP</span>.<span class=\"name\">Socket</span>.<span class=\"name\">connect</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">socket</span> : <a href=\"./Std/Internal/UV/UDP.html#Std.Internal.UV.UDP.Socket\">Socket</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">addr</span> : <a href=\"./Std/Net/Addr.html#Std.Net.SocketAddress\">Net.SocketAddress</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Internal/UV/UDP.lean#L35-L40","name":"Std.Internal.UV.UDP.Socket.bind","line":35,"kind":"opaque","docLink":"./Std/Internal/UV/UDP.html#Std.Internal.UV.UDP.Socket.bind","doc":"Binds an UDP socket to a specific address. Address reuse is enabled to allow rebinding the\nsame address.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Internal/UV/UDP.html#Std.Internal.UV.UDP.Socket.bind\"><span class=\"name\">Std</span>.<span class=\"name\">Internal</span>.<span class=\"name\">UV</span>.<span class=\"name\">UDP</span>.<span class=\"name\">Socket</span>.<span class=\"name\">bind</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">socket</span> : <a href=\"./Std/Internal/UV/UDP.html#Std.Internal.UV.UDP.Socket\">Socket</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">addr</span> : <a href=\"./Std/Net/Addr.html#Std.Net.SocketAddress\">Net.SocketAddress</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Internal/UV/UDP.lean#L29-L33","name":"Std.Internal.UV.UDP.Socket.new","line":29,"kind":"opaque","docLink":"./Std/Internal/UV/UDP.html#Std.Internal.UV.UDP.Socket.new","doc":"Creates a new UDP socket.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Internal/UV/UDP.html#Std.Internal.UV.UDP.Socket.new\"><span class=\"name\">Std</span>.<span class=\"name\">Internal</span>.<span class=\"name\">UV</span>.<span class=\"name\">UDP</span>.<span class=\"name\">Socket</span>.<span class=\"name\">new</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Std/Internal/UV/UDP.html#Std.Internal.UV.UDP.Socket\">Socket</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Internal/UV/UDP.lean#L25-L25","name":"Std.Internal.UV.UDP.instNonemptySocket","line":25,"kind":"instance","docLink":"./Std/Internal/UV/UDP.html#Std.Internal.UV.UDP.instNonemptySocket","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Internal/UV/UDP.html#Std.Internal.UV.UDP.instNonemptySocket\"><span class=\"name\">Std</span>.<span class=\"name\">Internal</span>.<span class=\"name\">UV</span>.<span class=\"name\">UDP</span>.<span class=\"name\">instNonemptySocket</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <a href=\"./Std/Internal/UV/UDP.html#Std.Internal.UV.UDP.Socket\">Socket</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Internal/UV/UDP.lean#L20-L23","name":"Std.Internal.UV.UDP.Socket","line":20,"kind":"def","docLink":"./Std/Internal/UV/UDP.html#Std.Internal.UV.UDP.Socket","doc":"Represents a UDP socket.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Internal/UV/UDP.html#Std.Internal.UV.UDP.Socket\"><span class=\"name\">Std</span>.<span class=\"name\">Internal</span>.<span class=\"name\">UV</span>.<span class=\"name\">UDP</span>.<span class=\"name\">Socket</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"}]}