{"name":"Std.Tactic.BVDecide.Bitblast.BVExpr.Circuit.Lemmas","instances":[],"imports":["Std.Tactic.BVDecide.Bitblast.BVExpr.Circuit.Impl","Std.Tactic.BVDecide.Bitblast.BVExpr.Circuit.Lemmas.Pred"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Lemmas.lean#L117-L120","name":"Std.Tactic.BVDecide.BVLogicalExpr.unsat_of_bitblast","line":117,"kind":"theorem","docLink":"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Lemmas.html#Std.Tactic.BVDecide.BVLogicalExpr.unsat_of_bitblast","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Lemmas.html#Std.Tactic.BVDecide.BVLogicalExpr.unsat_of_bitblast\"><span class=\"name\">Std</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">BVLogicalExpr</span>.<span class=\"name\">unsat_of_bitblast</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">expr</span> : <a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Basic.html#Std.Tactic.BVDecide.BVLogicalExpr\">BVLogicalExpr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">expr</span>.<a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Impl/Substructure.html#Std.Tactic.BVDecide.BVLogicalExpr.bitblast\">bitblast</a></span>.<a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.Entrypoint.Unsat\">Unsat</a></span> → <span class=\"fn\"><span class=\"fn\">expr</span>.<a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Basic.html#Std.Tactic.BVDecide.BVLogicalExpr.Unsat\">Unsat</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Lemmas.lean#L111-L115","name":"Std.Tactic.BVDecide.BVLogicalExpr.denote_bitblast","line":111,"kind":"theorem","docLink":"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Lemmas.html#Std.Tactic.BVDecide.BVLogicalExpr.denote_bitblast","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Lemmas.html#Std.Tactic.BVDecide.BVLogicalExpr.denote_bitblast\"><span class=\"name\">Std</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">BVLogicalExpr</span>.<span class=\"name\">denote_bitblast</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">expr</span> : <a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Basic.html#Std.Tactic.BVDecide.BVLogicalExpr\">BVLogicalExpr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">assign</span> : <a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Basic.html#Std.Tactic.BVDecide.BVExpr.Assignment\">BVExpr.Assignment</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.denote\">⟦</a><span class=\"fn\"><span class=\"fn\">assign</span>.<a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Lemmas/Basic.html#Std.Tactic.BVDecide.BVExpr.Assignment.toAIGAssignment\">toAIGAssignment</a></span><a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.denote\">,</a> <span class=\"fn\"><span class=\"fn\">expr</span>.<a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Impl/Substructure.html#Std.Tactic.BVDecide.BVLogicalExpr.bitblast\">bitblast</a></span><a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.denote\">⟧</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Basic.html#Std.Tactic.BVDecide.BVLogicalExpr.eval\">eval</a> <span class=\"fn\">assign</span> <span class=\"fn\">expr</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Lemmas.lean#L64-L105","name":"Std.Tactic.BVDecide.BVLogicalExpr.bitblast.go_eval_eq_eval","line":64,"kind":"theorem","docLink":"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Lemmas.html#Std.Tactic.BVDecide.BVLogicalExpr.bitblast.go_eval_eq_eval","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Lemmas.html#Std.Tactic.BVDecide.BVLogicalExpr.bitblast.go_eval_eq_eval\"><span class=\"name\">Std</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">BVLogicalExpr</span>.<span class=\"name\">bitblast</span>.<span class=\"name\">go_eval_eq_eval</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">expr</span> : <a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Basic.html#Std.Tactic.BVDecide.BVLogicalExpr\">BVLogicalExpr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">aig</span> : <span class=\"fn\"><a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG\">Sat.AIG</a> <a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Basic.html#Std.Tactic.BVDecide.BVBit\">BVBit</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">assign</span> : <a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Basic.html#Std.Tactic.BVDecide.BVExpr.Assignment\">BVExpr.Assignment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">cache</span> : <span class=\"fn\"><a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Impl/Expr.html#Std.Tactic.BVDecide.BVExpr.Cache\">BVExpr.Cache</a> <span class=\"fn\">aig</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hinv</span> : <span class=\"fn\"><a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Lemmas/Expr.html#Std.Tactic.BVDecide.BVExpr.Cache.Inv\">BVExpr.Cache.Inv</a> <span class=\"fn\">assign</span> <span class=\"fn\">aig</span> <span class=\"fn\">cache</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.denote\">⟦</a><span class=\"fn\"><span class=\"fn\">assign</span>.<a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Lemmas/Basic.html#Std.Tactic.BVDecide.BVExpr.Assignment.toAIGAssignment\">toAIGAssignment</a></span><a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.denote\">,</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Impl/Substructure.html#Std.Tactic.BVDecide.BVLogicalExpr.bitblast.go\">go</a> <span class=\"fn\">aig</span> <span class=\"fn\">expr</span> <span class=\"fn\">cache</span>)</span>.<a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Impl/Pred.html#Std.Tactic.BVDecide.Return.result\">result</a></span>.<a href=\"./Init/Prelude.html#Subtype.val\">val</a></span><a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.denote\">⟧</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Basic.html#Std.Tactic.BVDecide.BVLogicalExpr.eval\">eval</a> <span class=\"fn\">assign</span> <span class=\"fn\">expr</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Lemmas.lean#L27-L62","name":"Std.Tactic.BVDecide.BVLogicalExpr.bitblast.go_Inv_of_Inv","line":27,"kind":"theorem","docLink":"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Lemmas.html#Std.Tactic.BVDecide.BVLogicalExpr.bitblast.go_Inv_of_Inv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Lemmas.html#Std.Tactic.BVDecide.BVLogicalExpr.bitblast.go_Inv_of_Inv\"><span class=\"name\">Std</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">BVLogicalExpr</span>.<span class=\"name\">bitblast</span>.<span class=\"name\">go_Inv_of_Inv</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">expr</span> : <a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Basic.html#Std.Tactic.BVDecide.BVLogicalExpr\">BVLogicalExpr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">aig</span> : <span class=\"fn\"><a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG\">Sat.AIG</a> <a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Basic.html#Std.Tactic.BVDecide.BVBit\">BVBit</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">assign</span> : <a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Basic.html#Std.Tactic.BVDecide.BVExpr.Assignment\">BVExpr.Assignment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">cache</span> : <span class=\"fn\"><a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Impl/Expr.html#Std.Tactic.BVDecide.BVExpr.Cache\">BVExpr.Cache</a> <span class=\"fn\">aig</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hinv</span> : <span class=\"fn\"><a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Lemmas/Expr.html#Std.Tactic.BVDecide.BVExpr.Cache.Inv\">BVExpr.Cache.Inv</a> <span class=\"fn\">assign</span> <span class=\"fn\">aig</span> <span class=\"fn\">cache</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Lemmas/Expr.html#Std.Tactic.BVDecide.BVExpr.Cache.Inv\">BVExpr.Cache.Inv</a> <span class=\"fn\">assign</span> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Impl/Substructure.html#Std.Tactic.BVDecide.BVLogicalExpr.bitblast.go\">go</a> <span class=\"fn\">aig</span> <span class=\"fn\">expr</span> <span class=\"fn\">cache</span>)</span>.<a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Impl/Pred.html#Std.Tactic.BVDecide.Return.result\">result</a></span>.<a href=\"./Init/Prelude.html#Subtype.val\">val</a></span>.<a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.Entrypoint.aig\">aig</a></span> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Impl/Substructure.html#Std.Tactic.BVDecide.BVLogicalExpr.bitblast.go\">go</a> <span class=\"fn\">aig</span> <span class=\"fn\">expr</span> <span class=\"fn\">cache</span>)</span>.<a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Impl/Pred.html#Std.Tactic.BVDecide.Return.cache\">cache</a></span></span></div></div>"}]}