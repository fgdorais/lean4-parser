{"name":"Lean.Compiler.IR.ExpandResetReuse","instances":[],"imports":["Lean.Compiler.IR.CompilerM","Lean.Compiler.IR.NormIds","Lean.Compiler.IR.FreeVars"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/ExpandResetReuse.lean#L292-L294","name":"Lean.IR.Decl.expandResetReuse","line":292,"kind":"def","docLink":"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.Decl.expandResetReuse","doc":"(Try to) expand `reset` and `reuse` instructions. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.Decl.expandResetReuse\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">Decl</span>.<span class=\"name\">expandResetReuse</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">d</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Decl\">Decl</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Decl\">Decl</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/ExpandResetReuse.lean#L281-L288","name":"Lean.IR.ExpandResetReuse.main","line":281,"kind":"def","docLink":"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.main","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.main\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">ExpandResetReuse</span>.<span class=\"name\">main</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">d</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Decl\">Decl</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Decl\">Decl</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/ExpandResetReuse.lean#L265-L279","name":"Lean.IR.ExpandResetReuse.searchAndExpand","line":265,"kind":"opaque","docLink":"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.searchAndExpand","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.searchAndExpand\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">ExpandResetReuse</span>.<span class=\"name\">searchAndExpand</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.FnBody\">FnBody</a> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.FnBody\">FnBody</a></span> → <span class=\"fn\"><a href=\"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.M\">M</a> <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.FnBody\">FnBody</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/ExpandResetReuse.lean#L252-L263","name":"Lean.IR.ExpandResetReuse.expand","line":252,"kind":"def","docLink":"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.expand","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.expand\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">ExpandResetReuse</span>.<span class=\"name\">expand</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">mainFn</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.FnBody\">FnBody</a> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.FnBody\">FnBody</a></span> → <span class=\"fn\"><a href=\"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.M\">M</a> <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.FnBody\">FnBody</a></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">bs</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.FnBody\">FnBody</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.VarId\">VarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">y</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.VarId\">VarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.FnBody\">FnBody</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.M\">M</a> <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.FnBody\">FnBody</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/ExpandResetReuse.lean#L227-L249","name":"Lean.IR.ExpandResetReuse.mkFastPath","line":227,"kind":"def","docLink":"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.mkFastPath","doc":"replace\n```\nx := reset y; b\n```\nwith\n```\nlet f_i_1 := proj[i_1] y;\n...\nlet f_i_k := proj[i_k] y;\nb'\n```\nwhere `i_j`s are the field indexes\nthat the code did not touch immediately before the reset.\nThat is `mask[j] == none`.\n`b'` is `b` where `y` `dec x` is replaced with `del y`,\nand `z := reuse x ctor_i ws; F` is replaced with\n`set x i ws[i]` operations, and we replace `z` with `x` in `F`\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.mkFastPath\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">ExpandResetReuse</span>.<span class=\"name\">mkFastPath</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.VarId\">VarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">mask</span> : <a href=\"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.Mask\">Mask</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.FnBody\">FnBody</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.M\">M</a> <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.FnBody\">FnBody</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/ExpandResetReuse.lean#L204-L225","name":"Lean.IR.ExpandResetReuse.reuseToSet","line":204,"kind":"opaque","docLink":"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.reuseToSet","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.reuseToSet\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">ExpandResetReuse</span>.<span class=\"name\">reuseToSet</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.Context\">Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.VarId\">VarId</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.FnBody\">FnBody</a> → <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.FnBody\">FnBody</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/ExpandResetReuse.lean#L183-L202","name":"Lean.IR.ExpandResetReuse.removeSelfSet","line":183,"kind":"opaque","docLink":"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.removeSelfSet","doc":"Remove unnecessary `set/uset/sset` operations "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.removeSelfSet\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">ExpandResetReuse</span>.<span class=\"name\">removeSelfSet</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.Context\">Context</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.FnBody\">FnBody</a> → <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.FnBody\">FnBody</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/ExpandResetReuse.lean#L177-L181","name":"Lean.IR.ExpandResetReuse.isSelfSSet","line":177,"kind":"def","docLink":"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.isSelfSSet","doc":"Given `sset x[n, i] := y`, return true iff `y := sproj[n, i] x` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.isSelfSSet\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">ExpandResetReuse</span>.<span class=\"name\">isSelfSSet</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.Context\">Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.VarId\">VarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n </span><span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">y</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.VarId\">VarId</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/ExpandResetReuse.lean#L171-L175","name":"Lean.IR.ExpandResetReuse.isSelfUSet","line":171,"kind":"def","docLink":"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.isSelfUSet","doc":"Given `uset x[i] := y`, return true iff `y := uproj[i] x` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.isSelfUSet\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">ExpandResetReuse</span>.<span class=\"name\">isSelfUSet</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.Context\">Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.VarId\">VarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">y</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.VarId\">VarId</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/ExpandResetReuse.lean#L162-L169","name":"Lean.IR.ExpandResetReuse.isSelfSet","line":162,"kind":"def","docLink":"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.isSelfSet","doc":"Given `set x[i] := y`, return true iff `y := proj[i] x` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.isSelfSet\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">ExpandResetReuse</span>.<span class=\"name\">isSelfSet</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.Context\">Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.VarId\">VarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">y</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Arg\">Arg</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/ExpandResetReuse.lean#L159-L160","name":"Lean.IR.ExpandResetReuse.setFields","line":159,"kind":"def","docLink":"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.setFields","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.setFields\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">ExpandResetReuse</span>.<span class=\"name\">setFields</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">y</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.VarId\">VarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">zs</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Arg\">Arg</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.FnBody\">FnBody</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.FnBody\">FnBody</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/ExpandResetReuse.lean#L151-L157","name":"Lean.IR.ExpandResetReuse.releaseUnreadFields","line":151,"kind":"def","docLink":"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.releaseUnreadFields","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.releaseUnreadFields\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">ExpandResetReuse</span>.<span class=\"name\">releaseUnreadFields</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">y</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.VarId\">VarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">mask</span> : <a href=\"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.Mask\">Mask</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.FnBody\">FnBody</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.M\">M</a> <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.FnBody\">FnBody</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/ExpandResetReuse.lean#L148-L149","name":"Lean.IR.ExpandResetReuse.mkFresh","line":148,"kind":"def","docLink":"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.mkFresh","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.mkFresh\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">ExpandResetReuse</span>.<span class=\"name\">mkFresh</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.M\">M</a> <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.VarId\">VarId</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/ExpandResetReuse.lean#L147-L147","name":"Lean.IR.ExpandResetReuse.M","line":147,"kind":"def","docLink":"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.M","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.M\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">ExpandResetReuse</span>.<span class=\"name\">M</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/ExpandResetReuse.lean#L128-L145","name":"Lean.IR.ExpandResetReuse.mkSlowPath","line":128,"kind":"def","docLink":"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.mkSlowPath","doc":"replace\n```\nx := reset y; b\n```\nwith\n```\ninc z_1; ...; inc z_i; dec y; b'\n```\nwhere `z_i`'s are the variables in `mask`,\nand `b'` is `b` where we removed `dec x` and replaced `reuse x ctor_i ...` with `ctor_i ...`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.mkSlowPath\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">ExpandResetReuse</span>.<span class=\"name\">mkSlowPath</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.VarId\">VarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">mask</span> : <a href=\"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.Mask\">Mask</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.FnBody\">FnBody</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.FnBody\">FnBody</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/ExpandResetReuse.lean#L105-L126","name":"Lean.IR.ExpandResetReuse.reuseToCtor","line":105,"kind":"opaque","docLink":"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.reuseToCtor","doc":"Replace `reuse x ctor ...` with `ctor ...`, and remove `dec x` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.reuseToCtor\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">ExpandResetReuse</span>.<span class=\"name\">reuseToCtor</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.VarId\">VarId</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.FnBody\">FnBody</a> → <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.FnBody\">FnBody</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/ExpandResetReuse.lean#L100-L103","name":"Lean.IR.ExpandResetReuse.eraseProjIncFor","line":100,"kind":"def","docLink":"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.eraseProjIncFor","doc":"Try to erase `inc` instructions on projections of `y` occurring in the tail of `bs`.\nReturn the updated `bs` and a bit mask specifying which `inc`s have been removed. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.eraseProjIncFor\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">ExpandResetReuse</span>.<span class=\"name\">eraseProjIncFor</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">y</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.VarId\">VarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">bs</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.FnBody\">FnBody</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.FnBody\">FnBody</a></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.Mask\">Mask</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/ExpandResetReuse.lean#L64-L98","name":"Lean.IR.ExpandResetReuse.eraseProjIncForAux","line":64,"kind":"opaque","docLink":"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.eraseProjIncForAux","doc":"Auxiliary function for eraseProjIncFor "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.eraseProjIncForAux\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">ExpandResetReuse</span>.<span class=\"name\">eraseProjIncForAux</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">y</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.VarId\">VarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">bs</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.FnBody\">FnBody</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">projCounts</span> : <a href=\"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.ProjCounts\">ProjCounts</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">mask</span> : <a href=\"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.Mask\">Mask</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">keep</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.FnBody\">FnBody</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.FnBody\">FnBody</a></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.Mask\">Mask</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/ExpandResetReuse.lean#L54-L62","name":"Lean.IR.ExpandResetReuse.computeProjCounts","line":54,"kind":"def","docLink":"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.computeProjCounts","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.computeProjCounts\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">ExpandResetReuse</span>.<span class=\"name\">computeProjCounts</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">bs</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.FnBody\">FnBody</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.ProjCounts\">ProjCounts</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/ExpandResetReuse.lean#L52-L52","name":"Lean.IR.ExpandResetReuse.ProjCounts","line":52,"kind":"def","docLink":"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.ProjCounts","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.ProjCounts\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">ExpandResetReuse</span>.<span class=\"name\">ProjCounts</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/ExpandResetReuse.lean#L51-L51","name":"Lean.IR.ExpandResetReuse.Mask","line":51,"kind":"def","docLink":"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.Mask","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.Mask\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">ExpandResetReuse</span>.<span class=\"name\">Mask</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/ExpandResetReuse.lean#L40-L49","name":"Lean.IR.ExpandResetReuse.consumed","line":40,"kind":"opaque","docLink":"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.consumed","doc":"Return true iff `x` is consumed in all branches of the current block.\nHere consumption means the block contains a `dec x` or `reuse x ...`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.consumed\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">ExpandResetReuse</span>.<span class=\"name\">consumed</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.VarId\">VarId</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.FnBody\">FnBody</a> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/ExpandResetReuse.lean#L38-L38","name":"Lean.IR.ExpandResetReuse.Context.projMap","line":38,"kind":"def","docLink":"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.Context.projMap","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.Context.projMap\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">ExpandResetReuse</span>.<span class=\"name\">Context</span>.<span class=\"name\">projMap</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.Context\">Context</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.ProjMap\">ProjMap</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/ExpandResetReuse.lean#L37-L37","name":"Lean.IR.ExpandResetReuse.Context.mk","line":37,"kind":"ctor","docLink":"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.Context.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.Context.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">ExpandResetReuse</span>.<span class=\"name\">Context</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">projMap</span> : <a href=\"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.ProjMap\">ProjMap</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.Context\">Context</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/ExpandResetReuse.lean#L37-L38","name":"Lean.IR.ExpandResetReuse.Context","line":37,"kind":"structure","docLink":"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.Context","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.Context\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">ExpandResetReuse</span>.<span class=\"name\">Context</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/ExpandResetReuse.lean#L30-L35","name":"Lean.IR.ExpandResetReuse.mkProjMap","line":30,"kind":"def","docLink":"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.mkProjMap","doc":"Create a mapping from variables to projections.\nThis function assumes variable ids have been normalized "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.mkProjMap\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">ExpandResetReuse</span>.<span class=\"name\">mkProjMap</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">d</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Decl\">Decl</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.ProjMap\">ProjMap</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/ExpandResetReuse.lean#L23-L27","name":"Lean.IR.ExpandResetReuse.CollectProjMap.collectFnBody","line":23,"kind":"opaque","docLink":"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.CollectProjMap.collectFnBody","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.CollectProjMap.collectFnBody\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">ExpandResetReuse</span>.<span class=\"name\">CollectProjMap</span>.<span class=\"name\">collectFnBody</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.FnBody\">FnBody</a> → <a href=\"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.CollectProjMap.Collector\">Collector</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/ExpandResetReuse.lean#L16-L21","name":"Lean.IR.ExpandResetReuse.CollectProjMap.collectVDecl","line":16,"kind":"def","docLink":"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.CollectProjMap.collectVDecl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.CollectProjMap.collectVDecl\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">ExpandResetReuse</span>.<span class=\"name\">CollectProjMap</span>.<span class=\"name\">collectVDecl</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.VarId\">VarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">v</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.CollectProjMap.Collector\">Collector</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/ExpandResetReuse.lean#L15-L15","name":"Lean.IR.ExpandResetReuse.CollectProjMap.Collector","line":15,"kind":"def","docLink":"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.CollectProjMap.Collector","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.CollectProjMap.Collector\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">ExpandResetReuse</span>.<span class=\"name\">CollectProjMap</span>.<span class=\"name\">Collector</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/ExpandResetReuse.lean#L12-L13","name":"Lean.IR.ExpandResetReuse.ProjMap","line":12,"kind":"def","docLink":"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.ProjMap","doc":"Mapping from variable to projections "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.ProjMap\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">ExpandResetReuse</span>.<span class=\"name\">ProjMap</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"}]}