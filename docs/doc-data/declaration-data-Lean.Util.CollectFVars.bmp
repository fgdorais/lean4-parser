{"name":"Lean.Util.CollectFVars","instances":[{"typeNames":["Lean.CollectFVars.State"],"name":"Lean.CollectFVars.instInhabitedState","className":"Inhabited"}],"imports":["Lean.Expr","Lean.LocalContext"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Util/CollectFVars.lean#L41-L42","name":"Lean.collectFVars","line":41,"kind":"def","docLink":"./Lean/Util/CollectFVars.html#Lean.collectFVars","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/CollectFVars.html#Lean.collectFVars\"><span class=\"name\">Lean</span>.<span class=\"name\">collectFVars</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Lean/Util/CollectFVars.html#Lean.CollectFVars.State\">CollectFVars.State</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Util/CollectFVars.html#Lean.CollectFVars.State\">CollectFVars.State</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Util/CollectFVars.lean#L28-L36","name":"Lean.CollectFVars.main","line":28,"kind":"opaque","docLink":"./Lean/Util/CollectFVars.html#Lean.CollectFVars.main","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/CollectFVars.html#Lean.CollectFVars.main\"><span class=\"name\">Lean</span>.<span class=\"name\">CollectFVars</span>.<span class=\"name\">main</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a> â†’ <a href=\"./Lean/Util/CollectFVars.html#Lean.CollectFVars.Visitor\">Visitor</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Util/CollectFVars.lean#L24-L26","name":"Lean.CollectFVars.visit","line":24,"kind":"opaque","docLink":"./Lean/Util/CollectFVars.html#Lean.CollectFVars.visit","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/CollectFVars.html#Lean.CollectFVars.visit\"><span class=\"name\">Lean</span>.<span class=\"name\">CollectFVars</span>.<span class=\"name\">visit</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Util/CollectFVars.html#Lean.CollectFVars.Visitor\">Visitor</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Util/CollectFVars.lean#L21-L21","name":"Lean.CollectFVars.Visitor","line":21,"kind":"def","docLink":"./Lean/Util/CollectFVars.html#Lean.CollectFVars.Visitor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/CollectFVars.html#Lean.CollectFVars.Visitor\"><span class=\"name\">Lean</span>.<span class=\"name\">CollectFVars</span>.<span class=\"name\">Visitor</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Util/CollectFVars.lean#L18-L19","name":"Lean.CollectFVars.State.add","line":18,"kind":"def","docLink":"./Lean/Util/CollectFVars.html#Lean.CollectFVars.State.add","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/CollectFVars.html#Lean.CollectFVars.State.add\"><span class=\"name\">Lean</span>.<span class=\"name\">CollectFVars</span>.<span class=\"name\">State</span>.<span class=\"name\">add</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Lean/Util/CollectFVars.html#Lean.CollectFVars.State\">State</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fvarId</span> : <a href=\"./Lean/Expr.html#Lean.FVarId\">FVarId</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Util/CollectFVars.html#Lean.CollectFVars.State\">State</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Util/CollectFVars.lean#L16-L16","name":"Lean.CollectFVars.instInhabitedState","line":16,"kind":"instance","docLink":"./Lean/Util/CollectFVars.html#Lean.CollectFVars.instInhabitedState","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/CollectFVars.html#Lean.CollectFVars.instInhabitedState\"><span class=\"name\">Lean</span>.<span class=\"name\">CollectFVars</span>.<span class=\"name\">instInhabitedState</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Util/CollectFVars.html#Lean.CollectFVars.State\">State</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Util/CollectFVars.lean#L15-L15","name":"Lean.CollectFVars.State.fvarIds","line":15,"kind":"def","docLink":"./Lean/Util/CollectFVars.html#Lean.CollectFVars.State.fvarIds","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/CollectFVars.html#Lean.CollectFVars.State.fvarIds\"><span class=\"name\">Lean</span>.<span class=\"name\">CollectFVars</span>.<span class=\"name\">State</span>.<span class=\"name\">fvarIds</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Util/CollectFVars.html#Lean.CollectFVars.State\">State</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.FVarId\">FVarId</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Util/CollectFVars.lean#L14-L14","name":"Lean.CollectFVars.State.fvarSet","line":14,"kind":"def","docLink":"./Lean/Util/CollectFVars.html#Lean.CollectFVars.State.fvarSet","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/CollectFVars.html#Lean.CollectFVars.State.fvarSet\"><span class=\"name\">Lean</span>.<span class=\"name\">CollectFVars</span>.<span class=\"name\">State</span>.<span class=\"name\">fvarSet</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Util/CollectFVars.html#Lean.CollectFVars.State\">State</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.FVarIdSet\">FVarIdSet</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Util/CollectFVars.lean#L13-L13","name":"Lean.CollectFVars.State.visitedExpr","line":13,"kind":"def","docLink":"./Lean/Util/CollectFVars.html#Lean.CollectFVars.State.visitedExpr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/CollectFVars.html#Lean.CollectFVars.State.visitedExpr\"><span class=\"name\">Lean</span>.<span class=\"name\">CollectFVars</span>.<span class=\"name\">State</span>.<span class=\"name\">visitedExpr</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Util/CollectFVars.html#Lean.CollectFVars.State\">State</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.ExprSet\">ExprSet</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Util/CollectFVars.lean#L12-L12","name":"Lean.CollectFVars.State.mk","line":12,"kind":"ctor","docLink":"./Lean/Util/CollectFVars.html#Lean.CollectFVars.State.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/CollectFVars.html#Lean.CollectFVars.State.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">CollectFVars</span>.<span class=\"name\">State</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">visitedExpr</span> : <a href=\"./Lean/Expr.html#Lean.ExprSet\">ExprSet</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fvarSet</span> : <a href=\"./Lean/Expr.html#Lean.FVarIdSet\">FVarIdSet</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fvarIds</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.FVarId\">FVarId</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Util/CollectFVars.html#Lean.CollectFVars.State\">State</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Util/CollectFVars.lean#L12-L16","name":"Lean.CollectFVars.State","line":12,"kind":"structure","docLink":"./Lean/Util/CollectFVars.html#Lean.CollectFVars.State","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/CollectFVars.html#Lean.CollectFVars.State\"><span class=\"name\">Lean</span>.<span class=\"name\">CollectFVars</span>.<span class=\"name\">State</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"}]}