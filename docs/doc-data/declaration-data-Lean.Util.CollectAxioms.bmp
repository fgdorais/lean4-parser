{"name":"Lean.Util.CollectAxioms","instances":[],"imports":["Lean.MonadEnv","Lean.Util.FoldConsts"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Util/CollectAxioms.lean#L41-L44","name":"Lean.collectAxioms","line":41,"kind":"def","docLink":"./Lean/Util/CollectAxioms.html#Lean.collectAxioms","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/CollectAxioms.html#Lean.collectAxioms\"><span class=\"name\">Lean</span>.<span class=\"name\">collectAxioms</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.MonadEnv\">MonadEnv</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">constName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Util/CollectAxioms.lean#L20-L37","name":"Lean.CollectAxioms.collect","line":20,"kind":"opaque","docLink":"./Lean/Util/CollectAxioms.html#Lean.CollectAxioms.collect","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/CollectAxioms.html#Lean.CollectAxioms.collect\"><span class=\"name\">Lean</span>.<span class=\"name\">CollectAxioms</span>.<span class=\"name\">collect</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Util/CollectAxioms.html#Lean.CollectAxioms.M\">M</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Util/CollectAxioms.lean#L18-L18","name":"Lean.CollectAxioms.M","line":18,"kind":"def","docLink":"./Lean/Util/CollectAxioms.html#Lean.CollectAxioms.M","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/CollectAxioms.html#Lean.CollectAxioms.M\"><span class=\"name\">Lean</span>.<span class=\"name\">CollectAxioms</span>.<span class=\"name\">M</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Util/CollectAxioms.lean#L16-L16","name":"Lean.CollectAxioms.State.axioms","line":16,"kind":"def","docLink":"./Lean/Util/CollectAxioms.html#Lean.CollectAxioms.State.axioms","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/CollectAxioms.html#Lean.CollectAxioms.State.axioms\"><span class=\"name\">Lean</span>.<span class=\"name\">CollectAxioms</span>.<span class=\"name\">State</span>.<span class=\"name\">axioms</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Util/CollectAxioms.html#Lean.CollectAxioms.State\">State</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Lean.Name\">Name</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Util/CollectAxioms.lean#L15-L15","name":"Lean.CollectAxioms.State.visited","line":15,"kind":"def","docLink":"./Lean/Util/CollectAxioms.html#Lean.CollectAxioms.State.visited","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/CollectAxioms.html#Lean.CollectAxioms.State.visited\"><span class=\"name\">Lean</span>.<span class=\"name\">CollectAxioms</span>.<span class=\"name\">State</span>.<span class=\"name\">visited</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Util/CollectAxioms.html#Lean.CollectAxioms.State\">State</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Data/NameMap.html#Lean.NameSet\">NameSet</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Util/CollectAxioms.lean#L14-L14","name":"Lean.CollectAxioms.State.mk","line":14,"kind":"ctor","docLink":"./Lean/Util/CollectAxioms.html#Lean.CollectAxioms.State.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/CollectAxioms.html#Lean.CollectAxioms.State.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">CollectAxioms</span>.<span class=\"name\">State</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">visited</span> : <a href=\"./Lean/Data/NameMap.html#Lean.NameSet\">NameSet</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">axioms</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Lean.Name\">Name</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Util/CollectAxioms.html#Lean.CollectAxioms.State\">State</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Util/CollectAxioms.lean#L14-L16","name":"Lean.CollectAxioms.State","line":14,"kind":"structure","docLink":"./Lean/Util/CollectAxioms.html#Lean.CollectAxioms.State","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/CollectAxioms.html#Lean.CollectAxioms.State\"><span class=\"name\">Lean</span>.<span class=\"name\">CollectAxioms</span>.<span class=\"name\">State</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"}]}