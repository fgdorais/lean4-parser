{"name":"Lean.Elab.Deriving.FromToJson","instances":[],"imports":["Lean.Meta.Transform","Lean.Elab.Deriving.Basic","Lean.Elab.Deriving.Util","Lean.Data.Json.FromToJson"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/Deriving/FromToJson.lean#L233-L240","name":"Lean.Elab.Deriving.FromToJson.mkFromJsonInstanceHandler","line":233,"kind":"def","docLink":"./Lean/Elab/Deriving/FromToJson.html#Lean.Elab.Deriving.FromToJson.mkFromJsonInstanceHandler","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Deriving/FromToJson.html#Lean.Elab.Deriving.FromToJson.mkFromJsonInstanceHandler\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Deriving</span>.<span class=\"name\">FromToJson</span>.<span class=\"name\">mkFromJsonInstanceHandler</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">declNames</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Lean.Name\">Name</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.CommandElabM\">Command.CommandElabM</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/Deriving/FromToJson.lean#L224-L231","name":"Lean.Elab.Deriving.FromToJson.mkToJsonInstanceHandler","line":224,"kind":"def","docLink":"./Lean/Elab/Deriving/FromToJson.html#Lean.Elab.Deriving.FromToJson.mkToJsonInstanceHandler","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Deriving/FromToJson.html#Lean.Elab.Deriving.FromToJson.mkToJsonInstanceHandler\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Deriving</span>.<span class=\"name\">FromToJson</span>.<span class=\"name\">mkToJsonInstanceHandler</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">declNames</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Lean.Name\">Name</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.CommandElabM\">Command.CommandElabM</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/Deriving/FromToJson.lean#L204-L210","name":"Lean.Elab.Deriving.FromToJson.mkFromJsonMutualBlock","line":204,"kind":"def","docLink":"./Lean/Elab/Deriving/FromToJson.html#Lean.Elab.Deriving.FromToJson.mkFromJsonMutualBlock","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Deriving/FromToJson.html#Lean.Elab.Deriving.FromToJson.mkFromJsonMutualBlock\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Deriving</span>.<span class=\"name\">FromToJson</span>.<span class=\"name\">mkFromJsonMutualBlock</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Lean/Elab/Deriving/Util.html#Lean.Elab.Deriving.Context\">Context</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Term.html#Lean.Elab.Term.TermElabM\">TermElabM</a> <a href=\"./Init/Meta.html#Lean.Syntax.Command\">Command</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/Deriving/FromToJson.lean#L196-L202","name":"Lean.Elab.Deriving.FromToJson.mkToJsonMutualBlock","line":196,"kind":"def","docLink":"./Lean/Elab/Deriving/FromToJson.html#Lean.Elab.Deriving.FromToJson.mkToJsonMutualBlock","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Deriving/FromToJson.html#Lean.Elab.Deriving.FromToJson.mkToJsonMutualBlock\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Deriving</span>.<span class=\"name\">FromToJson</span>.<span class=\"name\">mkToJsonMutualBlock</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Lean/Elab/Deriving/Util.html#Lean.Elab.Deriving.Context\">Context</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Term.html#Lean.Elab.Term.TermElabM\">TermElabM</a> <a href=\"./Init/Meta.html#Lean.Syntax.Command\">Command</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/Deriving/FromToJson.lean#L180-L193","name":"Lean.Elab.Deriving.FromToJson.mkFromJsonAuxFunction","line":180,"kind":"def","docLink":"./Lean/Elab/Deriving/FromToJson.html#Lean.Elab.Deriving.FromToJson.mkFromJsonAuxFunction","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Deriving/FromToJson.html#Lean.Elab.Deriving.FromToJson.mkFromJsonAuxFunction\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Deriving</span>.<span class=\"name\">FromToJson</span>.<span class=\"name\">mkFromJsonAuxFunction</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Lean/Elab/Deriving/Util.html#Lean.Elab.Deriving.Context\">Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Term.html#Lean.Elab.Term.TermElabM\">TermElabM</a> <a href=\"./Init/Meta.html#Lean.Syntax.Command\">Command</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/Deriving/FromToJson.lean#L173-L178","name":"Lean.Elab.Deriving.FromToJson.mkFromJsonBody","line":173,"kind":"def","docLink":"./Lean/Elab/Deriving/FromToJson.html#Lean.Elab.Deriving.FromToJson.mkFromJsonBody","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Deriving/FromToJson.html#Lean.Elab.Deriving.FromToJson.mkFromJsonBody\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Deriving</span>.<span class=\"name\">FromToJson</span>.<span class=\"name\">mkFromJsonBody</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Lean/Elab/Deriving/Util.html#Lean.Elab.Deriving.Context\">Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Term.html#Lean.Elab.Term.TermElabM\">TermElabM</a> <a href=\"./Init/Meta.html#Lean.Syntax.Term\">Term</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/Deriving/FromToJson.lean#L159-L171","name":"Lean.Elab.Deriving.FromToJson.mkToJsonAuxFunction","line":159,"kind":"def","docLink":"./Lean/Elab/Deriving/FromToJson.html#Lean.Elab.Deriving.FromToJson.mkToJsonAuxFunction","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Deriving/FromToJson.html#Lean.Elab.Deriving.FromToJson.mkToJsonAuxFunction\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Deriving</span>.<span class=\"name\">FromToJson</span>.<span class=\"name\">mkToJsonAuxFunction</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Lean/Elab/Deriving/Util.html#Lean.Elab.Deriving.Context\">Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Term.html#Lean.Elab.Term.TermElabM\">TermElabM</a> <a href=\"./Init/Meta.html#Lean.Syntax.Command\">Command</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/Deriving/FromToJson.lean#L152-L157","name":"Lean.Elab.Deriving.FromToJson.mkToJsonBody","line":152,"kind":"def","docLink":"./Lean/Elab/Deriving/FromToJson.html#Lean.Elab.Deriving.FromToJson.mkToJsonBody","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Deriving/FromToJson.html#Lean.Elab.Deriving.FromToJson.mkToJsonBody\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Deriving</span>.<span class=\"name\">FromToJson</span>.<span class=\"name\">mkToJsonBody</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Lean/Elab/Deriving/Util.html#Lean.Elab.Deriving.Context\">Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">header</span> : <a href=\"./Lean/Elab/Deriving/Util.html#Lean.Elab.Deriving.Header\">Header</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Term.html#Lean.Elab.Term.TermElabM\">TermElabM</a> <a href=\"./Init/Meta.html#Lean.Syntax.Term\">Term</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/Deriving/FromToJson.lean#L115-L150","name":"Lean.Elab.Deriving.FromToJson.mkFromJsonBodyForInduct.mkAlts","line":115,"kind":"def","docLink":"./Lean/Elab/Deriving/FromToJson.html#Lean.Elab.Deriving.FromToJson.mkFromJsonBodyForInduct.mkAlts","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Deriving/FromToJson.html#Lean.Elab.Deriving.FromToJson.mkFromJsonBodyForInduct.mkAlts\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Deriving</span>.<span class=\"name\">FromToJson</span>.<span class=\"name\">mkFromJsonBodyForInduct</span>.<span class=\"name\">mkAlts</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Lean/Elab/Deriving/Util.html#Lean.Elab.Deriving.Context\">Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">indVal</span> : <a href=\"./Lean/Declaration.html#Lean.InductiveVal\">InductiveVal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Term.html#Lean.Elab.Term.TermElabM\">TermElabM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Meta.html#Lean.Syntax.Term\">Term</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/Deriving/FromToJson.lean#L109-L150","name":"Lean.Elab.Deriving.FromToJson.mkFromJsonBodyForInduct","line":109,"kind":"def","docLink":"./Lean/Elab/Deriving/FromToJson.html#Lean.Elab.Deriving.FromToJson.mkFromJsonBodyForInduct","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Deriving/FromToJson.html#Lean.Elab.Deriving.FromToJson.mkFromJsonBodyForInduct\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Deriving</span>.<span class=\"name\">FromToJson</span>.<span class=\"name\">mkFromJsonBodyForInduct</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Lean/Elab/Deriving/Util.html#Lean.Elab.Deriving.Context\">Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">indName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Term.html#Lean.Elab.Term.TermElabM\">TermElabM</a> <a href=\"./Init/Meta.html#Lean.Syntax.Term\">Term</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/Deriving/FromToJson.lean#L97-L107","name":"Lean.Elab.Deriving.FromToJson.mkFromJsonBodyForStruct","line":97,"kind":"def","docLink":"./Lean/Elab/Deriving/FromToJson.html#Lean.Elab.Deriving.FromToJson.mkFromJsonBodyForStruct","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Deriving/FromToJson.html#Lean.Elab.Deriving.FromToJson.mkFromJsonBodyForStruct\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Deriving</span>.<span class=\"name\">FromToJson</span>.<span class=\"name\">mkFromJsonBodyForStruct</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">indName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Term.html#Lean.Elab.Term.TermElabM\">TermElabM</a> <a href=\"./Init/Meta.html#Lean.Syntax.Term\">Term</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/Deriving/FromToJson.lean#L65-L95","name":"Lean.Elab.Deriving.FromToJson.mkToJsonBodyForInduct.mkAlts","line":65,"kind":"def","docLink":"./Lean/Elab/Deriving/FromToJson.html#Lean.Elab.Deriving.FromToJson.mkToJsonBodyForInduct.mkAlts","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Deriving/FromToJson.html#Lean.Elab.Deriving.FromToJson.mkToJsonBodyForInduct.mkAlts\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Deriving</span>.<span class=\"name\">FromToJson</span>.<span class=\"name\">mkToJsonBodyForInduct</span>.<span class=\"name\">mkAlts</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">indVal</span> : <a href=\"./Lean/Declaration.html#Lean.InductiveVal\">InductiveVal</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">rhs</span> : <span class=\"fn\"><a href=\"./Lean/Declaration.html#Lean.ConstructorVal\">ConstructorVal</a> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> (<a href=\"./Init/Meta.html#Lean.Syntax.Ident\">Ident</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span> → <span class=\"fn\"><a href=\"./Lean/Elab/Term.html#Lean.Elab.Term.TermElabM\">TermElabM</a> <a href=\"./Init/Meta.html#Lean.Syntax.Term\">Term</a></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Term.html#Lean.Elab.Term.TermElabM\">TermElabM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> (<a href=\"./Init/Prelude.html#Lean.TSyntax\">TSyntax</a> <span class=\"fn\">`Lean.Parser.Term.matchAlt</span>))</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/Deriving/FromToJson.lean#L41-L95","name":"Lean.Elab.Deriving.FromToJson.mkToJsonBodyForInduct","line":41,"kind":"def","docLink":"./Lean/Elab/Deriving/FromToJson.html#Lean.Elab.Deriving.FromToJson.mkToJsonBodyForInduct","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Deriving/FromToJson.html#Lean.Elab.Deriving.FromToJson.mkToJsonBodyForInduct\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Deriving</span>.<span class=\"name\">FromToJson</span>.<span class=\"name\">mkToJsonBodyForInduct</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Lean/Elab/Deriving/Util.html#Lean.Elab.Deriving.Context\">Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">header</span> : <a href=\"./Lean/Elab/Deriving/Util.html#Lean.Elab.Deriving.Header\">Header</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">indName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Term.html#Lean.Elab.Term.TermElabM\">TermElabM</a> <a href=\"./Init/Meta.html#Lean.Syntax.Term\">Term</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/Deriving/FromToJson.lean#L32-L39","name":"Lean.Elab.Deriving.FromToJson.mkToJsonBodyForStruct","line":32,"kind":"def","docLink":"./Lean/Elab/Deriving/FromToJson.html#Lean.Elab.Deriving.FromToJson.mkToJsonBodyForStruct","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Deriving/FromToJson.html#Lean.Elab.Deriving.FromToJson.mkToJsonBodyForStruct\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Deriving</span>.<span class=\"name\">FromToJson</span>.<span class=\"name\">mkToJsonBodyForStruct</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">header</span> : <a href=\"./Lean/Elab/Deriving/Util.html#Lean.Elab.Deriving.Header\">Header</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">indName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Term.html#Lean.Elab.Term.TermElabM\">TermElabM</a> <a href=\"./Init/Meta.html#Lean.Syntax.Term\">Term</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/Deriving/FromToJson.lean#L27-L30","name":"Lean.Elab.Deriving.FromToJson.mkJsonField","line":27,"kind":"def","docLink":"./Lean/Elab/Deriving/FromToJson.html#Lean.Elab.Deriving.FromToJson.mkJsonField","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Deriving/FromToJson.html#Lean.Elab.Deriving.FromToJson.mkJsonField\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Deriving</span>.<span class=\"name\">FromToJson</span>.<span class=\"name\">mkJsonField</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">CoreM</a> (<a href=\"./Init/Prelude.html#Bool\">Bool</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Meta.html#Lean.Syntax.Term\">Term</a>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/Deriving/FromToJson.lean#L21-L25","name":"Lean.Elab.Deriving.FromToJson.mkFromJsonHeader","line":21,"kind":"def","docLink":"./Lean/Elab/Deriving/FromToJson.html#Lean.Elab.Deriving.FromToJson.mkFromJsonHeader","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Deriving/FromToJson.html#Lean.Elab.Deriving.FromToJson.mkFromJsonHeader\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Deriving</span>.<span class=\"name\">FromToJson</span>.<span class=\"name\">mkFromJsonHeader</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">indVal</span> : <a href=\"./Lean/Declaration.html#Lean.InductiveVal\">InductiveVal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Term.html#Lean.Elab.Term.TermElabM\">TermElabM</a> <a href=\"./Lean/Elab/Deriving/Util.html#Lean.Elab.Deriving.Header\">Header</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/Deriving/FromToJson.lean#L18-L19","name":"Lean.Elab.Deriving.FromToJson.mkToJsonHeader","line":18,"kind":"def","docLink":"./Lean/Elab/Deriving/FromToJson.html#Lean.Elab.Deriving.FromToJson.mkToJsonHeader","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Deriving/FromToJson.html#Lean.Elab.Deriving.FromToJson.mkToJsonHeader\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Deriving</span>.<span class=\"name\">FromToJson</span>.<span class=\"name\">mkToJsonHeader</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">indVal</span> : <a href=\"./Lean/Declaration.html#Lean.InductiveVal\">InductiveVal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Term.html#Lean.Elab.Term.TermElabM\">TermElabM</a> <a href=\"./Lean/Elab/Deriving/Util.html#Lean.Elab.Deriving.Header\">Header</a></span></div></div>"}]}