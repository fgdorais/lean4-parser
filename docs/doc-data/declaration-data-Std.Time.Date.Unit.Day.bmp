{"name":"Std.Time.Date.Unit.Day","instances":[{"typeNames":["Std.Time.Day.Ordinal"],"name":"Std.Time.Day.instOrdinalRepr","className":"Repr"},{"typeNames":["Eq"],"name":"Std.Time.Day.instOrdinalDecidableEq","className":"Decidable"},{"typeNames":["Std.Time.Day.Ordinal"],"name":"Std.Time.Day.instOrdinalLE","className":"LE"},{"typeNames":["Std.Time.Day.Ordinal"],"name":"Std.Time.Day.instOrdinalLT","className":"LT"},{"typeNames":["Std.Time.Day.Ordinal"],"name":"Std.Time.Day.instOfNatOrdinal","className":"OfNat"},{"typeNames":["LE.le"],"name":"Std.Time.Day.instDecidableLeOrdinal","className":"Decidable"},{"typeNames":["LT.lt"],"name":"Std.Time.Day.instDecidableLtOrdinal","className":"Decidable"},{"typeNames":["Std.Time.Day.Ordinal"],"name":"Std.Time.Day.instInhabitedOrdinal","className":"Inhabited"},{"typeNames":["Std.Time.Day.Ordinal"],"name":"Std.Time.Day.instOrdOrdinal","className":"Ord"},{"typeNames":["Std.Time.Day.Ordinal"],"name":"Std.Time.Day.instTransOrdOrdinal","className":"Std.TransCmp"},{"typeNames":["Std.Time.Day.Ordinal"],"name":"Std.Time.Day.instLawfulEqOrdOrdinal","className":"Std.LawfulEqCmp"},{"typeNames":["Std.Time.Day.Offset"],"name":"Std.Time.Day.instOffsetRepr","className":"Repr"},{"typeNames":["Eq"],"name":"Std.Time.Day.instOffsetDecidableEq","className":"Decidable"},{"typeNames":["Std.Time.Day.Offset"],"name":"Std.Time.Day.instOffsetInhabited","className":"Inhabited"},{"typeNames":["Std.Time.Day.Offset"],"name":"Std.Time.Day.instOffsetAdd","className":"Add"},{"typeNames":["Std.Time.Day.Offset"],"name":"Std.Time.Day.instOffsetSub","className":"Sub"},{"typeNames":["Std.Time.Day.Offset"],"name":"Std.Time.Day.instOffsetNeg","className":"Neg"},{"typeNames":["Std.Time.Day.Offset"],"name":"Std.Time.Day.instOffsetLE","className":"LE"},{"typeNames":["Std.Time.Day.Offset"],"name":"Std.Time.Day.instOffsetLT","className":"LT"},{"typeNames":["Std.Time.Day.Offset"],"name":"Std.Time.Day.instOffsetToString","className":"ToString"},{"typeNames":["Std.Time.Day.Offset"],"name":"Std.Time.Day.instOfNatOffset","className":"OfNat"},{"typeNames":["LE.le"],"name":"Std.Time.Day.instDecidableLeOffset","className":"Decidable"},{"typeNames":["LT.lt"],"name":"Std.Time.Day.instDecidableLtOffset","className":"Decidable"},{"typeNames":["Std.Time.Day.Offset"],"name":"Std.Time.Day.instOrdOffset","className":"Ord"},{"typeNames":["Std.Time.Day.Offset"],"name":"Std.Time.Day.instTransOrdOffset","className":"Std.TransCmp"},{"typeNames":["Std.Time.Day.Offset"],"name":"Std.Time.Day.instLawfulEqOrdOffset","className":"Std.LawfulEqCmp"},{"typeNames":["Std.Time.Day.Ordinal.OfYear"],"name":"Std.Time.Day.Ordinal.instReprOfYear","className":"Repr"},{"typeNames":["Std.Time.Day.Ordinal.OfYear"],"name":"Std.Time.Day.Ordinal.instToStringOfYear","className":"ToString"},{"typeNames":["Eq"],"name":"Std.Time.Day.Ordinal.instDecidableEqOfYear","className":"Decidable"},{"typeNames":["Std.Time.Day.Ordinal.OfYear"],"name":"Std.Time.Day.Ordinal.instOrdOfYear","className":"Ord"},{"typeNames":["Std.Time.Day.Ordinal.OfYear"],"name":"Std.Time.Day.Ordinal.instTransOrdOfYear","className":"Std.TransCmp"},{"typeNames":["Std.Time.Day.Ordinal.OfYear"],"name":"Std.Time.Day.Ordinal.instLawfulEqOrdOfYear","className":"Std.LawfulEqCmp"},{"typeNames":["Std.Time.Day.Ordinal.OfYear"],"name":"Std.Time.Day.Ordinal.instOfNatOfYear","className":"OfNat"},{"typeNames":["Std.Time.Day.Ordinal.OfYear"],"name":"Std.Time.Day.Ordinal.instInhabitedOfYear","className":"Inhabited"}],"imports":["Std.Time.Time"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/Date/Unit/Day.lean#L231-L236","name":"Std.Time.Day.Offset.ofHours","line":231,"kind":"def","docLink":"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset.ofHours","doc":"Convert `Hour.Offset` into `Day.Offset`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset.ofHours\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Day</span>.<span class=\"name\">Offset</span>.<span class=\"name\">ofHours</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hours</span> : <a href=\"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.Offset\">Hour.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset\">Offset</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/Date/Unit/Day.lean#L224-L229","name":"Std.Time.Day.Offset.toHours","line":224,"kind":"def","docLink":"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset.toHours","doc":"Convert `Day.Offset` into `Hour.Offset`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset.toHours\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Day</span>.<span class=\"name\">Offset</span>.<span class=\"name\">toHours</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">days</span> : <a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset\">Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.Offset\">Hour.Offset</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/Date/Unit/Day.lean#L217-L222","name":"Std.Time.Day.Offset.ofMinutes","line":217,"kind":"def","docLink":"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset.ofMinutes","doc":"Convert `Minute.Offset` into `Day.Offset`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset.ofMinutes\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Day</span>.<span class=\"name\">Offset</span>.<span class=\"name\">ofMinutes</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">minutes</span> : <a href=\"./Std/Time/Time/Unit/Minute.html#Std.Time.Minute.Offset\">Minute.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset\">Offset</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/Date/Unit/Day.lean#L210-L215","name":"Std.Time.Day.Offset.toMinutes","line":210,"kind":"def","docLink":"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset.toMinutes","doc":"Convert `Day.Offset` into `Minute.Offset`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset.toMinutes\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Day</span>.<span class=\"name\">Offset</span>.<span class=\"name\">toMinutes</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">days</span> : <a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset\">Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Time/Unit/Minute.html#Std.Time.Minute.Offset\">Minute.Offset</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/Date/Unit/Day.lean#L203-L208","name":"Std.Time.Day.Offset.ofSeconds","line":203,"kind":"def","docLink":"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset.ofSeconds","doc":"Convert `Second.Offset` into `Day.Offset`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset.ofSeconds\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Day</span>.<span class=\"name\">Offset</span>.<span class=\"name\">ofSeconds</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">secs</span> : <a href=\"./Std/Time/Time/Unit/Second.html#Std.Time.Second.Offset\">Second.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset\">Offset</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/Date/Unit/Day.lean#L196-L201","name":"Std.Time.Day.Offset.toSeconds","line":196,"kind":"def","docLink":"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset.toSeconds","doc":"Convert `Day.Offset` into `Second.Offset`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset.toSeconds\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Day</span>.<span class=\"name\">Offset</span>.<span class=\"name\">toSeconds</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">days</span> : <a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset\">Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Time/Unit/Second.html#Std.Time.Second.Offset\">Second.Offset</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/Date/Unit/Day.lean#L189-L194","name":"Std.Time.Day.Offset.ofMilliseconds","line":189,"kind":"def","docLink":"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset.ofMilliseconds","doc":"Convert `Millisecond.Offset` into `Day.Offset`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset.ofMilliseconds\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Day</span>.<span class=\"name\">Offset</span>.<span class=\"name\">ofMilliseconds</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ms</span> : <a href=\"./Std/Time/Time/Unit/Millisecond.html#Std.Time.Millisecond.Offset\">Millisecond.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset\">Offset</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/Date/Unit/Day.lean#L182-L187","name":"Std.Time.Day.Offset.toMilliseconds","line":182,"kind":"def","docLink":"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset.toMilliseconds","doc":"Convert `Day.Offset` into `Millisecond.Offset`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset.toMilliseconds\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Day</span>.<span class=\"name\">Offset</span>.<span class=\"name\">toMilliseconds</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">days</span> : <a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset\">Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Time/Unit/Millisecond.html#Std.Time.Millisecond.Offset\">Millisecond.Offset</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/Date/Unit/Day.lean#L175-L180","name":"Std.Time.Day.Offset.ofNanoseconds","line":175,"kind":"def","docLink":"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset.ofNanoseconds","doc":"Convert `Nanosecond.Offset` into `Day.Offset`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset.ofNanoseconds\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Day</span>.<span class=\"name\">Offset</span>.<span class=\"name\">ofNanoseconds</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ns</span> : <a href=\"./Std/Time/Time/Unit/Nanosecond.html#Std.Time.Nanosecond.Offset\">Nanosecond.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset\">Offset</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/Date/Unit/Day.lean#L168-L173","name":"Std.Time.Day.Offset.toNanoseconds","line":168,"kind":"def","docLink":"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset.toNanoseconds","doc":"Convert `Day.Offset` into `Nanosecond.Offset`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset.toNanoseconds\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Day</span>.<span class=\"name\">Offset</span>.<span class=\"name\">toNanoseconds</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">days</span> : <a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset\">Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Time/Unit/Nanosecond.html#Std.Time.Nanosecond.Offset\">Nanosecond.Offset</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/Date/Unit/Day.lean#L161-L166","name":"Std.Time.Day.Offset.ofInt","line":161,"kind":"def","docLink":"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset.ofInt","doc":"Creates an `Offset` from an integer.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset.ofInt\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Day</span>.<span class=\"name\">Offset</span>.<span class=\"name\">ofInt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">data</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset\">Offset</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/Date/Unit/Day.lean#L154-L159","name":"Std.Time.Day.Offset.ofNat","line":154,"kind":"def","docLink":"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset.ofNat","doc":"Creates an `Offset` from a natural number.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset.ofNat\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Day</span>.<span class=\"name\">Offset</span>.<span class=\"name\">ofNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">data</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset\">Offset</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/Date/Unit/Day.lean#L147-L152","name":"Std.Time.Day.Offset.toOrdinal","line":147,"kind":"def","docLink":"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset.toOrdinal","doc":"Converts an `Offset` to an `Ordinal`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset.toOrdinal\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Day</span>.<span class=\"name\">Offset</span>.<span class=\"name\">toOrdinal</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">off</span> : <a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset\">Offset</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">off</span>.<a href=\"./Std/Time/Internal/UnitVal.html#Std.Time.Internal.UnitVal.val\">val</a></span> <a href=\"./Init/Prelude.html#GE.ge\">≥</a> <span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">off</span>.<a href=\"./Std/Time/Internal/UnitVal.html#Std.Time.Internal.UnitVal.val\">val</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">31</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal\">Ordinal</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/Date/Unit/Day.lean#L136-L140","name":"Std.Time.Day.Ordinal.OfYear.toOffset","line":136,"kind":"def","docLink":"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal.OfYear.toOffset","doc":"Converts an `OfYear` ordinal to a `Offset`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal.OfYear.toOffset\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Day</span>.<span class=\"name\">Ordinal</span>.<span class=\"name\">OfYear</span>.<span class=\"name\">toOffset</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">leap</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ofYear</span> : <span class=\"fn\"><a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal.OfYear\">OfYear</a> <span class=\"fn\">leap</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset\">Offset</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/Date/Unit/Day.lean#L127-L132","name":"Std.Time.Day.Ordinal.toOffset","line":127,"kind":"def","docLink":"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal.toOffset","doc":"Converts an `Ordinal` to an `Offset`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal.toOffset\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Day</span>.<span class=\"name\">Ordinal</span>.<span class=\"name\">toOffset</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ordinal</span> : <a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal\">Ordinal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset\">Offset</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/Date/Unit/Day.lean#L119-L125","name":"Std.Time.Day.Ordinal.ofFin","line":119,"kind":"def","docLink":"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal.ofFin","doc":"Creates an ordinal from a `Fin` value, ensuring it is within the valid range for days of the month (1 to 31).\nIf the `Fin` value is 0, it is converted to 1.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal.ofFin\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Day</span>.<span class=\"name\">Ordinal</span>.<span class=\"name\">ofFin</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">data</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">32</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal\">Ordinal</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/Date/Unit/Day.lean#L111-L117","name":"Std.Time.Day.Ordinal.ofNat","line":111,"kind":"def","docLink":"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal.ofNat","doc":"Creates an ordinal from a natural number, ensuring the number is within the valid range\nfor days of a month (1 to 31).\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal.ofNat\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Day</span>.<span class=\"name\">Ordinal</span>.<span class=\"name\">ofNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">data</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">data</span> <a href=\"./Init/Prelude.html#GE.ge\">≥</a> <span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">data</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">31</span> := by decide)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal\">Ordinal</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/Date/Unit/Day.lean#L106-L109","name":"Std.Time.Day.Ordinal.instInhabitedOfYear","line":106,"kind":"instance","docLink":"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal.instInhabitedOfYear","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal.instInhabitedOfYear\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Day</span>.<span class=\"name\">Ordinal</span>.<span class=\"name\">instInhabitedOfYear</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">leap</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal.OfYear\">OfYear</a> <span class=\"fn\">leap</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/Date/Unit/Day.lean#L101-L104","name":"Std.Time.Day.Ordinal.instOfNatOfYear","line":101,"kind":"instance","docLink":"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal.instOfNatOfYear","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal.instOfNatOfYear\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Day</span>.<span class=\"name\">Ordinal</span>.<span class=\"name\">instOfNatOfYear</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">leap</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#OfNat\">OfNat</a> <span class=\"fn\">(<a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal.OfYear\">OfYear</a> <span class=\"fn\">leap</span>)</span> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/Date/Unit/Day.lean#L91-L97","name":"Std.Time.Day.Ordinal.OfYear.ofNat","line":91,"kind":"def","docLink":"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal.OfYear.ofNat","doc":"Creates an ordinal for a specific day within the year, ensuring that the provided day (`data`)\nis within the valid range for the year, which can be 1 to 365 or 366 for leap years.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal.OfYear.ofNat\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Day</span>.<span class=\"name\">Ordinal</span>.<span class=\"name\">OfYear</span>.<span class=\"name\">ofNat</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">leap</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">data</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">data</span> <a href=\"./Init/Prelude.html#GE.ge\">≥</a> <span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">data</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <a href=\"./Init/Prelude.html#ite\">if</a> <span class=\"fn\">leap</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Bool.true\">true</a> <a href=\"./Init/Prelude.html#ite\">then</a> <span class=\"fn\">366</span> <a href=\"./Init/Prelude.html#ite\">else</a> <span class=\"fn\">365</span> := by decide)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal.OfYear\">OfYear</a> <span class=\"fn\">leap</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/Date/Unit/Day.lean#L87-L87","name":"Std.Time.Day.Ordinal.instLawfulEqOrdOfYear","line":87,"kind":"instance","docLink":"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal.instLawfulEqOrdOfYear","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal.instLawfulEqOrdOfYear\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Day</span>.<span class=\"name\">Ordinal</span>.<span class=\"name\">instLawfulEqOrdOfYear</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">leap</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Classes/Ord.html#Std.LawfulEqOrd\">LawfulEqOrd</a> <span class=\"fn\">(<a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal.OfYear\">OfYear</a> <span class=\"fn\">leap</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/Date/Unit/Day.lean#L85-L85","name":"Std.Time.Day.Ordinal.instTransOrdOfYear","line":85,"kind":"instance","docLink":"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal.instTransOrdOfYear","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal.instTransOrdOfYear\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Day</span>.<span class=\"name\">Ordinal</span>.<span class=\"name\">instTransOrdOfYear</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">leap</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Classes/Ord.html#Std.TransOrd\">TransOrd</a> <span class=\"fn\">(<a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal.OfYear\">OfYear</a> <span class=\"fn\">leap</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/Date/Unit/Day.lean#L83-L83","name":"Std.Time.Day.Ordinal.instOrdOfYear","line":83,"kind":"instance","docLink":"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal.instOrdOfYear","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal.instOrdOfYear\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Day</span>.<span class=\"name\">Ordinal</span>.<span class=\"name\">instOrdOfYear</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">leap</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Ord.html#Ord\">Ord</a> <span class=\"fn\">(<a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal.OfYear\">OfYear</a> <span class=\"fn\">leap</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/Date/Unit/Day.lean#L81-L81","name":"Std.Time.Day.Ordinal.instDecidableEqOfYear","line":81,"kind":"instance","docLink":"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal.instDecidableEqOfYear","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal.instDecidableEqOfYear\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Day</span>.<span class=\"name\">Ordinal</span>.<span class=\"name\">instDecidableEqOfYear</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">leap</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">(<a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal.OfYear\">OfYear</a> <span class=\"fn\">leap</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/Date/Unit/Day.lean#L78-L79","name":"Std.Time.Day.Ordinal.instToStringOfYear","line":78,"kind":"instance","docLink":"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal.instToStringOfYear","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal.instToStringOfYear\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Day</span>.<span class=\"name\">Ordinal</span>.<span class=\"name\">instToStringOfYear</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">leap</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/ToString/Basic.html#ToString\">ToString</a> <span class=\"fn\">(<a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal.OfYear\">OfYear</a> <span class=\"fn\">leap</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/Date/Unit/Day.lean#L75-L76","name":"Std.Time.Day.Ordinal.instReprOfYear","line":75,"kind":"instance","docLink":"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal.instReprOfYear","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal.instReprOfYear\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Day</span>.<span class=\"name\">Ordinal</span>.<span class=\"name\">instReprOfYear</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">leap</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <span class=\"fn\">(<a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal.OfYear\">OfYear</a> <span class=\"fn\">leap</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/Date/Unit/Day.lean#L69-L73","name":"Std.Time.Day.Ordinal.OfYear","line":69,"kind":"def","docLink":"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal.OfYear","doc":"`OfYear` represents the day ordinal within a year, which can be bounded between 1 and 365 or 366,\ndepending on whether it's a leap year.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal.OfYear\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Day</span>.<span class=\"name\">Ordinal</span>.<span class=\"name\">OfYear</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">leap</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/Date/Unit/Day.lean#L62-L67","name":"Std.Time.Day.Ordinal.ofInt","line":62,"kind":"def","docLink":"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal.ofInt","doc":"Creates an `Ordinal` from an integer, ensuring the value is within bounds.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal.ofInt\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Day</span>.<span class=\"name\">Ordinal</span>.<span class=\"name\">ofInt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">data</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">data</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">data</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">31</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal\">Ordinal</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/Date/Unit/Day.lean#L58-L58","name":"Std.Time.Day.instLawfulEqOrdOffset","line":58,"kind":"instance","docLink":"./Std/Time/Date/Unit/Day.html#Std.Time.Day.instLawfulEqOrdOffset","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.instLawfulEqOrdOffset\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Day</span>.<span class=\"name\">instLawfulEqOrdOffset</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Classes/Ord.html#Std.LawfulEqOrd\">LawfulEqOrd</a> <a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset\">Offset</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/Date/Unit/Day.lean#L56-L56","name":"Std.Time.Day.instTransOrdOffset","line":56,"kind":"instance","docLink":"./Std/Time/Date/Unit/Day.html#Std.Time.Day.instTransOrdOffset","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.instTransOrdOffset\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Day</span>.<span class=\"name\">instTransOrdOffset</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Classes/Ord.html#Std.TransOrd\">TransOrd</a> <a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset\">Offset</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/Date/Unit/Day.lean#L54-L54","name":"Std.Time.Day.instOrdOffset","line":54,"kind":"instance","docLink":"./Std/Time/Date/Unit/Day.html#Std.Time.Day.instOrdOffset","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.instOrdOffset\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Day</span>.<span class=\"name\">instOrdOffset</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Ord.html#Ord\">Ord</a> <a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset\">Offset</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/Date/Unit/Day.lean#L51-L52","name":"Std.Time.Day.instDecidableLtOffset","line":51,"kind":"instance","docLink":"./Std/Time/Date/Unit/Day.html#Std.Time.Day.instDecidableLtOffset","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.instDecidableLtOffset\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Day</span>.<span class=\"name\">instDecidableLtOffset</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset\">Offset</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> (<span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">y</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/Date/Unit/Day.lean#L48-L49","name":"Std.Time.Day.instDecidableLeOffset","line":48,"kind":"instance","docLink":"./Std/Time/Date/Unit/Day.html#Std.Time.Day.instDecidableLeOffset","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.instDecidableLeOffset\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Day</span>.<span class=\"name\">instDecidableLeOffset</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset\">Offset</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> (<span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">y</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/Date/Unit/Day.lean#L46-L46","name":"Std.Time.Day.instOfNatOffset","line":46,"kind":"instance","docLink":"./Std/Time/Date/Unit/Day.html#Std.Time.Day.instOfNatOffset","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.instOfNatOffset\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Day</span>.<span class=\"name\">instOfNatOffset</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#OfNat\">OfNat</a> <a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset\">Offset</a> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/Date/Unit/Day.lean#L44-L44","name":"Std.Time.Day.instOffsetToString","line":44,"kind":"instance","docLink":"./Std/Time/Date/Unit/Day.html#Std.Time.Day.instOffsetToString","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.instOffsetToString\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Day</span>.<span class=\"name\">instOffsetToString</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/ToString/Basic.html#ToString\">ToString</a> <a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset\">Offset</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/Date/Unit/Day.lean#L44-L44","name":"Std.Time.Day.instOffsetLT","line":44,"kind":"instance","docLink":"./Std/Time/Date/Unit/Day.html#Std.Time.Day.instOffsetLT","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.instOffsetLT\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Day</span>.<span class=\"name\">instOffsetLT</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#LT\">LT</a> <a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset\">Offset</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/Date/Unit/Day.lean#L44-L44","name":"Std.Time.Day.instOffsetLE","line":44,"kind":"instance","docLink":"./Std/Time/Date/Unit/Day.html#Std.Time.Day.instOffsetLE","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.instOffsetLE\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Day</span>.<span class=\"name\">instOffsetLE</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#LE\">LE</a> <a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset\">Offset</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/Date/Unit/Day.lean#L44-L44","name":"Std.Time.Day.instOffsetNeg","line":44,"kind":"instance","docLink":"./Std/Time/Date/Unit/Day.html#Std.Time.Day.instOffsetNeg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.instOffsetNeg\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Day</span>.<span class=\"name\">instOffsetNeg</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Neg\">Neg</a> <a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset\">Offset</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/Date/Unit/Day.lean#L44-L44","name":"Std.Time.Day.instOffsetSub","line":44,"kind":"instance","docLink":"./Std/Time/Date/Unit/Day.html#Std.Time.Day.instOffsetSub","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.instOffsetSub\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Day</span>.<span class=\"name\">instOffsetSub</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Sub\">Sub</a> <a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset\">Offset</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/Date/Unit/Day.lean#L44-L44","name":"Std.Time.Day.instOffsetAdd","line":44,"kind":"instance","docLink":"./Std/Time/Date/Unit/Day.html#Std.Time.Day.instOffsetAdd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.instOffsetAdd\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Day</span>.<span class=\"name\">instOffsetAdd</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Add\">Add</a> <a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset\">Offset</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/Date/Unit/Day.lean#L44-L44","name":"Std.Time.Day.instOffsetInhabited","line":44,"kind":"instance","docLink":"./Std/Time/Date/Unit/Day.html#Std.Time.Day.instOffsetInhabited","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.instOffsetInhabited\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Day</span>.<span class=\"name\">instOffsetInhabited</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset\">Offset</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/Date/Unit/Day.lean#L44-L44","name":"Std.Time.Day.instOffsetDecidableEq","line":44,"kind":"instance","docLink":"./Std/Time/Date/Unit/Day.html#Std.Time.Day.instOffsetDecidableEq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.instOffsetDecidableEq\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Day</span>.<span class=\"name\">instOffsetDecidableEq</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset\">Offset</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/Date/Unit/Day.lean#L44-L44","name":"Std.Time.Day.instOffsetRepr","line":44,"kind":"instance","docLink":"./Std/Time/Date/Unit/Day.html#Std.Time.Day.instOffsetRepr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.instOffsetRepr\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Day</span>.<span class=\"name\">instOffsetRepr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset\">Offset</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/Date/Unit/Day.lean#L39-L44","name":"Std.Time.Day.Offset","line":39,"kind":"def","docLink":"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset","doc":"`Offset` represents an offset in days. It is defined as an `Int` with a base unit of 86400\n(the number of seconds in a day).\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Day</span>.<span class=\"name\">Offset</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/Date/Unit/Day.lean#L37-L37","name":"Std.Time.Day.instLawfulEqOrdOrdinal","line":37,"kind":"instance","docLink":"./Std/Time/Date/Unit/Day.html#Std.Time.Day.instLawfulEqOrdOrdinal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.instLawfulEqOrdOrdinal\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Day</span>.<span class=\"name\">instLawfulEqOrdOrdinal</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Classes/Ord.html#Std.LawfulEqOrd\">LawfulEqOrd</a> <a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal\">Ordinal</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/Date/Unit/Day.lean#L35-L35","name":"Std.Time.Day.instTransOrdOrdinal","line":35,"kind":"instance","docLink":"./Std/Time/Date/Unit/Day.html#Std.Time.Day.instTransOrdOrdinal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.instTransOrdOrdinal\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Day</span>.<span class=\"name\">instTransOrdOrdinal</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Classes/Ord.html#Std.TransOrd\">TransOrd</a> <a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal\">Ordinal</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/Date/Unit/Day.lean#L33-L33","name":"Std.Time.Day.instOrdOrdinal","line":33,"kind":"instance","docLink":"./Std/Time/Date/Unit/Day.html#Std.Time.Day.instOrdOrdinal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.instOrdOrdinal\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Day</span>.<span class=\"name\">instOrdOrdinal</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Ord.html#Ord\">Ord</a> <a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal\">Ordinal</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/Date/Unit/Day.lean#L31-L31","name":"Std.Time.Day.instInhabitedOrdinal","line":31,"kind":"instance","docLink":"./Std/Time/Date/Unit/Day.html#Std.Time.Day.instInhabitedOrdinal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.instInhabitedOrdinal\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Day</span>.<span class=\"name\">instInhabitedOrdinal</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal\">Ordinal</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/Date/Unit/Day.lean#L28-L29","name":"Std.Time.Day.instDecidableLtOrdinal","line":28,"kind":"instance","docLink":"./Std/Time/Date/Unit/Day.html#Std.Time.Day.instDecidableLtOrdinal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.instDecidableLtOrdinal\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Day</span>.<span class=\"name\">instDecidableLtOrdinal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal\">Ordinal</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> (<span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">y</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/Date/Unit/Day.lean#L25-L26","name":"Std.Time.Day.instDecidableLeOrdinal","line":25,"kind":"instance","docLink":"./Std/Time/Date/Unit/Day.html#Std.Time.Day.instDecidableLeOrdinal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.instDecidableLeOrdinal\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Day</span>.<span class=\"name\">instDecidableLeOrdinal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal\">Ordinal</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> (<span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">y</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/Date/Unit/Day.lean#L22-L23","name":"Std.Time.Day.instOfNatOrdinal","line":22,"kind":"instance","docLink":"./Std/Time/Date/Unit/Day.html#Std.Time.Day.instOfNatOrdinal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.instOfNatOrdinal\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Day</span>.<span class=\"name\">instOfNatOrdinal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#OfNat\">OfNat</a> <a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal\">Ordinal</a> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/Date/Unit/Day.lean#L20-L20","name":"Std.Time.Day.instOrdinalLT","line":20,"kind":"instance","docLink":"./Std/Time/Date/Unit/Day.html#Std.Time.Day.instOrdinalLT","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.instOrdinalLT\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Day</span>.<span class=\"name\">instOrdinalLT</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#LT\">LT</a> <a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal\">Ordinal</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/Date/Unit/Day.lean#L20-L20","name":"Std.Time.Day.instOrdinalLE","line":20,"kind":"instance","docLink":"./Std/Time/Date/Unit/Day.html#Std.Time.Day.instOrdinalLE","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.instOrdinalLE\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Day</span>.<span class=\"name\">instOrdinalLE</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#LE\">LE</a> <a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal\">Ordinal</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/Date/Unit/Day.lean#L20-L20","name":"Std.Time.Day.instOrdinalDecidableEq","line":20,"kind":"instance","docLink":"./Std/Time/Date/Unit/Day.html#Std.Time.Day.instOrdinalDecidableEq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.instOrdinalDecidableEq\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Day</span>.<span class=\"name\">instOrdinalDecidableEq</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal\">Ordinal</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/Date/Unit/Day.lean#L20-L20","name":"Std.Time.Day.instOrdinalRepr","line":20,"kind":"instance","docLink":"./Std/Time/Date/Unit/Day.html#Std.Time.Day.instOrdinalRepr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.instOrdinalRepr\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Day</span>.<span class=\"name\">instOrdinalRepr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal\">Ordinal</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/Date/Unit/Day.lean#L16-L20","name":"Std.Time.Day.Ordinal","line":16,"kind":"def","docLink":"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal","doc":"`Ordinal` represents a bounded value for days, which ranges between 1 and 31.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Day</span>.<span class=\"name\">Ordinal</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"}]}