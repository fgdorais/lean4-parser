{"name":"Lean.Elab.Structure","instances":[{"typeNames":["Lean.Elab.Command.Structure.StructView"],"name":"Lean.Elab.Command.Structure.instInhabitedStructView","className":"Inhabited"},{"typeNames":["Lean.Elab.Command.Structure.StructParentInfo"],"name":"Lean.Elab.Command.Structure.instInhabitedStructParentInfo","className":"Inhabited"},{"typeNames":["Lean.Elab.Command.Structure.StructFieldKind"],"name":"Lean.Elab.Command.Structure.instInhabitedStructFieldKind","className":"Inhabited"},{"typeNames":["Eq"],"name":"Lean.Elab.Command.Structure.instDecidableEqStructFieldKind","className":"Decidable"},{"typeNames":["Lean.Elab.Command.Structure.StructFieldKind"],"name":"Lean.Elab.Command.Structure.instReprStructFieldKind","className":"Repr"},{"typeNames":["Lean.Elab.Command.Structure.StructFieldDefault"],"name":"Lean.Elab.Command.Structure.instReprStructFieldDefault","className":"Repr"},{"typeNames":["Lean.Elab.Command.Structure.StructFieldInfo"],"name":"Lean.Elab.Command.Structure.instInhabitedStructFieldInfo","className":"Inhabited"},{"typeNames":["_private.Lean.Elab.Structure.0.Lean.Elab.Command.Structure.State"],"name":"Lean.Elab.Command.Structure.instInhabitedState","className":"Inhabited"},{"typeNames":["_private.Lean.Elab.Structure.0.Lean.Elab.Command.Structure.StructElabM"],"name":"Lean.Elab.Command.Structure.instInhabitedStructElabM","className":"Inhabited"}],"imports":["Lean.Meta.Structure","Lean.Elab.MutualInductive"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/Structure.lean#L1421-L1471","name":"Lean.Elab.Command.Structure.elabStructureCommand","line":1421,"kind":"def","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.elabStructureCommand","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.elabStructureCommand\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Structure</span>.<span class=\"name\">elabStructureCommand</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/MutualInductive.html#Lean.Elab.Command.InductiveElabDescr\">InductiveElabDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/Structure.lean#L433-L433","name":"Lean.Elab.Command.Structure.runStructElabM","line":433,"kind":"def","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.runStructElabM","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.runStructElabM\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Structure</span>.<span class=\"name\">runStructElabM</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <span class=\"fn\"><a href=\"./Lean/Elab/Structure.html#_private.Lean.Elab.Structure.0.Lean.Elab.Command.Structure.StructElabM\">Lean.Elab.Command.Structure.StructElabM✝</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">init</span> : <a href=\"./Lean/Elab/Structure.html#_private.Lean.Elab.Structure.0.Lean.Elab.Command.Structure.State\">Lean.Elab.Command.Structure.State✝</a> := <a href=\"./Lean/Elab/Structure.html#_private.Lean.Elab.Structure.0.Lean.Elab.Command.Structure.State.mk\">{</a> <a href=\"./Lean/Elab/Structure.html#_private.Lean.Elab.Structure.0.Lean.Elab.Command.Structure.State.mk\">}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Term.html#Lean.Elab.Term.TermElabM\">TermElabM</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/Structure.lean#L430-L431","name":"Lean.Elab.Command.Structure.instInhabitedStructElabM","line":430,"kind":"instance","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.instInhabitedStructElabM","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.instInhabitedStructElabM\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Structure</span>.<span class=\"name\">instInhabitedStructElabM</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<a href=\"./Lean/Elab/Structure.html#_private.Lean.Elab.Structure.0.Lean.Elab.Command.Structure.StructElabM\">Lean.Elab.Command.Structure.StructElabM✝</a> <span class=\"fn\">α</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/Structure.lean#L423-L423","name":"Lean.Elab.Command.Structure.instInhabitedState","line":423,"kind":"instance","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.instInhabitedState","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.instInhabitedState\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Structure</span>.<span class=\"name\">instInhabitedState</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Elab/Structure.html#_private.Lean.Elab.Structure.0.Lean.Elab.Command.Structure.State\">Lean.Elab.Command.Structure.State✝</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/Structure.lean#L357-L405","name":"Lean.Elab.Command.Structure.structureSyntaxToView","line":357,"kind":"def","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.structureSyntaxToView","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.structureSyntaxToView\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Structure</span>.<span class=\"name\">structureSyntaxToView</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">modifiers</span> : <a href=\"./Lean/Elab/DeclModifiers.html#Lean.Elab.Modifiers\">Modifiers</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">stx</span> : <a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Term.html#Lean.Elab.Term.TermElabM\">TermElabM</a> <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructView\">StructView</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/Structure.lean#L261-L269","name":"Lean.Elab.Command.Structure.checkValidFieldModifier","line":261,"kind":"def","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.checkValidFieldModifier","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.checkValidFieldModifier\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Structure</span>.<span class=\"name\">checkValidFieldModifier</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">modifiers</span> : <a href=\"./Lean/Elab/DeclModifiers.html#Lean.Elab.Modifiers\">Modifiers</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Term.html#Lean.Elab.Term.TermElabM\">TermElabM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/Structure.lean#L189-L189","name":"Lean.Elab.Command.Structure.instInhabitedStructFieldInfo","line":189,"kind":"instance","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.instInhabitedStructFieldInfo","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.instInhabitedStructFieldInfo\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Structure</span>.<span class=\"name\">instInhabitedStructFieldInfo</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldInfo\">StructFieldInfo</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/Structure.lean#L188-L188","name":"Lean.Elab.Command.Structure.StructFieldInfo.resolvedDefault?","line":188,"kind":"def","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldInfo.resolvedDefault?","doc":"The default that will be used for this structure. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldInfo.resolvedDefault?\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Structure</span>.<span class=\"name\">StructFieldInfo</span>.<span class=\"name\">resolvedDefault?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldInfo\">StructFieldInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldDefault\">StructFieldDefault</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/Structure.lean#L186-L186","name":"Lean.Elab.Command.Structure.StructFieldInfo.inheritedDefaults","line":186,"kind":"def","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldInfo.inheritedDefaults","doc":"The inherited default values, as parent structure / value pairs. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldInfo.inheritedDefaults\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Structure</span>.<span class=\"name\">StructFieldInfo</span>.<span class=\"name\">inheritedDefaults</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldInfo\">StructFieldInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> (<a href=\"./Init/Prelude.html#Lean.Name\">Name</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldDefault\">StructFieldDefault</a>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/Structure.lean#L184-L184","name":"Lean.Elab.Command.Structure.StructFieldInfo.projFn?","line":184,"kind":"def","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldInfo.projFn?","doc":"If this is an inherited field, the name of the projection function.\nUsed for adding terminfo for fields with overridden default values. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldInfo.projFn?\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Structure</span>.<span class=\"name\">StructFieldInfo</span>.<span class=\"name\">projFn?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldInfo\">StructFieldInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Lean.Name\">Name</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/Structure.lean#L181-L181","name":"Lean.Elab.Command.Structure.StructFieldInfo.default?","line":181,"kind":"def","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldInfo.default?","doc":"The default value, as explicitly given in this `structure`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldInfo.default?\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Structure</span>.<span class=\"name\">StructFieldInfo</span>.<span class=\"name\">default?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldInfo\">StructFieldInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldDefault\">StructFieldDefault</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/Structure.lean#L179-L179","name":"Lean.Elab.Command.Structure.StructFieldInfo.projExpr?","line":179,"kind":"def","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldInfo.projExpr?","doc":"An expression representing a `.fromSubobject` field as a projection of a `.subobject` field.\nUsed when making the constructor.\nNote: `.otherParent` fields are let decls, there is no need for `projExpr?`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldInfo.projExpr?\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Structure</span>.<span class=\"name\">StructFieldInfo</span>.<span class=\"name\">projExpr?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldInfo\">StructFieldInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/Structure.lean#L175-L175","name":"Lean.Elab.Command.Structure.StructFieldInfo.fvar","line":175,"kind":"def","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldInfo.fvar","doc":"Local variable for the field.\nAll fields (both real fields and parent projection fields) get a local variable.\nParent fields are ldecls constructed from non-parent fields. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldInfo.fvar\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Structure</span>.<span class=\"name\">StructFieldInfo</span>.<span class=\"name\">fvar</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldInfo\">StructFieldInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/Structure.lean#L171-L171","name":"Lean.Elab.Command.Structure.StructFieldInfo.sourceStructNames","line":171,"kind":"def","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldInfo.sourceStructNames","doc":"Structure names that are responsible for this field being here.\n- Empty if the field is a `newField`.\n- Otherwise, it is a stack with the last element being a parent in the `extends` clause.\n  The first element is the (indirect) parent that is responsible for this field.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldInfo.sourceStructNames\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Structure</span>.<span class=\"name\">StructFieldInfo</span>.<span class=\"name\">sourceStructNames</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldInfo\">StructFieldInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Prelude.html#Lean.Name\">Name</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/Structure.lean#L164-L164","name":"Lean.Elab.Command.Structure.StructFieldInfo.paramInfoOverrides","line":164,"kind":"def","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldInfo.paramInfoOverrides","doc":"Overrides for the parameters' binder infos when making the projections. The first component is a ref for the binder. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldInfo.paramInfoOverrides\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Structure</span>.<span class=\"name\">StructFieldInfo</span>.<span class=\"name\">paramInfoOverrides</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldInfo\">StructFieldInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Expr.html#Lean.ExprMap\">ExprMap</a> (<a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/Expr.html#Lean.BinderInfo\">BinderInfo</a>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/Structure.lean#L162-L162","name":"Lean.Elab.Command.Structure.StructFieldInfo.binfo","line":162,"kind":"def","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldInfo.binfo","doc":"Binder info to use when making the constructor. Only applies to those fields that will appear in the constructor. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldInfo.binfo\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Structure</span>.<span class=\"name\">StructFieldInfo</span>.<span class=\"name\">binfo</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldInfo\">StructFieldInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.BinderInfo\">BinderInfo</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/Structure.lean#L160-L160","name":"Lean.Elab.Command.Structure.StructFieldInfo.declName","line":160,"kind":"def","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldInfo.declName","doc":"Name of projection function.\nRemark: for fields that don't get projection functions (like `fromSubobject` fields), only relevant for the auxiliary \"default value\" functions. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldInfo.declName\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Structure</span>.<span class=\"name\">StructFieldInfo</span>.<span class=\"name\">declName</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldInfo\">StructFieldInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Name\">Name</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/Structure.lean#L157-L157","name":"Lean.Elab.Command.Structure.StructFieldInfo.kind","line":157,"kind":"def","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldInfo.kind","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldInfo.kind\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Structure</span>.<span class=\"name\">StructFieldInfo</span>.<span class=\"name\">kind</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldInfo\">StructFieldInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldKind\">StructFieldKind</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/Structure.lean#L156-L156","name":"Lean.Elab.Command.Structure.StructFieldInfo.name","line":156,"kind":"def","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldInfo.name","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldInfo.name\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Structure</span>.<span class=\"name\">StructFieldInfo</span>.<span class=\"name\">name</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldInfo\">StructFieldInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Name\">Name</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/Structure.lean#L155-L155","name":"Lean.Elab.Command.Structure.StructFieldInfo.ref","line":155,"kind":"def","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldInfo.ref","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldInfo.ref\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Structure</span>.<span class=\"name\">StructFieldInfo</span>.<span class=\"name\">ref</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldInfo\">StructFieldInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/Structure.lean#L154-L154","name":"Lean.Elab.Command.Structure.StructFieldInfo.mk","line":154,"kind":"ctor","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldInfo.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldInfo.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Structure</span>.<span class=\"name\">StructFieldInfo</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ref</span> : <a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">name</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">kind</span> : <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldKind\">StructFieldKind</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">declName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">binfo</span> : <a href=\"./Lean/Expr.html#Lean.BinderInfo\">BinderInfo</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">paramInfoOverrides</span> : <span class=\"fn\"><a href=\"./Lean/Expr.html#Lean.ExprMap\">ExprMap</a> (<a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/Expr.html#Lean.BinderInfo\">BinderInfo</a>)</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">sourceStructNames</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Prelude.html#Lean.Name\">Name</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fvar</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">projExpr?</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">default?</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldDefault\">StructFieldDefault</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">projFn?</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Lean.Name\">Name</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">inheritedDefaults</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> (<a href=\"./Init/Prelude.html#Lean.Name\">Name</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldDefault\">StructFieldDefault</a>)</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">resolvedDefault?</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldDefault\">StructFieldDefault</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldInfo\">StructFieldInfo</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/Structure.lean#L151-L189","name":"Lean.Elab.Command.Structure.StructFieldInfo","line":151,"kind":"structure","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldInfo","doc":"Elaborated field info.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldInfo\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Structure</span>.<span class=\"name\">StructFieldInfo</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/Structure.lean#L149-L149","name":"Lean.Elab.Command.Structure.instReprStructFieldDefault","line":149,"kind":"instance","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.instReprStructFieldDefault","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.instReprStructFieldDefault\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Structure</span>.<span class=\"name\">instReprStructFieldDefault</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldDefault\">StructFieldDefault</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/Structure.lean#L148-L148","name":"Lean.Elab.Command.Structure.StructFieldDefault.autoParam","line":148,"kind":"ctor","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldDefault.autoParam","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldDefault.autoParam\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Structure</span>.<span class=\"name\">StructFieldDefault</span>.<span class=\"name\">autoParam</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">tactic</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldDefault\">StructFieldDefault</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/Structure.lean#L147-L147","name":"Lean.Elab.Command.Structure.StructFieldDefault.optParam","line":147,"kind":"ctor","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldDefault.optParam","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldDefault.optParam\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Structure</span>.<span class=\"name\">StructFieldDefault</span>.<span class=\"name\">optParam</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">value</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldDefault\">StructFieldDefault</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/Structure.lean#L146-L149","name":"Lean.Elab.Command.Structure.StructFieldDefault","line":146,"kind":"inductive","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldDefault","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldDefault\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Structure</span>.<span class=\"name\">StructFieldDefault</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/Structure.lean#L142-L144","name":"Lean.Elab.Command.Structure.StructFieldKind.isInCtor","line":142,"kind":"def","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldKind.isInCtor","doc":"Returns `true` if the field is represented as a field in the constructor. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldKind.isInCtor\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Structure</span>.<span class=\"name\">StructFieldKind</span>.<span class=\"name\">isInCtor</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">kind</span> : <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldKind\">StructFieldKind</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/Structure.lean#L138-L140","name":"Lean.Elab.Command.Structure.StructFieldKind.isParent","line":138,"kind":"def","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldKind.isParent","doc":"Returns `true` if the field represents a parent projection. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldKind.isParent\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Structure</span>.<span class=\"name\">StructFieldKind</span>.<span class=\"name\">isParent</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">kind</span> : <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldKind\">StructFieldKind</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/Structure.lean#L135-L136","name":"Lean.Elab.Command.Structure.StructFieldKind.isSubobject","line":135,"kind":"def","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldKind.isSubobject","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldKind.isSubobject\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Structure</span>.<span class=\"name\">StructFieldKind</span>.<span class=\"name\">isSubobject</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">kind</span> : <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldKind\">StructFieldKind</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/Structure.lean#L132-L133","name":"Lean.Elab.Command.Structure.StructFieldKind.isFromSubobject","line":132,"kind":"def","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldKind.isFromSubobject","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldKind.isFromSubobject\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Structure</span>.<span class=\"name\">StructFieldKind</span>.<span class=\"name\">isFromSubobject</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">kind</span> : <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldKind\">StructFieldKind</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/Structure.lean#L130-L130","name":"Lean.Elab.Command.Structure.instReprStructFieldKind","line":130,"kind":"instance","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.instReprStructFieldKind","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.instReprStructFieldKind\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Structure</span>.<span class=\"name\">instReprStructFieldKind</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldKind\">StructFieldKind</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/Structure.lean#L130-L130","name":"Lean.Elab.Command.Structure.instDecidableEqStructFieldKind","line":130,"kind":"instance","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.instDecidableEqStructFieldKind","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.instDecidableEqStructFieldKind\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Structure</span>.<span class=\"name\">instDecidableEqStructFieldKind</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldKind\">StructFieldKind</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/Structure.lean#L130-L130","name":"Lean.Elab.Command.Structure.instInhabitedStructFieldKind","line":130,"kind":"instance","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.instInhabitedStructFieldKind","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.instInhabitedStructFieldKind\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Structure</span>.<span class=\"name\">instInhabitedStructFieldKind</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldKind\">StructFieldKind</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/Structure.lean#L125-L129","name":"Lean.Elab.Command.Structure.StructFieldKind.otherParent","line":125,"kind":"ctor","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldKind.otherParent","doc":"The field represents a parent projection for a parent that is not itself embedded as a subobject.\n(Note: parents of `subobject` fields are `otherParent` fields.)\nNot represented as a constructor argument. Will only have a projection function if it is a direct parent.\nDefault values are not allowed. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldKind.otherParent\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Structure</span>.<span class=\"name\">StructFieldKind</span>.<span class=\"name\">otherParent</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">structName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldKind\">StructFieldKind</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/Structure.lean#L121-L124","name":"Lean.Elab.Command.Structure.StructFieldKind.subobject","line":121,"kind":"ctor","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldKind.subobject","doc":"The field is an embedded parent structure.\nRepresented as a constructor argument. Will have a projection function.\nDefault values are not allowed. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldKind.subobject\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Structure</span>.<span class=\"name\">StructFieldKind</span>.<span class=\"name\">subobject</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">structName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldKind\">StructFieldKind</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/Structure.lean#L117-L120","name":"Lean.Elab.Command.Structure.StructFieldKind.fromSubobject","line":117,"kind":"ctor","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldKind.fromSubobject","doc":"Field that comes from a embedded parent field, and is represented within a `subobject` field.\nNot represented as a constructor argument. Will not have a projection function.\nIts inherited default value may be overridden. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldKind.fromSubobject\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Structure</span>.<span class=\"name\">StructFieldKind</span>.<span class=\"name\">fromSubobject</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldKind\">StructFieldKind</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/Structure.lean#L113-L116","name":"Lean.Elab.Command.Structure.StructFieldKind.copiedField","line":113,"kind":"ctor","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldKind.copiedField","doc":"Field that comes from a parent but will be represented as a new field.\nRepresented as a constructor argument. Will have a projection function.\nIts inherited default value may be overridden. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldKind.copiedField\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Structure</span>.<span class=\"name\">StructFieldKind</span>.<span class=\"name\">copiedField</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldKind\">StructFieldKind</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/Structure.lean#L110-L112","name":"Lean.Elab.Command.Structure.StructFieldKind.newField","line":110,"kind":"ctor","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldKind.newField","doc":"New field defined by the `structure`.\nRepresented as a constructor argument. Will have a projection function. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldKind.newField\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Structure</span>.<span class=\"name\">StructFieldKind</span>.<span class=\"name\">newField</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldKind\">StructFieldKind</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/Structure.lean#L103-L130","name":"Lean.Elab.Command.Structure.StructFieldKind","line":103,"kind":"inductive","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldKind","doc":"Records the way in which a field is represented in a structure.\n\nStandard fields are one of `.newField`, `.copiedField`, or `.fromSubobject`.\nParent fields are one of `.subobject` or `.otherParent`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldKind\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Structure</span>.<span class=\"name\">StructFieldKind</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/Structure.lean#L101-L101","name":"Lean.Elab.Command.Structure.instInhabitedStructParentInfo","line":101,"kind":"instance","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.instInhabitedStructParentInfo","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.instInhabitedStructParentInfo\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Structure</span>.<span class=\"name\">instInhabitedStructParentInfo</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructParentInfo\">StructParentInfo</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/Structure.lean#L100-L100","name":"Lean.Elab.Command.Structure.StructParentInfo.subobject","line":100,"kind":"def","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructParentInfo.subobject","doc":"Whether this parent corresponds to a `subobject` field. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructParentInfo.subobject\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Structure</span>.<span class=\"name\">StructParentInfo</span>.<span class=\"name\">subobject</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructParentInfo\">StructParentInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/Structure.lean#L98-L98","name":"Lean.Elab.Command.Structure.StructParentInfo.declName","line":98,"kind":"def","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructParentInfo.declName","doc":"Name of the projection function. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructParentInfo.declName\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Structure</span>.<span class=\"name\">StructParentInfo</span>.<span class=\"name\">declName</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructParentInfo\">StructParentInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Name\">Name</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/Structure.lean#L96-L96","name":"Lean.Elab.Command.Structure.StructParentInfo.name","line":96,"kind":"def","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructParentInfo.name","doc":"Field name for parent. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructParentInfo.name\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Structure</span>.<span class=\"name\">StructParentInfo</span>.<span class=\"name\">name</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructParentInfo\">StructParentInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Name\">Name</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/Structure.lean#L94-L94","name":"Lean.Elab.Command.Structure.StructParentInfo.structName","line":94,"kind":"def","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructParentInfo.structName","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructParentInfo.structName\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Structure</span>.<span class=\"name\">StructParentInfo</span>.<span class=\"name\">structName</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructParentInfo\">StructParentInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Name\">Name</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/Structure.lean#L93-L93","name":"Lean.Elab.Command.Structure.StructParentInfo.fvar","line":93,"kind":"def","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructParentInfo.fvar","doc":"A let variable that represents this structure parent. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructParentInfo.fvar\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Structure</span>.<span class=\"name\">StructParentInfo</span>.<span class=\"name\">fvar</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructParentInfo\">StructParentInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/Structure.lean#L91-L91","name":"Lean.Elab.Command.Structure.StructParentInfo.addTermInfo","line":91,"kind":"def","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructParentInfo.addTermInfo","doc":"Whether to add term info to the ref. False if there's no user-provided parent projection. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructParentInfo.addTermInfo\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Structure</span>.<span class=\"name\">StructParentInfo</span>.<span class=\"name\">addTermInfo</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructParentInfo\">StructParentInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/Structure.lean#L89-L89","name":"Lean.Elab.Command.Structure.StructParentInfo.ref","line":89,"kind":"def","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructParentInfo.ref","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructParentInfo.ref\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Structure</span>.<span class=\"name\">StructParentInfo</span>.<span class=\"name\">ref</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructParentInfo\">StructParentInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/Structure.lean#L88-L88","name":"Lean.Elab.Command.Structure.StructParentInfo.mk","line":88,"kind":"ctor","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructParentInfo.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructParentInfo.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Structure</span>.<span class=\"name\">StructParentInfo</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ref</span> : <a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">addTermInfo</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fvar</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">structName </span><span class=\"fn\">name </span><span class=\"fn\">declName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">subobject</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructParentInfo\">StructParentInfo</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/Structure.lean#L85-L101","name":"Lean.Elab.Command.Structure.StructParentInfo","line":85,"kind":"structure","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructParentInfo","doc":"Elaborated parent info.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructParentInfo\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Structure</span>.<span class=\"name\">StructParentInfo</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/Structure.lean#L78-L83","name":"Lean.Elab.Command.Structure.StructView.ctor","line":78,"kind":"def","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructView.ctor","doc":"Gets the single constructor view from the underlying `InductiveView`.\nRecall that `structure`s have exactly one constructor.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructView.ctor\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Structure</span>.<span class=\"name\">StructView</span>.<span class=\"name\">ctor</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">view</span> : <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructView\">StructView</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/MutualInductive.html#Lean.Elab.Command.CtorView\">CtorView</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/Structure.lean#L76-L76","name":"Lean.Elab.Command.Structure.instInhabitedStructView","line":76,"kind":"instance","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.instInhabitedStructView","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.instInhabitedStructView\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Structure</span>.<span class=\"name\">instInhabitedStructView</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructView\">StructView</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/Structure.lean#L75-L75","name":"Lean.Elab.Command.Structure.StructView.fields","line":75,"kind":"def","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructView.fields","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructView.fields\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Structure</span>.<span class=\"name\">StructView</span>.<span class=\"name\">fields</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructView\">StructView</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldView\">StructFieldView</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/Structure.lean#L74-L74","name":"Lean.Elab.Command.Structure.StructView.parents","line":74,"kind":"def","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructView.parents","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructView.parents\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Structure</span>.<span class=\"name\">StructView</span>.<span class=\"name\">parents</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructView\">StructView</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructParentView\">StructParentView</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/Structure.lean#L73-L73","name":"Lean.Elab.Command.Structure.StructView.mk","line":73,"kind":"ctor","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructView.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructView.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Structure</span>.<span class=\"name\">StructView</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">toInductiveView</span> : <a href=\"./Lean/Elab/MutualInductive.html#Lean.Elab.Command.InductiveView\">InductiveView</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">parents</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructParentView\">StructParentView</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fields</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldView\">StructFieldView</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructView\">StructView</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/Structure.lean#L73-L76","name":"Lean.Elab.Command.Structure.StructView.toInductiveView","line":73,"kind":"def","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructView.toInductiveView","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructView.toInductiveView\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Structure</span>.<span class=\"name\">StructView</span>.<span class=\"name\">toInductiveView</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructView\">StructView</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/MutualInductive.html#Lean.Elab.Command.InductiveView\">InductiveView</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/Structure.lean#L73-L76","name":"Lean.Elab.Command.Structure.StructView","line":73,"kind":"structure","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructView","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructView\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Structure</span>.<span class=\"name\">StructView</span></a></span><span class=\"decl_extends\">extends</span> <a href=\"./Lean/Elab/MutualInductive.html#Lean.Elab.Command.InductiveView\">Lean.Elab.Command.InductiveView</a><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/Structure.lean#L71-L71","name":"Lean.Elab.Command.Structure.StructFieldView.default?","line":71,"kind":"def","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldView.default?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldView.default?\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Structure</span>.<span class=\"name\">StructFieldView</span>.<span class=\"name\">default?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldView\">StructFieldView</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldViewDefault\">StructFieldViewDefault</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/Structure.lean#L70-L70","name":"Lean.Elab.Command.Structure.StructFieldView.type?","line":70,"kind":"def","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldView.type?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldView.type?\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Structure</span>.<span class=\"name\">StructFieldView</span>.<span class=\"name\">type?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldView\">StructFieldView</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/Structure.lean#L69-L69","name":"Lean.Elab.Command.Structure.StructFieldView.binders","line":69,"kind":"def","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldView.binders","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldView.binders\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Structure</span>.<span class=\"name\">StructFieldView</span>.<span class=\"name\">binders</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldView\">StructFieldView</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/Structure.lean#L68-L68","name":"Lean.Elab.Command.Structure.StructFieldView.rawName","line":68,"kind":"def","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldView.rawName","doc":"The name of the field (with macro scopes).\nUsed when adding the field to the local context, for field elaboration. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldView.rawName\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Structure</span>.<span class=\"name\">StructFieldView</span>.<span class=\"name\">rawName</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldView\">StructFieldView</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Name\">Name</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/Structure.lean#L65-L65","name":"Lean.Elab.Command.Structure.StructFieldView.name","line":65,"kind":"def","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldView.name","doc":"The name of the field (without macro scopes). "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldView.name\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Structure</span>.<span class=\"name\">StructFieldView</span>.<span class=\"name\">name</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldView\">StructFieldView</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Name\">Name</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/Structure.lean#L63-L63","name":"Lean.Elab.Command.Structure.StructFieldView.nameId","line":63,"kind":"def","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldView.nameId","doc":"Ref for the field name "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldView.nameId\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Structure</span>.<span class=\"name\">StructFieldView</span>.<span class=\"name\">nameId</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldView\">StructFieldView</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/Structure.lean#L61-L61","name":"Lean.Elab.Command.Structure.StructFieldView.declName","line":61,"kind":"def","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldView.declName","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldView.declName\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Structure</span>.<span class=\"name\">StructFieldView</span>.<span class=\"name\">declName</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldView\">StructFieldView</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Name\">Name</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/Structure.lean#L60-L60","name":"Lean.Elab.Command.Structure.StructFieldView.binderInfo","line":60,"kind":"def","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldView.binderInfo","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldView.binderInfo\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Structure</span>.<span class=\"name\">StructFieldView</span>.<span class=\"name\">binderInfo</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldView\">StructFieldView</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.BinderInfo\">BinderInfo</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/Structure.lean#L59-L59","name":"Lean.Elab.Command.Structure.StructFieldView.modifiers","line":59,"kind":"def","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldView.modifiers","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldView.modifiers\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Structure</span>.<span class=\"name\">StructFieldView</span>.<span class=\"name\">modifiers</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldView\">StructFieldView</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/DeclModifiers.html#Lean.Elab.Modifiers\">Modifiers</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/Structure.lean#L58-L58","name":"Lean.Elab.Command.Structure.StructFieldView.ref","line":58,"kind":"def","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldView.ref","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldView.ref\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Structure</span>.<span class=\"name\">StructFieldView</span>.<span class=\"name\">ref</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldView\">StructFieldView</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/Structure.lean#L57-L57","name":"Lean.Elab.Command.Structure.StructFieldView.mk","line":57,"kind":"ctor","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldView.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldView.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Structure</span>.<span class=\"name\">StructFieldView</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ref</span> : <a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">modifiers</span> : <a href=\"./Lean/Elab/DeclModifiers.html#Lean.Elab.Modifiers\">Modifiers</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">binderInfo</span> : <a href=\"./Lean/Expr.html#Lean.BinderInfo\">BinderInfo</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">declName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">nameId</span> : <a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">name </span><span class=\"fn\">rawName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">binders</span> : <a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">type?</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">default?</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldViewDefault\">StructFieldViewDefault</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldView\">StructFieldView</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/Structure.lean#L54-L71","name":"Lean.Elab.Command.Structure.StructFieldView","line":54,"kind":"structure","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldView","doc":"Represents the data of the syntax of a structure field declaration.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldView\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Structure</span>.<span class=\"name\">StructFieldView</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/Structure.lean#L52-L52","name":"Lean.Elab.Command.Structure.StructFieldViewDefault.autoParam","line":52,"kind":"ctor","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldViewDefault.autoParam","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldViewDefault.autoParam\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Structure</span>.<span class=\"name\">StructFieldViewDefault</span>.<span class=\"name\">autoParam</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">tactic</span> : <a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldViewDefault\">StructFieldViewDefault</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/Structure.lean#L51-L51","name":"Lean.Elab.Command.Structure.StructFieldViewDefault.optParam","line":51,"kind":"ctor","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldViewDefault.optParam","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldViewDefault.optParam\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Structure</span>.<span class=\"name\">StructFieldViewDefault</span>.<span class=\"name\">optParam</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">value</span> : <a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldViewDefault\">StructFieldViewDefault</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/Structure.lean#L50-L52","name":"Lean.Elab.Command.Structure.StructFieldViewDefault","line":50,"kind":"inductive","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldViewDefault","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructFieldViewDefault\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Structure</span>.<span class=\"name\">StructFieldViewDefault</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/Structure.lean#L48-L48","name":"Lean.Elab.Command.Structure.StructParentView.type","line":48,"kind":"def","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructParentView.type","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructParentView.type\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Structure</span>.<span class=\"name\">StructParentView</span>.<span class=\"name\">type</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructParentView\">StructParentView</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/Structure.lean#L47-L47","name":"Lean.Elab.Command.Structure.StructParentView.rawName?","line":47,"kind":"def","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructParentView.rawName?","doc":"The name of the parent projection (with macro scopes). Used for local name during elaboration. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructParentView.rawName?\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Structure</span>.<span class=\"name\">StructParentView</span>.<span class=\"name\">rawName?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructParentView\">StructParentView</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Lean.Name\">Name</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/Structure.lean#L45-L45","name":"Lean.Elab.Command.Structure.StructParentView.name?","line":45,"kind":"def","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructParentView.name?","doc":"The name of the parent projection (without macro scopes). "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructParentView.name?\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Structure</span>.<span class=\"name\">StructParentView</span>.<span class=\"name\">name?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructParentView\">StructParentView</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Lean.Name\">Name</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/Structure.lean#L43-L43","name":"Lean.Elab.Command.Structure.StructParentView.projRef","line":43,"kind":"def","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructParentView.projRef","doc":"Ref to use for the parent projection. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructParentView.projRef\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Structure</span>.<span class=\"name\">StructParentView</span>.<span class=\"name\">projRef</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructParentView\">StructParentView</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/Structure.lean#L41-L41","name":"Lean.Elab.Command.Structure.StructParentView.ref","line":41,"kind":"def","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructParentView.ref","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructParentView.ref\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Structure</span>.<span class=\"name\">StructParentView</span>.<span class=\"name\">ref</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructParentView\">StructParentView</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/Structure.lean#L40-L40","name":"Lean.Elab.Command.Structure.StructParentView.mk","line":40,"kind":"ctor","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructParentView.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructParentView.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Structure</span>.<span class=\"name\">StructParentView</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ref </span><span class=\"fn\">projRef</span> : <a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">name? </span><span class=\"fn\">rawName?</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Lean.Name\">Name</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">type</span> : <a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructParentView\">StructParentView</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/Structure.lean#L37-L48","name":"Lean.Elab.Command.Structure.StructParentView","line":37,"kind":"structure","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructParentView","doc":"Represents the data of the syntax of a structure parent.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.Structure.StructParentView\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Structure</span>.<span class=\"name\">StructParentView</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/Structure.lean#L21-L24","name":"Lean.Elab.Command.structure.strictResolutionOrder","line":21,"kind":"opaque","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.structure.strictResolutionOrder","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.structure.strictResolutionOrder\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">structure</span>.<span class=\"name\">strictResolutionOrder</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/Options.html#Lean.Option\">Lean.Option</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/Structure.lean#L16-L19","name":"Lean.Elab.Command.structureDiamondWarning","line":16,"kind":"opaque","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.structureDiamondWarning","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Structure.html#Lean.Elab.Command.structureDiamondWarning\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">structureDiamondWarning</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/Options.html#Lean.Option\">Lean.Option</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"}]}