{"name":"Lean.ParserCompiler.Attribute","instances":[{"typeNames":["Lean.ParserCompiler.CombinatorAttribute"],"name":"Lean.ParserCompiler.instInhabitedCombinatorAttribute","className":"Inhabited"}],"imports":["Lean.Attributes","Lean.Compiler.InitAttr","Lean.ToExpr"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/ParserCompiler/Attribute.lean#L47-L50","name":"Lean.ParserCompiler.CombinatorAttribute.runDeclFor","line":47,"kind":"def","docLink":"./Lean/ParserCompiler/Attribute.html#Lean.ParserCompiler.CombinatorAttribute.runDeclFor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">unsafe def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ParserCompiler/Attribute.html#Lean.ParserCompiler.CombinatorAttribute.runDeclFor\"><span class=\"name\">Lean</span>.<span class=\"name\">ParserCompiler</span>.<span class=\"name\">CombinatorAttribute</span>.<span class=\"name\">runDeclFor</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">attr</span> : <a href=\"./Lean/ParserCompiler/Attribute.html#Lean.ParserCompiler.CombinatorAttribute\">CombinatorAttribute</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">parserDecl</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">CoreM</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/ParserCompiler/Attribute.lean#L44-L45","name":"Lean.ParserCompiler.CombinatorAttribute.setDeclFor","line":44,"kind":"def","docLink":"./Lean/ParserCompiler/Attribute.html#Lean.ParserCompiler.CombinatorAttribute.setDeclFor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ParserCompiler/Attribute.html#Lean.ParserCompiler.CombinatorAttribute.setDeclFor\"><span class=\"name\">Lean</span>.<span class=\"name\">ParserCompiler</span>.<span class=\"name\">CombinatorAttribute</span>.<span class=\"name\">setDeclFor</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">attr</span> : <a href=\"./Lean/ParserCompiler/Attribute.html#Lean.ParserCompiler.CombinatorAttribute\">CombinatorAttribute</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">env</span> : <a href=\"./Lean/Environment.html#Lean.Environment\">Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">parserDecl </span><span class=\"fn\">decl</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Environment.html#Lean.Environment\">Environment</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/ParserCompiler/Attribute.lean#L41-L42","name":"Lean.ParserCompiler.CombinatorAttribute.getDeclFor?","line":41,"kind":"def","docLink":"./Lean/ParserCompiler/Attribute.html#Lean.ParserCompiler.CombinatorAttribute.getDeclFor?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ParserCompiler/Attribute.html#Lean.ParserCompiler.CombinatorAttribute.getDeclFor?\"><span class=\"name\">Lean</span>.<span class=\"name\">ParserCompiler</span>.<span class=\"name\">CombinatorAttribute</span>.<span class=\"name\">getDeclFor?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">attr</span> : <a href=\"./Lean/ParserCompiler/Attribute.html#Lean.ParserCompiler.CombinatorAttribute\">CombinatorAttribute</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">env</span> : <a href=\"./Lean/Environment.html#Lean.Environment\">Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">parserDecl</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Lean.Name\">Name</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/ParserCompiler/Attribute.lean#L20-L37","name":"Lean.ParserCompiler.registerCombinatorAttribute","line":20,"kind":"def","docLink":"./Lean/ParserCompiler/Attribute.html#Lean.ParserCompiler.registerCombinatorAttribute","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ParserCompiler/Attribute.html#Lean.ParserCompiler.registerCombinatorAttribute\"><span class=\"name\">Lean</span>.<span class=\"name\">ParserCompiler</span>.<span class=\"name\">registerCombinatorAttribute</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">name</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">descr</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ref</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a> := by exact decl_name%)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Lean/ParserCompiler/Attribute.html#Lean.ParserCompiler.CombinatorAttribute\">CombinatorAttribute</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/ParserCompiler/Attribute.lean#L17-L17","name":"Lean.ParserCompiler.instInhabitedCombinatorAttribute","line":17,"kind":"instance","docLink":"./Lean/ParserCompiler/Attribute.html#Lean.ParserCompiler.instInhabitedCombinatorAttribute","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ParserCompiler/Attribute.html#Lean.ParserCompiler.instInhabitedCombinatorAttribute\"><span class=\"name\">Lean</span>.<span class=\"name\">ParserCompiler</span>.<span class=\"name\">instInhabitedCombinatorAttribute</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/ParserCompiler/Attribute.html#Lean.ParserCompiler.CombinatorAttribute\">CombinatorAttribute</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/ParserCompiler/Attribute.lean#L16-L16","name":"Lean.ParserCompiler.CombinatorAttribute.ext","line":16,"kind":"def","docLink":"./Lean/ParserCompiler/Attribute.html#Lean.ParserCompiler.CombinatorAttribute.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ParserCompiler/Attribute.html#Lean.ParserCompiler.CombinatorAttribute.ext\"><span class=\"name\">Lean</span>.<span class=\"name\">ParserCompiler</span>.<span class=\"name\">CombinatorAttribute</span>.<span class=\"name\">ext</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/ParserCompiler/Attribute.html#Lean.ParserCompiler.CombinatorAttribute\">CombinatorAttribute</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/EnvExtension.html#Lean.SimplePersistentEnvExtension\">SimplePersistentEnvExtension</a> (<a href=\"./Init/Prelude.html#Lean.Name\">Name</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>) <span class=\"fn\">(<a href=\"./Lean/Data/NameMap.html#Lean.NameMap\">NameMap</a> <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/ParserCompiler/Attribute.lean#L15-L15","name":"Lean.ParserCompiler.CombinatorAttribute.impl","line":15,"kind":"def","docLink":"./Lean/ParserCompiler/Attribute.html#Lean.ParserCompiler.CombinatorAttribute.impl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ParserCompiler/Attribute.html#Lean.ParserCompiler.CombinatorAttribute.impl\"><span class=\"name\">Lean</span>.<span class=\"name\">ParserCompiler</span>.<span class=\"name\">CombinatorAttribute</span>.<span class=\"name\">impl</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/ParserCompiler/Attribute.html#Lean.ParserCompiler.CombinatorAttribute\">CombinatorAttribute</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Attributes.html#Lean.AttributeImpl\">AttributeImpl</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/ParserCompiler/Attribute.lean#L14-L14","name":"Lean.ParserCompiler.CombinatorAttribute.mk","line":14,"kind":"ctor","docLink":"./Lean/ParserCompiler/Attribute.html#Lean.ParserCompiler.CombinatorAttribute.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ParserCompiler/Attribute.html#Lean.ParserCompiler.CombinatorAttribute.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">ParserCompiler</span>.<span class=\"name\">CombinatorAttribute</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">impl</span> : <a href=\"./Lean/Attributes.html#Lean.AttributeImpl\">AttributeImpl</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ext</span> : <span class=\"fn\"><a href=\"./Lean/EnvExtension.html#Lean.SimplePersistentEnvExtension\">SimplePersistentEnvExtension</a> (<a href=\"./Init/Prelude.html#Lean.Name\">Name</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>) <span class=\"fn\">(<a href=\"./Lean/Data/NameMap.html#Lean.NameMap\">NameMap</a> <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/ParserCompiler/Attribute.html#Lean.ParserCompiler.CombinatorAttribute\">CombinatorAttribute</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/ParserCompiler/Attribute.lean#L14-L17","name":"Lean.ParserCompiler.CombinatorAttribute","line":14,"kind":"structure","docLink":"./Lean/ParserCompiler/Attribute.html#Lean.ParserCompiler.CombinatorAttribute","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ParserCompiler/Attribute.html#Lean.ParserCompiler.CombinatorAttribute\"><span class=\"name\">Lean</span>.<span class=\"name\">ParserCompiler</span>.<span class=\"name\">CombinatorAttribute</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"}]}