{"name":"Std.Tactic.BVDecide.Bitblast.BVExpr.Circuit.Impl.Substructure","instances":[],"imports":["Std.Tactic.BVDecide.Bitblast.BVExpr.Circuit.Impl.Pred"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Impl/Substructure.lean#L189-L198","name":"Std.Tactic.BVDecide.BVLogicalExpr.bitblast.go_denote_mem_prefix","line":189,"kind":"theorem","docLink":"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Impl/Substructure.html#Std.Tactic.BVDecide.BVLogicalExpr.bitblast.go_denote_mem_prefix","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Impl/Substructure.html#Std.Tactic.BVDecide.BVLogicalExpr.bitblast.go_denote_mem_prefix\"><span class=\"name\">Std</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">BVLogicalExpr</span>.<span class=\"name\">bitblast</span>.<span class=\"name\">go_denote_mem_prefix</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">assign</span> : <span class=\"fn\"><a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Basic.html#Std.Tactic.BVDecide.BVBit\">BVBit</a> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">expr</span> : <a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Basic.html#Std.Tactic.BVDecide.BVLogicalExpr\">BVLogicalExpr</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">start</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inv</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">aig</span> : <span class=\"fn\"><a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG\">Sat.AIG</a> <a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Basic.html#Std.Tactic.BVDecide.BVBit\">BVBit</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">cache</span> : <span class=\"fn\"><a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Impl/Expr.html#Std.Tactic.BVDecide.BVExpr.Cache\">BVExpr.Cache</a> <span class=\"fn\">aig</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hstart</span> : <span class=\"fn\">start</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">aig</span>.<a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.decls\">decls</a></span>.<a href=\"./Init/Prelude.html#Array.size\">size</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.denote\">⟦</a><span class=\"fn\">assign</span><a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.denote\">,</a> <a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.Entrypoint.mk\">{</a> <span class=\"fn\">aig</span> := <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Impl/Substructure.html#Std.Tactic.BVDecide.BVLogicalExpr.bitblast.go\">go</a> <span class=\"fn\">aig</span> <span class=\"fn\">expr</span> <span class=\"fn\">cache</span>)</span>.<a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Impl/Pred.html#Std.Tactic.BVDecide.Return.result\">result</a></span>.<a href=\"./Init/Prelude.html#Subtype.val\">val</a></span>.<a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.Entrypoint.aig\">aig</a></span>, <span class=\"fn\">ref</span> := <a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.Ref.mk\">{</a> <span class=\"fn\">gate</span> := <span class=\"fn\">start</span>, <span class=\"fn\">invert</span> := <span class=\"fn\">inv</span>, <span class=\"fn\">hgate</span> := <span class=\"fn\">⋯</span> <a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.Ref.mk\">}</a> <a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.Entrypoint.mk\">}</a><a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.denote\">⟧</a> <a href=\"./Init/Prelude.html#Eq\">=</a>   <a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.denote\">⟦</a><span class=\"fn\">assign</span><a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.denote\">,</a> <a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.Entrypoint.mk\">{</a> <span class=\"fn\">aig</span> := <span class=\"fn\">aig</span>, <span class=\"fn\">ref</span> := <a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.Ref.mk\">{</a> <span class=\"fn\">gate</span> := <span class=\"fn\">start</span>, <span class=\"fn\">invert</span> := <span class=\"fn\">inv</span>, <span class=\"fn\">hgate</span> := <span class=\"fn\">hstart</span> <a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.Ref.mk\">}</a> <a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.Entrypoint.mk\">}</a><a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.denote\">⟧</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Impl/Substructure.lean#L182-L187","name":"Std.Tactic.BVDecide.BVLogicalExpr.bitblast.go_isPrefix_aig","line":182,"kind":"theorem","docLink":"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Impl/Substructure.html#Std.Tactic.BVDecide.BVLogicalExpr.bitblast.go_isPrefix_aig","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Impl/Substructure.html#Std.Tactic.BVDecide.BVLogicalExpr.bitblast.go_isPrefix_aig\"><span class=\"name\">Std</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">BVLogicalExpr</span>.<span class=\"name\">bitblast</span>.<span class=\"name\">go_isPrefix_aig</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">expr</span> : <a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Basic.html#Std.Tactic.BVDecide.BVLogicalExpr\">BVLogicalExpr</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">aig</span> : <span class=\"fn\"><a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG\">Sat.AIG</a> <a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Basic.html#Std.Tactic.BVDecide.BVBit\">BVBit</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">cache</span> : <span class=\"fn\"><a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Impl/Expr.html#Std.Tactic.BVDecide.BVExpr.Cache\">BVExpr.Cache</a> <span class=\"fn\">aig</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Sat/AIG/LawfulOperator.html#Std.Sat.AIG.IsPrefix\">Sat.AIG.IsPrefix</a> <span class=\"fn\"><span class=\"fn\">aig</span>.<a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.decls\">decls</a></span> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Impl/Substructure.html#Std.Tactic.BVDecide.BVLogicalExpr.bitblast.go\">go</a> <span class=\"fn\">aig</span> <span class=\"fn\">expr</span> <span class=\"fn\">cache</span>)</span>.<a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Impl/Pred.html#Std.Tactic.BVDecide.Return.result\">result</a></span>.<a href=\"./Init/Prelude.html#Subtype.val\">val</a></span>.<a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.Entrypoint.aig\">aig</a></span>.<a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.decls\">decls</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Impl/Substructure.lean#L120-L180","name":"Std.Tactic.BVDecide.BVLogicalExpr.bitblast.go_decl_eq","line":120,"kind":"theorem","docLink":"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Impl/Substructure.html#Std.Tactic.BVDecide.BVLogicalExpr.bitblast.go_decl_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Impl/Substructure.html#Std.Tactic.BVDecide.BVLogicalExpr.bitblast.go_decl_eq\"><span class=\"name\">Std</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">BVLogicalExpr</span>.<span class=\"name\">bitblast</span>.<span class=\"name\">go_decl_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">expr</span> : <a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Basic.html#Std.Tactic.BVDecide.BVLogicalExpr\">BVLogicalExpr</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">idx</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">aig</span> : <span class=\"fn\"><a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG\">Sat.AIG</a> <a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Basic.html#Std.Tactic.BVDecide.BVBit\">BVBit</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">cache</span> : <span class=\"fn\"><a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Impl/Expr.html#Std.Tactic.BVDecide.BVExpr.Cache\">BVExpr.Cache</a> <span class=\"fn\">aig</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">idx</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">aig</span>.<a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.decls\">decls</a></span>.<a href=\"./Init/Prelude.html#Array.size\">size</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hbounds</span> : <span class=\"fn\">idx</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Impl/Substructure.html#Std.Tactic.BVDecide.BVLogicalExpr.bitblast.go\">go</a> <span class=\"fn\">aig</span> <span class=\"fn\">expr</span> <span class=\"fn\">cache</span>)</span>.<a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Impl/Pred.html#Std.Tactic.BVDecide.Return.result\">result</a></span>.<a href=\"./Init/Prelude.html#Subtype.val\">val</a></span>.<a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.Entrypoint.aig\">aig</a></span>.<a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.decls\">decls</a></span>.<a href=\"./Init/Prelude.html#Array.size\">size</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Impl/Substructure.html#Std.Tactic.BVDecide.BVLogicalExpr.bitblast.go\">go</a> <span class=\"fn\">aig</span> <span class=\"fn\">expr</span> <span class=\"fn\">cache</span>)</span>.<a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Impl/Pred.html#Std.Tactic.BVDecide.Return.result\">result</a></span>.<a href=\"./Init/Prelude.html#Subtype.val\">val</a></span>.<a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.Entrypoint.aig\">aig</a></span>.<a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.decls\">decls</a></span><a href=\"./Init/GetElem.html#GetElem.getElem\">[</a><span class=\"fn\">idx</span><a href=\"./Init/GetElem.html#GetElem.getElem\">]</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">aig</span>.<a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.decls\">decls</a></span><a href=\"./Init/GetElem.html#GetElem.getElem\">[</a><span class=\"fn\">idx</span><a href=\"./Init/GetElem.html#GetElem.getElem\">]</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Impl/Substructure.lean#L113-L118","name":"Std.Tactic.BVDecide.BVLogicalExpr.bitblast.go_lt_size_of_lt_aig_size","line":113,"kind":"theorem","docLink":"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Impl/Substructure.html#Std.Tactic.BVDecide.BVLogicalExpr.bitblast.go_lt_size_of_lt_aig_size","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Impl/Substructure.html#Std.Tactic.BVDecide.BVLogicalExpr.bitblast.go_lt_size_of_lt_aig_size\"><span class=\"name\">Std</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">BVLogicalExpr</span>.<span class=\"name\">bitblast</span>.<span class=\"name\">go_lt_size_of_lt_aig_size</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">aig</span> : <span class=\"fn\"><a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG\">Sat.AIG</a> <a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Basic.html#Std.Tactic.BVDecide.BVBit\">BVBit</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">expr</span> : <a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Basic.html#Std.Tactic.BVDecide.BVLogicalExpr\">BVLogicalExpr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">cache</span> : <span class=\"fn\"><a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Impl/Expr.html#Std.Tactic.BVDecide.BVExpr.Cache\">BVExpr.Cache</a> <span class=\"fn\">aig</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">aig</span>.<a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.decls\">decls</a></span>.<a href=\"./Init/Prelude.html#Array.size\">size</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Impl/Substructure.html#Std.Tactic.BVDecide.BVLogicalExpr.bitblast.go\">go</a> <span class=\"fn\">aig</span> <span class=\"fn\">expr</span> <span class=\"fn\">cache</span>)</span>.<a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Impl/Pred.html#Std.Tactic.BVDecide.Return.result\">result</a></span>.<a href=\"./Init/Prelude.html#Subtype.val\">val</a></span>.<a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.Entrypoint.aig\">aig</a></span>.<a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.decls\">decls</a></span>.<a href=\"./Init/Prelude.html#Array.size\">size</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Impl/Substructure.lean#L109-L111","name":"Std.Tactic.BVDecide.BVLogicalExpr.bitblast.go_le_size","line":109,"kind":"theorem","docLink":"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Impl/Substructure.html#Std.Tactic.BVDecide.BVLogicalExpr.bitblast.go_le_size","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Impl/Substructure.html#Std.Tactic.BVDecide.BVLogicalExpr.bitblast.go_le_size\"><span class=\"name\">Std</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">BVLogicalExpr</span>.<span class=\"name\">bitblast</span>.<span class=\"name\">go_le_size</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">aig</span> : <span class=\"fn\"><a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG\">Sat.AIG</a> <a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Basic.html#Std.Tactic.BVDecide.BVBit\">BVBit</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">expr</span> : <a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Basic.html#Std.Tactic.BVDecide.BVLogicalExpr\">BVLogicalExpr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">cache</span> : <span class=\"fn\"><a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Impl/Expr.html#Std.Tactic.BVDecide.BVExpr.Cache\">BVExpr.Cache</a> <span class=\"fn\">aig</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">aig</span>.<a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.decls\">decls</a></span>.<a href=\"./Init/Prelude.html#Array.size\">size</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Impl/Substructure.html#Std.Tactic.BVDecide.BVLogicalExpr.bitblast.go\">go</a> <span class=\"fn\">aig</span> <span class=\"fn\">expr</span> <span class=\"fn\">cache</span>)</span>.<a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Impl/Pred.html#Std.Tactic.BVDecide.Return.result\">result</a></span>.<a href=\"./Init/Prelude.html#Subtype.val\">val</a></span>.<a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.Entrypoint.aig\">aig</a></span>.<a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.decls\">decls</a></span>.<a href=\"./Init/Prelude.html#Array.size\">size</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Impl/Substructure.lean#L27-L105","name":"Std.Tactic.BVDecide.BVLogicalExpr.bitblast.go","line":27,"kind":"def","docLink":"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Impl/Substructure.html#Std.Tactic.BVDecide.BVLogicalExpr.bitblast.go","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Impl/Substructure.html#Std.Tactic.BVDecide.BVLogicalExpr.bitblast.go\"><span class=\"name\">Std</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">BVLogicalExpr</span>.<span class=\"name\">bitblast</span>.<span class=\"name\">go</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">aig</span> : <span class=\"fn\"><a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG\">Sat.AIG</a> <a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Basic.html#Std.Tactic.BVDecide.BVBit\">BVBit</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">expr</span> : <a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Basic.html#Std.Tactic.BVDecide.BVLogicalExpr\">BVLogicalExpr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">cache</span> : <span class=\"fn\"><a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Impl/Expr.html#Std.Tactic.BVDecide.BVExpr.Cache\">BVExpr.Cache</a> <span class=\"fn\">aig</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Impl/Pred.html#Std.Tactic.BVDecide.Return\">Return</a> <span class=\"fn\">aig</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Impl/Substructure.lean#L21-L105","name":"Std.Tactic.BVDecide.BVLogicalExpr.bitblast","line":21,"kind":"def","docLink":"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Impl/Substructure.html#Std.Tactic.BVDecide.BVLogicalExpr.bitblast","doc":"Turn a `BoolExpr` into an `Entrypoint`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Impl/Substructure.html#Std.Tactic.BVDecide.BVLogicalExpr.bitblast\"><span class=\"name\">Std</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">BVLogicalExpr</span>.<span class=\"name\">bitblast</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">expr</span> : <a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Basic.html#Std.Tactic.BVDecide.BVLogicalExpr\">BVLogicalExpr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Sat/AIG/Basic.html#Std.Sat.AIG.Entrypoint\">Sat.AIG.Entrypoint</a> <a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Basic.html#Std.Tactic.BVDecide.BVBit\">BVBit</a></span></div></div>"}]}