{"name":"Lean.Elab.PreDefinition.PartialFixpoint.Induction","instances":[],"imports":["Lean.Meta.Basic","Lean.Meta.Match.MatcherApp.Transform","Lean.Meta.Check","Lean.Meta.Tactic.Subst","Lean.Meta.Injective","Lean.Meta.ArgsPacker","Lean.Meta.PProdN","Lean.Meta.Tactic.Apply","Lean.Elab.PreDefinition.PartialFixpoint.Eqns","Lean.Elab.Command","Lean.Meta.Tactic.ElimInfo"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/PreDefinition/PartialFixpoint/Induction.lean#L310-L369","name":"Lean.Elab.PartialFixpoint.derivePartialCorrectness","line":310,"kind":"def","docLink":"./Lean/Elab/PreDefinition/PartialFixpoint/Induction.html#Lean.Elab.PartialFixpoint.derivePartialCorrectness","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/PartialFixpoint/Induction.html#Lean.Elab.PartialFixpoint.derivePartialCorrectness\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">PartialFixpoint</span>.<span class=\"name\">derivePartialCorrectness</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">name</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">MetaM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/PreDefinition/PartialFixpoint/Induction.lean#L292-L308","name":"Lean.Elab.PartialFixpoint.mkOptionAdm","line":292,"kind":"def","docLink":"./Lean/Elab/PreDefinition/PartialFixpoint/Induction.html#Lean.Elab.PartialFixpoint.mkOptionAdm","doc":"Given `motive : α → β → γ → Prop`, construct a proof of\n`admissible (fun f => ∀ x y r, f x y = r → motive x y r)`\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/PartialFixpoint/Induction.html#Lean.Elab.PartialFixpoint.mkOptionAdm\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">PartialFixpoint</span>.<span class=\"name\">mkOptionAdm</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">motive</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">MetaM</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/PreDefinition/PartialFixpoint/Induction.lean#L287-L290","name":"Lean.Elab.PartialFixpoint.isPartialCorrectnessName","line":287,"kind":"def","docLink":"./Lean/Elab/PreDefinition/PartialFixpoint/Induction.html#Lean.Elab.PartialFixpoint.isPartialCorrectnessName","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/PartialFixpoint/Induction.html#Lean.Elab.PartialFixpoint.isPartialCorrectnessName\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">PartialFixpoint</span>.<span class=\"name\">isPartialCorrectnessName</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">env</span> : <a href=\"./Lean/Environment.html#Lean.Environment\">Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">name</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/PreDefinition/PartialFixpoint/Induction.lean#L267-L285","name":"Lean.Elab.PartialFixpoint.isOptionFixpoint","line":267,"kind":"def","docLink":"./Lean/Elab/PreDefinition/PartialFixpoint/Induction.html#Lean.Elab.PartialFixpoint.isOptionFixpoint","doc":"Returns true if `name` defined by `partial_fixpoint`, the first in its mutual group,\nand all functions are defined using the `CCPO` instance for `Option`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/PartialFixpoint/Induction.html#Lean.Elab.PartialFixpoint.isOptionFixpoint\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">PartialFixpoint</span>.<span class=\"name\">isOptionFixpoint</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">env</span> : <a href=\"./Lean/Environment.html#Lean.Environment\">Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">name</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/PreDefinition/PartialFixpoint/Induction.lean#L248-L255","name":"Lean.Elab.PartialFixpoint.isInductName","line":248,"kind":"def","docLink":"./Lean/Elab/PreDefinition/PartialFixpoint/Induction.html#Lean.Elab.PartialFixpoint.isInductName","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/PartialFixpoint/Induction.html#Lean.Elab.PartialFixpoint.isInductName\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">PartialFixpoint</span>.<span class=\"name\">isInductName</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">env</span> : <a href=\"./Lean/Environment.html#Lean.Environment\">Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">name</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/PreDefinition/PartialFixpoint/Induction.lean#L96-L246","name":"Lean.Elab.PartialFixpoint.deriveInduction","line":96,"kind":"def","docLink":"./Lean/Elab/PreDefinition/PartialFixpoint/Induction.html#Lean.Elab.PartialFixpoint.deriveInduction","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/PartialFixpoint/Induction.html#Lean.Elab.PartialFixpoint.deriveInduction\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">PartialFixpoint</span>.<span class=\"name\">deriveInduction</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">name</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">MetaM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/PreDefinition/PartialFixpoint/Induction.lean#L52-L81","name":"Lean.Elab.PartialFixpoint.unfoldPredRel","line":52,"kind":"def","docLink":"./Lean/Elab/PreDefinition/PartialFixpoint/Induction.html#Lean.Elab.PartialFixpoint.unfoldPredRel","doc":"Unfolds an appropriate `PartialOrder` instance on predicates to quantifications and implications.\nI.e. `ImplicationOrder.instPartialOrder.rel P Q` becomes\n`∀ x y, P x y → Q x y`.\n\nIn the premise of the Park induction principle (`lfp_le_of_le_monotone`) we use a monotone map defining the predicate in the eta expanded form. In such a case, besides desugaring the predicate, we need to perform a weak head reduction.\nThe optional parameter `reduceConclusion` (false by default) indicates whether we need to perform this reduction.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/PartialFixpoint/Induction.html#Lean.Elab.PartialFixpoint.unfoldPredRel\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">PartialFixpoint</span>.<span class=\"name\">unfoldPredRel</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">predType </span><span class=\"fn\">body</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fixpointType</span> : <a href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.PartialFixpointType\">PartialFixpointType</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">reduceConclusion</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/Prelude.html#Bool.false\">false</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">MetaM</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/PreDefinition/PartialFixpoint/Induction.lean#L41-L50","name":"Lean.Elab.PartialFixpoint.CCPOProdProjs","line":41,"kind":"def","docLink":"./Lean/Elab/PreDefinition/PartialFixpoint/Induction.html#Lean.Elab.PartialFixpoint.CCPOProdProjs","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/PartialFixpoint/Induction.html#Lean.Elab.PartialFixpoint.CCPOProdProjs\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">PartialFixpoint</span>.<span class=\"name\">CCPOProdProjs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">inst</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/PreDefinition/PartialFixpoint/Induction.lean#L29-L39","name":"Lean.Elab.PartialFixpoint.mkAdmProj","line":29,"kind":"opaque","docLink":"./Lean/Elab/PreDefinition/PartialFixpoint/Induction.html#Lean.Elab.PartialFixpoint.mkAdmProj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/PartialFixpoint/Induction.html#Lean.Elab.PartialFixpoint.mkAdmProj\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">PartialFixpoint</span>.<span class=\"name\">mkAdmProj</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">packedInst</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">MetaM</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/PreDefinition/PartialFixpoint/Induction.lean#L26-L27","name":"Lean.Elab.PartialFixpoint.mkAdmAnd","line":26,"kind":"def","docLink":"./Lean/Elab/PreDefinition/PartialFixpoint/Induction.html#Lean.Elab.PartialFixpoint.mkAdmAnd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/PartialFixpoint/Induction.html#Lean.Elab.PartialFixpoint.mkAdmAnd\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">PartialFixpoint</span>.<span class=\"name\">mkAdmAnd</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α </span><span class=\"fn\">instα </span><span class=\"fn\">adm₁ </span><span class=\"fn\">adm₂</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">MetaM</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span></div></div>"}]}