{"name":"Init.Data.Fin.Log2","instances":[],"imports":["Init.Data.Nat.Log2"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/Fin/Log2.lean#L13-L27","name":"Fin.log2","line":13,"kind":"def","docLink":"./Init/Data/Fin/Log2.html#Fin.log2","doc":"Logarithm base 2 for bounded numbers.\n\nThe resulting value is the same as that computed by `Nat.log2`. In particular, the result for `0` is\n`0`.\n\nExamples:\n * `(8 : Fin 10).log2 = (3 : Fin 10)`\n * `(7 : Fin 10).log2 = (2 : Fin 10)`\n * `(4 : Fin 10).log2 = (2 : Fin 10)`\n * `(3 : Fin 10).log2 = (1 : Fin 10)`\n * `(1 : Fin 10).log2 = (0 : Fin 10)`\n * `(0 : Fin 10).log2 = (0 : Fin 10)`\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Fin/Log2.html#Fin.log2\"><span class=\"name\">Fin</span>.<span class=\"name\">log2</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">m</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">m</span></span></div></div>"}]}