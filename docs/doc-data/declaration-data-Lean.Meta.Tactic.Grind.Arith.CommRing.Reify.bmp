{"name":"Lean.Meta.Tactic.Grind.Arith.CommRing.Reify","instances":[],"imports":["Lean.Meta.Tactic.Grind.Simp","Lean.Meta.Tactic.Grind.Arith.CommRing.Util","Lean.Meta.Tactic.Grind.Arith.CommRing.Var"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/Grind/Arith/CommRing/Reify.lean#L41-L69","name":"Lean.Meta.Grind.Arith.CommRing.reify?.go","line":41,"kind":"opaque","docLink":"./Lean/Meta/Tactic/Grind/Arith/CommRing/Reify.html#Lean.Meta.Grind.Arith.CommRing.reify?.go","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/CommRing/Reify.html#Lean.Meta.Grind.Arith.CommRing.reify?.go\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">CommRing</span>.<span class=\"name\">reify?</span>.<span class=\"name\">go</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">toVar </span><span class=\"fn\">asVar</span> : <span class=\"fn\"><a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a> â†’ <span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Arith/CommRing/Util.html#Lean.Meta.Grind.Arith.CommRing.RingM\">RingM</a> <a href=\"./Lean/Meta/Tactic/Grind/Arith/CommRing/Types.html#Lean.Meta.Grind.Arith.CommRing.RingExpr\">RingExpr</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Arith/CommRing/Util.html#Lean.Meta.Grind.Arith.CommRing.RingM\">RingM</a> <a href=\"./Lean/Meta/Tactic/Grind/Arith/CommRing/Types.html#Lean.Meta.Grind.Arith.CommRing.RingExpr\">RingExpr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/Grind/Arith/CommRing/Reify.lean#L31-L100","name":"Lean.Meta.Grind.Arith.CommRing.reify?","line":31,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Arith/CommRing/Reify.html#Lean.Meta.Grind.Arith.CommRing.reify?","doc":"Converts a Lean expression `e` in the `CommRing` with id `ringId` into\na `CommRing.Expr` object.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/CommRing/Reify.html#Lean.Meta.Grind.Arith.CommRing.reify?\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">CommRing</span>.<span class=\"name\">reify?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Arith/CommRing/Util.html#Lean.Meta.Grind.Arith.CommRing.RingM\">RingM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Meta/Tactic/Grind/Arith/CommRing/Types.html#Lean.Meta.Grind.Arith.CommRing.RingExpr\">RingExpr</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/Grind/Arith/CommRing/Reify.lean#L25-L26","name":"Lean.Meta.Grind.Arith.CommRing.isNatCastInst","line":25,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Arith/CommRing/Reify.html#Lean.Meta.Grind.Arith.CommRing.isNatCastInst","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/CommRing/Reify.html#Lean.Meta.Grind.Arith.CommRing.isNatCastInst\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">CommRing</span>.<span class=\"name\">isNatCastInst</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ring</span> : <a href=\"./Lean/Meta/Tactic/Grind/Arith/CommRing/Types.html#Lean.Meta.Grind.Arith.CommRing.Ring\">Ring</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">inst</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/Grind/Arith/CommRing/Reify.lean#L23-L24","name":"Lean.Meta.Grind.Arith.CommRing.isIntCastInst","line":23,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Arith/CommRing/Reify.html#Lean.Meta.Grind.Arith.CommRing.isIntCastInst","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/CommRing/Reify.html#Lean.Meta.Grind.Arith.CommRing.isIntCastInst\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">CommRing</span>.<span class=\"name\">isIntCastInst</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ring</span> : <a href=\"./Lean/Meta/Tactic/Grind/Arith/CommRing/Types.html#Lean.Meta.Grind.Arith.CommRing.Ring\">Ring</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">inst</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/Grind/Arith/CommRing/Reify.lean#L21-L22","name":"Lean.Meta.Grind.Arith.CommRing.isPowInst","line":21,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Arith/CommRing/Reify.html#Lean.Meta.Grind.Arith.CommRing.isPowInst","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/CommRing/Reify.html#Lean.Meta.Grind.Arith.CommRing.isPowInst\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">CommRing</span>.<span class=\"name\">isPowInst</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ring</span> : <a href=\"./Lean/Meta/Tactic/Grind/Arith/CommRing/Types.html#Lean.Meta.Grind.Arith.CommRing.Ring\">Ring</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">inst</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/Grind/Arith/CommRing/Reify.lean#L19-L20","name":"Lean.Meta.Grind.Arith.CommRing.isNegInst","line":19,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Arith/CommRing/Reify.html#Lean.Meta.Grind.Arith.CommRing.isNegInst","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/CommRing/Reify.html#Lean.Meta.Grind.Arith.CommRing.isNegInst\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">CommRing</span>.<span class=\"name\">isNegInst</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ring</span> : <a href=\"./Lean/Meta/Tactic/Grind/Arith/CommRing/Types.html#Lean.Meta.Grind.Arith.CommRing.Ring\">Ring</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">inst</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/Grind/Arith/CommRing/Reify.lean#L17-L18","name":"Lean.Meta.Grind.Arith.CommRing.isSubInst","line":17,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Arith/CommRing/Reify.html#Lean.Meta.Grind.Arith.CommRing.isSubInst","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/CommRing/Reify.html#Lean.Meta.Grind.Arith.CommRing.isSubInst\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">CommRing</span>.<span class=\"name\">isSubInst</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ring</span> : <a href=\"./Lean/Meta/Tactic/Grind/Arith/CommRing/Types.html#Lean.Meta.Grind.Arith.CommRing.Ring\">Ring</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">inst</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/Grind/Arith/CommRing/Reify.lean#L15-L16","name":"Lean.Meta.Grind.Arith.CommRing.isMulInst","line":15,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Arith/CommRing/Reify.html#Lean.Meta.Grind.Arith.CommRing.isMulInst","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/CommRing/Reify.html#Lean.Meta.Grind.Arith.CommRing.isMulInst\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">CommRing</span>.<span class=\"name\">isMulInst</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ring</span> : <a href=\"./Lean/Meta/Tactic/Grind/Arith/CommRing/Types.html#Lean.Meta.Grind.Arith.CommRing.Ring\">Ring</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">inst</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Meta/Tactic/Grind/Arith/CommRing/Reify.lean#L13-L14","name":"Lean.Meta.Grind.Arith.CommRing.isAddInst","line":13,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Arith/CommRing/Reify.html#Lean.Meta.Grind.Arith.CommRing.isAddInst","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/CommRing/Reify.html#Lean.Meta.Grind.Arith.CommRing.isAddInst\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">CommRing</span>.<span class=\"name\">isAddInst</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ring</span> : <a href=\"./Lean/Meta/Tactic/Grind/Arith/CommRing/Types.html#Lean.Meta.Grind.Arith.CommRing.Ring\">Ring</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">inst</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"}]}