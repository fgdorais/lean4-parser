{"name":"Lake.Build.Target.Basic","instances":[{"typeNames":["Lake.Target"],"name":"Lake.instReprTarget","className":"Repr"},{"typeNames":["Lake.Target"],"name":"Lake.instToStringTarget","className":"ToString"},{"typeNames":["Lake.PartialBuildKey","Lake.Target"],"name":"Lake.instCoePartialBuildKeyTarget","className":"Coe"}],"imports":["Lake.Build.Key"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/lake/Lake/Build/Target/Basic.lean#L32-L36","name":"Lake.TargetArray","line":32,"kind":"def","docLink":"./Lake/Build/Target/Basic.html#Lake.TargetArray","doc":"Shorthand for `Array (Target α)` that supports\ndot notation for Lake-specific operations (e.g., `fetch`).\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Target/Basic.html#Lake.TargetArray\"><span class=\"name\">Lake</span>.<span class=\"name\">TargetArray</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/lake/Lake/Build/Target/Basic.lean#L30-L30","name":"Lake.instCoePartialBuildKeyTarget","line":30,"kind":"instance","docLink":"./Lake/Build/Target/Basic.html#Lake.instCoePartialBuildKeyTarget","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Target/Basic.html#Lake.instCoePartialBuildKeyTarget\"><span class=\"name\">Lake</span>.<span class=\"name\">instCoePartialBuildKeyTarget</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Coe.html#Coe\">Coe</a> <a href=\"./Lake/Build/Key.html#Lake.PartialBuildKey\">PartialBuildKey</a> <span class=\"fn\">(<a href=\"./Lake/Build/Target/Basic.html#Lake.Target\">Target</a> <span class=\"fn\">α</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/lake/Lake/Build/Target/Basic.lean#L29-L29","name":"Lake.instToStringTarget","line":29,"kind":"instance","docLink":"./Lake/Build/Target/Basic.html#Lake.instToStringTarget","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Target/Basic.html#Lake.instToStringTarget\"><span class=\"name\">Lake</span>.<span class=\"name\">instToStringTarget</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/ToString/Basic.html#ToString\">ToString</a> <span class=\"fn\">(<a href=\"./Lake/Build/Target/Basic.html#Lake.Target\">Target</a> <span class=\"fn\">α</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/lake/Lake/Build/Target/Basic.lean#L28-L28","name":"Lake.instReprTarget","line":28,"kind":"instance","docLink":"./Lake/Build/Target/Basic.html#Lake.instReprTarget","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Target/Basic.html#Lake.instReprTarget\"><span class=\"name\">Lake</span>.<span class=\"name\">instReprTarget</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <span class=\"fn\">(<a href=\"./Lake/Build/Target/Basic.html#Lake.Target\">Target</a> <span class=\"fn\">α</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/lake/Lake/Build/Target/Basic.lean#L23-L26","name":"Lake.Target.repr","line":23,"kind":"def","docLink":"./Lake/Build/Target/Basic.html#Lake.Target.repr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Target/Basic.html#Lake.Target.repr\"><span class=\"name\">Lake</span>.<span class=\"name\">Target</span>.<span class=\"name\">repr</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Lake/Build/Target/Basic.html#Lake.Target\">Target</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">prec</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Format/Basic.html#Std.Format\">Std.Format</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/lake/Lake/Build/Target/Basic.lean#L21-L21","name":"Lake.Target.key","line":21,"kind":"def","docLink":"./Lake/Build/Target/Basic.html#Lake.Target.key","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Target/Basic.html#Lake.Target.key\"><span class=\"name\">Lake</span>.<span class=\"name\">Target</span>.<span class=\"name\">key</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Lake/Build/Target/Basic.html#Lake.Target\">Target</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lake/Build/Key.html#Lake.PartialBuildKey\">PartialBuildKey</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/lake/Lake/Build/Target/Basic.lean#L20-L20","name":"Lake.Target.mk","line":20,"kind":"ctor","docLink":"./Lake/Build/Target/Basic.html#Lake.Target.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Target/Basic.html#Lake.Target.mk\"><span class=\"name\">Lake</span>.<span class=\"name\">Target</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">key</span> : <a href=\"./Lake/Build/Key.html#Lake.PartialBuildKey\">PartialBuildKey</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Target/Basic.html#Lake.Target\">Target</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/lake/Lake/Build/Target/Basic.lean#L19-L21","name":"Lake.Target","line":19,"kind":"structure","docLink":"./Lake/Build/Target/Basic.html#Lake.Target","doc":"A Lake target that is expected to produce an output of a specific type. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Target/Basic.html#Lake.Target\"><span class=\"name\">Lake</span>.<span class=\"name\">Target</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"}]}