{"name":"Init.Data.Int.OfNat","instances":[{"typeNames":["Int.OfNat.Expr"],"name":"Int.OfNat.instBEqExpr","className":"BEq"}],"imports":["Init.Data.Int.Lemmas","Init.Data.Int.DivMod","Init.Data.Int.Linear","Init.Data.RArray"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/Int/OfNat.lean#L93-L94","name":"Int.OfNat.Expr.denoteAsInt_nonneg","line":93,"kind":"theorem","docLink":"./Init/Data/Int/OfNat.html#Int.OfNat.Expr.denoteAsInt_nonneg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/OfNat.html#Int.OfNat.Expr.denoteAsInt_nonneg\"><span class=\"name\">Int</span>.<span class=\"name\">OfNat</span>.<span class=\"name\">Expr</span>.<span class=\"name\">denoteAsInt_nonneg</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Init/Data/Int/OfNat.html#Int.OfNat.Context\">Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Init/Data/Int/OfNat.html#Int.OfNat.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Init/Data/Int/OfNat.html#Int.OfNat.Expr.denoteAsInt\">denoteAsInt</a> <span class=\"fn\">ctx</span> <span class=\"fn\">e</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/Int/OfNat.lean#L84-L91","name":"Int.OfNat.ofNat_toNat","line":84,"kind":"theorem","docLink":"./Init/Data/Int/OfNat.html#Int.OfNat.ofNat_toNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/OfNat.html#Int.OfNat.ofNat_toNat\"><span class=\"name\">Int</span>.<span class=\"name\">OfNat</span>.<span class=\"name\">ofNat_toNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Cast.html#NatCast.natCast\">↑</a><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/Int/Basic.html#Int.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#ite\">if</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#ite\">then</a> <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#ite\">else</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/Int/OfNat.lean#L80-L82","name":"Int.OfNat.of_not_eq","line":80,"kind":"theorem","docLink":"./Init/Data/Int/OfNat.html#Int.OfNat.of_not_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/OfNat.html#Int.OfNat.of_not_eq\"><span class=\"name\">Int</span>.<span class=\"name\">OfNat</span>.<span class=\"name\">of_not_eq</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Init/Data/Int/OfNat.html#Int.OfNat.Context\">Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">lhs </span><span class=\"fn\">rhs</span> : <a href=\"./Init/Data/Int/OfNat.html#Int.OfNat.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><a href=\"./Init/Data/Int/OfNat.html#Int.OfNat.Expr.denote\">Expr.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">lhs</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/Int/OfNat.html#Int.OfNat.Expr.denote\">Expr.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">rhs</span></span> → <a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><a href=\"./Init/Data/Int/OfNat.html#Int.OfNat.Expr.denoteAsInt\">Expr.denoteAsInt</a> <span class=\"fn\">ctx</span> <span class=\"fn\">lhs</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/Int/OfNat.html#Int.OfNat.Expr.denoteAsInt\">Expr.denoteAsInt</a> <span class=\"fn\">ctx</span> <span class=\"fn\">rhs</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/Int/OfNat.lean#L76-L78","name":"Int.OfNat.of_eq","line":76,"kind":"theorem","docLink":"./Init/Data/Int/OfNat.html#Int.OfNat.of_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/OfNat.html#Int.OfNat.of_eq\"><span class=\"name\">Int</span>.<span class=\"name\">OfNat</span>.<span class=\"name\">of_eq</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Init/Data/Int/OfNat.html#Int.OfNat.Context\">Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">lhs </span><span class=\"fn\">rhs</span> : <a href=\"./Init/Data/Int/OfNat.html#Int.OfNat.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Data/Int/OfNat.html#Int.OfNat.Expr.denote\">Expr.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">lhs</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/Int/OfNat.html#Int.OfNat.Expr.denote\">Expr.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">rhs</span></span> → <span class=\"fn\"><a href=\"./Init/Data/Int/OfNat.html#Int.OfNat.Expr.denoteAsInt\">Expr.denoteAsInt</a> <span class=\"fn\">ctx</span> <span class=\"fn\">lhs</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/Int/OfNat.html#Int.OfNat.Expr.denoteAsInt\">Expr.denoteAsInt</a> <span class=\"fn\">ctx</span> <span class=\"fn\">rhs</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/Int/OfNat.lean#L72-L74","name":"Int.OfNat.of_dvd","line":72,"kind":"theorem","docLink":"./Init/Data/Int/OfNat.html#Int.OfNat.of_dvd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/OfNat.html#Int.OfNat.of_dvd\"><span class=\"name\">Int</span>.<span class=\"name\">OfNat</span>.<span class=\"name\">of_dvd</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Init/Data/Int/OfNat.html#Int.OfNat.Context\">Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">d</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Init/Data/Int/OfNat.html#Int.OfNat.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">d</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\"><a href=\"./Init/Data/Int/OfNat.html#Int.OfNat.Expr.denote\">Expr.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">e</span></span> → <span class=\"fn\"><a href=\"./Init/Data/Int/Basic.html#Int.ofNat\">ofNat</a> <span class=\"fn\">d</span></span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\"><a href=\"./Init/Data/Int/OfNat.html#Int.OfNat.Expr.denoteAsInt\">Expr.denoteAsInt</a> <span class=\"fn\">ctx</span> <span class=\"fn\">e</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/Int/OfNat.lean#L68-L70","name":"Int.OfNat.of_not_le","line":68,"kind":"theorem","docLink":"./Init/Data/Int/OfNat.html#Int.OfNat.of_not_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/OfNat.html#Int.OfNat.of_not_le\"><span class=\"name\">Int</span>.<span class=\"name\">OfNat</span>.<span class=\"name\">of_not_le</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Init/Data/Int/OfNat.html#Int.OfNat.Context\">Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">lhs </span><span class=\"fn\">rhs</span> : <a href=\"./Init/Data/Int/OfNat.html#Int.OfNat.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><a href=\"./Init/Data/Int/OfNat.html#Int.OfNat.Expr.denote\">Expr.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">lhs</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Init/Data/Int/OfNat.html#Int.OfNat.Expr.denote\">Expr.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">rhs</span></span> → <a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><a href=\"./Init/Data/Int/OfNat.html#Int.OfNat.Expr.denoteAsInt\">Expr.denoteAsInt</a> <span class=\"fn\">ctx</span> <span class=\"fn\">lhs</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Init/Data/Int/OfNat.html#Int.OfNat.Expr.denoteAsInt\">Expr.denoteAsInt</a> <span class=\"fn\">ctx</span> <span class=\"fn\">rhs</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/Int/OfNat.lean#L64-L66","name":"Int.OfNat.of_le","line":64,"kind":"theorem","docLink":"./Init/Data/Int/OfNat.html#Int.OfNat.of_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/OfNat.html#Int.OfNat.of_le\"><span class=\"name\">Int</span>.<span class=\"name\">OfNat</span>.<span class=\"name\">of_le</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Init/Data/Int/OfNat.html#Int.OfNat.Context\">Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">lhs </span><span class=\"fn\">rhs</span> : <a href=\"./Init/Data/Int/OfNat.html#Int.OfNat.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Data/Int/OfNat.html#Int.OfNat.Expr.denote\">Expr.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">lhs</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Init/Data/Int/OfNat.html#Int.OfNat.Expr.denote\">Expr.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">rhs</span></span> → <span class=\"fn\"><a href=\"./Init/Data/Int/OfNat.html#Int.OfNat.Expr.denoteAsInt\">Expr.denoteAsInt</a> <span class=\"fn\">ctx</span> <span class=\"fn\">lhs</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Init/Data/Int/OfNat.html#Int.OfNat.Expr.denoteAsInt\">Expr.denoteAsInt</a> <span class=\"fn\">ctx</span> <span class=\"fn\">rhs</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/Int/OfNat.lean#L60-L62","name":"Int.OfNat.Expr.le","line":60,"kind":"theorem","docLink":"./Init/Data/Int/OfNat.html#Int.OfNat.Expr.le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/OfNat.html#Int.OfNat.Expr.le\"><span class=\"name\">Int</span>.<span class=\"name\">OfNat</span>.<span class=\"name\">Expr</span>.<span class=\"name\">le</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Init/Data/Int/OfNat.html#Int.OfNat.Context\">Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">lhs </span><span class=\"fn\">rhs</span> : <a href=\"./Init/Data/Int/OfNat.html#Int.OfNat.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\">(<span class=\"fn\"><a href=\"./Init/Data/Int/OfNat.html#Int.OfNat.Expr.denote\">denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">lhs</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Init/Data/Int/OfNat.html#Int.OfNat.Expr.denote\">denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">rhs</span></span>) <a href=\"./Init/Prelude.html#Eq\">=</a> (<span class=\"fn\"><a href=\"./Init/Data/Int/OfNat.html#Int.OfNat.Expr.denoteAsInt\">denoteAsInt</a> <span class=\"fn\">ctx</span> <span class=\"fn\">lhs</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Init/Data/Int/OfNat.html#Int.OfNat.Expr.denoteAsInt\">denoteAsInt</a> <span class=\"fn\">ctx</span> <span class=\"fn\">rhs</span></span>)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/Int/OfNat.lean#L56-L58","name":"Int.OfNat.Expr.eq","line":56,"kind":"theorem","docLink":"./Init/Data/Int/OfNat.html#Int.OfNat.Expr.eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/OfNat.html#Int.OfNat.Expr.eq\"><span class=\"name\">Int</span>.<span class=\"name\">OfNat</span>.<span class=\"name\">Expr</span>.<span class=\"name\">eq</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Init/Data/Int/OfNat.html#Int.OfNat.Context\">Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">lhs </span><span class=\"fn\">rhs</span> : <a href=\"./Init/Data/Int/OfNat.html#Int.OfNat.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\">(<span class=\"fn\"><a href=\"./Init/Data/Int/OfNat.html#Int.OfNat.Expr.denote\">denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">lhs</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/Int/OfNat.html#Int.OfNat.Expr.denote\">denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">rhs</span></span>) <a href=\"./Init/Prelude.html#Eq\">=</a> (<span class=\"fn\"><a href=\"./Init/Data/Int/OfNat.html#Int.OfNat.Expr.denoteAsInt\">denoteAsInt</a> <span class=\"fn\">ctx</span> <span class=\"fn\">lhs</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/Int/OfNat.html#Int.OfNat.Expr.denoteAsInt\">denoteAsInt</a> <span class=\"fn\">ctx</span> <span class=\"fn\">rhs</span></span>)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/Int/OfNat.lean#L53-L54","name":"Int.OfNat.Expr.eq_denoteAsInt","line":53,"kind":"theorem","docLink":"./Init/Data/Int/OfNat.html#Int.OfNat.Expr.eq_denoteAsInt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/OfNat.html#Int.OfNat.Expr.eq_denoteAsInt\"><span class=\"name\">Int</span>.<span class=\"name\">OfNat</span>.<span class=\"name\">Expr</span>.<span class=\"name\">eq_denoteAsInt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Init/Data/Int/OfNat.html#Int.OfNat.Context\">Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Init/Data/Int/OfNat.html#Int.OfNat.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Init/Data/Int/OfNat.html#Int.OfNat.Expr.denote\">denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">e</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/Int/OfNat.html#Int.OfNat.Expr.denoteAsInt\">denoteAsInt</a> <span class=\"fn\">ctx</span> <span class=\"fn\">e</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/Int/OfNat.lean#L50-L51","name":"Int.OfNat.Expr.denoteAsInt_eq","line":50,"kind":"theorem","docLink":"./Init/Data/Int/OfNat.html#Int.OfNat.Expr.denoteAsInt_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/OfNat.html#Int.OfNat.Expr.denoteAsInt_eq\"><span class=\"name\">Int</span>.<span class=\"name\">OfNat</span>.<span class=\"name\">Expr</span>.<span class=\"name\">denoteAsInt_eq</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Init/Data/Int/OfNat.html#Int.OfNat.Context\">Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Init/Data/Int/OfNat.html#Int.OfNat.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Int/OfNat.html#Int.OfNat.Expr.denoteAsInt\">denoteAsInt</a> <span class=\"fn\">ctx</span> <span class=\"fn\">e</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Init/Data/Int/OfNat.html#Int.OfNat.Expr.denote\">denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">e</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/Int/OfNat.lean#L42-L48","name":"Int.OfNat.Expr.denoteAsInt","line":42,"kind":"def","docLink":"./Init/Data/Int/OfNat.html#Int.OfNat.Expr.denoteAsInt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/OfNat.html#Int.OfNat.Expr.denoteAsInt\"><span class=\"name\">Int</span>.<span class=\"name\">OfNat</span>.<span class=\"name\">Expr</span>.<span class=\"name\">denoteAsInt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Init/Data/Int/OfNat.html#Int.OfNat.Context\">Context</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Int/OfNat.html#Int.OfNat.Expr\">Expr</a> → <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/Int/OfNat.lean#L34-L40","name":"Int.OfNat.Expr.denote","line":34,"kind":"def","docLink":"./Init/Data/Int/OfNat.html#Int.OfNat.Expr.denote","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/OfNat.html#Int.OfNat.Expr.denote\"><span class=\"name\">Int</span>.<span class=\"name\">OfNat</span>.<span class=\"name\">Expr</span>.<span class=\"name\">denote</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Init/Data/Int/OfNat.html#Int.OfNat.Context\">Context</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Int/OfNat.html#Int.OfNat.Expr\">Expr</a> → <a href=\"./Init/Prelude.html#Nat\">Nat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/Int/OfNat.lean#L32-L32","name":"Int.OfNat.instBEqExpr","line":32,"kind":"instance","docLink":"./Init/Data/Int/OfNat.html#Int.OfNat.instBEqExpr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/OfNat.html#Int.OfNat.instBEqExpr\"><span class=\"name\">Int</span>.<span class=\"name\">OfNat</span>.<span class=\"name\">instBEqExpr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <a href=\"./Init/Data/Int/OfNat.html#Int.OfNat.Expr\">Expr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/Int/OfNat.lean#L31-L31","name":"Int.OfNat.Expr.mod","line":31,"kind":"ctor","docLink":"./Init/Data/Int/OfNat.html#Int.OfNat.Expr.mod","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/OfNat.html#Int.OfNat.Expr.mod\"><span class=\"name\">Int</span>.<span class=\"name\">OfNat</span>.<span class=\"name\">Expr</span>.<span class=\"name\">mod</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Data/Int/OfNat.html#Int.OfNat.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Int/OfNat.html#Int.OfNat.Expr\">Expr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/Int/OfNat.lean#L30-L30","name":"Int.OfNat.Expr.div","line":30,"kind":"ctor","docLink":"./Init/Data/Int/OfNat.html#Int.OfNat.Expr.div","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/OfNat.html#Int.OfNat.Expr.div\"><span class=\"name\">Int</span>.<span class=\"name\">OfNat</span>.<span class=\"name\">Expr</span>.<span class=\"name\">div</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Data/Int/OfNat.html#Int.OfNat.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Int/OfNat.html#Int.OfNat.Expr\">Expr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/Int/OfNat.lean#L29-L29","name":"Int.OfNat.Expr.mul","line":29,"kind":"ctor","docLink":"./Init/Data/Int/OfNat.html#Int.OfNat.Expr.mul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/OfNat.html#Int.OfNat.Expr.mul\"><span class=\"name\">Int</span>.<span class=\"name\">OfNat</span>.<span class=\"name\">Expr</span>.<span class=\"name\">mul</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Data/Int/OfNat.html#Int.OfNat.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Int/OfNat.html#Int.OfNat.Expr\">Expr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/Int/OfNat.lean#L28-L28","name":"Int.OfNat.Expr.add","line":28,"kind":"ctor","docLink":"./Init/Data/Int/OfNat.html#Int.OfNat.Expr.add","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/OfNat.html#Int.OfNat.Expr.add\"><span class=\"name\">Int</span>.<span class=\"name\">OfNat</span>.<span class=\"name\">Expr</span>.<span class=\"name\">add</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Data/Int/OfNat.html#Int.OfNat.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Int/OfNat.html#Int.OfNat.Expr\">Expr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/Int/OfNat.lean#L27-L27","name":"Int.OfNat.Expr.var","line":27,"kind":"ctor","docLink":"./Init/Data/Int/OfNat.html#Int.OfNat.Expr.var","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/OfNat.html#Int.OfNat.Expr.var\"><span class=\"name\">Int</span>.<span class=\"name\">OfNat</span>.<span class=\"name\">Expr</span>.<span class=\"name\">var</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <a href=\"./Init/Data/Int/OfNat.html#Int.OfNat.Var\">Var</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Int/OfNat.html#Int.OfNat.Expr\">Expr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/Int/OfNat.lean#L26-L26","name":"Int.OfNat.Expr.num","line":26,"kind":"ctor","docLink":"./Init/Data/Int/OfNat.html#Int.OfNat.Expr.num","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/OfNat.html#Int.OfNat.Expr.num\"><span class=\"name\">Int</span>.<span class=\"name\">OfNat</span>.<span class=\"name\">Expr</span>.<span class=\"name\">num</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">v</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Int/OfNat.html#Int.OfNat.Expr\">Expr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/Int/OfNat.lean#L25-L32","name":"Int.OfNat.Expr","line":25,"kind":"inductive","docLink":"./Init/Data/Int/OfNat.html#Int.OfNat.Expr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/OfNat.html#Int.OfNat.Expr\"><span class=\"name\">Int</span>.<span class=\"name\">OfNat</span>.<span class=\"name\">Expr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/Int/OfNat.lean#L22-L23","name":"Int.OfNat.Var.denote","line":22,"kind":"def","docLink":"./Init/Data/Int/OfNat.html#Int.OfNat.Var.denote","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/OfNat.html#Int.OfNat.Var.denote\"><span class=\"name\">Int</span>.<span class=\"name\">OfNat</span>.<span class=\"name\">Var</span>.<span class=\"name\">denote</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Init/Data/Int/OfNat.html#Int.OfNat.Context\">Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">v</span> : <a href=\"./Init/Data/Int/OfNat.html#Int.OfNat.Var\">Var</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/Int/OfNat.lean#L21-L21","name":"Int.OfNat.Context","line":21,"kind":"def","docLink":"./Init/Data/Int/OfNat.html#Int.OfNat.Context","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/OfNat.html#Int.OfNat.Context\"><span class=\"name\">Int</span>.<span class=\"name\">OfNat</span>.<span class=\"name\">Context</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Init/Data/Int/OfNat.lean#L20-L20","name":"Int.OfNat.Var","line":20,"kind":"def","docLink":"./Init/Data/Int/OfNat.html#Int.OfNat.Var","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/OfNat.html#Int.OfNat.Var\"><span class=\"name\">Int</span>.<span class=\"name\">OfNat</span>.<span class=\"name\">Var</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"}]}