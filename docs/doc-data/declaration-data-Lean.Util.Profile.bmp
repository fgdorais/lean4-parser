{"name":"Lean.Util.Profile","instances":[],"imports":["Init.Data.OfScientific","Lean.Data.Options"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Util/Profile.lean#L47-L48","name":"Lean.profileitM","line":47,"kind":"def","docLink":"./Lean/Util/Profile.html#Lean.profileitM","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/Profile.html#Lean.profileitM\"><span class=\"name\">Lean</span>.<span class=\"name\">profileitM</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ε</span> : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#MonadFunctorT\">MonadFunctorT</a> <span class=\"fn\">(<a href=\"./Init/System/IO.html#EIO\">EIO</a> <span class=\"fn\">ε</span>)</span> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">category</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">opts</span> : <a href=\"./Lean/Data/Options.html#Lean.Options\">Options</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">act</span> : <span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">decl</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a> := <a href=\"./Init/Prelude.html#Lean.Name.anonymous\">Name.anonymous</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Util/Profile.lean#L43-L44","name":"Lean.profileitIO","line":43,"kind":"def","docLink":"./Lean/Util/Profile.html#Lean.profileitIO","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/Profile.html#Lean.profileitIO\"><span class=\"name\">Lean</span>.<span class=\"name\">profileitIO</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ε </span><span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">category</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">opts</span> : <a href=\"./Lean/Data/Options.html#Lean.Options\">Options</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">act</span> : <span class=\"fn\"><a href=\"./Init/System/IO.html#EIO\">EIO</a> <span class=\"fn\">ε</span> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">decl</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a> := <a href=\"./Init/Prelude.html#Lean.Name.anonymous\">Name.anonymous</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#EIO\">EIO</a> <span class=\"fn\">ε</span> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Util/Profile.lean#L38-L41","name":"Lean.profileitIOUnsafe","line":38,"kind":"def","docLink":"./Lean/Util/Profile.html#Lean.profileitIOUnsafe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">unsafe def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/Profile.html#Lean.profileitIOUnsafe\"><span class=\"name\">Lean</span>.<span class=\"name\">profileitIOUnsafe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ε </span><span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">category</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">opts</span> : <a href=\"./Lean/Data/Options.html#Lean.Options\">Options</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">act</span> : <span class=\"fn\"><a href=\"./Init/System/IO.html#EIO\">EIO</a> <span class=\"fn\">ε</span> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">decl</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a> := <a href=\"./Init/Prelude.html#Lean.Name.anonymous\">Name.anonymous</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#EIO\">EIO</a> <span class=\"fn\">ε</span> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Util/Profile.lean#L34-L36","name":"Lean.profileit","line":34,"kind":"def","docLink":"./Lean/Util/Profile.html#Lean.profileit","doc":"Print and accumulate run time of `act` when option `profiler` is set to `true`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/Profile.html#Lean.profileit\"><span class=\"name\">Lean</span>.<span class=\"name\">profileit</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">category</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">opts</span> : <a href=\"./Lean/Data/Options.html#Lean.Options\">Options</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fn</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Unit\">Unit</a> → <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">decl</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a> := <a href=\"./Init/Prelude.html#Lean.Name.anonymous\">Name.anonymous</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">α</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Util/Profile.lean#L30-L32","name":"Lean.profiler.threshold.getSecs","line":30,"kind":"def","docLink":"./Lean/Util/Profile.html#Lean.profiler.threshold.getSecs","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/Profile.html#Lean.profiler.threshold.getSecs\"><span class=\"name\">Lean</span>.<span class=\"name\">profiler</span>.<span class=\"name\">threshold</span>.<span class=\"name\">getSecs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">o</span> : <a href=\"./Lean/Data/Options.html#Lean.Options\">Options</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Float.html#Float\">Float</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Util/Profile.lean#L20-L24","name":"Lean.profiler.threshold","line":20,"kind":"opaque","docLink":"./Lean/Util/Profile.html#Lean.profiler.threshold","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/Profile.html#Lean.profiler.threshold\"><span class=\"name\">Lean</span>.<span class=\"name\">profiler</span>.<span class=\"name\">threshold</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/Options.html#Lean.Option\">Lean.Option</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Util/Profile.lean#L12-L18","name":"Lean.profiler","line":12,"kind":"opaque","docLink":"./Lean/Util/Profile.html#Lean.profiler","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/Profile.html#Lean.profiler\"><span class=\"name\">Lean</span>.<span class=\"name\">profiler</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/Options.html#Lean.Option\">Lean.Option</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"}]}