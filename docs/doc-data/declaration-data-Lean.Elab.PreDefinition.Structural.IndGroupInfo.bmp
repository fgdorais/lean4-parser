{"name":"Lean.Elab.PreDefinition.Structural.IndGroupInfo","instances":[{"typeNames":["Lean.Elab.Structural.IndGroupInfo"],"name":"Lean.Elab.Structural.instBEqIndGroupInfo","className":"BEq"},{"typeNames":["Lean.Elab.Structural.IndGroupInfo"],"name":"Lean.Elab.Structural.instInhabitedIndGroupInfo","className":"Inhabited"},{"typeNames":["Lean.Elab.Structural.IndGroupInfo"],"name":"Lean.Elab.Structural.instReprIndGroupInfo","className":"Repr"},{"typeNames":["Lean.Elab.Structural.IndGroupInst"],"name":"Lean.Elab.Structural.instInhabitedIndGroupInst","className":"Inhabited"},{"typeNames":["Lean.Elab.Structural.IndGroupInst"],"name":"Lean.Elab.Structural.instReprIndGroupInst","className":"Repr"},{"typeNames":["Lean.Elab.Structural.IndGroupInst"],"name":"Lean.Elab.Structural.instToMessageDataIndGroupInst","className":"Lean.ToMessageData"}],"imports":["Lean.Meta.InferType"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/PreDefinition/Structural/IndGroupInfo.lean#L82-L108","name":"Lean.Elab.Structural.IndGroupInst.nestedTypeFormers","line":82,"kind":"def","docLink":"./Lean/Elab/PreDefinition/Structural/IndGroupInfo.html#Lean.Elab.Structural.IndGroupInst.nestedTypeFormers","doc":"Figures out the nested type formers of an inductive group, with parameters instantiated\nand indices still forall-abstracted.\n\nFor example given a nested inductive\n```\ninductive Tree α where | node : α → Vector (Tree α) n → Tree α\n```\n(where `n` is an index of `Vector`) and the instantiation `Tree Int` it will return\n```\n#[(n : Nat) → Vector (Tree Int) n]\n```\n\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/Structural/IndGroupInfo.html#Lean.Elab.Structural.IndGroupInst.nestedTypeFormers\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Structural</span>.<span class=\"name\">IndGroupInst</span>.<span class=\"name\">nestedTypeFormers</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">igi</span> : <a href=\"./Lean/Elab/PreDefinition/Structural/IndGroupInfo.html#Lean.Elab.Structural.IndGroupInst\">IndGroupInst</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">MetaM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/PreDefinition/Structural/IndGroupInfo.lean#L75-L80","name":"Lean.Elab.Structural.IndGroupInst.brecOn","line":75,"kind":"def","docLink":"./Lean/Elab/PreDefinition/Structural/IndGroupInfo.html#Lean.Elab.Structural.IndGroupInst.brecOn","doc":"Instantiates the right `.brecOn` or `.bInductionOn` for the given type former index,\nincluding universe parameters and fixed prefix.  "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/Structural/IndGroupInfo.html#Lean.Elab.Structural.IndGroupInst.brecOn\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Structural</span>.<span class=\"name\">IndGroupInst</span>.<span class=\"name\">brecOn</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">group</span> : <a href=\"./Lean/Elab/PreDefinition/Structural/IndGroupInfo.html#Lean.Elab.Structural.IndGroupInst\">IndGroupInst</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ind</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">lvl</span> : <a href=\"./Lean/Level.html#Lean.Level\">Level</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">idx</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/PreDefinition/Structural/IndGroupInfo.lean#L67-L73","name":"Lean.Elab.Structural.IndGroupInst.isDefEq","line":67,"kind":"def","docLink":"./Lean/Elab/PreDefinition/Structural/IndGroupInfo.html#Lean.Elab.Structural.IndGroupInst.isDefEq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/Structural/IndGroupInfo.html#Lean.Elab.Structural.IndGroupInst.isDefEq\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Structural</span>.<span class=\"name\">IndGroupInst</span>.<span class=\"name\">isDefEq</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">igi1 </span><span class=\"fn\">igi2</span> : <a href=\"./Lean/Elab/PreDefinition/Structural/IndGroupInfo.html#Lean.Elab.Structural.IndGroupInst\">IndGroupInst</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">MetaM</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/PreDefinition/Structural/IndGroupInfo.lean#L64-L65","name":"Lean.Elab.Structural.instToMessageDataIndGroupInst","line":64,"kind":"instance","docLink":"./Lean/Elab/PreDefinition/Structural/IndGroupInfo.html#Lean.Elab.Structural.instToMessageDataIndGroupInst","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/Structural/IndGroupInfo.html#Lean.Elab.Structural.instToMessageDataIndGroupInst\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Structural</span>.<span class=\"name\">instToMessageDataIndGroupInst</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Message.html#Lean.ToMessageData\">ToMessageData</a> <a href=\"./Lean/Elab/PreDefinition/Structural/IndGroupInfo.html#Lean.Elab.Structural.IndGroupInst\">IndGroupInst</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/PreDefinition/Structural/IndGroupInfo.lean#L61-L62","name":"Lean.Elab.Structural.IndGroupInst.toMessageData","line":61,"kind":"def","docLink":"./Lean/Elab/PreDefinition/Structural/IndGroupInfo.html#Lean.Elab.Structural.IndGroupInst.toMessageData","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/Structural/IndGroupInfo.html#Lean.Elab.Structural.IndGroupInst.toMessageData\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Structural</span>.<span class=\"name\">IndGroupInst</span>.<span class=\"name\">toMessageData</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">igi</span> : <a href=\"./Lean/Elab/PreDefinition/Structural/IndGroupInfo.html#Lean.Elab.Structural.IndGroupInst\">IndGroupInst</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Message.html#Lean.MessageData\">MessageData</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/PreDefinition/Structural/IndGroupInfo.lean#L59-L59","name":"Lean.Elab.Structural.instReprIndGroupInst","line":59,"kind":"instance","docLink":"./Lean/Elab/PreDefinition/Structural/IndGroupInfo.html#Lean.Elab.Structural.instReprIndGroupInst","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/Structural/IndGroupInfo.html#Lean.Elab.Structural.instReprIndGroupInst\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Structural</span>.<span class=\"name\">instReprIndGroupInst</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <a href=\"./Lean/Elab/PreDefinition/Structural/IndGroupInfo.html#Lean.Elab.Structural.IndGroupInst\">IndGroupInst</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/PreDefinition/Structural/IndGroupInfo.lean#L59-L59","name":"Lean.Elab.Structural.instInhabitedIndGroupInst","line":59,"kind":"instance","docLink":"./Lean/Elab/PreDefinition/Structural/IndGroupInfo.html#Lean.Elab.Structural.instInhabitedIndGroupInst","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/Structural/IndGroupInfo.html#Lean.Elab.Structural.instInhabitedIndGroupInst\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Structural</span>.<span class=\"name\">instInhabitedIndGroupInst</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Elab/PreDefinition/Structural/IndGroupInfo.html#Lean.Elab.Structural.IndGroupInst\">IndGroupInst</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/PreDefinition/Structural/IndGroupInfo.lean#L58-L58","name":"Lean.Elab.Structural.IndGroupInst.params","line":58,"kind":"def","docLink":"./Lean/Elab/PreDefinition/Structural/IndGroupInfo.html#Lean.Elab.Structural.IndGroupInst.params","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/Structural/IndGroupInfo.html#Lean.Elab.Structural.IndGroupInst.params\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Structural</span>.<span class=\"name\">IndGroupInst</span>.<span class=\"name\">params</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/PreDefinition/Structural/IndGroupInfo.html#Lean.Elab.Structural.IndGroupInst\">IndGroupInst</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/PreDefinition/Structural/IndGroupInfo.lean#L57-L57","name":"Lean.Elab.Structural.IndGroupInst.levels","line":57,"kind":"def","docLink":"./Lean/Elab/PreDefinition/Structural/IndGroupInfo.html#Lean.Elab.Structural.IndGroupInst.levels","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/Structural/IndGroupInfo.html#Lean.Elab.Structural.IndGroupInst.levels\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Structural</span>.<span class=\"name\">IndGroupInst</span>.<span class=\"name\">levels</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/PreDefinition/Structural/IndGroupInfo.html#Lean.Elab.Structural.IndGroupInst\">IndGroupInst</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Lean/Level.html#Lean.Level\">Level</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/PreDefinition/Structural/IndGroupInfo.lean#L56-L56","name":"Lean.Elab.Structural.IndGroupInst.mk","line":56,"kind":"ctor","docLink":"./Lean/Elab/PreDefinition/Structural/IndGroupInfo.html#Lean.Elab.Structural.IndGroupInst.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/Structural/IndGroupInfo.html#Lean.Elab.Structural.IndGroupInst.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Structural</span>.<span class=\"name\">IndGroupInst</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">toIndGroupInfo</span> : <a href=\"./Lean/Elab/PreDefinition/Structural/IndGroupInfo.html#Lean.Elab.Structural.IndGroupInfo\">IndGroupInfo</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">levels</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Lean/Level.html#Lean.Level\">Level</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">params</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/PreDefinition/Structural/IndGroupInfo.html#Lean.Elab.Structural.IndGroupInst\">IndGroupInst</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/PreDefinition/Structural/IndGroupInfo.lean#L56-L59","name":"Lean.Elab.Structural.IndGroupInst.toIndGroupInfo","line":56,"kind":"def","docLink":"./Lean/Elab/PreDefinition/Structural/IndGroupInfo.html#Lean.Elab.Structural.IndGroupInst.toIndGroupInfo","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/Structural/IndGroupInfo.html#Lean.Elab.Structural.IndGroupInst.toIndGroupInfo\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Structural</span>.<span class=\"name\">IndGroupInst</span>.<span class=\"name\">toIndGroupInfo</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/PreDefinition/Structural/IndGroupInfo.html#Lean.Elab.Structural.IndGroupInst\">IndGroupInst</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/PreDefinition/Structural/IndGroupInfo.html#Lean.Elab.Structural.IndGroupInfo\">IndGroupInfo</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/PreDefinition/Structural/IndGroupInfo.lean#L49-L59","name":"Lean.Elab.Structural.IndGroupInst","line":49,"kind":"structure","docLink":"./Lean/Elab/PreDefinition/Structural/IndGroupInfo.html#Lean.Elab.Structural.IndGroupInst","doc":"An instance of an mutually inductive group of inductives, identified by the `all` array\nand the level and expressions parameters.\n\nFor example this distinguishes between `List α` and `List β` so that we will not even attempt\nmutual structural recursion on such incompatible types.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/Structural/IndGroupInfo.html#Lean.Elab.Structural.IndGroupInst\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Structural</span>.<span class=\"name\">IndGroupInst</span></a></span><span class=\"decl_extends\">extends</span> <a href=\"./Lean/Elab/PreDefinition/Structural/IndGroupInfo.html#Lean.Elab.Structural.IndGroupInfo\">Lean.Elab.Structural.IndGroupInfo</a><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/PreDefinition/Structural/IndGroupInfo.lean#L39-L47","name":"Lean.Elab.Structural.IndGroupInfo.brecOnName","line":39,"kind":"opaque","docLink":"./Lean/Elab/PreDefinition/Structural/IndGroupInfo.html#Lean.Elab.Structural.IndGroupInfo.brecOnName","doc":"Instantiates the right `.brecOn` or `.bInductionOn` for the given type former index,\nincluding universe parameters and fixed prefix.  "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/Structural/IndGroupInfo.html#Lean.Elab.Structural.IndGroupInfo.brecOnName\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Structural</span>.<span class=\"name\">IndGroupInfo</span>.<span class=\"name\">brecOnName</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">info</span> : <a href=\"./Lean/Elab/PreDefinition/Structural/IndGroupInfo.html#Lean.Elab.Structural.IndGroupInfo\">IndGroupInfo</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ind</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">idx</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Name\">Name</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/PreDefinition/Structural/IndGroupInfo.lean#L36-L37","name":"Lean.Elab.Structural.IndGroupInfo.numMotives","line":36,"kind":"def","docLink":"./Lean/Elab/PreDefinition/Structural/IndGroupInfo.html#Lean.Elab.Structural.IndGroupInfo.numMotives","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/Structural/IndGroupInfo.html#Lean.Elab.Structural.IndGroupInfo.numMotives\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Structural</span>.<span class=\"name\">IndGroupInfo</span>.<span class=\"name\">numMotives</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">group</span> : <a href=\"./Lean/Elab/PreDefinition/Structural/IndGroupInfo.html#Lean.Elab.Structural.IndGroupInfo\">IndGroupInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/PreDefinition/Structural/IndGroupInfo.lean#L32-L34","name":"Lean.Elab.Structural.IndGroupInfo.ofInductiveVal","line":32,"kind":"def","docLink":"./Lean/Elab/PreDefinition/Structural/IndGroupInfo.html#Lean.Elab.Structural.IndGroupInfo.ofInductiveVal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/Structural/IndGroupInfo.html#Lean.Elab.Structural.IndGroupInfo.ofInductiveVal\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Structural</span>.<span class=\"name\">IndGroupInfo</span>.<span class=\"name\">ofInductiveVal</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">indInfo</span> : <a href=\"./Lean/Declaration.html#Lean.InductiveVal\">InductiveVal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/PreDefinition/Structural/IndGroupInfo.html#Lean.Elab.Structural.IndGroupInfo\">IndGroupInfo</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/PreDefinition/Structural/IndGroupInfo.lean#L30-L30","name":"Lean.Elab.Structural.instReprIndGroupInfo","line":30,"kind":"instance","docLink":"./Lean/Elab/PreDefinition/Structural/IndGroupInfo.html#Lean.Elab.Structural.instReprIndGroupInfo","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/Structural/IndGroupInfo.html#Lean.Elab.Structural.instReprIndGroupInfo\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Structural</span>.<span class=\"name\">instReprIndGroupInfo</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <a href=\"./Lean/Elab/PreDefinition/Structural/IndGroupInfo.html#Lean.Elab.Structural.IndGroupInfo\">IndGroupInfo</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/PreDefinition/Structural/IndGroupInfo.lean#L30-L30","name":"Lean.Elab.Structural.instInhabitedIndGroupInfo","line":30,"kind":"instance","docLink":"./Lean/Elab/PreDefinition/Structural/IndGroupInfo.html#Lean.Elab.Structural.instInhabitedIndGroupInfo","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/Structural/IndGroupInfo.html#Lean.Elab.Structural.instInhabitedIndGroupInfo\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Structural</span>.<span class=\"name\">instInhabitedIndGroupInfo</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Elab/PreDefinition/Structural/IndGroupInfo.html#Lean.Elab.Structural.IndGroupInfo\">IndGroupInfo</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/PreDefinition/Structural/IndGroupInfo.lean#L30-L30","name":"Lean.Elab.Structural.instBEqIndGroupInfo","line":30,"kind":"instance","docLink":"./Lean/Elab/PreDefinition/Structural/IndGroupInfo.html#Lean.Elab.Structural.instBEqIndGroupInfo","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/Structural/IndGroupInfo.html#Lean.Elab.Structural.instBEqIndGroupInfo\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Structural</span>.<span class=\"name\">instBEqIndGroupInfo</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <a href=\"./Lean/Elab/PreDefinition/Structural/IndGroupInfo.html#Lean.Elab.Structural.IndGroupInfo\">IndGroupInfo</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/PreDefinition/Structural/IndGroupInfo.lean#L29-L29","name":"Lean.Elab.Structural.IndGroupInfo.numNested","line":29,"kind":"def","docLink":"./Lean/Elab/PreDefinition/Structural/IndGroupInfo.html#Lean.Elab.Structural.IndGroupInfo.numNested","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/Structural/IndGroupInfo.html#Lean.Elab.Structural.IndGroupInfo.numNested\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Structural</span>.<span class=\"name\">IndGroupInfo</span>.<span class=\"name\">numNested</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/PreDefinition/Structural/IndGroupInfo.html#Lean.Elab.Structural.IndGroupInfo\">IndGroupInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/PreDefinition/Structural/IndGroupInfo.lean#L28-L28","name":"Lean.Elab.Structural.IndGroupInfo.all","line":28,"kind":"def","docLink":"./Lean/Elab/PreDefinition/Structural/IndGroupInfo.html#Lean.Elab.Structural.IndGroupInfo.all","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/Structural/IndGroupInfo.html#Lean.Elab.Structural.IndGroupInfo.all\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Structural</span>.<span class=\"name\">IndGroupInfo</span>.<span class=\"name\">all</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/PreDefinition/Structural/IndGroupInfo.html#Lean.Elab.Structural.IndGroupInfo\">IndGroupInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Lean.Name\">Name</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/PreDefinition/Structural/IndGroupInfo.lean#L27-L27","name":"Lean.Elab.Structural.IndGroupInfo.mk","line":27,"kind":"ctor","docLink":"./Lean/Elab/PreDefinition/Structural/IndGroupInfo.html#Lean.Elab.Structural.IndGroupInfo.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/Structural/IndGroupInfo.html#Lean.Elab.Structural.IndGroupInfo.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Structural</span>.<span class=\"name\">IndGroupInfo</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">all</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Lean.Name\">Name</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">numNested</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/PreDefinition/Structural/IndGroupInfo.html#Lean.Elab.Structural.IndGroupInfo\">IndGroupInfo</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/PreDefinition/Structural/IndGroupInfo.lean#L23-L30","name":"Lean.Elab.Structural.IndGroupInfo","line":23,"kind":"structure","docLink":"./Lean/Elab/PreDefinition/Structural/IndGroupInfo.html#Lean.Elab.Structural.IndGroupInfo","doc":"A mutually inductive group, identified by the `all` array of the `InductiveVal` of its\nconstituents.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/Structural/IndGroupInfo.html#Lean.Elab.Structural.IndGroupInfo\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Structural</span>.<span class=\"name\">IndGroupInfo</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"}]}