{"name":"Parser.RegEx.Basic","instances":[{"typeNames":["Parser.RegEx"],"name":"Parser.RegEx.instInhabited","className":"Inhabited"}],"imports":["Init","Parser.Basic"],"declarations":[{"info":{"sourceLink":"https://github.com/fgdorais/lean4-parser/blob/9cfe6f912bbb5ce5ad1e06d1b58a30bddae82e63/Parser/RegEx/Basic.lean#L96-L109","name":"Parser.RegEx.match.loop","line":96,"kind":"opaque","docLink":"./Parser/RegEx/Basic.html#Parser.RegEx.match.loop","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Parser/RegEx/Basic.html#Parser.RegEx.match.loop\"><span class=\"name\">Parser</span>.<span class=\"name\">RegEx</span>.<span class=\"name\">match</span>.<span class=\"name\">loop</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ε </span><span class=\"fn\">σ </span><span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> (max u_1 u_2)}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Parser/Stream.html#Parser.Stream\">Parser.Stream</a> <span class=\"fn\">σ</span> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Parser/Error.html#Parser.Error\">Parser.Error</a> <span class=\"fn\">ε</span> <span class=\"fn\">σ</span> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> (max u_1 u_2) → <a href=\"./foundational_types.html\">Type</a> u_3</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Parser/RegEx/Basic.html#Parser.RegEx\">RegEx</a> <span class=\"fn\">α</span></span> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">Nat</a> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">(<a href=\"./Parser/Stream.html#Parser.Stream.Segment\">Stream.Segment</a> <span class=\"fn\">σ</span>)</span>)</span></span> → <span class=\"fn\"><a href=\"./Parser/Parser.html#ParserT\">ParserT</a> <span class=\"fn\">ε</span> <span class=\"fn\">σ</span> <span class=\"fn\">α</span> <span class=\"fn\">m</span> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">(<a href=\"./Parser/Stream.html#Parser.Stream.Segment\">Stream.Segment</a> <span class=\"fn\">σ</span>)</span>)</span>)</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/fgdorais/lean4-parser/blob/9cfe6f912bbb5ce5ad1e06d1b58a30bddae82e63/Parser/RegEx/Basic.lean#L92-L109","name":"Parser.RegEx.match","line":92,"kind":"def","docLink":"./Parser/RegEx/Basic.html#Parser.RegEx.match","doc":"Parses tokens matching regex `re` returning all the matching group segments, otherwise fails "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Parser/RegEx/Basic.html#Parser.RegEx.match\"><span class=\"name\">Parser</span>.<span class=\"name\">RegEx</span>.<span class=\"name\">match</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ε </span><span class=\"fn\">σ </span><span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> (max u_1 u_2)}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Parser/Stream.html#Parser.Stream\">Parser.Stream</a> <span class=\"fn\">σ</span> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Parser/Error.html#Parser.Error\">Parser.Error</a> <span class=\"fn\">ε</span> <span class=\"fn\">σ</span> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> (max u_1 u_2) → <a href=\"./foundational_types.html\">Type</a> u_3</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">re</span> : <span class=\"fn\"><a href=\"./Parser/RegEx/Basic.html#Parser.RegEx\">RegEx</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Parser/Parser.html#ParserT\">ParserT</a> <span class=\"fn\">ε</span> <span class=\"fn\">σ</span> <span class=\"fn\">α</span> <span class=\"fn\">m</span> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">(<a href=\"./Parser/Stream.html#Parser.Stream.Segment\">Stream.Segment</a> <span class=\"fn\">σ</span>)</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/fgdorais/lean4-parser/blob/9cfe6f912bbb5ce5ad1e06d1b58a30bddae82e63/Parser/RegEx/Basic.lean#L88-L90","name":"Parser.RegEx.count","line":88,"kind":"def","docLink":"./Parser/RegEx/Basic.html#Parser.RegEx.count","doc":"`count re` parses tokens matching regex `re` returning the number of tokens, otherwise fails "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Parser/RegEx/Basic.html#Parser.RegEx.count\"><span class=\"name\">Parser</span>.<span class=\"name\">RegEx</span>.<span class=\"name\">count</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ε </span><span class=\"fn\">σ </span><span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Parser/Stream.html#Parser.Stream\">Parser.Stream</a> <span class=\"fn\">σ</span> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Parser/Error.html#Parser.Error\">Parser.Error</a> <span class=\"fn\">ε</span> <span class=\"fn\">σ</span> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a> u_1</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">re</span> : <span class=\"fn\"><a href=\"./Parser/RegEx/Basic.html#Parser.RegEx\">RegEx</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Parser/Parser.html#ParserT\">ParserT</a> <span class=\"fn\">ε</span> <span class=\"fn\">σ</span> <span class=\"fn\">α</span> <span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/fgdorais/lean4-parser/blob/9cfe6f912bbb5ce5ad1e06d1b58a30bddae82e63/Parser/RegEx/Basic.lean#L84-L86","name":"Parser.RegEx.drop","line":84,"kind":"def","docLink":"./Parser/RegEx/Basic.html#Parser.RegEx.drop","doc":"`drop re` parses tokens matching regex `re`, otherwise fails "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Parser/RegEx/Basic.html#Parser.RegEx.drop\"><span class=\"name\">Parser</span>.<span class=\"name\">RegEx</span>.<span class=\"name\">drop</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ε </span><span class=\"fn\">σ </span><span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Parser/Stream.html#Parser.Stream\">Parser.Stream</a> <span class=\"fn\">σ</span> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Parser/Error.html#Parser.Error\">Parser.Error</a> <span class=\"fn\">ε</span> <span class=\"fn\">σ</span> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a> u_1</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">re</span> : <span class=\"fn\"><a href=\"./Parser/RegEx/Basic.html#Parser.RegEx\">RegEx</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Parser/Parser.html#ParserT\">ParserT</a> <span class=\"fn\">ε</span> <span class=\"fn\">σ</span> <span class=\"fn\">α</span> <span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/fgdorais/lean4-parser/blob/9cfe6f912bbb5ce5ad1e06d1b58a30bddae82e63/Parser/RegEx/Basic.lean#L80-L82","name":"Parser.RegEx.take","line":80,"kind":"def","docLink":"./Parser/RegEx/Basic.html#Parser.RegEx.take","doc":"`take re` parses tokens matching regex `re` returning the list of tokens, otherwise fails "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Parser/RegEx/Basic.html#Parser.RegEx.take\"><span class=\"name\">Parser</span>.<span class=\"name\">RegEx</span>.<span class=\"name\">take</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ε </span><span class=\"fn\">σ </span><span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> (max u_1 u_2)}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Parser/Stream.html#Parser.Stream\">Parser.Stream</a> <span class=\"fn\">σ</span> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Parser/Error.html#Parser.Error\">Parser.Error</a> <span class=\"fn\">ε</span> <span class=\"fn\">σ</span> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> (max u_1 u_2) → <a href=\"./foundational_types.html\">Type</a> u_3</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">re</span> : <span class=\"fn\"><a href=\"./Parser/RegEx/Basic.html#Parser.RegEx\">RegEx</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Parser/Parser.html#ParserT\">ParserT</a> <span class=\"fn\">ε</span> <span class=\"fn\">σ</span> <span class=\"fn\">α</span> <span class=\"fn\">m</span> <span class=\"fn\">(<a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/fgdorais/lean4-parser/blob/9cfe6f912bbb5ce5ad1e06d1b58a30bddae82e63/Parser/RegEx/Basic.lean#L70-L78","name":"Parser.RegEx.foldr","line":70,"kind":"opaque","docLink":"./Parser/RegEx/Basic.html#Parser.RegEx.foldr","doc":"Fold over a regex match from the right "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Parser/RegEx/Basic.html#Parser.RegEx.foldr\"><span class=\"name\">Parser</span>.<span class=\"name\">RegEx</span>.<span class=\"name\">foldr</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ε </span><span class=\"fn\">σ </span><span class=\"fn\">α </span><span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> (max u_1 u_2)}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Parser/Stream.html#Parser.Stream\">Parser.Stream</a> <span class=\"fn\">σ</span> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Parser/Error.html#Parser.Error\">Parser.Error</a> <span class=\"fn\">ε</span> <span class=\"fn\">σ</span> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> (max u_1 u_2) → <a href=\"./foundational_types.html\">Type</a> u_3</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><span class=\"fn\">β</span> → <span class=\"fn\">β</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Parser/RegEx/Basic.html#Parser.RegEx\">RegEx</a> <span class=\"fn\">α</span></span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Parser/Parser.html#ParserT\">ParserT</a> <span class=\"fn\">ε</span> <span class=\"fn\">σ</span> <span class=\"fn\">α</span> <span class=\"fn\">m</span> <span class=\"fn\">β</span></span> → <span class=\"fn\"><a href=\"./Parser/Parser.html#ParserT\">ParserT</a> <span class=\"fn\">ε</span> <span class=\"fn\">σ</span> <span class=\"fn\">α</span> <span class=\"fn\">m</span> <span class=\"fn\">β</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/fgdorais/lean4-parser/blob/9cfe6f912bbb5ce5ad1e06d1b58a30bddae82e63/Parser/RegEx/Basic.lean#L61-L65","name":"Parser.RegEx.repManyN","line":61,"kind":"def","docLink":"./Parser/RegEx/Basic.html#Parser.RegEx.repManyN","doc":"Unbounded repetition, at least `n` times "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Parser/RegEx/Basic.html#Parser.RegEx.repManyN\"><span class=\"name\">Parser</span>.<span class=\"name\">RegEx</span>.<span class=\"name\">repManyN</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <span class=\"fn\"><a href=\"./Parser/RegEx/Basic.html#Parser.RegEx\">RegEx</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Parser/RegEx/Basic.html#Parser.RegEx\">RegEx</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/fgdorais/lean4-parser/blob/9cfe6f912bbb5ce5ad1e06d1b58a30bddae82e63/Parser/RegEx/Basic.lean#L58-L59","name":"Parser.RegEx.repMany1","line":58,"kind":"def","docLink":"./Parser/RegEx/Basic.html#Parser.RegEx.repMany1","doc":"Unbounded repetition, at least once "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Parser/RegEx/Basic.html#Parser.RegEx.repMany1\"><span class=\"name\">Parser</span>.<span class=\"name\">RegEx</span>.<span class=\"name\">repMany1</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <span class=\"fn\"><a href=\"./Parser/RegEx/Basic.html#Parser.RegEx\">RegEx</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Parser/RegEx/Basic.html#Parser.RegEx\">RegEx</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/fgdorais/lean4-parser/blob/9cfe6f912bbb5ce5ad1e06d1b58a30bddae82e63/Parser/RegEx/Basic.lean#L51-L56","name":"Parser.RegEx.rep","line":51,"kind":"def","docLink":"./Parser/RegEx/Basic.html#Parser.RegEx.rep","doc":"Repetition "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Parser/RegEx/Basic.html#Parser.RegEx.rep\"><span class=\"name\">Parser</span>.<span class=\"name\">RegEx</span>.<span class=\"name\">rep</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <span class=\"fn\"><a href=\"./Parser/RegEx/Basic.html#Parser.RegEx\">RegEx</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Parser/RegEx/Basic.html#Parser.RegEx\">RegEx</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/fgdorais/lean4-parser/blob/9cfe6f912bbb5ce5ad1e06d1b58a30bddae82e63/Parser/RegEx/Basic.lean#L48-L49","name":"Parser.RegEx.opt","line":48,"kind":"def","docLink":"./Parser/RegEx/Basic.html#Parser.RegEx.opt","doc":"Optional "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Parser/RegEx/Basic.html#Parser.RegEx.opt\"><span class=\"name\">Parser</span>.<span class=\"name\">RegEx</span>.<span class=\"name\">opt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <span class=\"fn\"><a href=\"./Parser/RegEx/Basic.html#Parser.RegEx\">RegEx</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Parser/RegEx/Basic.html#Parser.RegEx\">RegEx</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/fgdorais/lean4-parser/blob/9cfe6f912bbb5ce5ad1e06d1b58a30bddae82e63/Parser/RegEx/Basic.lean#L45-L46","name":"Parser.RegEx.nil","line":45,"kind":"def","docLink":"./Parser/RegEx/Basic.html#Parser.RegEx.nil","doc":"Nil expression  "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Parser/RegEx/Basic.html#Parser.RegEx.nil\"><span class=\"name\">Parser</span>.<span class=\"name\">RegEx</span>.<span class=\"name\">nil</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Parser/RegEx/Basic.html#Parser.RegEx\">RegEx</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/fgdorais/lean4-parser/blob/9cfe6f912bbb5ce5ad1e06d1b58a30bddae82e63/Parser/RegEx/Basic.lean#L42-L43","name":"Parser.RegEx.any","line":42,"kind":"def","docLink":"./Parser/RegEx/Basic.html#Parser.RegEx.any","doc":"Universal character set "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Parser/RegEx/Basic.html#Parser.RegEx.any\"><span class=\"name\">Parser</span>.<span class=\"name\">RegEx</span>.<span class=\"name\">any</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Parser/RegEx/Basic.html#Parser.RegEx\">RegEx</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/fgdorais/lean4-parser/blob/9cfe6f912bbb5ce5ad1e06d1b58a30bddae82e63/Parser/RegEx/Basic.lean#L40-L40","name":"Parser.RegEx.instInhabited","line":40,"kind":"instance","docLink":"./Parser/RegEx/Basic.html#Parser.RegEx.instInhabited","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Parser/RegEx/Basic.html#Parser.RegEx.instInhabited\"><span class=\"name\">Parser</span>.<span class=\"name\">RegEx</span>.<span class=\"name\">instInhabited</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<a href=\"./Parser/RegEx/Basic.html#Parser.RegEx\">RegEx</a> <span class=\"fn\">α</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/fgdorais/lean4-parser/blob/9cfe6f912bbb5ce5ad1e06d1b58a30bddae82e63/Parser/RegEx/Basic.lean#L37-L38","name":"Parser.RegEx.fail","line":37,"kind":"def","docLink":"./Parser/RegEx/Basic.html#Parser.RegEx.fail","doc":"Empty character set "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Parser/RegEx/Basic.html#Parser.RegEx.fail\"><span class=\"name\">Parser</span>.<span class=\"name\">RegEx</span>.<span class=\"name\">fail</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Parser/RegEx/Basic.html#Parser.RegEx\">RegEx</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/fgdorais/lean4-parser/blob/9cfe6f912bbb5ce5ad1e06d1b58a30bddae82e63/Parser/RegEx/Basic.lean#L28-L35","name":"Parser.RegEx.depth","line":28,"kind":"def","docLink":"./Parser/RegEx/Basic.html#Parser.RegEx.depth","doc":"Grouping depth "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Parser/RegEx/Basic.html#Parser.RegEx.depth\"><span class=\"name\">Parser</span>.<span class=\"name\">RegEx</span>.<span class=\"name\">depth</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Parser/RegEx/Basic.html#Parser.RegEx\">RegEx</a> <span class=\"fn\">α</span></span> → <a href=\"./Init/Prelude.html#Nat\">Nat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/fgdorais/lean4-parser/blob/9cfe6f912bbb5ce5ad1e06d1b58a30bddae82e63/Parser/RegEx/Basic.lean#L23-L24","name":"Parser.RegEx.group","line":23,"kind":"ctor","docLink":"./Parser/RegEx/Basic.html#Parser.RegEx.group","doc":"Grouping "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Parser/RegEx/Basic.html#Parser.RegEx.group\"><span class=\"name\">Parser</span>.<span class=\"name\">RegEx</span>.<span class=\"name\">group</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Parser/RegEx/Basic.html#Parser.RegEx\">RegEx</a> <span class=\"fn\">α</span></span> → <span class=\"fn\"><a href=\"./Parser/RegEx/Basic.html#Parser.RegEx\">RegEx</a> <span class=\"fn\">α</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/fgdorais/lean4-parser/blob/9cfe6f912bbb5ce5ad1e06d1b58a30bddae82e63/Parser/RegEx/Basic.lean#L21-L22","name":"Parser.RegEx.repUpTo","line":21,"kind":"ctor","docLink":"./Parser/RegEx/Basic.html#Parser.RegEx.repUpTo","doc":"Bounded repetition "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Parser/RegEx/Basic.html#Parser.RegEx.repUpTo\"><span class=\"name\">Parser</span>.<span class=\"name\">RegEx</span>.<span class=\"name\">repUpTo</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">Nat</a> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Parser/RegEx/Basic.html#Parser.RegEx\">RegEx</a> <span class=\"fn\">α</span></span> → <span class=\"fn\"><a href=\"./Parser/RegEx/Basic.html#Parser.RegEx\">RegEx</a> <span class=\"fn\">α</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/fgdorais/lean4-parser/blob/9cfe6f912bbb5ce5ad1e06d1b58a30bddae82e63/Parser/RegEx/Basic.lean#L19-L20","name":"Parser.RegEx.repMany","line":19,"kind":"ctor","docLink":"./Parser/RegEx/Basic.html#Parser.RegEx.repMany","doc":"Unbounded repetition "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Parser/RegEx/Basic.html#Parser.RegEx.repMany\"><span class=\"name\">Parser</span>.<span class=\"name\">RegEx</span>.<span class=\"name\">repMany</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Parser/RegEx/Basic.html#Parser.RegEx\">RegEx</a> <span class=\"fn\">α</span></span> → <span class=\"fn\"><a href=\"./Parser/RegEx/Basic.html#Parser.RegEx\">RegEx</a> <span class=\"fn\">α</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/fgdorais/lean4-parser/blob/9cfe6f912bbb5ce5ad1e06d1b58a30bddae82e63/Parser/RegEx/Basic.lean#L17-L18","name":"Parser.RegEx.cat","line":17,"kind":"ctor","docLink":"./Parser/RegEx/Basic.html#Parser.RegEx.cat","doc":"Concatenation "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Parser/RegEx/Basic.html#Parser.RegEx.cat\"><span class=\"name\">Parser</span>.<span class=\"name\">RegEx</span>.<span class=\"name\">cat</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Parser/RegEx/Basic.html#Parser.RegEx\">RegEx</a> <span class=\"fn\">α</span></span> → <span class=\"fn\"><a href=\"./Parser/RegEx/Basic.html#Parser.RegEx\">RegEx</a> <span class=\"fn\">α</span></span> → <span class=\"fn\"><a href=\"./Parser/RegEx/Basic.html#Parser.RegEx\">RegEx</a> <span class=\"fn\">α</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/fgdorais/lean4-parser/blob/9cfe6f912bbb5ce5ad1e06d1b58a30bddae82e63/Parser/RegEx/Basic.lean#L15-L16","name":"Parser.RegEx.alt","line":15,"kind":"ctor","docLink":"./Parser/RegEx/Basic.html#Parser.RegEx.alt","doc":"Alternation "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Parser/RegEx/Basic.html#Parser.RegEx.alt\"><span class=\"name\">Parser</span>.<span class=\"name\">RegEx</span>.<span class=\"name\">alt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Parser/RegEx/Basic.html#Parser.RegEx\">RegEx</a> <span class=\"fn\">α</span></span> → <span class=\"fn\"><a href=\"./Parser/RegEx/Basic.html#Parser.RegEx\">RegEx</a> <span class=\"fn\">α</span></span> → <span class=\"fn\"><a href=\"./Parser/RegEx/Basic.html#Parser.RegEx\">RegEx</a> <span class=\"fn\">α</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/fgdorais/lean4-parser/blob/9cfe6f912bbb5ce5ad1e06d1b58a30bddae82e63/Parser/RegEx/Basic.lean#L13-L14","name":"Parser.RegEx.set","line":13,"kind":"ctor","docLink":"./Parser/RegEx/Basic.html#Parser.RegEx.set","doc":"Character set "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Parser/RegEx/Basic.html#Parser.RegEx.set\"><span class=\"name\">Parser</span>.<span class=\"name\">RegEx</span>.<span class=\"name\">set</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">α</span> → <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span> → <span class=\"fn\"><a href=\"./Parser/RegEx/Basic.html#Parser.RegEx\">RegEx</a> <span class=\"fn\">α</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/fgdorais/lean4-parser/blob/9cfe6f912bbb5ce5ad1e06d1b58a30bddae82e63/Parser/RegEx/Basic.lean#L11-L24","name":"Parser.RegEx","line":11,"kind":"inductive","docLink":"./Parser/RegEx/Basic.html#Parser.RegEx","doc":"Type of regular expressions "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Parser/RegEx/Basic.html#Parser.RegEx\"><span class=\"name\">Parser</span>.<span class=\"name\">RegEx</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> u_1 → <a href=\"./foundational_types.html\">Type</a> u_1</span></div></div>"}]}