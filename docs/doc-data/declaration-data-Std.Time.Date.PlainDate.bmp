{"name":"Std.Time.Date.PlainDate","instances":[{"typeNames":["Std.Time.PlainDate"],"name":"Std.Time.instReprPlainDate","className":"Repr"},{"typeNames":["Eq"],"name":"Std.Time.instDecidableEqPlainDate","className":"Decidable"},{"typeNames":["Std.Time.PlainDate"],"name":"Std.Time.instInhabitedPlainDate","className":"Inhabited"},{"typeNames":["Std.Time.PlainDate"],"name":"Std.Time.instOrdPlainDate","className":"Ord"},{"typeNames":["Std.Time.PlainDate"],"name":"Std.Time.instTransOrdPlainDate","className":"Std.TransCmp"},{"typeNames":["Std.Time.PlainDate"],"name":"Std.Time.instLawfulEqOrdPlainDate","className":"Std.LawfulEqCmp"},{"typeNames":["Std.Time.PlainDate"],"name":"Std.Time.PlainDate.instInhabited","className":"Inhabited"},{"typeNames":["Std.Time.PlainDate","Std.Time.Day.Offset","Std.Time.PlainDate"],"name":"Std.Time.PlainDate.instHAddOffset","className":"HAdd"},{"typeNames":["Std.Time.PlainDate","Std.Time.Day.Offset","Std.Time.PlainDate"],"name":"Std.Time.PlainDate.instHSubOffset","className":"HSub"},{"typeNames":["Std.Time.PlainDate","Std.Time.Week.Offset","Std.Time.PlainDate"],"name":"Std.Time.PlainDate.instHAddOffset_1","className":"HAdd"},{"typeNames":["Std.Time.PlainDate","Std.Time.Week.Offset","Std.Time.PlainDate"],"name":"Std.Time.PlainDate.instHSubOffset_1","className":"HSub"}],"imports":["Std.Time.Internal","Std.Time.Date.Basic","Std.Internal.Rat"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/Date/PlainDate.lean#L364-L365","name":"Std.Time.PlainDate.instHSubOffset_1","line":364,"kind":"instance","docLink":"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.instHSubOffset_1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.instHSubOffset_1\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDate</span>.<span class=\"name\">instHSubOffset_1</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#HSub\">HSub</a> <a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">PlainDate</a> <a href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Offset\">Week.Offset</a> <a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">PlainDate</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/Date/PlainDate.lean#L361-L362","name":"Std.Time.PlainDate.instHAddOffset_1","line":361,"kind":"instance","docLink":"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.instHAddOffset_1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.instHAddOffset_1\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDate</span>.<span class=\"name\">instHAddOffset_1</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#HAdd\">HAdd</a> <a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">PlainDate</a> <a href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Offset\">Week.Offset</a> <a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">PlainDate</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/Date/PlainDate.lean#L358-L359","name":"Std.Time.PlainDate.instHSubOffset","line":358,"kind":"instance","docLink":"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.instHSubOffset","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.instHSubOffset\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDate</span>.<span class=\"name\">instHSubOffset</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#HSub\">HSub</a> <a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">PlainDate</a> <a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset\">Day.Offset</a> <a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">PlainDate</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/Date/PlainDate.lean#L355-L356","name":"Std.Time.PlainDate.instHAddOffset","line":355,"kind":"instance","docLink":"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.instHAddOffset","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.instHAddOffset\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDate</span>.<span class=\"name\">instHAddOffset</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#HAdd\">HAdd</a> <a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">PlainDate</a> <a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset\">Day.Offset</a> <a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">PlainDate</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/Date/PlainDate.lean#L334-L353","name":"Std.Time.PlainDate.weekOfYear","line":334,"kind":"def","docLink":"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.weekOfYear","doc":"Calculates the week of the year starting Monday for a given year.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.weekOfYear\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDate</span>.<span class=\"name\">weekOfYear</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">date</span> : <a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">PlainDate</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Ordinal\">Week.Ordinal</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/Date/PlainDate.lean#L315-L332","name":"Std.Time.PlainDate.withWeekday","line":315,"kind":"def","docLink":"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.withWeekday","doc":"Sets the date to the specified `desiredWeekday`. If the `desiredWeekday` is the same as the current weekday,\nthe original `date` is returned without modification. If the `desiredWeekday` is in the future, the\nfunction adjusts the date forward to the next occurrence of that weekday.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.withWeekday\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDate</span>.<span class=\"name\">withWeekday</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">date</span> : <a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">PlainDate</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">desiredWeekday</span> : <a href=\"./Std/Time/Date/Unit/Weekday.html#Std.Time.Weekday\">Weekday</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">PlainDate</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/Date/PlainDate.lean#L305-L313","name":"Std.Time.PlainDate.alignedWeekOfMonth","line":305,"kind":"def","docLink":"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.alignedWeekOfMonth","doc":"Determines the week of the month for the given `PlainDate`. The week of the month is calculated based\non the day of the month and the weekday. Each week starts on Monday because the entire library is\nbased on the Gregorian Calendar.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.alignedWeekOfMonth\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDate</span>.<span class=\"name\">alignedWeekOfMonth</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">date</span> : <a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">PlainDate</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Ordinal.OfMonth\">Week.Ordinal.OfMonth</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/Date/PlainDate.lean#L297-L303","name":"Std.Time.PlainDate.weekday","line":297,"kind":"def","docLink":"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.weekday","doc":"Calculates the `Weekday` of a given `PlainDate` using Zeller's Congruence for the Gregorian calendar.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.weekday\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDate</span>.<span class=\"name\">weekday</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">date</span> : <a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">PlainDate</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Weekday.html#Std.Time.Weekday\">Weekday</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/Date/PlainDate.lean#L289-L295","name":"Std.Time.PlainDate.withMonthRollOver","line":289,"kind":"def","docLink":"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.withMonthRollOver","doc":"Creates a new `PlainDate` by adjusting the month to the given `month` value.\nThe day is rolled over to the next valid month if necessary.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.withMonthRollOver\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDate</span>.<span class=\"name\">withMonthRollOver</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">dt</span> : <a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">PlainDate</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">month</span> : <a href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Ordinal\">Month.Ordinal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">PlainDate</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/Date/PlainDate.lean#L281-L287","name":"Std.Time.PlainDate.withMonthClip","line":281,"kind":"def","docLink":"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.withMonthClip","doc":"Creates a new `PlainDate` by adjusting the month to the given `month` value.\nThe day remains unchanged, and any invalid days for the new month will be handled according to the `clip` behavior.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.withMonthClip\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDate</span>.<span class=\"name\">withMonthClip</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">dt</span> : <a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">PlainDate</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">month</span> : <a href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Ordinal\">Month.Ordinal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">PlainDate</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/Date/PlainDate.lean#L273-L279","name":"Std.Time.PlainDate.withDaysRollOver","line":273,"kind":"def","docLink":"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.withDaysRollOver","doc":"Creates a new `PlainDate` by adjusting the day of the month to the given `days` value, with any\nout-of-range days rolled over to the next month or year as needed.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.withDaysRollOver\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDate</span>.<span class=\"name\">withDaysRollOver</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">dt</span> : <a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">PlainDate</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">days</span> : <a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal\">Day.Ordinal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">PlainDate</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/Date/PlainDate.lean#L265-L271","name":"Std.Time.PlainDate.withDaysClip","line":265,"kind":"def","docLink":"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.withDaysClip","doc":"Creates a new `PlainDate` by adjusting the day of the month to the given `days` value, with any\nout-of-range days clipped to the nearest valid date.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.withDaysClip\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDate</span>.<span class=\"name\">withDaysClip</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">dt</span> : <a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">PlainDate</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">days</span> : <a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal\">Day.Ordinal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">PlainDate</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/Date/PlainDate.lean#L258-L263","name":"Std.Time.PlainDate.subYearsClip","line":258,"kind":"def","docLink":"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.subYearsClip","doc":"Subtracts `Year.Offset` from a `PlainDate`, clipping the day to the last valid day of the month.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.subYearsClip\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDate</span>.<span class=\"name\">subYearsClip</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">date</span> : <a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">PlainDate</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">years</span> : <a href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Offset\">Year.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">PlainDate</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/Date/PlainDate.lean#L251-L256","name":"Std.Time.PlainDate.addYearsClip","line":251,"kind":"def","docLink":"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.addYearsClip","doc":"Adds `Year.Offset` to a `PlainDate`, clipping the day to the last valid day of the month.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.addYearsClip\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDate</span>.<span class=\"name\">addYearsClip</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">date</span> : <a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">PlainDate</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">years</span> : <a href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Offset\">Year.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">PlainDate</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/Date/PlainDate.lean#L244-L249","name":"Std.Time.PlainDate.subYearsRollOver","line":244,"kind":"def","docLink":"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.subYearsRollOver","doc":"Subtracts `Year.Offset` from a `PlainDate`, rolling over excess days to the next month.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.subYearsRollOver\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDate</span>.<span class=\"name\">subYearsRollOver</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">date</span> : <a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">PlainDate</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">years</span> : <a href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Offset\">Year.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">PlainDate</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/Date/PlainDate.lean#L237-L242","name":"Std.Time.PlainDate.addYearsRollOver","line":237,"kind":"def","docLink":"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.addYearsRollOver","doc":"Adds `Year.Offset` to a `PlainDate`, rolling over excess days to the next month, or next year.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.addYearsRollOver\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDate</span>.<span class=\"name\">addYearsRollOver</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">date</span> : <a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">PlainDate</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">years</span> : <a href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Offset\">Year.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">PlainDate</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/Date/PlainDate.lean#L230-L235","name":"Std.Time.PlainDate.subMonthsRollOver","line":230,"kind":"def","docLink":"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.subMonthsRollOver","doc":"Subtracts `Month.Offset` from a `PlainDate`, rolling over excess days as needed.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.subMonthsRollOver\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDate</span>.<span class=\"name\">subMonthsRollOver</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">date</span> : <a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">PlainDate</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">months</span> : <a href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Offset\">Month.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">PlainDate</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/Date/PlainDate.lean#L223-L228","name":"Std.Time.PlainDate.addMonthsRollOver","line":223,"kind":"def","docLink":"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.addMonthsRollOver","doc":"Adds a given number of months to a `PlainDate`, rolling over any excess days into the following month.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.addMonthsRollOver\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDate</span>.<span class=\"name\">addMonthsRollOver</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">date</span> : <a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">PlainDate</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">months</span> : <a href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Offset\">Month.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">PlainDate</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/Date/PlainDate.lean#L215-L221","name":"Std.Time.PlainDate.withYearRollOver","line":215,"kind":"def","docLink":"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.withYearRollOver","doc":"Creates a new `PlainDate` by adjusting the year to the given `year` value. The month and day are rolled\nover to the next valid month and day if necessary.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.withYearRollOver\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDate</span>.<span class=\"name\">withYearRollOver</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">dt</span> : <a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">PlainDate</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">year</span> : <a href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Offset\">Year.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">PlainDate</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/Date/PlainDate.lean#L207-L213","name":"Std.Time.PlainDate.withYearClip","line":207,"kind":"def","docLink":"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.withYearClip","doc":"Creates a new `PlainDate` by adjusting the year to the given `year` value. The month and day remain unchanged,\nand any invalid days for the new year will be handled according to the `clip` behavior.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.withYearClip\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDate</span>.<span class=\"name\">withYearClip</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">dt</span> : <a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">PlainDate</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">year</span> : <a href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Offset\">Year.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">PlainDate</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/Date/PlainDate.lean#L201-L205","name":"Std.Time.PlainDate.rollOver","line":201,"kind":"def","docLink":"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.rollOver","doc":"Creates a `PlainDate` by rolling over the extra days to the next month.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.rollOver\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDate</span>.<span class=\"name\">rollOver</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">year</span> : <a href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Offset\">Year.Offset</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">month</span> : <a href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Ordinal\">Month.Ordinal</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">day</span> : <a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal\">Day.Ordinal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">PlainDate</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/Date/PlainDate.lean#L194-L199","name":"Std.Time.PlainDate.subMonthsClip","line":194,"kind":"def","docLink":"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.subMonthsClip","doc":"Subtracts `Month.Offset` from a `PlainDate`, it clips the day to the last valid day of that month.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.subMonthsClip\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDate</span>.<span class=\"name\">subMonthsClip</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">date</span> : <a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">PlainDate</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">months</span> : <a href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Offset\">Month.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">PlainDate</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/Date/PlainDate.lean#L184-L192","name":"Std.Time.PlainDate.addMonthsClip","line":184,"kind":"def","docLink":"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.addMonthsClip","doc":"Adds a given number of months to a `PlainDate`, clipping the day to the last valid day of the month.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.addMonthsClip\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDate</span>.<span class=\"name\">addMonthsClip</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">date</span> : <a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">PlainDate</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">months</span> : <a href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Offset\">Month.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">PlainDate</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/Date/PlainDate.lean#L177-L182","name":"Std.Time.PlainDate.subWeeks","line":177,"kind":"def","docLink":"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.subWeeks","doc":"Subtracts a given number of weeks from a `PlainDate`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.subWeeks\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDate</span>.<span class=\"name\">subWeeks</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">date</span> : <a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">PlainDate</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">weeks</span> : <a href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Offset\">Week.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">PlainDate</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/Date/PlainDate.lean#L168-L175","name":"Std.Time.PlainDate.addWeeks","line":168,"kind":"def","docLink":"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.addWeeks","doc":"Adds a given number of weeks to a `PlainDate`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.addWeeks\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDate</span>.<span class=\"name\">addWeeks</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">date</span> : <a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">PlainDate</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">weeks</span> : <a href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Offset\">Week.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">PlainDate</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/Date/PlainDate.lean#L161-L166","name":"Std.Time.PlainDate.subDays","line":161,"kind":"def","docLink":"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.subDays","doc":"Subtracts a given number of days from a `PlainDate`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.subDays\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDate</span>.<span class=\"name\">subDays</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">date</span> : <a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">PlainDate</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">days</span> : <a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset\">Day.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">PlainDate</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/Date/PlainDate.lean#L153-L159","name":"Std.Time.PlainDate.addDays","line":153,"kind":"def","docLink":"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.addDays","doc":"Adds a given number of days to a `PlainDate`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.addDays\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDate</span>.<span class=\"name\">addDays</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">date</span> : <a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">PlainDate</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">days</span> : <a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset\">Day.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">PlainDate</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/Date/PlainDate.lean#L139-L151","name":"Std.Time.PlainDate.toDaysSinceUNIXEpoch","line":139,"kind":"def","docLink":"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.toDaysSinceUNIXEpoch","doc":"Converts a `PlainDate` to the number of days since the UNIX epoch.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.toDaysSinceUNIXEpoch\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDate</span>.<span class=\"name\">toDaysSinceUNIXEpoch</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">date</span> : <a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">PlainDate</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset\">Day.Offset</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/Date/PlainDate.lean#L132-L137","name":"Std.Time.PlainDate.inLeapYear","line":132,"kind":"def","docLink":"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.inLeapYear","doc":"Checks if the `PlainDate` is in a leap year.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.inLeapYear\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDate</span>.<span class=\"name\">inLeapYear</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">date</span> : <a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">PlainDate</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/Date/PlainDate.lean#L125-L130","name":"Std.Time.PlainDate.era","line":125,"kind":"def","docLink":"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.era","doc":"Determines the era of the given `PlainDate` based on its year.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.era\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDate</span>.<span class=\"name\">era</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">date</span> : <a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">PlainDate</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Era\">Year.Era</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/Date/PlainDate.lean#L119-L123","name":"Std.Time.PlainDate.dayOfYear","line":119,"kind":"def","docLink":"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.dayOfYear","doc":"Transforms a `PlainDate` into a `Day.Ordinal.OfYear`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.dayOfYear\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDate</span>.<span class=\"name\">dayOfYear</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">date</span> : <a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">PlainDate</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal.OfYear\">Day.Ordinal.OfYear</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">date</span>.<a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.year\">year</a></span>.<a href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Offset.isLeap\">isLeap</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/Date/PlainDate.lean#L113-L117","name":"Std.Time.PlainDate.quarter","line":113,"kind":"def","docLink":"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.quarter","doc":"Determines the quarter of the year for the given `PlainDate`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.quarter\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDate</span>.<span class=\"name\">quarter</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">date</span> : <a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">PlainDate</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Time/Internal/Bounded.html#Std.Time.Internal.Bounded.LE\">Internal.Bounded.LE</a> <span class=\"fn\">1</span> <span class=\"fn\">4</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/Date/PlainDate.lean#L107-L111","name":"Std.Time.PlainDate.weekOfMonth","line":107,"kind":"def","docLink":"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.weekOfMonth","doc":"Returns the unaligned week of the month for a `PlainDate` (day divided by 7, plus 1).\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.weekOfMonth\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDate</span>.<span class=\"name\">weekOfMonth</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">date</span> : <a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">PlainDate</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Time/Internal/Bounded.html#Std.Time.Internal.Bounded.LE\">Internal.Bounded.LE</a> <span class=\"fn\">1</span> <span class=\"fn\">5</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/Date/PlainDate.lean#L91-L105","name":"Std.Time.PlainDate.ofDaysSinceUNIXEpoch","line":91,"kind":"def","docLink":"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.ofDaysSinceUNIXEpoch","doc":"Creates a `PlainDate` from the number of days since the UNIX epoch (January 1st, 1970).\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.ofDaysSinceUNIXEpoch\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDate</span>.<span class=\"name\">ofDaysSinceUNIXEpoch</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">day</span> : <a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset\">Day.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">PlainDate</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/Date/PlainDate.lean#L83-L89","name":"Std.Time.PlainDate.ofYearOrdinal","line":83,"kind":"def","docLink":"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.ofYearOrdinal","doc":"Creates a `PlainDate` from a year and a day ordinal within that year.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.ofYearOrdinal\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDate</span>.<span class=\"name\">ofYearOrdinal</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">year</span> : <a href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Offset\">Year.Offset</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ordinal</span> : <span class=\"fn\"><a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal.OfYear\">Day.Ordinal.OfYear</a> <span class=\"fn\"><span class=\"fn\">year</span>.<a href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Offset.isLeap\">isLeap</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">PlainDate</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/Date/PlainDate.lean#L74-L81","name":"Std.Time.PlainDate.ofYearMonthDay?","line":74,"kind":"def","docLink":"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.ofYearMonthDay?","doc":"Creates a new `PlainDate` from year, month, and day components.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.ofYearMonthDay?\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDate</span>.<span class=\"name\">ofYearMonthDay?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">year</span> : <a href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Offset\">Year.Offset</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">month</span> : <a href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Ordinal\">Month.Ordinal</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">day</span> : <a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal\">Day.Ordinal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">PlainDate</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/Date/PlainDate.lean#L71-L72","name":"Std.Time.PlainDate.instInhabited","line":71,"kind":"instance","docLink":"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.instInhabited","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.instInhabited\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDate</span>.<span class=\"name\">instInhabited</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">PlainDate</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/Date/PlainDate.lean#L62-L69","name":"Std.Time.PlainDate.ofYearMonthDayClip","line":62,"kind":"def","docLink":"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.ofYearMonthDayClip","doc":"Creates a `PlainDate` by clipping the day to ensure validity. This function forces the date to be\nvalid by adjusting the day to fit within the valid range to fit the given month and year.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.ofYearMonthDayClip\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDate</span>.<span class=\"name\">ofYearMonthDayClip</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">year</span> : <a href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Offset\">Year.Offset</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">month</span> : <a href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Ordinal\">Month.Ordinal</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">day</span> : <a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal\">Day.Ordinal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">PlainDate</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/Date/PlainDate.lean#L52-L58","name":"Std.Time.instLawfulEqOrdPlainDate","line":52,"kind":"instance","docLink":"./Std/Time/Date/PlainDate.html#Std.Time.instLawfulEqOrdPlainDate","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/PlainDate.html#Std.Time.instLawfulEqOrdPlainDate\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">instLawfulEqOrdPlainDate</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Classes/Ord.html#Std.LawfulEqOrd\">LawfulEqOrd</a> <a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">PlainDate</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/Date/PlainDate.lean#L50-L50","name":"Std.Time.instTransOrdPlainDate","line":50,"kind":"instance","docLink":"./Std/Time/Date/PlainDate.html#Std.Time.instTransOrdPlainDate","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/PlainDate.html#Std.Time.instTransOrdPlainDate\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">instTransOrdPlainDate</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Classes/Ord.html#Std.TransOrd\">TransOrd</a> <a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">PlainDate</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/Date/PlainDate.lean#L46-L48","name":"Std.Time.PlainDate.compare_def","line":46,"kind":"theorem","docLink":"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.compare_def","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.compare_def\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDate</span>.<span class=\"name\">compare_def</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Ord.html#Ord.compare\">compare</a> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Init/Data/Ord.html#compareLex\">compareLex</a> <span class=\"fn\">(<a href=\"./Init/Data/Ord.html#compareOn\">compareOn</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">PlainDate</a>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.year\">year</a></span></span>)</span>\n    <span class=\"fn\">(<a href=\"./Init/Data/Ord.html#compareLex\">compareLex</a> <span class=\"fn\">(<a href=\"./Init/Data/Ord.html#compareOn\">compareOn</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">PlainDate</a>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.month\">month</a></span></span>)</span> <span class=\"fn\">(<a href=\"./Init/Data/Ord.html#compareOn\">compareOn</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">PlainDate</a>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.day\">day</a></span></span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/Date/PlainDate.lean#L43-L44","name":"Std.Time.instOrdPlainDate","line":43,"kind":"instance","docLink":"./Std/Time/Date/PlainDate.html#Std.Time.instOrdPlainDate","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/PlainDate.html#Std.Time.instOrdPlainDate\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">instOrdPlainDate</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Ord.html#Ord\">Ord</a> <a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">PlainDate</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/Date/PlainDate.lean#L40-L41","name":"Std.Time.instInhabitedPlainDate","line":40,"kind":"instance","docLink":"./Std/Time/Date/PlainDate.html#Std.Time.instInhabitedPlainDate","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/PlainDate.html#Std.Time.instInhabitedPlainDate\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">instInhabitedPlainDate</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">PlainDate</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/Date/PlainDate.lean#L38-L38","name":"Std.Time.instDecidableEqPlainDate","line":38,"kind":"instance","docLink":"./Std/Time/Date/PlainDate.html#Std.Time.instDecidableEqPlainDate","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/PlainDate.html#Std.Time.instDecidableEqPlainDate\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">instDecidableEqPlainDate</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">PlainDate</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/Date/PlainDate.lean#L38-L38","name":"Std.Time.instReprPlainDate","line":38,"kind":"instance","docLink":"./Std/Time/Date/PlainDate.html#Std.Time.instReprPlainDate","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/PlainDate.html#Std.Time.instReprPlainDate\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">instReprPlainDate</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">PlainDate</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/Date/PlainDate.lean#L37-L37","name":"Std.Time.PlainDate.valid","line":37,"kind":"theorem","docLink":"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.valid","doc":"Validates the date by ensuring that the year, month, and day form a correct and valid date. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.valid\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDate</span>.<span class=\"name\">valid</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">PlainDate</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.year\">year</a></span>.<a href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Offset.Valid\">Valid</a></span> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.month\">month</a></span> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.day\">day</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/Date/PlainDate.lean#L34-L34","name":"Std.Time.PlainDate.day","line":34,"kind":"def","docLink":"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.day","doc":"The day component of the date. It is represented as an `Ordinal` type from `Day`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.day\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDate</span>.<span class=\"name\">day</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">PlainDate</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal\">Day.Ordinal</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/Date/PlainDate.lean#L31-L31","name":"Std.Time.PlainDate.month","line":31,"kind":"def","docLink":"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.month","doc":"The month component of the date. It is represented as an `Ordinal` type from `Month`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.month\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDate</span>.<span class=\"name\">month</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">PlainDate</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Ordinal\">Month.Ordinal</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/Date/PlainDate.lean#L28-L28","name":"Std.Time.PlainDate.year","line":28,"kind":"def","docLink":"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.year","doc":"The year component of the date. It is represented as an `Offset` type from `Year`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.year\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDate</span>.<span class=\"name\">year</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">PlainDate</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Offset\">Year.Offset</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/Date/PlainDate.lean#L25-L25","name":"Std.Time.PlainDate.mk","line":25,"kind":"ctor","docLink":"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.mk\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDate</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">year</span> : <a href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Offset\">Year.Offset</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">month</span> : <a href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Ordinal\">Month.Ordinal</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">day</span> : <a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal\">Day.Ordinal</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">valid</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">year</span>.<a href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Offset.Valid\">Valid</a></span> <span class=\"fn\">month</span> <span class=\"fn\">day</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">PlainDate</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/Date/PlainDate.lean#L24-L24","name":"Std.Time.PlainDate.ext_iff","line":24,"kind":"theorem","docLink":"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.ext_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.ext_iff\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDate</span>.<span class=\"name\">ext_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">PlainDate</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.year\">year</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.year\">year</a></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.month\">month</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.month\">month</a></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.day\">day</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.day\">day</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/Date/PlainDate.lean#L24-L24","name":"Std.Time.PlainDate.ext","line":24,"kind":"theorem","docLink":"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.ext\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDate</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">PlainDate</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">year</span> : <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.year\">year</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.year\">year</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">month</span> : <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.month\">month</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.month\">month</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">day</span> : <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.day\">day</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.day\">day</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Std/Time/Date/PlainDate.lean#L20-L38","name":"Std.Time.PlainDate","line":20,"kind":"structure","docLink":"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate","doc":"`PlainDate` represents a date in the Year-Month-Day (YMD) format. It encapsulates the year, month,\nand day components, with validation to ensure the date is valid.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDate</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"}]}