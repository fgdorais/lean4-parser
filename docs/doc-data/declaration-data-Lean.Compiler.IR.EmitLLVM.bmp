{"name":"Lean.Compiler.IR.EmitLLVM","instances":[{"typeNames":["Lean.IR.EmitLLVM.M"],"name":"Lean.IR.EmitLLVM.instInhabitedM","className":"Inhabited"},{"typeNames":["Lean.IR.EmitLLVM.RefcountKind"],"name":"Lean.IR.EmitLLVM.instToStringRefcountKind","className":"ToString"}],"imports":["Lean.Runtime","Lean.Compiler.NameMangling","Lean.Compiler.ExportAttr","Lean.Compiler.InitAttr","Lean.Compiler.IR.CompilerM","Lean.Compiler.IR.EmitUtil","Lean.Compiler.IR.NormIds","Lean.Compiler.IR.SimpCase","Lean.Compiler.IR.Boxing","Lean.Compiler.IR.ResetReuse","Lean.Compiler.IR.LLVMBindings"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/EmitLLVM.lean#L1602-L1643","name":"Lean.IR.emitLLVM","line":1602,"kind":"def","docLink":"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.emitLLVM","doc":"`emitLLVM` is the entrypoint for the lean shell to code generate LLVM.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.emitLLVM\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">emitLLVM</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">env</span> : <a href=\"./Lean/Environment.html#Lean.Environment\">Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">modName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">filepath</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/EmitLLVM.lean#L1597-L1599","name":"Lean.IR.getModuleFunctions.go","line":1597,"kind":"opaque","docLink":"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.getModuleFunctions.go","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.getModuleFunctions.go\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">getModuleFunctions</span>.<span class=\"name\">go</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">llvmctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">LLVM.Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">v</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">LLVM.Value</a> <span class=\"fn\">llvmctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">acc</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">LLVM.Value</a> <span class=\"fn\">llvmctx</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">LLVM.Value</a> <span class=\"fn\">llvmctx</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/EmitLLVM.lean#L1595-L1600","name":"Lean.IR.getModuleFunctions","line":1595,"kind":"def","docLink":"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.getModuleFunctions","doc":"Get the names of all global functions in the module "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.getModuleFunctions\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">getModuleFunctions</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">llvmctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">LLVM.Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">mod</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Module\">LLVM.Module</a> <span class=\"fn\">llvmctx</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">LLVM.Value</a> <span class=\"fn\">llvmctx</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/EmitLLVM.lean#L1590-L1592","name":"Lean.IR.getModuleGlobals.go","line":1590,"kind":"opaque","docLink":"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.getModuleGlobals.go","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.getModuleGlobals.go\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">getModuleGlobals</span>.<span class=\"name\">go</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">llvmctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">LLVM.Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">v</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">LLVM.Value</a> <span class=\"fn\">llvmctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">acc</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">LLVM.Value</a> <span class=\"fn\">llvmctx</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">LLVM.Value</a> <span class=\"fn\">llvmctx</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/EmitLLVM.lean#L1588-L1593","name":"Lean.IR.getModuleGlobals","line":1588,"kind":"def","docLink":"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.getModuleGlobals","doc":"Get the names of all global symbols in the module "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.getModuleGlobals\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">getModuleGlobals</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">llvmctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">LLVM.Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">mod</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Module\">LLVM.Module</a> <span class=\"fn\">llvmctx</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">LLVM.Value</a> <span class=\"fn\">llvmctx</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/EmitLLVM.lean#L1585-L1586","name":"Lean.IR.getLeanHBcPath","line":1585,"kind":"def","docLink":"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.getLeanHBcPath","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.getLeanHBcPath\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">getLeanHBcPath</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/EmitLLVM.lean#L1577-L1582","name":"Lean.IR.EmitLLVM.main","line":1577,"kind":"def","docLink":"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.main","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.main\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">EmitLLVM</span>.<span class=\"name\">main</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">llvmctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">LLVM.Context</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.M\">M</a> <span class=\"fn\">llvmctx</span> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/EmitLLVM.lean#L1574-L1575","name":"Lean.IR.EmitLLVM.emitMainFnIfNeeded","line":1574,"kind":"def","docLink":"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.emitMainFnIfNeeded","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.emitMainFnIfNeeded\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">EmitLLVM</span>.<span class=\"name\">emitMainFnIfNeeded</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">llvmctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">LLVM.Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">mod</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Module\">LLVM.Module</a> <span class=\"fn\">llvmctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">builder</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Builder\">LLVM.Builder</a> <span class=\"fn\">llvmctx</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.M\">M</a> <span class=\"fn\">llvmctx</span> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/EmitLLVM.lean#L1569-L1572","name":"Lean.IR.EmitLLVM.hasMainFn","line":1569,"kind":"def","docLink":"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.hasMainFn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.hasMainFn\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">EmitLLVM</span>.<span class=\"name\">hasMainFn</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">llvmctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">LLVM.Context</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.M\">M</a> <span class=\"fn\">llvmctx</span> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/EmitLLVM.lean#L1459-L1567","name":"Lean.IR.EmitLLVM.emitMainFn","line":1459,"kind":"def","docLink":"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.emitMainFn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.emitMainFn\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">EmitLLVM</span>.<span class=\"name\">emitMainFn</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">llvmctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">LLVM.Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">mod</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Module\">LLVM.Module</a> <span class=\"fn\">llvmctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">builder</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Builder\">LLVM.Builder</a> <span class=\"fn\">llvmctx</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.M\">M</a> <span class=\"fn\">llvmctx</span> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/EmitLLVM.lean#L1445-L1457","name":"Lean.IR.EmitLLVM.callLeanMainFn","line":1445,"kind":"def","docLink":"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.callLeanMainFn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.callLeanMainFn\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">EmitLLVM</span>.<span class=\"name\">callLeanMainFn</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">llvmctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">LLVM.Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">builder</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Builder\">LLVM.Builder</a> <span class=\"fn\">llvmctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">argv?</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">LLVM.Value</a> <span class=\"fn\">llvmctx</span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">world</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">LLVM.Value</a> <span class=\"fn\">llvmctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">name</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.M\">M</a> <span class=\"fn\">llvmctx</span> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">LLVM.Value</a> <span class=\"fn\">llvmctx</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/EmitLLVM.lean#L1436-L1443","name":"Lean.IR.EmitLLVM.callLeanIOResultShowError","line":1436,"kind":"def","docLink":"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.callLeanIOResultShowError","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.callLeanIOResultShowError\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">EmitLLVM</span>.<span class=\"name\">callLeanIOResultShowError</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">llvmctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">LLVM.Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">builder</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Builder\">LLVM.Builder</a> <span class=\"fn\">llvmctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">v</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">LLVM.Value</a> <span class=\"fn\">llvmctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">name</span> : <a href=\"./Init/Prelude.html#String\">String</a> := <span class=\"fn\">&quot;&quot;</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.M\">M</a> <span class=\"fn\">llvmctx</span> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/EmitLLVM.lean#L1427-L1434","name":"Lean.IR.EmitLLVM.callLeanUnboxUint32","line":1427,"kind":"def","docLink":"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.callLeanUnboxUint32","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.callLeanUnboxUint32\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">EmitLLVM</span>.<span class=\"name\">callLeanUnboxUint32</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">llvmctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">LLVM.Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">builder</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Builder\">LLVM.Builder</a> <span class=\"fn\">llvmctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">v</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">LLVM.Value</a> <span class=\"fn\">llvmctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">name</span> : <a href=\"./Init/Prelude.html#String\">String</a> := <span class=\"fn\">&quot;&quot;</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.M\">M</a> <span class=\"fn\">llvmctx</span> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">LLVM.Value</a> <span class=\"fn\">llvmctx</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/EmitLLVM.lean#L1419-L1425","name":"Lean.IR.EmitLLVM.callLeanFinalizeTaskManager","line":1419,"kind":"def","docLink":"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.callLeanFinalizeTaskManager","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.callLeanFinalizeTaskManager\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">EmitLLVM</span>.<span class=\"name\">callLeanFinalizeTaskManager</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">llvmctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">LLVM.Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">builder</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Builder\">LLVM.Builder</a> <span class=\"fn\">llvmctx</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.M\">M</a> <span class=\"fn\">llvmctx</span> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/EmitLLVM.lean#L1411-L1417","name":"Lean.IR.EmitLLVM.callLeanInitTaskManager","line":1411,"kind":"def","docLink":"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.callLeanInitTaskManager","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.callLeanInitTaskManager\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">EmitLLVM</span>.<span class=\"name\">callLeanInitTaskManager</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">llvmctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">LLVM.Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">builder</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Builder\">LLVM.Builder</a> <span class=\"fn\">llvmctx</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.M\">M</a> <span class=\"fn\">llvmctx</span> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/EmitLLVM.lean#L1402-L1409","name":"Lean.IR.EmitLLVM.callLeanIOResultIsOk","line":1402,"kind":"def","docLink":"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.callLeanIOResultIsOk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.callLeanIOResultIsOk\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">EmitLLVM</span>.<span class=\"name\">callLeanIOResultIsOk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">llvmctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">LLVM.Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">builder</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Builder\">LLVM.Builder</a> <span class=\"fn\">llvmctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">arg</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">LLVM.Value</a> <span class=\"fn\">llvmctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">name</span> : <a href=\"./Init/Prelude.html#String\">String</a> := <span class=\"fn\">&quot;&quot;</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.M\">M</a> <span class=\"fn\">llvmctx</span> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">LLVM.Value</a> <span class=\"fn\">llvmctx</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/EmitLLVM.lean#L1394-L1400","name":"Lean.IR.EmitLLVM.callLeanIOMarkEndInitialization","line":1394,"kind":"def","docLink":"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.callLeanIOMarkEndInitialization","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.callLeanIOMarkEndInitialization\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">EmitLLVM</span>.<span class=\"name\">callLeanIOMarkEndInitialization</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">llvmctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">LLVM.Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">builder</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Builder\">LLVM.Builder</a> <span class=\"fn\">llvmctx</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.M\">M</a> <span class=\"fn\">llvmctx</span> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/EmitLLVM.lean#L1385-L1392","name":"Lean.IR.EmitLLVM.callLeanSetPanicMessages","line":1385,"kind":"def","docLink":"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.callLeanSetPanicMessages","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.callLeanSetPanicMessages\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">EmitLLVM</span>.<span class=\"name\">callLeanSetPanicMessages</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">llvmctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">LLVM.Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">builder</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Builder\">LLVM.Builder</a> <span class=\"fn\">llvmctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">enable?</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">LLVM.Value</a> <span class=\"fn\">llvmctx</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.M\">M</a> <span class=\"fn\">llvmctx</span> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/EmitLLVM.lean#L1377-L1383","name":"Lean.IR.EmitLLVM.callLeanInitializeRuntimeModule","line":1377,"kind":"def","docLink":"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.callLeanInitializeRuntimeModule","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.callLeanInitializeRuntimeModule\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">EmitLLVM</span>.<span class=\"name\">callLeanInitializeRuntimeModule</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">llvmctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">LLVM.Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">builder</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Builder\">LLVM.Builder</a> <span class=\"fn\">llvmctx</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.M\">M</a> <span class=\"fn\">llvmctx</span> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/EmitLLVM.lean#L1369-L1375","name":"Lean.IR.EmitLLVM.callLeanInitialize","line":1369,"kind":"def","docLink":"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.callLeanInitialize","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.callLeanInitialize\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">EmitLLVM</span>.<span class=\"name\">callLeanInitialize</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">llvmctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">LLVM.Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">builder</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Builder\">LLVM.Builder</a> <span class=\"fn\">llvmctx</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.M\">M</a> <span class=\"fn\">llvmctx</span> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/EmitLLVM.lean#L1331-L1367","name":"Lean.IR.EmitLLVM.emitInitFn","line":1331,"kind":"def","docLink":"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.emitInitFn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.emitInitFn\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">EmitLLVM</span>.<span class=\"name\">emitInitFn</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">llvmctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">LLVM.Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">mod</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Module\">LLVM.Module</a> <span class=\"fn\">llvmctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">builder</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Builder\">LLVM.Builder</a> <span class=\"fn\">llvmctx</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.M\">M</a> <span class=\"fn\">llvmctx</span> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/EmitLLVM.lean#L1322-L1329","name":"Lean.IR.EmitLLVM.callModInitFn","line":1322,"kind":"def","docLink":"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.callModInitFn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.callModInitFn\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">EmitLLVM</span>.<span class=\"name\">callModInitFn</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">llvmctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">LLVM.Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">builder</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Builder\">LLVM.Builder</a> <span class=\"fn\">llvmctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">modName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">input </span><span class=\"fn\">world</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">LLVM.Value</a> <span class=\"fn\">llvmctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">retName</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.M\">M</a> <span class=\"fn\">llvmctx</span> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">LLVM.Value</a> <span class=\"fn\">llvmctx</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/EmitLLVM.lean#L1266-L1320","name":"Lean.IR.EmitLLVM.emitDeclInit","line":1266,"kind":"def","docLink":"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.emitDeclInit","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.emitDeclInit\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">EmitLLVM</span>.<span class=\"name\">emitDeclInit</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">llvmctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">LLVM.Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">builder</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Builder\">LLVM.Builder</a> <span class=\"fn\">llvmctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">parentFn</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">LLVM.Value</a> <span class=\"fn\">llvmctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">d</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Decl\">Decl</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.M\">M</a> <span class=\"fn\">llvmctx</span> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/EmitLLVM.lean#L1258-L1264","name":"Lean.IR.EmitLLVM.callPureDeclInitFn","line":1258,"kind":"def","docLink":"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.callPureDeclInitFn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.callPureDeclInitFn\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">EmitLLVM</span>.<span class=\"name\">callPureDeclInitFn</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">llvmctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">LLVM.Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">builder</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Builder\">LLVM.Builder</a> <span class=\"fn\">llvmctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">initFnName</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">retty</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.LLVMType\">LLVM.LLVMType</a> <span class=\"fn\">llvmctx</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.M\">M</a> <span class=\"fn\">llvmctx</span> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">LLVM.Value</a> <span class=\"fn\">llvmctx</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/EmitLLVM.lean#L1249-L1256","name":"Lean.IR.EmitLLVM.callIODeclInitFn","line":1249,"kind":"def","docLink":"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.callIODeclInitFn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.callIODeclInitFn\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">EmitLLVM</span>.<span class=\"name\">callIODeclInitFn</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">llvmctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">LLVM.Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">builder</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Builder\">LLVM.Builder</a> <span class=\"fn\">llvmctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">initFnName</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">world</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">LLVM.Value</a> <span class=\"fn\">llvmctx</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.M\">M</a> <span class=\"fn\">llvmctx</span> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">LLVM.Value</a> <span class=\"fn\">llvmctx</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/EmitLLVM.lean#L1244-L1247","name":"Lean.IR.EmitLLVM.emitFns","line":1244,"kind":"def","docLink":"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.emitFns","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.emitFns\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">EmitLLVM</span>.<span class=\"name\">emitFns</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">llvmctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">LLVM.Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">mod</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Module\">LLVM.Module</a> <span class=\"fn\">llvmctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">builder</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Builder\">LLVM.Builder</a> <span class=\"fn\">llvmctx</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.M\">M</a> <span class=\"fn\">llvmctx</span> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/EmitLLVM.lean#L1236-L1242","name":"Lean.IR.EmitLLVM.emitDecl","line":1236,"kind":"def","docLink":"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.emitDecl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.emitDecl\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">EmitLLVM</span>.<span class=\"name\">emitDecl</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">llvmctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">LLVM.Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">mod</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Module\">LLVM.Module</a> <span class=\"fn\">llvmctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">builder</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Builder\">LLVM.Builder</a> <span class=\"fn\">llvmctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">d</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Decl\">Decl</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.M\">M</a> <span class=\"fn\">llvmctx</span> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/EmitLLVM.lean#L1200-L1234","name":"Lean.IR.EmitLLVM.emitDeclAux","line":1200,"kind":"def","docLink":"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.emitDeclAux","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.emitDeclAux\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">EmitLLVM</span>.<span class=\"name\">emitDeclAux</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">llvmctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">LLVM.Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">mod</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Module\">LLVM.Module</a> <span class=\"fn\">llvmctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">builder</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Builder\">LLVM.Builder</a> <span class=\"fn\">llvmctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">d</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Decl\">Decl</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.M\">M</a> <span class=\"fn\">llvmctx</span> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/EmitLLVM.lean#L1175-L1198","name":"Lean.IR.EmitLLVM.emitFnArgs","line":1175,"kind":"def","docLink":"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.emitFnArgs","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.emitFnArgs\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">EmitLLVM</span>.<span class=\"name\">emitFnArgs</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">llvmctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">LLVM.Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">builder</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Builder\">LLVM.Builder</a> <span class=\"fn\">llvmctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">needsPackedArgs?</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">llvmfn</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">LLVM.Value</a> <span class=\"fn\">llvmctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">params</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Param\">Param</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.M\">M</a> <span class=\"fn\">llvmctx</span> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/EmitLLVM.lean#L1169-L1171","name":"Lean.IR.EmitLLVM.emitFnBody","line":1169,"kind":"opaque","docLink":"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.emitFnBody","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.emitFnBody\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">EmitLLVM</span>.<span class=\"name\">emitFnBody</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">llvmctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">LLVM.Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">builder</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Builder\">LLVM.Builder</a> <span class=\"fn\">llvmctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.FnBody\">FnBody</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.M\">M</a> <span class=\"fn\">llvmctx</span> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/EmitLLVM.lean#L1136-L1167","name":"Lean.IR.EmitLLVM.emitBlock","line":1136,"kind":"opaque","docLink":"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.emitBlock","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.emitBlock\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">EmitLLVM</span>.<span class=\"name\">emitBlock</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">llvmctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">LLVM.Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">builder</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Builder\">LLVM.Builder</a> <span class=\"fn\">llvmctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.FnBody\">FnBody</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.M\">M</a> <span class=\"fn\">llvmctx</span> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/EmitLLVM.lean#L1128-L1134","name":"Lean.IR.EmitLLVM.emitUnreachable","line":1128,"kind":"def","docLink":"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.emitUnreachable","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.emitUnreachable\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">EmitLLVM</span>.<span class=\"name\">emitUnreachable</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">llvmctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">LLVM.Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">builder</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Builder\">LLVM.Builder</a> <span class=\"fn\">llvmctx</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.M\">M</a> <span class=\"fn\">llvmctx</span> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/EmitLLVM.lean#L1113-L1126","name":"Lean.IR.EmitLLVM.emitJDecl","line":1113,"kind":"opaque","docLink":"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.emitJDecl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.emitJDecl\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">EmitLLVM</span>.<span class=\"name\">emitJDecl</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">llvmctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">LLVM.Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">builder</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Builder\">LLVM.Builder</a> <span class=\"fn\">llvmctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">jp</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.JoinPointId\">JoinPointId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">_ps</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Param\">Param</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.FnBody\">FnBody</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.M\">M</a> <span class=\"fn\">llvmctx</span> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/EmitLLVM.lean#L1087-L1110","name":"Lean.IR.EmitLLVM.emitCase","line":1087,"kind":"opaque","docLink":"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.emitCase","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.emitCase\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">EmitLLVM</span>.<span class=\"name\">emitCase</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">llvmctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">LLVM.Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">builder</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Builder\">LLVM.Builder</a> <span class=\"fn\">llvmctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.VarId\">VarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">xType</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.IRType\">IRType</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">alts</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Alt\">Alt</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.M\">M</a> <span class=\"fn\">llvmctx</span> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/EmitLLVM.lean#L1079-L1084","name":"Lean.IR.EmitLLVM.ensureHasDefault'","line":1079,"kind":"def","docLink":"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.ensureHasDefault'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.ensureHasDefault'\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">EmitLLVM</span>.<span class=\"name\">ensureHasDefault'</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">alts</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Alt\">Alt</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Alt\">Alt</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/EmitLLVM.lean#L1071-L1077","name":"Lean.IR.EmitLLVM.emitSetTag","line":1071,"kind":"def","docLink":"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.emitSetTag","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.emitSetTag\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">EmitLLVM</span>.<span class=\"name\">emitSetTag</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">llvmctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">LLVM.Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">builder</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Builder\">LLVM.Builder</a> <span class=\"fn\">llvmctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.VarId\">VarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.M\">M</a> <span class=\"fn\">llvmctx</span> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/EmitLLVM.lean#L1063-L1069","name":"Lean.IR.EmitLLVM.emitDel","line":1063,"kind":"def","docLink":"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.emitDel","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.emitDel\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">EmitLLVM</span>.<span class=\"name\">emitDel</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">llvmctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">LLVM.Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">builder</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Builder\">LLVM.Builder</a> <span class=\"fn\">llvmctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.VarId\">VarId</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.M\">M</a> <span class=\"fn\">llvmctx</span> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/EmitLLVM.lean#L1044-L1061","name":"Lean.IR.EmitLLVM.emitSSet","line":1044,"kind":"def","docLink":"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.emitSSet","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.emitSSet\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">EmitLLVM</span>.<span class=\"name\">emitSSet</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">llvmctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">LLVM.Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">builder</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Builder\">LLVM.Builder</a> <span class=\"fn\">llvmctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.VarId\">VarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n </span><span class=\"fn\">offset</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">y</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.VarId\">VarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">t</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.IRType\">IRType</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.M\">M</a> <span class=\"fn\">llvmctx</span> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/EmitLLVM.lean#L1033-L1042","name":"Lean.IR.EmitLLVM.emitJmp","line":1033,"kind":"def","docLink":"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.emitJmp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.emitJmp\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">EmitLLVM</span>.<span class=\"name\">emitJmp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">llvmctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">LLVM.Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">builder</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Builder\">LLVM.Builder</a> <span class=\"fn\">llvmctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">jp</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.JoinPointId\">JoinPointId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">xs</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Arg\">Arg</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.M\">M</a> <span class=\"fn\">llvmctx</span> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/EmitLLVM.lean#L1019-L1031","name":"Lean.IR.EmitLLVM.emitTailCall","line":1019,"kind":"def","docLink":"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.emitTailCall","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.emitTailCall\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">EmitLLVM</span>.<span class=\"name\">emitTailCall</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">llvmctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">LLVM.Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">builder</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Builder\">LLVM.Builder</a> <span class=\"fn\">llvmctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.FunId\">FunId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">v</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.M\">M</a> <span class=\"fn\">llvmctx</span> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/EmitLLVM.lean#L1011-L1017","name":"Lean.IR.EmitLLVM.emitUSet","line":1011,"kind":"def","docLink":"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.emitUSet","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.emitUSet\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">EmitLLVM</span>.<span class=\"name\">emitUSet</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">llvmctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">LLVM.Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">builder</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Builder\">LLVM.Builder</a> <span class=\"fn\">llvmctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.VarId\">VarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">y</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.VarId\">VarId</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.M\">M</a> <span class=\"fn\">llvmctx</span> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/EmitLLVM.lean#L1003-L1009","name":"Lean.IR.EmitLLVM.emitSet","line":1003,"kind":"def","docLink":"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.emitSet","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.emitSet\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">EmitLLVM</span>.<span class=\"name\">emitSet</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">llvmctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">LLVM.Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">builder</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Builder\">LLVM.Builder</a> <span class=\"fn\">llvmctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.VarId\">VarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">y</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Arg\">Arg</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.M\">M</a> <span class=\"fn\">llvmctx</span> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/EmitLLVM.lean#L994-L1001","name":"Lean.IR.EmitLLVM.emitTag","line":994,"kind":"def","docLink":"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.emitTag","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.emitTag\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">EmitLLVM</span>.<span class=\"name\">emitTag</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">llvmctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">LLVM.Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">builder</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Builder\">LLVM.Builder</a> <span class=\"fn\">llvmctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.VarId\">VarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">xType</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.IRType\">IRType</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.M\">M</a> <span class=\"fn\">llvmctx</span> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">LLVM.Value</a> <span class=\"fn\">llvmctx</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/EmitLLVM.lean#L983-L992","name":"Lean.IR.EmitLLVM.declareVars","line":983,"kind":"opaque","docLink":"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.declareVars","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.declareVars\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">EmitLLVM</span>.<span class=\"name\">declareVars</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">llvmctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">LLVM.Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">builder</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Builder\">LLVM.Builder</a> <span class=\"fn\">llvmctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.FnBody\">FnBody</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.M\">M</a> <span class=\"fn\">llvmctx</span> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/EmitLLVM.lean#L978-L981","name":"Lean.IR.EmitLLVM.declareVar","line":978,"kind":"def","docLink":"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.declareVar","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.declareVar\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">EmitLLVM</span>.<span class=\"name\">declareVar</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">llvmctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">LLVM.Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">builder</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Builder\">LLVM.Builder</a> <span class=\"fn\">llvmctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.VarId\">VarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">t</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.IRType\">IRType</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.M\">M</a> <span class=\"fn\">llvmctx</span> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/EmitLLVM.lean#L962-L976","name":"Lean.IR.EmitLLVM.emitVDecl","line":962,"kind":"def","docLink":"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.emitVDecl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.emitVDecl\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">EmitLLVM</span>.<span class=\"name\">emitVDecl</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">llvmctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">LLVM.Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">builder</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Builder\">LLVM.Builder</a> <span class=\"fn\">llvmctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">z</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.VarId\">VarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">t</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.IRType\">IRType</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">v</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.M\">M</a> <span class=\"fn\">llvmctx</span> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/EmitLLVM.lean#L941-L960","name":"Lean.IR.EmitLLVM.emitReuse","line":941,"kind":"def","docLink":"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.emitReuse","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.emitReuse\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">EmitLLVM</span>.<span class=\"name\">emitReuse</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">llvmctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">LLVM.Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">builder</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Builder\">LLVM.Builder</a> <span class=\"fn\">llvmctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">z </span><span class=\"fn\">x</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.VarId\">VarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.CtorInfo\">CtorInfo</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">updtHeader</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ys</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Arg\">Arg</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.M\">M</a> <span class=\"fn\">llvmctx</span> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/EmitLLVM.lean#L921-L939","name":"Lean.IR.EmitLLVM.emitReset","line":921,"kind":"def","docLink":"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.emitReset","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.emitReset\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">EmitLLVM</span>.<span class=\"name\">emitReset</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">llvmctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">LLVM.Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">builder</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Builder\">LLVM.Builder</a> <span class=\"fn\">llvmctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">z</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.VarId\">VarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.VarId\">VarId</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.M\">M</a> <span class=\"fn\">llvmctx</span> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/EmitLLVM.lean#L910-L919","name":"Lean.IR.EmitLLVM.emitUnbox","line":910,"kind":"def","docLink":"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.emitUnbox","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.emitUnbox\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">EmitLLVM</span>.<span class=\"name\">emitUnbox</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">llvmctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">LLVM.Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">builder</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Builder\">LLVM.Builder</a> <span class=\"fn\">llvmctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">z</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.VarId\">VarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">t</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.IRType\">IRType</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.VarId\">VarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">retName</span> : <a href=\"./Init/Prelude.html#String\">String</a> := <span class=\"fn\">&quot;&quot;</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.M\">M</a> <span class=\"fn\">llvmctx</span> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/EmitLLVM.lean#L891-L906","name":"Lean.IR.EmitLLVM.callUnboxForType","line":891,"kind":"def","docLink":"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.callUnboxForType","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.callUnboxForType\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">EmitLLVM</span>.<span class=\"name\">callUnboxForType</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">llvmctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">LLVM.Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">builder</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Builder\">LLVM.Builder</a> <span class=\"fn\">llvmctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">t</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.IRType\">IRType</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">v</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">LLVM.Value</a> <span class=\"fn\">llvmctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">retName</span> : <a href=\"./Init/Prelude.html#String\">String</a> := <span class=\"fn\">&quot;&quot;</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.M\">M</a> <span class=\"fn\">llvmctx</span> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">LLVM.Value</a> <span class=\"fn\">llvmctx</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/EmitLLVM.lean#L882-L889","name":"Lean.IR.EmitLLVM.IRType.isIntegerType","line":882,"kind":"def","docLink":"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.IRType.isIntegerType","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.IRType.isIntegerType\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">EmitLLVM</span>.<span class=\"name\">IRType</span>.<span class=\"name\">isIntegerType</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">t</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.IRType\">IRType</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/EmitLLVM.lean#L862-L880","name":"Lean.IR.EmitLLVM.emitBox","line":862,"kind":"def","docLink":"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.emitBox","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.emitBox\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">EmitLLVM</span>.<span class=\"name\">emitBox</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">llvmctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">LLVM.Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">builder</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Builder\">LLVM.Builder</a> <span class=\"fn\">llvmctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">z </span><span class=\"fn\">x</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.VarId\">VarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">xType</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.IRType\">IRType</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.M\">M</a> <span class=\"fn\">llvmctx</span> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/EmitLLVM.lean#L854-L860","name":"Lean.IR.EmitLLVM.emitIsShared","line":854,"kind":"def","docLink":"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.emitIsShared","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.emitIsShared\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">EmitLLVM</span>.<span class=\"name\">emitIsShared</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">llvmctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">LLVM.Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">builder</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Builder\">LLVM.Builder</a> <span class=\"fn\">llvmctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">z </span><span class=\"fn\">x</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.VarId\">VarId</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.M\">M</a> <span class=\"fn\">llvmctx</span> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/EmitLLVM.lean#L845-L852","name":"Lean.IR.EmitLLVM.callLeanIsScalar","line":845,"kind":"def","docLink":"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.callLeanIsScalar","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.callLeanIsScalar\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">EmitLLVM</span>.<span class=\"name\">callLeanIsScalar</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">llvmctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">LLVM.Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">builder</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Builder\">LLVM.Builder</a> <span class=\"fn\">llvmctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">closure</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">LLVM.Value</a> <span class=\"fn\">llvmctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">retName</span> : <a href=\"./Init/Prelude.html#String\">String</a> := <span class=\"fn\">&quot;&quot;</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.M\">M</a> <span class=\"fn\">llvmctx</span> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">LLVM.Value</a> <span class=\"fn\">llvmctx</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/EmitLLVM.lean#L835-L843","name":"Lean.IR.EmitLLVM.callLeanIsExclusive","line":835,"kind":"def","docLink":"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.callLeanIsExclusive","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.callLeanIsExclusive\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">EmitLLVM</span>.<span class=\"name\">callLeanIsExclusive</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">llvmctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">LLVM.Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">builder</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Builder\">LLVM.Builder</a> <span class=\"fn\">llvmctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">closure</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">LLVM.Value</a> <span class=\"fn\">llvmctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">retName</span> : <a href=\"./Init/Prelude.html#String\">String</a> := <span class=\"fn\">&quot;&quot;</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.M\">M</a> <span class=\"fn\">llvmctx</span> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">LLVM.Value</a> <span class=\"fn\">llvmctx</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/EmitLLVM.lean#L816-L833","name":"Lean.IR.EmitLLVM.emitSProj","line":816,"kind":"def","docLink":"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.emitSProj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.emitSProj\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">EmitLLVM</span>.<span class=\"name\">emitSProj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">llvmctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">LLVM.Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">builder</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Builder\">LLVM.Builder</a> <span class=\"fn\">llvmctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">z</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.VarId\">VarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">t</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.IRType\">IRType</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n </span><span class=\"fn\">offset</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.VarId\">VarId</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.M\">M</a> <span class=\"fn\">llvmctx</span> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/EmitLLVM.lean#L809-L814","name":"Lean.IR.EmitLLVM.emitOffset","line":809,"kind":"def","docLink":"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.emitOffset","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.emitOffset\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">EmitLLVM</span>.<span class=\"name\">emitOffset</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">llvmctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">LLVM.Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">builder</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Builder\">LLVM.Builder</a> <span class=\"fn\">llvmctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n </span><span class=\"fn\">offset</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.M\">M</a> <span class=\"fn\">llvmctx</span> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">LLVM.Value</a> <span class=\"fn\">llvmctx</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/EmitLLVM.lean#L804-L807","name":"Lean.IR.EmitLLVM.emitUProj","line":804,"kind":"def","docLink":"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.emitUProj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.emitUProj\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">EmitLLVM</span>.<span class=\"name\">emitUProj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">llvmctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">LLVM.Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">builder</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Builder\">LLVM.Builder</a> <span class=\"fn\">llvmctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">z</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.VarId\">VarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.VarId\">VarId</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.M\">M</a> <span class=\"fn\">llvmctx</span> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/EmitLLVM.lean#L795-L802","name":"Lean.IR.EmitLLVM.callLeanCtorGetUsize","line":795,"kind":"def","docLink":"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.callLeanCtorGetUsize","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.callLeanCtorGetUsize\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">EmitLLVM</span>.<span class=\"name\">callLeanCtorGetUsize</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">llvmctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">LLVM.Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">builder</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Builder\">LLVM.Builder</a> <span class=\"fn\">llvmctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">LLVM.Value</a> <span class=\"fn\">llvmctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">retName</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.M\">M</a> <span class=\"fn\">llvmctx</span> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">LLVM.Value</a> <span class=\"fn\">llvmctx</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/EmitLLVM.lean#L790-L793","name":"Lean.IR.EmitLLVM.emitProj","line":790,"kind":"def","docLink":"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.emitProj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.emitProj\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">EmitLLVM</span>.<span class=\"name\">emitProj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">llvmctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">LLVM.Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">builder</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Builder\">LLVM.Builder</a> <span class=\"fn\">llvmctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">z</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.VarId\">VarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.VarId\">VarId</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.M\">M</a> <span class=\"fn\">llvmctx</span> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/EmitLLVM.lean#L780-L788","name":"Lean.IR.EmitLLVM.callLeanCtorGet","line":780,"kind":"def","docLink":"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.callLeanCtorGet","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.callLeanCtorGet\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">EmitLLVM</span>.<span class=\"name\">callLeanCtorGet</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">llvmctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">LLVM.Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">builder</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Builder\">LLVM.Builder</a> <span class=\"fn\">llvmctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">LLVM.Value</a> <span class=\"fn\">llvmctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">retName</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.M\">M</a> <span class=\"fn\">llvmctx</span> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">LLVM.Value</a> <span class=\"fn\">llvmctx</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/EmitLLVM.lean#L760-L778","name":"Lean.IR.EmitLLVM.emitLit","line":760,"kind":"def","docLink":"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.emitLit","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.emitLit\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">EmitLLVM</span>.<span class=\"name\">emitLit</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">llvmctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">LLVM.Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">builder</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Builder\">LLVM.Builder</a> <span class=\"fn\">llvmctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">z</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.VarId\">VarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">t</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.IRType\">IRType</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">v</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.LitVal\">LitVal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.M\">M</a> <span class=\"fn\">llvmctx</span> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">LLVM.Value</a> <span class=\"fn\">llvmctx</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/EmitLLVM.lean#L738-L757","name":"Lean.IR.EmitLLVM.emitFullApp","line":738,"kind":"def","docLink":"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.emitFullApp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.emitFullApp\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">EmitLLVM</span>.<span class=\"name\">emitFullApp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">llvmctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">LLVM.Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">builder</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Builder\">LLVM.Builder</a> <span class=\"fn\">llvmctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">z</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.VarId\">VarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.FunId\">FunId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ys</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Arg\">Arg</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.M\">M</a> <span class=\"fn\">llvmctx</span> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/EmitLLVM.lean#L710-L736","name":"Lean.IR.EmitLLVM.emitApp","line":710,"kind":"def","docLink":"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.emitApp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.emitApp\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">EmitLLVM</span>.<span class=\"name\">emitApp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">llvmctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">LLVM.Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">builder</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Builder\">LLVM.Builder</a> <span class=\"fn\">llvmctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">z </span><span class=\"fn\">f</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.VarId\">VarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ys</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Arg\">Arg</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.M\">M</a> <span class=\"fn\">llvmctx</span> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/EmitLLVM.lean#L696-L708","name":"Lean.IR.EmitLLVM.emitPartialApp","line":696,"kind":"def","docLink":"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.emitPartialApp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.emitPartialApp\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">EmitLLVM</span>.<span class=\"name\">emitPartialApp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">llvmctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">LLVM.Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">builder</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Builder\">LLVM.Builder</a> <span class=\"fn\">llvmctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">z</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.VarId\">VarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.FunId\">FunId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ys</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Arg\">Arg</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.M\">M</a> <span class=\"fn\">llvmctx</span> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/EmitLLVM.lean#L677-L694","name":"Lean.IR.EmitLLVM.getOrAddFunIdValue","line":677,"kind":"def","docLink":"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.getOrAddFunIdValue","doc":"Create a function declaration and return a pointer to the function.\nIf the function actually takes arguments, then we must have a function pointer in scope.\nIf the function takes no arguments, then it is a top-level closed term, and its value will\nbe stored in a global pointer. So, we load from the global pointer. The type of the global is function pointer pointer.\nThis returns a *function pointer.*\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.getOrAddFunIdValue\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">EmitLLVM</span>.<span class=\"name\">getOrAddFunIdValue</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">llvmctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">LLVM.Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">builder</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Builder\">LLVM.Builder</a> <span class=\"fn\">llvmctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.FunId\">FunId</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.M\">M</a> <span class=\"fn\">llvmctx</span> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">LLVM.Value</a> <span class=\"fn\">llvmctx</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/EmitLLVM.lean#L671-L675","name":"Lean.IR.EmitLLVM.getFunIdTy","line":671,"kind":"def","docLink":"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.getFunIdTy","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.getFunIdTy\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">EmitLLVM</span>.<span class=\"name\">getFunIdTy</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">llvmctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">LLVM.Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.FunId\">FunId</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.M\">M</a> <span class=\"fn\">llvmctx</span> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.LLVMType\">LLVM.LLVMType</a> <span class=\"fn\">llvmctx</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/EmitLLVM.lean#L658-L669","name":"Lean.IR.EmitLLVM.emitExternCall","line":658,"kind":"def","docLink":"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.emitExternCall","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.emitExternCall\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">EmitLLVM</span>.<span class=\"name\">emitExternCall</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">llvmctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">LLVM.Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">builder</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Builder\">LLVM.Builder</a> <span class=\"fn\">llvmctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.FunId\">FunId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ps</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Param\">Param</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">extData</span> : <a href=\"./Lean/Compiler/ExternAttr.html#Lean.ExternAttrData\">ExternAttrData</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ys</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Arg\">Arg</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">retty</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.IRType\">IRType</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">name</span> : <a href=\"./Init/Prelude.html#String\">String</a> := <span class=\"fn\">&quot;&quot;</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.M\">M</a> <span class=\"fn\">llvmctx</span> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">LLVM.Value</a> <span class=\"fn\">llvmctx</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/EmitLLVM.lean#L639-L654","name":"Lean.IR.EmitLLVM.emitSimpleExternalCall","line":639,"kind":"def","docLink":"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.emitSimpleExternalCall","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.emitSimpleExternalCall\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">EmitLLVM</span>.<span class=\"name\">emitSimpleExternalCall</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">llvmctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">LLVM.Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">builder</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Builder\">LLVM.Builder</a> <span class=\"fn\">llvmctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ps</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Param\">Param</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ys</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Arg\">Arg</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">retty</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.IRType\">IRType</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">name</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.M\">M</a> <span class=\"fn\">llvmctx</span> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">LLVM.Value</a> <span class=\"fn\">llvmctx</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/EmitLLVM.lean#L623-L637","name":"Lean.IR.EmitLLVM.quoteString","line":623,"kind":"def","docLink":"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.quoteString","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.quoteString\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">EmitLLVM</span>.<span class=\"name\">quoteString</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#String\">String</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/EmitLLVM.lean#L619-L620","name":"Lean.IR.EmitLLVM.toHexDigit","line":619,"kind":"def","docLink":"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.toHexDigit","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.toHexDigit\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">EmitLLVM</span>.<span class=\"name\">toHexDigit</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#String\">String</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/EmitLLVM.lean#L609-L617","name":"Lean.IR.EmitLLVM.emitNumLit","line":609,"kind":"def","docLink":"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.emitNumLit","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.emitNumLit\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">EmitLLVM</span>.<span class=\"name\">emitNumLit</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">llvmctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">LLVM.Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">builder</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Builder\">LLVM.Builder</a> <span class=\"fn\">llvmctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">t</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.IRType\">IRType</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">v</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.M\">M</a> <span class=\"fn\">llvmctx</span> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">LLVM.Value</a> <span class=\"fn\">llvmctx</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/EmitLLVM.lean#L602-L607","name":"Lean.IR.EmitLLVM.emitDec","line":602,"kind":"def","docLink":"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.emitDec","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.emitDec\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">EmitLLVM</span>.<span class=\"name\">emitDec</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">llvmctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">LLVM.Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">builder</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Builder\">LLVM.Builder</a> <span class=\"fn\">llvmctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.VarId\">VarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">checkRef?</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.M\">M</a> <span class=\"fn\">llvmctx</span> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/EmitLLVM.lean#L593-L600","name":"Lean.IR.EmitLLVM.emitInc","line":593,"kind":"def","docLink":"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.emitInc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.emitInc\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">EmitLLVM</span>.<span class=\"name\">emitInc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">llvmctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">LLVM.Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">builder</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Builder\">LLVM.Builder</a> <span class=\"fn\">llvmctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.VarId\">VarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">checkRef?</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.M\">M</a> <span class=\"fn\">llvmctx</span> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/EmitLLVM.lean#L582-L591","name":"Lean.IR.EmitLLVM.emitCtor","line":582,"kind":"def","docLink":"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.emitCtor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.emitCtor\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">EmitLLVM</span>.<span class=\"name\">emitCtor</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">llvmctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">LLVM.Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">builder</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Builder\">LLVM.Builder</a> <span class=\"fn\">llvmctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">z</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.VarId\">VarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.CtorInfo\">CtorInfo</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ys</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Arg\">Arg</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.M\">M</a> <span class=\"fn\">llvmctx</span> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/EmitLLVM.lean#L572-L580","name":"Lean.IR.EmitLLVM.emitCtorSetArgs","line":572,"kind":"def","docLink":"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.emitCtorSetArgs","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.emitCtorSetArgs\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">EmitLLVM</span>.<span class=\"name\">emitCtorSetArgs</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">llvmctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">LLVM.Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">builder</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Builder\">LLVM.Builder</a> <span class=\"fn\">llvmctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">z</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.VarId\">VarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ys</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Arg\">Arg</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.M\">M</a> <span class=\"fn\">llvmctx</span> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/EmitLLVM.lean#L565-L570","name":"Lean.IR.EmitLLVM.emitAllocCtor","line":565,"kind":"def","docLink":"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.emitAllocCtor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.emitAllocCtor\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">EmitLLVM</span>.<span class=\"name\">emitAllocCtor</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">llvmctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">LLVM.Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">builder</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Builder\">LLVM.Builder</a> <span class=\"fn\">llvmctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.CtorInfo\">CtorInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.M\">M</a> <span class=\"fn\">llvmctx</span> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">LLVM.Value</a> <span class=\"fn\">llvmctx</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/EmitLLVM.lean#L559-L563","name":"Lean.IR.EmitLLVM.emitArgVal","line":559,"kind":"def","docLink":"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.emitArgVal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.emitArgVal\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">EmitLLVM</span>.<span class=\"name\">emitArgVal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">llvmctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">LLVM.Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">builder</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Builder\">LLVM.Builder</a> <span class=\"fn\">llvmctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Arg\">Arg</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">name</span> : <a href=\"./Init/Prelude.html#String\">String</a> := <span class=\"fn\">&quot;&quot;</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.M\">M</a> <span class=\"fn\">llvmctx</span> (<span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.LLVMType\">LLVM.LLVMType</a> <span class=\"fn\">llvmctx</span></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">LLVM.Value</a> <span class=\"fn\">llvmctx</span></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/EmitLLVM.lean#L548-L557","name":"Lean.IR.EmitLLVM.emitArgSlot_","line":548,"kind":"def","docLink":"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.emitArgSlot_","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.emitArgSlot_\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">EmitLLVM</span>.<span class=\"name\">emitArgSlot_</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">llvmctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">LLVM.Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">builder</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Builder\">LLVM.Builder</a> <span class=\"fn\">llvmctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Arg\">Arg</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.M\">M</a> <span class=\"fn\">llvmctx</span> (<span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.LLVMType\">LLVM.LLVMType</a> <span class=\"fn\">llvmctx</span></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">LLVM.Value</a> <span class=\"fn\">llvmctx</span></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/EmitLLVM.lean#L543-L546","name":"Lean.IR.EmitLLVM.emitLhsSlotStore","line":543,"kind":"def","docLink":"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.emitLhsSlotStore","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.emitLhsSlotStore\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">EmitLLVM</span>.<span class=\"name\">emitLhsSlotStore</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">llvmctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">LLVM.Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">builder</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Builder\">LLVM.Builder</a> <span class=\"fn\">llvmctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.VarId\">VarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">v</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">LLVM.Value</a> <span class=\"fn\">llvmctx</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.M\">M</a> <span class=\"fn\">llvmctx</span> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/EmitLLVM.lean#L538-L541","name":"Lean.IR.EmitLLVM.emitLhsVal","line":538,"kind":"def","docLink":"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.emitLhsVal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.emitLhsVal\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">EmitLLVM</span>.<span class=\"name\">emitLhsVal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">llvmctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">LLVM.Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">builder</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Builder\">LLVM.Builder</a> <span class=\"fn\">llvmctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.VarId\">VarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">name</span> : <a href=\"./Init/Prelude.html#String\">String</a> := <span class=\"fn\">&quot;&quot;</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.M\">M</a> <span class=\"fn\">llvmctx</span> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">LLVM.Value</a> <span class=\"fn\">llvmctx</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/EmitLLVM.lean#L532-L536","name":"Lean.IR.EmitLLVM.emitLhsSlot_","line":532,"kind":"def","docLink":"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.emitLhsSlot_","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.emitLhsSlot_\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">EmitLLVM</span>.<span class=\"name\">emitLhsSlot_</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">llvmctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">LLVM.Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.VarId\">VarId</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.M\">M</a> <span class=\"fn\">llvmctx</span> (<span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.LLVMType\">LLVM.LLVMType</a> <span class=\"fn\">llvmctx</span></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">LLVM.Value</a> <span class=\"fn\">llvmctx</span></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/EmitLLVM.lean#L519-L530","name":"Lean.IR.EmitLLVM.emitFnDecls","line":519,"kind":"def","docLink":"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.emitFnDecls","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.emitFnDecls\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">EmitLLVM</span>.<span class=\"name\">emitFnDecls</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">llvmctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">LLVM.Context</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.M\">M</a> <span class=\"fn\">llvmctx</span> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/EmitLLVM.lean#L514-L517","name":"Lean.IR.EmitLLVM.emitExternDeclAux","line":514,"kind":"def","docLink":"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.emitExternDeclAux","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.emitExternDeclAux\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">EmitLLVM</span>.<span class=\"name\">emitExternDeclAux</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">llvmctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">LLVM.Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">decl</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Decl\">Decl</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">cNameStr</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.M\">M</a> <span class=\"fn\">llvmctx</span> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/EmitLLVM.lean#L510-L512","name":"Lean.IR.EmitLLVM.emitFnDecl","line":510,"kind":"def","docLink":"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.emitFnDecl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.emitFnDecl\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">EmitLLVM</span>.<span class=\"name\">emitFnDecl</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">llvmctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">LLVM.Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">decl</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Decl\">Decl</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">isExternal</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.M\">M</a> <span class=\"fn\">llvmctx</span> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/EmitLLVM.lean#L471-L507","name":"Lean.IR.EmitLLVM.emitFnDeclAux","line":471,"kind":"def","docLink":"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.emitFnDeclAux","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.emitFnDeclAux\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">EmitLLVM</span>.<span class=\"name\">emitFnDeclAux</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">llvmctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">LLVM.Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">mod</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Module\">LLVM.Module</a> <span class=\"fn\">llvmctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">decl</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Decl\">Decl</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">cppBaseName</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">isExternal</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.M\">M</a> <span class=\"fn\">llvmctx</span> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">LLVM.Value</a> <span class=\"fn\">llvmctx</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/EmitLLVM.lean#L467-L469","name":"Lean.IR.EmitLLVM.buildLeanBoolTrue?","line":467,"kind":"def","docLink":"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.buildLeanBoolTrue?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.buildLeanBoolTrue?\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">EmitLLVM</span>.<span class=\"name\">buildLeanBoolTrue?</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">llvmctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">LLVM.Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">builder</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Builder\">LLVM.Builder</a> <span class=\"fn\">llvmctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">LLVM.Value</a> <span class=\"fn\">llvmctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">name</span> : <a href=\"./Init/Prelude.html#String\">String</a> := <span class=\"fn\">&quot;&quot;</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.M\">M</a> <span class=\"fn\">llvmctx</span> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">LLVM.Value</a> <span class=\"fn\">llvmctx</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/EmitLLVM.lean#L443-L464","name":"Lean.IR.EmitLLVM.buildIfThenElse_","line":443,"kind":"def","docLink":"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.buildIfThenElse_","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.buildIfThenElse_\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">EmitLLVM</span>.<span class=\"name\">buildIfThenElse_</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">llvmctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">LLVM.Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">builder</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Builder\">LLVM.Builder</a> <span class=\"fn\">llvmctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">name</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">brval</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">LLVM.Value</a> <span class=\"fn\">llvmctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">thencodegen </span><span class=\"fn\">elsecodegen</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Builder\">LLVM.Builder</a> <span class=\"fn\">llvmctx</span></span> → <span class=\"fn\"><a href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.M\">M</a> <span class=\"fn\">llvmctx</span> <a href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.ShouldForwardControlFlow\">ShouldForwardControlFlow</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.M\">M</a> <span class=\"fn\">llvmctx</span> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/EmitLLVM.lean#L419-L441","name":"Lean.IR.EmitLLVM.buildIfThen_","line":419,"kind":"def","docLink":"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.buildIfThen_","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.buildIfThen_\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">EmitLLVM</span>.<span class=\"name\">buildIfThen_</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">llvmctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">LLVM.Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">builder</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Builder\">LLVM.Builder</a> <span class=\"fn\">llvmctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">name</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">brval</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">LLVM.Value</a> <span class=\"fn\">llvmctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">thencodegen</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Builder\">LLVM.Builder</a> <span class=\"fn\">llvmctx</span></span> → <span class=\"fn\"><a href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.M\">M</a> <span class=\"fn\">llvmctx</span> <a href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.ShouldForwardControlFlow\">ShouldForwardControlFlow</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.M\">M</a> <span class=\"fn\">llvmctx</span> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/EmitLLVM.lean#L388-L415","name":"Lean.IR.EmitLLVM.buildWhile_","line":388,"kind":"def","docLink":"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.buildWhile_","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.buildWhile_\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">EmitLLVM</span>.<span class=\"name\">buildWhile_</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">llvmctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">LLVM.Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">builder</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Builder\">LLVM.Builder</a> <span class=\"fn\">llvmctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">name</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">condcodegen</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Builder\">LLVM.Builder</a> <span class=\"fn\">llvmctx</span></span> → <span class=\"fn\"><a href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.M\">M</a> <span class=\"fn\">llvmctx</span> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">LLVM.Value</a> <span class=\"fn\">llvmctx</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">bodycodegen</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Builder\">LLVM.Builder</a> <span class=\"fn\">llvmctx</span></span> → <span class=\"fn\"><a href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.M\">M</a> <span class=\"fn\">llvmctx</span> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.M\">M</a> <span class=\"fn\">llvmctx</span> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/EmitLLVM.lean#L363-L385","name":"Lean.IR.EmitLLVM.buildPrologueAlloca","line":363,"kind":"def","docLink":"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.buildPrologueAlloca","doc":"Add an alloca to the first BB of the current function. The builders final position\nwill be the end of the BB that we came from.\n\nIf it is possible to put an alloca in the first BB this approach is to be preferred\nover putting it in other BBs. This is because mem2reg only inspects allocas in the first BB,\nleading to missed optimizations for allocas in other BBs.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.buildPrologueAlloca\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">EmitLLVM</span>.<span class=\"name\">buildPrologueAlloca</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">llvmctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">LLVM.Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">builder</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Builder\">LLVM.Builder</a> <span class=\"fn\">llvmctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ty</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.LLVMType\">LLVM.LLVMType</a> <span class=\"fn\">llvmctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">name</span> : <a href=\"./Init/Prelude.html#String\">String</a> := <span class=\"fn\">&quot;&quot;</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.M\">M</a> <span class=\"fn\">llvmctx</span> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">LLVM.Value</a> <span class=\"fn\">llvmctx</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/EmitLLVM.lean#L359-L361","name":"Lean.IR.EmitLLVM.builderAppendBasicBlock","line":359,"kind":"def","docLink":"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.builderAppendBasicBlock","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.builderAppendBasicBlock\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">EmitLLVM</span>.<span class=\"name\">builderAppendBasicBlock</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">llvmctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">LLVM.Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">builder</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Builder\">LLVM.Builder</a> <span class=\"fn\">llvmctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">name</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.M\">M</a> <span class=\"fn\">llvmctx</span> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.BasicBlock\">LLVM.BasicBlock</a> <span class=\"fn\">llvmctx</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/EmitLLVM.lean#L355-L357","name":"Lean.IR.EmitLLVM.builderGetInsertionFn","line":355,"kind":"def","docLink":"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.builderGetInsertionFn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.builderGetInsertionFn\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">EmitLLVM</span>.<span class=\"name\">builderGetInsertionFn</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">llvmctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">LLVM.Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">builder</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Builder\">LLVM.Builder</a> <span class=\"fn\">llvmctx</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.M\">M</a> <span class=\"fn\">llvmctx</span> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">LLVM.Value</a> <span class=\"fn\">llvmctx</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/EmitLLVM.lean#L352-L352","name":"Lean.IR.EmitLLVM.ShouldForwardControlFlow.no","line":352,"kind":"ctor","docLink":"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.ShouldForwardControlFlow.no","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.ShouldForwardControlFlow.no\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">EmitLLVM</span>.<span class=\"name\">ShouldForwardControlFlow</span>.<span class=\"name\">no</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.ShouldForwardControlFlow\">ShouldForwardControlFlow</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/EmitLLVM.lean#L352-L352","name":"Lean.IR.EmitLLVM.ShouldForwardControlFlow.yes","line":352,"kind":"ctor","docLink":"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.ShouldForwardControlFlow.yes","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.ShouldForwardControlFlow.yes\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">EmitLLVM</span>.<span class=\"name\">ShouldForwardControlFlow</span>.<span class=\"name\">yes</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.ShouldForwardControlFlow\">ShouldForwardControlFlow</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/EmitLLVM.lean#L345-L352","name":"Lean.IR.EmitLLVM.ShouldForwardControlFlow","line":345,"kind":"inductive","docLink":"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.ShouldForwardControlFlow","doc":"## LLVM Control flow Utilities\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.ShouldForwardControlFlow\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">EmitLLVM</span>.<span class=\"name\">ShouldForwardControlFlow</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/EmitLLVM.lean#L339-L343","name":"Lean.IR.EmitLLVM.toCInitName","line":339,"kind":"def","docLink":"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.toCInitName","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.toCInitName\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">EmitLLVM</span>.<span class=\"name\">toCInitName</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">llvmctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">LLVM.Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.M\">M</a> <span class=\"fn\">llvmctx</span> <a href=\"./Init/Prelude.html#String\">String</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/EmitLLVM.lean#L333-L337","name":"Lean.IR.EmitLLVM.toCName","line":333,"kind":"def","docLink":"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.toCName","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.toCName\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">EmitLLVM</span>.<span class=\"name\">toCName</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">llvmctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">LLVM.Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.M\">M</a> <span class=\"fn\">llvmctx</span> <a href=\"./Init/Prelude.html#String\">String</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/EmitLLVM.lean#L330-L331","name":"Lean.IR.EmitLLVM.throwInvalidExportName","line":330,"kind":"def","docLink":"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.throwInvalidExportName","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.throwInvalidExportName\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">EmitLLVM</span>.<span class=\"name\">throwInvalidExportName</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">llvmctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">LLVM.Context</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.M\">M</a> <span class=\"fn\">llvmctx</span> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/EmitLLVM.lean#L314-L328","name":"Lean.IR.EmitLLVM.toLLVMType","line":314,"kind":"def","docLink":"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.toLLVMType","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.toLLVMType\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">EmitLLVM</span>.<span class=\"name\">toLLVMType</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">llvmctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">LLVM.Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">t</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.IRType\">IRType</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.M\">M</a> <span class=\"fn\">llvmctx</span> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.LLVMType\">LLVM.LLVMType</a> <span class=\"fn\">llvmctx</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/EmitLLVM.lean#L305-L312","name":"Lean.IR.EmitLLVM.callLeanCtorSetTag","line":305,"kind":"def","docLink":"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.callLeanCtorSetTag","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.callLeanCtorSetTag\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">EmitLLVM</span>.<span class=\"name\">callLeanCtorSetTag</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">llvmctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">LLVM.Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">builder</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Builder\">LLVM.Builder</a> <span class=\"fn\">llvmctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">closure </span><span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">LLVM.Value</a> <span class=\"fn\">llvmctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">retName</span> : <a href=\"./Init/Prelude.html#String\">String</a> := <span class=\"fn\">&quot;&quot;</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.M\">M</a> <span class=\"fn\">llvmctx</span> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/EmitLLVM.lean#L296-L303","name":"Lean.IR.EmitLLVM.callLeanCtorRelease","line":296,"kind":"def","docLink":"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.callLeanCtorRelease","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.callLeanCtorRelease\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">EmitLLVM</span>.<span class=\"name\">callLeanCtorRelease</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">llvmctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">LLVM.Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">builder</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Builder\">LLVM.Builder</a> <span class=\"fn\">llvmctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">closure </span><span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">LLVM.Value</a> <span class=\"fn\">llvmctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">retName</span> : <a href=\"./Init/Prelude.html#String\">String</a> := <span class=\"fn\">&quot;&quot;</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.M\">M</a> <span class=\"fn\">llvmctx</span> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/EmitLLVM.lean#L287-L294","name":"Lean.IR.EmitLLVM.callLeanIOResultGetValue","line":287,"kind":"def","docLink":"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.callLeanIOResultGetValue","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.callLeanIOResultGetValue\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">EmitLLVM</span>.<span class=\"name\">callLeanIOResultGetValue</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">llvmctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">LLVM.Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">builder</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Builder\">LLVM.Builder</a> <span class=\"fn\">llvmctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">v</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">LLVM.Value</a> <span class=\"fn\">llvmctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">name</span> : <a href=\"./Init/Prelude.html#String\">String</a> := <span class=\"fn\">&quot;&quot;</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.M\">M</a> <span class=\"fn\">llvmctx</span> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">LLVM.Value</a> <span class=\"fn\">llvmctx</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/EmitLLVM.lean#L277-L285","name":"Lean.IR.EmitLLVM.callLeanObjTag","line":277,"kind":"def","docLink":"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.callLeanObjTag","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.callLeanObjTag\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">EmitLLVM</span>.<span class=\"name\">callLeanObjTag</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">llvmctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">LLVM.Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">builder</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Builder\">LLVM.Builder</a> <span class=\"fn\">llvmctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">closure</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">LLVM.Value</a> <span class=\"fn\">llvmctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">retName</span> : <a href=\"./Init/Prelude.html#String\">String</a> := <span class=\"fn\">&quot;&quot;</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.M\">M</a> <span class=\"fn\">llvmctx</span> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">LLVM.Value</a> <span class=\"fn\">llvmctx</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/EmitLLVM.lean#L268-L275","name":"Lean.IR.EmitLLVM.callLeanClosureSetFn","line":268,"kind":"def","docLink":"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.callLeanClosureSetFn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.callLeanClosureSetFn\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">EmitLLVM</span>.<span class=\"name\">callLeanClosureSetFn</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">llvmctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">LLVM.Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">builder</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Builder\">LLVM.Builder</a> <span class=\"fn\">llvmctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">closure </span><span class=\"fn\">ix </span><span class=\"fn\">arg</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">LLVM.Value</a> <span class=\"fn\">llvmctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">retName</span> : <a href=\"./Init/Prelude.html#String\">String</a> := <span class=\"fn\">&quot;&quot;</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.M\">M</a> <span class=\"fn\">llvmctx</span> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/EmitLLVM.lean#L259-L266","name":"Lean.IR.EmitLLVM.callLeanAllocClosureFn","line":259,"kind":"def","docLink":"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.callLeanAllocClosureFn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.callLeanAllocClosureFn\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">EmitLLVM</span>.<span class=\"name\">callLeanAllocClosureFn</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">llvmctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">LLVM.Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">builder</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Builder\">LLVM.Builder</a> <span class=\"fn\">llvmctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f </span><span class=\"fn\">arity </span><span class=\"fn\">nys</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">LLVM.Value</a> <span class=\"fn\">llvmctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">retName</span> : <a href=\"./Init/Prelude.html#String\">String</a> := <span class=\"fn\">&quot;&quot;</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.M\">M</a> <span class=\"fn\">llvmctx</span> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">LLVM.Value</a> <span class=\"fn\">llvmctx</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/EmitLLVM.lean#L249-L257","name":"Lean.IR.EmitLLVM.callLeanIOResultMKOk","line":249,"kind":"def","docLink":"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.callLeanIOResultMKOk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.callLeanIOResultMKOk\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">EmitLLVM</span>.<span class=\"name\">callLeanIOResultMKOk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">llvmctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">LLVM.Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">builder</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Builder\">LLVM.Builder</a> <span class=\"fn\">llvmctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">v</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">LLVM.Value</a> <span class=\"fn\">llvmctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">name</span> : <a href=\"./Init/Prelude.html#String\">String</a> := <span class=\"fn\">&quot;&quot;</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.M\">M</a> <span class=\"fn\">llvmctx</span> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">LLVM.Value</a> <span class=\"fn\">llvmctx</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/EmitLLVM.lean#L238-L247","name":"Lean.IR.EmitLLVM.callLeanCtorSet","line":238,"kind":"def","docLink":"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.callLeanCtorSet","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.callLeanCtorSet\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">EmitLLVM</span>.<span class=\"name\">callLeanCtorSet</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">llvmctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">LLVM.Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">builder</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Builder\">LLVM.Builder</a> <span class=\"fn\">llvmctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">o </span><span class=\"fn\">i </span><span class=\"fn\">v</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">LLVM.Value</a> <span class=\"fn\">llvmctx</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.M\">M</a> <span class=\"fn\">llvmctx</span> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/EmitLLVM.lean#L224-L236","name":"Lean.IR.EmitLLVM.callLeanAllocCtor","line":224,"kind":"def","docLink":"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.callLeanAllocCtor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.callLeanAllocCtor\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">EmitLLVM</span>.<span class=\"name\">callLeanAllocCtor</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">llvmctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">LLVM.Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">builder</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Builder\">LLVM.Builder</a> <span class=\"fn\">llvmctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">tag </span><span class=\"fn\">num_objs </span><span class=\"fn\">scalar_sz</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">name</span> : <a href=\"./Init/Prelude.html#String\">String</a> := <span class=\"fn\">&quot;&quot;</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.M\">M</a> <span class=\"fn\">llvmctx</span> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">LLVM.Value</a> <span class=\"fn\">llvmctx</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/EmitLLVM.lean#L215-L222","name":"Lean.IR.EmitLLVM.callLeanIOResultIsError","line":215,"kind":"def","docLink":"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.callLeanIOResultIsError","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.callLeanIOResultIsError\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">EmitLLVM</span>.<span class=\"name\">callLeanIOResultIsError</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">llvmctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">LLVM.Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">builder</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Builder\">LLVM.Builder</a> <span class=\"fn\">llvmctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">arg</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">LLVM.Value</a> <span class=\"fn\">llvmctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">name</span> : <a href=\"./Init/Prelude.html#String\">String</a> := <span class=\"fn\">&quot;&quot;</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.M\">M</a> <span class=\"fn\">llvmctx</span> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">LLVM.Value</a> <span class=\"fn\">llvmctx</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/EmitLLVM.lean#L207-L213","name":"Lean.IR.EmitLLVM.callLeanIOMkWorld","line":207,"kind":"def","docLink":"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.callLeanIOMkWorld","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.callLeanIOMkWorld\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">EmitLLVM</span>.<span class=\"name\">callLeanIOMkWorld</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">llvmctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">LLVM.Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">builder</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Builder\">LLVM.Builder</a> <span class=\"fn\">llvmctx</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.M\">M</a> <span class=\"fn\">llvmctx</span> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">LLVM.Value</a> <span class=\"fn\">llvmctx</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/EmitLLVM.lean#L197-L205","name":"Lean.IR.EmitLLVM.callLeanCStrToNatFn","line":197,"kind":"def","docLink":"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.callLeanCStrToNatFn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.callLeanCStrToNatFn\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">EmitLLVM</span>.<span class=\"name\">callLeanCStrToNatFn</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">llvmctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">LLVM.Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">builder</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Builder\">LLVM.Builder</a> <span class=\"fn\">llvmctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">name</span> : <a href=\"./Init/Prelude.html#String\">String</a> := <span class=\"fn\">&quot;&quot;</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.M\">M</a> <span class=\"fn\">llvmctx</span> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">LLVM.Value</a> <span class=\"fn\">llvmctx</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/EmitLLVM.lean#L189-L195","name":"Lean.IR.EmitLLVM.callLeanMkString","line":189,"kind":"def","docLink":"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.callLeanMkString","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.callLeanMkString\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">EmitLLVM</span>.<span class=\"name\">callLeanMkString</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">llvmctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">LLVM.Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">builder</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Builder\">LLVM.Builder</a> <span class=\"fn\">llvmctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">strPtr</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">LLVM.Value</a> <span class=\"fn\">llvmctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">name</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.M\">M</a> <span class=\"fn\">llvmctx</span> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">LLVM.Value</a> <span class=\"fn\">llvmctx</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/EmitLLVM.lean#L180-L187","name":"Lean.IR.EmitLLVM.callLeanMkStringUncheckedFn","line":180,"kind":"def","docLink":"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.callLeanMkStringUncheckedFn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.callLeanMkStringUncheckedFn\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">EmitLLVM</span>.<span class=\"name\">callLeanMkStringUncheckedFn</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">llvmctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">LLVM.Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">builder</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Builder\">LLVM.Builder</a> <span class=\"fn\">llvmctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">strPtr </span><span class=\"fn\">nBytes </span><span class=\"fn\">nChars</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">LLVM.Value</a> <span class=\"fn\">llvmctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">name</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.M\">M</a> <span class=\"fn\">llvmctx</span> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">LLVM.Value</a> <span class=\"fn\">llvmctx</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/EmitLLVM.lean#L170-L178","name":"Lean.IR.EmitLLVM.callLeanUnsignedToNatFn","line":170,"kind":"def","docLink":"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.callLeanUnsignedToNatFn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.callLeanUnsignedToNatFn\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">EmitLLVM</span>.<span class=\"name\">callLeanUnsignedToNatFn</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">llvmctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">LLVM.Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">builder</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Builder\">LLVM.Builder</a> <span class=\"fn\">llvmctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">name</span> : <a href=\"./Init/Prelude.html#String\">String</a> := <span class=\"fn\">&quot;&quot;</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.M\">M</a> <span class=\"fn\">llvmctx</span> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">LLVM.Value</a> <span class=\"fn\">llvmctx</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/EmitLLVM.lean#L162-L168","name":"Lean.IR.EmitLLVM.callLeanDecRef","line":162,"kind":"def","docLink":"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.callLeanDecRef","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.callLeanDecRef\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">EmitLLVM</span>.<span class=\"name\">callLeanDecRef</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">llvmctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">LLVM.Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">builder</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Builder\">LLVM.Builder</a> <span class=\"fn\">llvmctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">res</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">LLVM.Value</a> <span class=\"fn\">llvmctx</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.M\">M</a> <span class=\"fn\">llvmctx</span> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/EmitLLVM.lean#L144-L157","name":"Lean.IR.EmitLLVM.callLeanRefcountFn","line":144,"kind":"def","docLink":"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.callLeanRefcountFn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.callLeanRefcountFn\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">EmitLLVM</span>.<span class=\"name\">callLeanRefcountFn</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">llvmctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">LLVM.Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">builder</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Builder\">LLVM.Builder</a> <span class=\"fn\">llvmctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">kind</span> : <a href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.RefcountKind\">RefcountKind</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">checkRef?</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">arg</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">LLVM.Value</a> <span class=\"fn\">llvmctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">delta</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">LLVM.Value</a> <span class=\"fn\">llvmctx</span>)</span></span> := <a href=\"./Init/Prelude.html#Option.none\">none</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.M\">M</a> <span class=\"fn\">llvmctx</span> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/EmitLLVM.lean#L139-L142","name":"Lean.IR.EmitLLVM.instToStringRefcountKind","line":139,"kind":"instance","docLink":"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.instToStringRefcountKind","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.instToStringRefcountKind\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">EmitLLVM</span>.<span class=\"name\">instToStringRefcountKind</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/ToString/Basic.html#ToString\">ToString</a> <a href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.RefcountKind\">RefcountKind</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/EmitLLVM.lean#L137-L137","name":"Lean.IR.EmitLLVM.RefcountKind.dec","line":137,"kind":"ctor","docLink":"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.RefcountKind.dec","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.RefcountKind.dec\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">EmitLLVM</span>.<span class=\"name\">RefcountKind</span>.<span class=\"name\">dec</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.RefcountKind\">RefcountKind</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/EmitLLVM.lean#L137-L137","name":"Lean.IR.EmitLLVM.RefcountKind.inc","line":137,"kind":"ctor","docLink":"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.RefcountKind.inc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.RefcountKind.inc\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">EmitLLVM</span>.<span class=\"name\">RefcountKind</span>.<span class=\"name\">inc</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.RefcountKind\">RefcountKind</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/EmitLLVM.lean#L136-L137","name":"Lean.IR.EmitLLVM.RefcountKind","line":136,"kind":"inductive","docLink":"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.RefcountKind","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.RefcountKind\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">EmitLLVM</span>.<span class=\"name\">RefcountKind</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/EmitLLVM.lean#L127-L133","name":"Lean.IR.EmitLLVM.callLeanMarkPersistentFn","line":127,"kind":"def","docLink":"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.callLeanMarkPersistentFn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.callLeanMarkPersistentFn\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">EmitLLVM</span>.<span class=\"name\">callLeanMarkPersistentFn</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">llvmctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">LLVM.Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">builder</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Builder\">LLVM.Builder</a> <span class=\"fn\">llvmctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">arg</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">LLVM.Value</a> <span class=\"fn\">llvmctx</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.M\">M</a> <span class=\"fn\">llvmctx</span> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/EmitLLVM.lean#L118-L125","name":"Lean.IR.EmitLLVM.callLeanBox","line":118,"kind":"def","docLink":"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.callLeanBox","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.callLeanBox\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">EmitLLVM</span>.<span class=\"name\">callLeanBox</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">llvmctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">LLVM.Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">builder</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Builder\">LLVM.Builder</a> <span class=\"fn\">llvmctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">arg</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">LLVM.Value</a> <span class=\"fn\">llvmctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">name</span> : <a href=\"./Init/Prelude.html#String\">String</a> := <span class=\"fn\">&quot;&quot;</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.M\">M</a> <span class=\"fn\">llvmctx</span> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">LLVM.Value</a> <span class=\"fn\">llvmctx</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/EmitLLVM.lean#L114-L116","name":"Lean.IR.EmitLLVM.getOrCreateFunctionPrototype","line":114,"kind":"def","docLink":"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.getOrCreateFunctionPrototype","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.getOrCreateFunctionPrototype\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">EmitLLVM</span>.<span class=\"name\">getOrCreateFunctionPrototype</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">llvmctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">LLVM.Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">mod</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Module\">LLVM.Module</a> <span class=\"fn\">llvmctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">retty</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.LLVMType\">LLVM.LLVMType</a> <span class=\"fn\">llvmctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">name</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">args</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.LLVMType\">LLVM.LLVMType</a> <span class=\"fn\">llvmctx</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.M\">M</a> <span class=\"fn\">llvmctx</span> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">LLVM.Value</a> <span class=\"fn\">llvmctx</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/EmitLLVM.lean#L111-L112","name":"Lean.IR.EmitLLVM.constIntUnsigned","line":111,"kind":"def","docLink":"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.constIntUnsigned","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.constIntUnsigned\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">EmitLLVM</span>.<span class=\"name\">constIntUnsigned</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">llvmctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">LLVM.Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.M\">M</a> <span class=\"fn\">llvmctx</span> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">LLVM.Value</a> <span class=\"fn\">llvmctx</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/EmitLLVM.lean#L108-L109","name":"Lean.IR.EmitLLVM.constIntSizeT","line":108,"kind":"def","docLink":"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.constIntSizeT","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.constIntSizeT\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">EmitLLVM</span>.<span class=\"name\">constIntSizeT</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">llvmctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">LLVM.Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.M\">M</a> <span class=\"fn\">llvmctx</span> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">LLVM.Value</a> <span class=\"fn\">llvmctx</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/EmitLLVM.lean#L105-L106","name":"Lean.IR.EmitLLVM.constInt64","line":105,"kind":"def","docLink":"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.constInt64","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.constInt64\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">EmitLLVM</span>.<span class=\"name\">constInt64</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">llvmctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">LLVM.Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.M\">M</a> <span class=\"fn\">llvmctx</span> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">LLVM.Value</a> <span class=\"fn\">llvmctx</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/EmitLLVM.lean#L102-L103","name":"Lean.IR.EmitLLVM.constInt8","line":102,"kind":"def","docLink":"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.constInt8","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.constInt8\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">EmitLLVM</span>.<span class=\"name\">constInt8</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">llvmctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">LLVM.Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.M\">M</a> <span class=\"fn\">llvmctx</span> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">LLVM.Value</a> <span class=\"fn\">llvmctx</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/EmitLLVM.lean#L96-L100","name":"Lean.IR.EmitLLVM.getDecl","line":96,"kind":"def","docLink":"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.getDecl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.getDecl\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">EmitLLVM</span>.<span class=\"name\">getDecl</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">llvmctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">LLVM.Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.M\">M</a> <span class=\"fn\">llvmctx</span> <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Decl\">Decl</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/EmitLLVM.lean#L94-L94","name":"Lean.IR.EmitLLVM.getModName","line":94,"kind":"def","docLink":"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.getModName","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.getModName\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">EmitLLVM</span>.<span class=\"name\">getModName</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">llvmctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">LLVM.Context</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.M\">M</a> <span class=\"fn\">llvmctx</span> <a href=\"./Init/Prelude.html#Lean.Name\">Name</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/EmitLLVM.lean#L92-L92","name":"Lean.IR.EmitLLVM.getEnv","line":92,"kind":"def","docLink":"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.getEnv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.getEnv\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">EmitLLVM</span>.<span class=\"name\">getEnv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">llvmctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">LLVM.Context</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.M\">M</a> <span class=\"fn\">llvmctx</span> <a href=\"./Lean/Environment.html#Lean.Environment\">Environment</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/EmitLLVM.lean#L90-L90","name":"Lean.IR.EmitLLVM.getLLVMModule","line":90,"kind":"def","docLink":"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.getLLVMModule","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.getLLVMModule\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">EmitLLVM</span>.<span class=\"name\">getLLVMModule</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">llvmctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">LLVM.Context</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.M\">M</a> <span class=\"fn\">llvmctx</span> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Module\">LLVM.Module</a> <span class=\"fn\">llvmctx</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/EmitLLVM.lean#L84-L88","name":"Lean.IR.EmitLLVM.emitJp","line":84,"kind":"def","docLink":"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.emitJp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.emitJp\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">EmitLLVM</span>.<span class=\"name\">emitJp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">llvmctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">LLVM.Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">jp</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.JoinPointId\">JoinPointId</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.M\">M</a> <span class=\"fn\">llvmctx</span> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.BasicBlock\">LLVM.BasicBlock</a> <span class=\"fn\">llvmctx</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/EmitLLVM.lean#L81-L82","name":"Lean.IR.EmitLLVM.addJpTostate","line":81,"kind":"def","docLink":"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.addJpTostate","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.addJpTostate\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">EmitLLVM</span>.<span class=\"name\">addJpTostate</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">llvmctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">LLVM.Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">jp</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.JoinPointId\">JoinPointId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">bb</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.BasicBlock\">LLVM.BasicBlock</a> <span class=\"fn\">llvmctx</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.M\">M</a> <span class=\"fn\">llvmctx</span> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/EmitLLVM.lean#L78-L79","name":"Lean.IR.EmitLLVM.addVartoState","line":78,"kind":"def","docLink":"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.addVartoState","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.addVartoState\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">EmitLLVM</span>.<span class=\"name\">addVartoState</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">llvmctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">LLVM.Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.VarId\">VarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">v</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">LLVM.Value</a> <span class=\"fn\">llvmctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ty</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.LLVMType\">LLVM.LLVMType</a> <span class=\"fn\">llvmctx</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.M\">M</a> <span class=\"fn\">llvmctx</span> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/EmitLLVM.lean#L75-L76","name":"Lean.IR.EmitLLVM.instInhabitedM","line":75,"kind":"instance","docLink":"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.instInhabitedM","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.instInhabitedM\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">EmitLLVM</span>.<span class=\"name\">instInhabitedM</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">llvmctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">LLVM.Context</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.M\">M</a> <span class=\"fn\">llvmctx</span> <span class=\"fn\">α</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/EmitLLVM.lean#L72-L73","name":"Lean.IR.EmitLLVM.M","line":72,"kind":"def","docLink":"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.M","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.M\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">EmitLLVM</span>.<span class=\"name\">M</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">llvmctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">LLVM.Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/EmitLLVM.lean#L70-L70","name":"Lean.IR.EmitLLVM.Error","line":70,"kind":"def","docLink":"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.Error","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.Error\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">EmitLLVM</span>.<span class=\"name\">Error</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/EmitLLVM.lean#L68-L68","name":"Lean.IR.EmitLLVM.State.jp2bb","line":68,"kind":"def","docLink":"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.State.jp2bb","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.State.jp2bb\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">EmitLLVM</span>.<span class=\"name\">State</span>.<span class=\"name\">jp2bb</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">llvmctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">LLVM.Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.State\">State</a> <span class=\"fn\">llvmctx</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Data/HashMap/Basic.html#Std.HashMap\">Std.HashMap</a> <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.JoinPointId\">JoinPointId</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.BasicBlock\">LLVM.BasicBlock</a> <span class=\"fn\">llvmctx</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/EmitLLVM.lean#L67-L67","name":"Lean.IR.EmitLLVM.State.var2val","line":67,"kind":"def","docLink":"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.State.var2val","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.State.var2val\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">EmitLLVM</span>.<span class=\"name\">State</span>.<span class=\"name\">var2val</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">llvmctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">LLVM.Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.State\">State</a> <span class=\"fn\">llvmctx</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Data/HashMap/Basic.html#Std.HashMap\">Std.HashMap</a> <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.VarId\">VarId</a> (<span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.LLVMType\">LLVM.LLVMType</a> <span class=\"fn\">llvmctx</span></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">LLVM.Value</a> <span class=\"fn\">llvmctx</span></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/EmitLLVM.lean#L66-L66","name":"Lean.IR.EmitLLVM.State.mk","line":66,"kind":"ctor","docLink":"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.State.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.State.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">EmitLLVM</span>.<span class=\"name\">State</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">llvmctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">LLVM.Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">var2val</span> : <span class=\"fn\"><a href=\"./Std/Data/HashMap/Basic.html#Std.HashMap\">Std.HashMap</a> <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.VarId\">VarId</a> (<span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.LLVMType\">LLVM.LLVMType</a> <span class=\"fn\">llvmctx</span></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">LLVM.Value</a> <span class=\"fn\">llvmctx</span></span>)</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">jp2bb</span> : <span class=\"fn\"><a href=\"./Std/Data/HashMap/Basic.html#Std.HashMap\">Std.HashMap</a> <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.JoinPointId\">JoinPointId</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.BasicBlock\">LLVM.BasicBlock</a> <span class=\"fn\">llvmctx</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.State\">State</a> <span class=\"fn\">llvmctx</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/EmitLLVM.lean#L66-L68","name":"Lean.IR.EmitLLVM.State","line":66,"kind":"structure","docLink":"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.State","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.State\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">EmitLLVM</span>.<span class=\"name\">State</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">llvmctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">LLVM.Context</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/EmitLLVM.lean#L64-L64","name":"Lean.IR.EmitLLVM.Context.llvmmodule","line":64,"kind":"def","docLink":"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.Context.llvmmodule","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.Context.llvmmodule\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">EmitLLVM</span>.<span class=\"name\">Context</span>.<span class=\"name\">llvmmodule</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">llvmctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">LLVM.Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.Context\">Context</a> <span class=\"fn\">llvmctx</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Module\">LLVM.Module</a> <span class=\"fn\">llvmctx</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/EmitLLVM.lean#L63-L63","name":"Lean.IR.EmitLLVM.Context.mainParams","line":63,"kind":"def","docLink":"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.Context.mainParams","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.Context.mainParams\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">EmitLLVM</span>.<span class=\"name\">Context</span>.<span class=\"name\">mainParams</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">llvmctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">LLVM.Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.Context\">Context</a> <span class=\"fn\">llvmctx</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Param\">Param</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/EmitLLVM.lean#L62-L62","name":"Lean.IR.EmitLLVM.Context.mainFn","line":62,"kind":"def","docLink":"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.Context.mainFn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.Context.mainFn\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">EmitLLVM</span>.<span class=\"name\">Context</span>.<span class=\"name\">mainFn</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">llvmctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">LLVM.Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.Context\">Context</a> <span class=\"fn\">llvmctx</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.FunId\">FunId</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/EmitLLVM.lean#L61-L61","name":"Lean.IR.EmitLLVM.Context.jpMap","line":61,"kind":"def","docLink":"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.Context.jpMap","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.Context.jpMap\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">EmitLLVM</span>.<span class=\"name\">Context</span>.<span class=\"name\">jpMap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">llvmctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">LLVM.Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.Context\">Context</a> <span class=\"fn\">llvmctx</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/IR/EmitUtil.html#Lean.IR.JPParamsMap\">JPParamsMap</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/EmitLLVM.lean#L60-L60","name":"Lean.IR.EmitLLVM.Context.modName","line":60,"kind":"def","docLink":"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.Context.modName","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.Context.modName\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">EmitLLVM</span>.<span class=\"name\">Context</span>.<span class=\"name\">modName</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">llvmctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">LLVM.Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.Context\">Context</a> <span class=\"fn\">llvmctx</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Name\">Name</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/EmitLLVM.lean#L59-L59","name":"Lean.IR.EmitLLVM.Context.env","line":59,"kind":"def","docLink":"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.Context.env","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.Context.env\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">EmitLLVM</span>.<span class=\"name\">Context</span>.<span class=\"name\">env</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">llvmctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">LLVM.Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.Context\">Context</a> <span class=\"fn\">llvmctx</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Environment.html#Lean.Environment\">Environment</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/EmitLLVM.lean#L58-L58","name":"Lean.IR.EmitLLVM.Context.mk","line":58,"kind":"ctor","docLink":"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.Context.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.Context.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">EmitLLVM</span>.<span class=\"name\">Context</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">llvmctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">LLVM.Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">env</span> : <a href=\"./Lean/Environment.html#Lean.Environment\">Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">modName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">jpMap</span> : <a href=\"./Lean/Compiler/IR/EmitUtil.html#Lean.IR.JPParamsMap\">JPParamsMap</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">mainFn</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.FunId\">FunId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">mainParams</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Param\">Param</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">llvmmodule</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Module\">LLVM.Module</a> <span class=\"fn\">llvmctx</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.Context\">Context</a> <span class=\"fn\">llvmctx</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/EmitLLVM.lean#L58-L64","name":"Lean.IR.EmitLLVM.Context","line":58,"kind":"structure","docLink":"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.Context","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.EmitLLVM.Context\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">EmitLLVM</span>.<span class=\"name\">Context</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">llvmctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">LLVM.Context</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/EmitLLVM.lean#L49-L52","name":"Lean.IR.LLVM.getOrAddGlobal","line":49,"kind":"def","docLink":"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.LLVM.getOrAddGlobal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.LLVM.getOrAddGlobal\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">LLVM</span>.<span class=\"name\">getOrAddGlobal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">LLVM.Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Module\">LLVM.Module</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">name</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">type</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.LLVMType\">LLVM.LLVMType</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">LLVM.Value</a> <span class=\"fn\">ctx</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/EmitLLVM.lean#L35-L47","name":"Lean.IR.LLVM.getOrAddFunction","line":35,"kind":"def","docLink":"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.LLVM.getOrAddFunction","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.LLVM.getOrAddFunction\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">LLVM</span>.<span class=\"name\">getOrAddFunction</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">LLVM.Context</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Module\">LLVM.Module</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">name</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">type</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.LLVMType\">LLVM.LLVMType</a> <span class=\"fn\">ctx</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Value\">LLVM.Value</a> <span class=\"fn\">ctx</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/EmitLLVM.lean#L31-L32","name":"Lean.IR.LLVM.unsignedType","line":31,"kind":"def","docLink":"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.LLVM.unsignedType","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.LLVM.unsignedType\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">LLVM</span>.<span class=\"name\">unsignedType</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">llvmctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">LLVM.Context</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.LLVMType\">LLVM.LLVMType</a> <span class=\"fn\">llvmctx</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/EmitLLVM.lean#L27-L28","name":"Lean.IR.LLVM.size_tType","line":27,"kind":"def","docLink":"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.LLVM.size_tType","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.LLVM.size_tType\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">LLVM</span>.<span class=\"name\">size_tType</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">llvmctx</span> : <a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.Context\">LLVM.Context</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Lean/Compiler/IR/LLVMBindings.html#LLVM.LLVMType\">LLVM.LLVMType</a> <span class=\"fn\">llvmctx</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Compiler/IR/EmitLLVM.lean#L23-L23","name":"Lean.IR.leanMainFn","line":23,"kind":"def","docLink":"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.leanMainFn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/EmitLLVM.html#Lean.IR.leanMainFn\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">leanMainFn</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#String\">String</a></div></div>"}]}