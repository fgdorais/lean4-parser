{"name":"Lean.Elab.Tactic.BVDecide.Frontend.Normalize.TypeAnalysis","instances":[],"imports":["Init.Data.SInt.Basic","Lean.Elab.Tactic.BVDecide.Frontend.Normalize.Basic"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/Tactic/BVDecide/Frontend/Normalize/TypeAnalysis.lean#L244-L249","name":"Lean.Elab.Tactic.BVDecide.Frontend.Normalize.typeAnalysisPass.typeCasesRelevant","line":244,"kind":"opaque","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/TypeAnalysis.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.typeAnalysisPass.typeCasesRelevant","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/TypeAnalysis.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.typeAnalysisPass.typeCasesRelevant\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">Normalize</span>.<span class=\"name\">typeAnalysisPass</span>.<span class=\"name\">typeCasesRelevant</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">expr</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/Basic.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.PreProcessM\">PreProcessM</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/Tactic/BVDecide/Frontend/Normalize/TypeAnalysis.lean#L234-L242","name":"Lean.Elab.Tactic.BVDecide.Frontend.Normalize.typeAnalysisPass.analyzeStructure","line":234,"kind":"opaque","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/TypeAnalysis.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.typeAnalysisPass.analyzeStructure","doc":"Returns true if the structure is appropriate for case splitting and contains fields of interest.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/TypeAnalysis.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.typeAnalysisPass.analyzeStructure\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">Normalize</span>.<span class=\"name\">typeAnalysisPass</span>.<span class=\"name\">analyzeStructure</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/Basic.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.PreProcessM\">PreProcessM</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/Tactic/BVDecide/Frontend/Normalize/TypeAnalysis.lean#L205-L229","name":"Lean.Elab.Tactic.BVDecide.Frontend.Normalize.typeAnalysisPass.analyzeConst","line":205,"kind":"opaque","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/TypeAnalysis.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.typeAnalysisPass.analyzeConst","doc":"Returns true if the const is something that we would like to see revealed by case splitting on\nstructures that contain it.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/TypeAnalysis.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.typeAnalysisPass.analyzeConst\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">Normalize</span>.<span class=\"name\">typeAnalysisPass</span>.<span class=\"name\">analyzeConst</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/Basic.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.PreProcessM\">PreProcessM</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/Tactic/BVDecide/Frontend/Normalize/TypeAnalysis.lean#L196-L199","name":"Lean.Elab.Tactic.BVDecide.Frontend.Normalize.typeAnalysisPass.analyzeType","line":196,"kind":"def","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/TypeAnalysis.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.typeAnalysisPass.analyzeType","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/TypeAnalysis.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.typeAnalysisPass.analyzeType\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">Normalize</span>.<span class=\"name\">typeAnalysisPass</span>.<span class=\"name\">analyzeType</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">expr</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/Basic.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.PreProcessM\">PreProcessM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/Tactic/BVDecide/Frontend/Normalize/TypeAnalysis.lean#L190-L194","name":"Lean.Elab.Tactic.BVDecide.Frontend.Normalize.typeAnalysisPass.checkContext","line":190,"kind":"def","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/TypeAnalysis.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.typeAnalysisPass.checkContext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/TypeAnalysis.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.typeAnalysisPass.checkContext\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">Normalize</span>.<span class=\"name\">typeAnalysisPass</span>.<span class=\"name\">checkContext</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">goal</span> : <a href=\"./Lean/Expr.html#Lean.MVarId\">MVarId</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/Basic.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.PreProcessM\">PreProcessM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/Tactic/BVDecide/Frontend/Normalize/TypeAnalysis.lean#L180-L249","name":"Lean.Elab.Tactic.BVDecide.Frontend.Normalize.typeAnalysisPass","line":180,"kind":"def","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/TypeAnalysis.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.typeAnalysisPass","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/TypeAnalysis.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.typeAnalysisPass\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">Normalize</span>.<span class=\"name\">typeAnalysisPass</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/Basic.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.Pass\">Pass</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/Tactic/BVDecide/Frontend/Normalize/TypeAnalysis.lean#L177-L178","name":"Lean.Elab.Tactic.BVDecide.Frontend.Normalize.isBuiltIn","line":177,"kind":"def","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/TypeAnalysis.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.isBuiltIn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/TypeAnalysis.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.isBuiltIn\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">Normalize</span>.<span class=\"name\">isBuiltIn</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/Tactic/BVDecide/Frontend/Normalize/TypeAnalysis.lean#L172-L175","name":"Lean.Elab.Tactic.BVDecide.Frontend.Normalize.builtinTypes","line":172,"kind":"def","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/TypeAnalysis.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.builtinTypes","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/TypeAnalysis.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.builtinTypes\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">Normalize</span>.<span class=\"name\">builtinTypes</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Lean.Name\">Name</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/Tactic/BVDecide/Frontend/Normalize/TypeAnalysis.lean#L148-L170","name":"Lean.Elab.Tactic.BVDecide.Frontend.Normalize.isSupportedMatch.verifyEnumWithDefault","line":148,"kind":"def","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/TypeAnalysis.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.isSupportedMatch.verifyEnumWithDefault","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/TypeAnalysis.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.isSupportedMatch.verifyEnumWithDefault\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">Normalize</span>.<span class=\"name\">isSupportedMatch</span>.<span class=\"name\">verifyEnumWithDefault</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">defnInfo</span> : <a href=\"./Lean/Declaration.html#Lean.DefinitionVal\">DefinitionVal</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">inductiveInfo</span> : <a href=\"./Lean/Declaration.html#Lean.InductiveVal\">InductiveVal</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctors</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Declaration.html#Lean.ConstructorVal\">ConstructorVal</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">MetaM</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/Tactic/BVDecide/Frontend/Normalize/TypeAnalysis.lean#L133-L146","name":"Lean.Elab.Tactic.BVDecide.Frontend.Normalize.isSupportedMatch.verifySimpleEnum","line":133,"kind":"def","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/TypeAnalysis.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.isSupportedMatch.verifySimpleEnum","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/TypeAnalysis.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.isSupportedMatch.verifySimpleEnum\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">Normalize</span>.<span class=\"name\">isSupportedMatch</span>.<span class=\"name\">verifySimpleEnum</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">defnInfo</span> : <a href=\"./Lean/Declaration.html#Lean.DefinitionVal\">DefinitionVal</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">inductiveInfo</span> : <a href=\"./Lean/Declaration.html#Lean.InductiveVal\">InductiveVal</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctors</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Declaration.html#Lean.ConstructorVal\">ConstructorVal</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">MetaM</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/Tactic/BVDecide/Frontend/Normalize/TypeAnalysis.lean#L116-L131","name":"Lean.Elab.Tactic.BVDecide.Frontend.Normalize.isSupportedMatch.verifySimpleCasesOnApp","line":116,"kind":"def","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/TypeAnalysis.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.isSupportedMatch.verifySimpleCasesOnApp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/TypeAnalysis.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.isSupportedMatch.verifySimpleCasesOnApp\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">Normalize</span>.<span class=\"name\">isSupportedMatch</span>.<span class=\"name\">verifySimpleCasesOnApp</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">inductiveInfo</span> : <a href=\"./Lean/Declaration.html#Lean.InductiveVal\">InductiveVal</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fn</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">args </span><span class=\"fn\">params</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">MetaM</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/Tactic/BVDecide/Frontend/Normalize/TypeAnalysis.lean#L101-L114","name":"Lean.Elab.Tactic.BVDecide.Frontend.Normalize.isSupportedMatch.trySimpleEnum","line":101,"kind":"def","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/TypeAnalysis.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.isSupportedMatch.trySimpleEnum","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/TypeAnalysis.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.isSupportedMatch.trySimpleEnum\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">Normalize</span>.<span class=\"name\">isSupportedMatch</span>.<span class=\"name\">trySimpleEnum</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">defnInfo</span> : <a href=\"./Lean/Declaration.html#Lean.DefinitionVal\">DefinitionVal</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">inductiveInfo</span> : <a href=\"./Lean/Declaration.html#Lean.InductiveVal\">InductiveVal</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">xs</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">numCtors</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">motive</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">MetaM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/Basic.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.MatchKind\">MatchKind</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/81b85203c90439fb7d7e0cec32130d62d8cb7a2e/src/Lean/Elab/Tactic/BVDecide/Frontend/Normalize/TypeAnalysis.lean#L21-L170","name":"Lean.Elab.Tactic.BVDecide.Frontend.Normalize.isSupportedMatch","line":21,"kind":"def","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/TypeAnalysis.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.isSupportedMatch","doc":"Determine whether `declName` is an enum inductive `.match_x` definition that is supported, see\n`MatchKind` for the supported shapes.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/TypeAnalysis.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.isSupportedMatch\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">Normalize</span>.<span class=\"name\">isSupportedMatch</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">declName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">MetaM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/Basic.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.MatchKind\">MatchKind</a>)</span></span></div></div>"}]}